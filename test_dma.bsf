/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 464 352)
	(text "test_dma" (rect 5 0 42 12)(font "Arial" ))
	(text "inst" (rect 8 320 20 332)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "slave_address" (rect 0 0 59 12)(font "Arial" ))
		(text "slave_address" (rect 21 27 80 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 1))
	)
	(port
		(pt 0 48)
		(input)
		(text "slave_chipselect" (rect 0 0 64 12)(font "Arial" ))
		(text "slave_chipselect" (rect 21 43 85 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 1))
	)
	(port
		(pt 0 64)
		(input)
		(text "slave_writedata[31..0]" (rect 0 0 84 12)(font "Arial" ))
		(text "slave_writedata[31..0]" (rect 21 59 105 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 3))
	)
	(port
		(pt 0 80)
		(input)
		(text "slave_write" (rect 0 0 44 12)(font "Arial" ))
		(text "slave_write" (rect 21 75 65 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80)(line_width 1))
	)
	(port
		(pt 0 96)
		(input)
		(text "slave_byteenable[3..0]" (rect 0 0 89 12)(font "Arial" ))
		(text "slave_byteenable[3..0]" (rect 21 91 110 103)(font "Arial" ))
		(line (pt 0 96)(pt 16 96)(line_width 3))
	)
	(port
		(pt 0 112)
		(input)
		(text "clk_instr" (rect 0 0 33 12)(font "Arial" ))
		(text "clk_instr" (rect 21 107 54 119)(font "Arial" ))
		(line (pt 0 112)(pt 16 112)(line_width 1))
	)
	(port
		(pt 0 128)
		(input)
		(text "clk_master" (rect 0 0 44 12)(font "Arial" ))
		(text "clk_master" (rect 21 123 65 135)(font "Arial" ))
		(line (pt 0 128)(pt 16 128)(line_width 1))
	)
	(port
		(pt 0 144)
		(input)
		(text "reset_instr" (rect 0 0 42 12)(font "Arial" ))
		(text "reset_instr" (rect 21 139 63 151)(font "Arial" ))
		(line (pt 0 144)(pt 16 144)(line_width 1))
	)
	(port
		(pt 0 160)
		(input)
		(text "reset_master" (rect 0 0 54 12)(font "Arial" ))
		(text "reset_master" (rect 21 155 75 167)(font "Arial" ))
		(line (pt 0 160)(pt 16 160)(line_width 1))
	)
	(port
		(pt 0 176)
		(input)
		(text "dataa[31..0]" (rect 0 0 44 12)(font "Arial" ))
		(text "dataa[31..0]" (rect 21 171 65 183)(font "Arial" ))
		(line (pt 0 176)(pt 16 176)(line_width 3))
	)
	(port
		(pt 0 192)
		(input)
		(text "datab[31..0]" (rect 0 0 44 12)(font "Arial" ))
		(text "datab[31..0]" (rect 21 187 65 199)(font "Arial" ))
		(line (pt 0 192)(pt 16 192)(line_width 3))
	)
	(port
		(pt 0 208)
		(input)
		(text "start" (rect 0 0 17 12)(font "Arial" ))
		(text "start" (rect 21 203 38 215)(font "Arial" ))
		(line (pt 0 208)(pt 16 208)(line_width 1))
	)
	(port
		(pt 0 224)
		(input)
		(text "clk_en" (rect 0 0 25 12)(font "Arial" ))
		(text "clk_en" (rect 21 219 46 231)(font "Arial" ))
		(line (pt 0 224)(pt 16 224)(line_width 1))
	)
	(port
		(pt 0 240)
		(input)
		(text "master_readdata[M_ADDR_WIDTH-1..0]" (rect 0 0 173 12)(font "Arial" ))
		(text "master_readdata[M_ADDR_WIDTH-1..0]" (rect 21 235 194 247)(font "Arial" ))
		(line (pt 0 240)(pt 16 240)(line_width 3))
	)
	(port
		(pt 0 256)
		(input)
		(text "master_waitrequest" (rect 0 0 77 12)(font "Arial" ))
		(text "master_waitrequest" (rect 21 251 98 263)(font "Arial" ))
		(line (pt 0 256)(pt 16 256)(line_width 1))
	)
	(port
		(pt 0 272)
		(input)
		(text "master_response[1..0]" (rect 0 0 89 12)(font "Arial" ))
		(text "master_response[1..0]" (rect 21 267 110 279)(font "Arial" ))
		(line (pt 0 272)(pt 16 272)(line_width 3))
	)
	(port
		(pt 0 288)
		(input)
		(text "master_waitresponsevalid" (rect 0 0 102 12)(font "Arial" ))
		(text "master_waitresponsevalid" (rect 21 283 123 295)(font "Arial" ))
		(line (pt 0 288)(pt 16 288)(line_width 1))
	)
	(port
		(pt 448 32)
		(output)
		(text "result[31..0]" (rect 0 0 44 12)(font "Arial" ))
		(text "result[31..0]" (rect 383 27 427 39)(font "Arial" ))
		(line (pt 448 32)(pt 432 32)(line_width 3))
	)
	(port
		(pt 448 48)
		(output)
		(text "done" (rect 0 0 18 12)(font "Arial" ))
		(text "done" (rect 409 43 427 55)(font "Arial" ))
		(line (pt 448 48)(pt 432 48)(line_width 1))
	)
	(port
		(pt 448 64)
		(output)
		(text "master_address[4..0]" (rect 0 0 87 12)(font "Arial" ))
		(text "master_address[4..0]" (rect 340 59 427 71)(font "Arial" ))
		(line (pt 448 64)(pt 432 64)(line_width 3))
	)
	(port
		(pt 448 80)
		(output)
		(text "master_write" (rect 0 0 51 12)(font "Arial" ))
		(text "master_write" (rect 376 75 427 87)(font "Arial" ))
		(line (pt 448 80)(pt 432 80)(line_width 1))
	)
	(port
		(pt 448 96)
		(output)
		(text "master_chipselect" (rect 0 0 71 12)(font "Arial" ))
		(text "master_chipselect" (rect 356 91 427 103)(font "Arial" ))
		(line (pt 448 96)(pt 432 96)(line_width 1))
	)
	(port
		(pt 448 112)
		(output)
		(text "master_writedata[M_ADDR_WIDTH-1..0]" (rect 0 0 173 12)(font "Arial" ))
		(text "master_writedata[M_ADDR_WIDTH-1..0]" (rect 254 107 427 119)(font "Arial" ))
		(line (pt 448 112)(pt 432 112)(line_width 3))
	)
	(port
		(pt 448 128)
		(output)
		(text "master_waitresponserequest" (rect 0 0 114 12)(font "Arial" ))
		(text "master_waitresponserequest" (rect 313 123 427 135)(font "Arial" ))
		(line (pt 448 128)(pt 432 128)(line_width 1))
	)
	(parameter
		"M_ADDR_WIDTH"
		"32"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(parameter
		"M_DATA_WIDTH"
		"32"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(parameter
		"DATA_WIDTH"
		"32"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(parameter
		"BYTEENABLEWIDTH"
		"4"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(parameter
		"dma_read_addr_setup"
		"00001"
		""
		(type "PARAMETER_UNSIGNED_BIN")	)
	(parameter
		"dma_write_addr_setup"
		"00010"
		""
		(type "PARAMETER_UNSIGNED_BIN")	)
	(parameter
		"dma_length_setup"
		"00100"
		""
		(type "PARAMETER_UNSIGNED_BIN")	)
	(parameter
		"dma_idle"
		"01000"
		""
		(type "PARAMETER_UNSIGNED_BIN")	)
	(parameter
		"dma_control_setup"
		"10000"
		""
		(type "PARAMETER_UNSIGNED_BIN")	)
	(drawing
		(rectangle (rect 16 16 432 320)(line_width 1))
	)
	(annotation_block (parameter)(rect 464 -64 564 16))
)
