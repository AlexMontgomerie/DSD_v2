
hmmmmm.elf:     file format elf32-littlenios2
hmmmmm.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x008001b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00010040 memsz 0x00010040 flags r-x
    LOAD off    0x00011060 vaddr 0x00810060 paddr 0x00811abc align 2**12
         filesz 0x00001a5c memsz 0x00001a5c flags rw-
    LOAD off    0x00013518 vaddr 0x00813518 paddr 0x00813518 align 2**12
         filesz 0x00000000 memsz 0x000002ec flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f928  008001b4  008001b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000584  0080fadc  0080fadc  00010adc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001a5c  00810060  00811abc  00011060  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000002ec  00813518  00813518  00013518  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000026  00000000  00000000  00012abc  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000ef8  00000000  00000000  00012ae8  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 00001611  00000000  00000000  000139e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00025600  00000000  00000000  00014ff1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009059  00000000  00000000  0003a5f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00016d0c  00000000  00000000  0004364a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001c5c  00000000  00000000  0005a358  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000026c0  00000000  00000000  0005bfb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000dc7b  00000000  00000000  0005e674  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  0006c2f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000b78  00000000  00000000  0006c310  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007021f  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00070222  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00070225  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00070226  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00070227  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0007022b  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0007022f  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00070233  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0007023c  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00070245  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0007024e  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000009  00000000  00000000  00070260  2**0
                  CONTENTS, READONLY
 29 .jdi          00004fae  00000000  00000000  00070269  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003691b  00000000  00000000  00075217  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
008001b4 l    d  .text	00000000 .text
0080fadc l    d  .rodata	00000000 .rodata
00810060 l    d  .rwdata	00000000 .rwdata
00813518 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
008001ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
0080fbbc l     O .rodata	00000108 two_over_pi
0080fb3c l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
0080fcc4 l     O .rodata	00000010 init_jk
0080fcd4 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 fp-bit.c
00802b38 l     F .text	000001e4 _fpadd_parts
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00803198 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00803e74 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00804aa4 l     F .text	00000058 __sprint_r
0080feaa l     O .rodata	00000010 blanks.3452
0080fe9a l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00806b20 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00808548 l     F .text	00000058 std
00808654 l     F .text	00000008 __fp_lock
0080865c l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00810060 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 locale.c
00811a88 l     O .rwdata	00000004 charset
0080fee0 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00810028 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0080d004 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080d064 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080d168 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080d28c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080d36c l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080d4cc l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080d6fc l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00811aac l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0080d924 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0080daa8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00810a1c l     O .rwdata	00001060 jtag_uart
0080db98 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080ddd8 l     F .text	00000228 altera_avalon_jtag_uart_irq
0080e000 l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080e67c l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080e9a0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080edc4 l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080ef14 l     F .text	000000f8 alt_file_locked
0080f198 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0080f8c4 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
0080fa78 l     F .text	00000040 alt_sim_halt
0080a338 g     F .text	00000094 _mprec_log10
0080a424 g     F .text	00000088 __any_on
0080bbdc g     F .text	00000070 _isatty_r
00810000 g     O .rodata	00000028 __mprec_tinytens
0080d52c g     F .text	0000006c alt_main
0080497c g     F .text	000000a0 _puts_r
00813574 g     O .bss	00000100 alt_irq
0080291c g     F .text	00000018 fabs
0080bc4c g     F .text	00000078 _lseek_r
00811abc g       *ABS*	00000000 __flash_rwdata_start
00803a60 g     F .text	00000088 __eqdf2
00813804 g       *ABS*	00000000 __alt_heap_start
00804904 g     F .text	00000044 printf
0080b694 g     F .text	00000068 __sseek
008085b0 g     F .text	000000a4 __sinit
008092bc g     F .text	00000084 _setlocale_r
008086b0 g     F .text	0000009c __sfmoreglue
0080d5b8 g     F .text	00000020 __malloc_unlock
00802fd0 g     F .text	00000174 __divsf3
00809db4 g     F .text	000000e0 memmove
008086a0 g     F .text	00000010 _cleanup
0080a4ac g     F .text	000000bc _Balloc
00803ae8 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00800000 g     F .entry	0000001c __reset
0080d890 g     F .text	00000094 times
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080bb68 g     F .text	00000074 _fstat_r
00813530 g     O .bss	00000004 errno
00803dc8 g     F .text	00000038 __make_dp
00800808 g     F .text	00000224 floor
008043c4 g     F .text	0000002c __make_fp
00813538 g     O .bss	00000004 alt_argv
00819a7c g       *ABS*	00000000 _gp
00802d1c g     F .text	00000070 __subsf3
0081089c g     O .rwdata	00000180 alt_fd_list
00800a2c g     F .text	00000828 __ieee754_rem_pio2
0080f3bc g     F .text	00000094 alt_find_dev
00809d14 g     F .text	000000a0 memcpy
00808694 g     F .text	0000000c _cleanup_r
00803bf8 g     F .text	000000f8 __floatsidf
0080ee9c g     F .text	00000078 alt_io_redirect
0080cce8 g     F .text	00000088 __ltdf2
0080fadc g       *ABS*	00000000 __DTOR_END__
00804a1c g     F .text	00000014 puts
0080a288 g     F .text	000000b0 __ratio
0080e218 g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00804948 g     F .text	00000034 _printf_r
00803fb0 g     F .text	00000008 __udivsi3
0080d1c8 g     F .text	000000c4 isatty
0080ff10 g     O .rodata	000000c8 __mprec_tens
00809298 g     F .text	00000008 __locale_charset
00801254 g     F .text	0000052c __kernel_cos
0080f640 g     F .text	00000090 alt_icache_flush
00813524 g     O .bss	00000004 __malloc_top_pad
00811a84 g     O .rwdata	00000004 __mb_cur_max
008092a0 g     F .text	0000000c _localeconv_r
0080ac10 g     F .text	0000003c __i2b
00808c7c g     F .text	0000049c __sfvwrite_r
0080b61c g     F .text	00000070 _sbrk_r
0080bcc4 g     F .text	00000078 _read_r
00810460 g     O .rwdata	0000000c __lc_ctype
00811aa4 g     O .rwdata	00000004 alt_max_fd
00804704 g     F .text	00000138 __unpack_d
0080ba44 g     F .text	00000110 _fclose_r
00808514 g     F .text	00000034 fflush
00813528 g     O .bss	00000004 __malloc_max_sbrked_mem
00802604 g     F .text	00000318 __kernel_sin
00803144 g     F .text	00000054 __extendsfdf2
00803628 g     F .text	00000074 __adddf3
0080a168 g     F .text	00000120 __b2d
0080c3a8 g     F .text	00000660 __umoddi3
0080d3d8 g     F .text	000000f4 lseek
00811a80 g     O .rwdata	00000004 _global_impure_ptr
0080afb8 g     F .text	000005f4 _realloc_r
00813804 g       *ABS*	00000000 __bss_end
0080eccc g     F .text	000000f8 alt_iic_isr_register
0080f290 g     F .text	0000010c alt_tick
0080bd3c g     F .text	0000066c __udivdi3
0080ffd8 g     O .rodata	00000028 __mprec_bigtens
0080ae98 g     F .text	00000120 __s2b
0080cd70 g     F .text	00000194 __floatunsidf
0080a088 g     F .text	00000060 __mcmp
0080867c g     F .text	00000018 __fp_lock_all
0080ec84 g     F .text	00000048 alt_ic_irq_enabled
0080f1f8 g     F .text	00000098 alt_alarm_stop
00813540 g     O .bss	00000004 alt_irq_active
008000ec g     F .exceptions	000000c8 alt_irq_handler
00810874 g     O .rwdata	00000028 alt_dev_null
00801780 g     F .text	00000e84 __kernel_rem_pio2
008042fc g     F .text	000000c8 __unpack_f
0080e8d0 g     F .text	0000001c alt_dcache_flush_all
00809f54 g     F .text	00000070 __hi0bits
00803cf0 g     F .text	000000d8 __fixdfsi
008001f0 g     F .text	00000224 functionVector
00811abc g       *ABS*	00000000 __ram_rwdata_end
00811a9c g     O .rwdata	00000008 alt_dev_list
0080d984 g     F .text	00000124 write
00810060 g       *ABS*	00000000 __ram_rodata_end
0080d090 g     F .text	000000d8 fstat
0080ad78 g     F .text	00000120 __pow5mult
00813518 g     O .bss	00000004 __nlocale_changed
00803fb8 g     F .text	00000008 __umodsi3
00813804 g       *ABS*	00000000 end
0080419c g     F .text	00000160 __pack_f
0080dd18 g     F .text	000000c0 altera_avalon_jtag_uart_init
0080fad8 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080e6ec g     F .text	00000090 alt_avalon_timer_sc_init
0080411c g     F .text	00000080 __clzsi2
0080e43c g     F .text	00000240 altera_avalon_jtag_uart_write
008006a0 g     F .text	00000168 cos
008085a0 g     F .text	00000004 __sfp_lock_acquire
00809c30 g     F .text	000000e4 memchr
00804afc g     F .text	00001ec4 ___vfprintf_internal_r
00808968 g     F .text	00000314 _free_r
0080f8c8 g     F .text	000001b0 __call_exitprocs
0081351c g     O .bss	00000004 __mlocale_changed
00811a90 g     O .rwdata	00000004 __malloc_sbrk_base
008001b4 g     F .text	0000003c _start
00813544 g     O .bss	00000004 _alt_tick_rate
0080a870 g     F .text	0000014c __lshift
00813548 g     O .bss	00000004 _alt_nticks
0080d5d8 g     F .text	00000124 read
0080db3c g     F .text	0000005c alt_sys_init
0080f790 g     F .text	00000134 __register_exitproc
0080a9bc g     F .text	00000254 __multiply
0080e0b0 g     F .text	00000074 altera_avalon_jtag_uart_close
00803fc0 g     F .text	00000038 __mulsi3
00810060 g       *ABS*	00000000 __ram_rwdata_start
0080fadc g       *ABS*	00000000 __ram_rodata_start
0081354c g     O .bss	00000028 __malloc_current_mallinfo
0080a568 g     F .text	0000017c __d2b
0080dbd0 g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0080f570 g     F .text	000000d0 alt_get_fd
0080483c g     F .text	000000c8 __fpcmp_parts_d
0080b9d4 g     F .text	00000070 _close_r
00800414 g     F .text	000000a4 generateVector
0080f71c g     F .text	00000074 memcmp
0080dc80 g     F .text	00000048 altera_avalon_jtag_uart_close_fd
00813804 g       *ABS*	00000000 __alt_stack_base
0080dcc8 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
008069e4 g     F .text	0000013c __swsetup_r
0080ca08 g     F .text	00000258 __divdf3
0080874c g     F .text	000000f0 __sfp
0080a3cc g     F .text	00000058 __copybits
0081046c g     O .rwdata	00000408 __malloc_av_
008085ac g     F .text	00000004 __sinit_lock_release
0080369c g     F .text	000003c4 __muldf3
0080b778 g     F .text	00000060 __sread
0080fd14 g     O .rodata	00000010 __thenan_sf
0080f450 g     F .text	00000120 alt_find_file
0080e8ec g     F .text	000000b4 alt_dev_llist_insert
0080d598 g     F .text	00000020 __malloc_lock
0080d7d4 g     F .text	000000bc sbrk
00808318 g     F .text	000001fc _fflush_r
0080b90c g     F .text	000000c8 _calloc_r
00813518 g       *ABS*	00000000 __bss_start
00809e94 g     F .text	00000098 memset
008005a0 g     F .text	00000100 main
0081353c g     O .bss	00000004 alt_envp
0081352c g     O .bss	00000004 __malloc_max_total_mem
0080dc28 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0080b68c g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080bb54 g     F .text	00000014 fclose
00803e00 g     F .text	00000074 __truncdfsf2
00813674 g     O .bss	00000190 _atexit0
00806d64 g     F .text	000015b4 _dtoa_r
008094f0 g     F .text	00000740 _malloc_r
00811aa8 g     O .rwdata	00000004 alt_errno
008091e0 g     F .text	000000b8 _fwalk
00803ef0 g     F .text	00000060 __divsi3
0080fd24 g     O .rodata	00000014 __thenan_df
0080883c g     F .text	0000012c _malloc_trim_r
0080fadc g       *ABS*	00000000 __CTOR_END__
00802df0 g     F .text	000001e0 __mulsf3
0080b7d8 g     F .text	000000bc strcmp
0080fadc g       *ABS*	00000000 __flash_rodata_start
0080fadc g       *ABS*	00000000 __DTOR_LIST__
00802b14 g     F .text	00000024 copysign
0080cc60 g     F .text	00000088 __nedf2
0080db08 g     F .text	00000034 alt_irq_init
0080d75c g     F .text	00000078 alt_release_fd
0080fd38 g     O .rodata	00000100 __clz_tab
00813520 g     O .bss	00000004 _PathLocale
0080f6d0 g     F .text	00000014 atexit
008004b8 g     F .text	000000e8 sumVector
0080b894 g     F .text	00000078 _write_r
00809340 g     F .text	0000001c setlocale
00811a7c g     O .rwdata	00000004 _impure_ptr
00813534 g     O .bss	00000004 alt_argc
00802934 g     F .text	000001e0 scalbn
0080ea64 g     F .text	00000064 _do_dtors
00800020 g       .exceptions	00000000 alt_irq_entry
0080a0e8 g     F .text	00000080 __ulp
0080b5ac g     F .text	00000040 __isinfd
00808664 g     F .text	00000018 __fp_unlock_all
00811a94 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
008092ac g     F .text	00000010 localeconv
0080eaf8 g     F .text	00000050 alt_ic_isr_register
00811abc g       *ABS*	00000000 _edata
00813804 g       *ABS*	00000000 _end
008001b4 g       *ABS*	00000000 __ram_exceptions_end
0080e124 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0080ebe4 g     F .text	000000a0 alt_ic_irq_disable
0080b6fc g     F .text	0000007c __swrite
00811a8c g     O .rwdata	00000004 __malloc_trim_threshold
0080f39c g     F .text	00000020 altera_nios2_qsys_irq_init
0080f6e4 g     F .text	00000038 exit
00809118 g     F .text	000000c8 _fwalk_reent
0080a6e4 g     F .text	0000018c __mdiff
00803f50 g     F .text	00000060 __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
008085a4 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
0080fab8 g     F .text	00000020 _exit
0080b5ec g     F .text	00000030 __isnand
0080e77c g     F .text	00000154 alt_alarm_start
00803ff8 g     F .text	00000124 __muldi3
0080935c g     F .text	00000194 __smakebuf_r
00804a30 g     F .text	00000074 strlen
0080f00c g     F .text	0000018c open
00803b70 g     F .text	00000088 __gedf2
0080eac8 g     F .text	00000030 alt_icache_flush_all
00811ab0 g     O .rwdata	00000004 alt_priority_mask
0080eb48 g     F .text	0000009c alt_ic_irq_enable
008069c0 g     F .text	00000024 __vfprintf_internal
008035a8 g     F .text	00000080 __subdf3
00809fc4 g     F .text	000000c4 __lo0bits
00811ab4 g     O .rwdata	00000008 alt_alarm_list
0080ea00 g     F .text	00000064 _do_ctors
0080cf04 g     F .text	00000100 close
00802d8c g     F .text	00000064 __addsf3
0080d2ec g     F .text	00000080 alt_load
008043f0 g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
008085a8 g     F .text	00000004 __sinit_lock_acquire
0080ac4c g     F .text	0000012c __multadd
00809f2c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00900014 	movui	r2,16384
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08406d14 	ori	at,at,436
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__reset-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
  800044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000ec0 	call	8000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000306 	br	800098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  800094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  800098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  80009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
  8000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
  8000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000e8:	ef80083a 	eret

008000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000ec:	defff904 	addi	sp,sp,-28
  8000f0:	dfc00615 	stw	ra,24(sp)
  8000f4:	df000515 	stw	fp,20(sp)
  8000f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  8000fc:	0005313a 	rdctl	r2,ipending
  800100:	e0bffc15 	stw	r2,-16(fp)

  return active;
  800104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  800108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
  80010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800110:	00800044 	movi	r2,1
  800114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  800118:	e0ffff17 	ldw	r3,-4(fp)
  80011c:	e0bffe17 	ldw	r2,-8(fp)
  800120:	1884703a 	and	r2,r3,r2
  800124:	1005003a 	cmpeq	r2,r2,zero
  800128:	1000161e 	bne	r2,zero,800184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80012c:	e0bffd17 	ldw	r2,-12(fp)
  800130:	00c02074 	movhi	r3,129
  800134:	18cd5d04 	addi	r3,r3,13684
  800138:	100490fa 	slli	r2,r2,3
  80013c:	10c5883a 	add	r2,r2,r3
  800140:	11400017 	ldw	r5,0(r2)
  800144:	e0bffd17 	ldw	r2,-12(fp)
  800148:	00c02074 	movhi	r3,129
  80014c:	18cd5d04 	addi	r3,r3,13684
  800150:	100490fa 	slli	r2,r2,3
  800154:	10c5883a 	add	r2,r2,r3
  800158:	10800104 	addi	r2,r2,4
  80015c:	11000017 	ldw	r4,0(r2)
  800160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800164:	0005313a 	rdctl	r2,ipending
  800168:	e0bffb15 	stw	r2,-20(fp)

  return active;
  80016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
  800170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
  800174:	e0bfff17 	ldw	r2,-4(fp)
  800178:	1004c03a 	cmpne	r2,r2,zero
  80017c:	103fe31e 	bne	r2,zero,80010c <alt_irq_handler+0x20>
  800180:	00000706 	br	8001a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
  800184:	e0bffe17 	ldw	r2,-8(fp)
  800188:	1085883a 	add	r2,r2,r2
  80018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
  800190:	e0bffd17 	ldw	r2,-12(fp)
  800194:	10800044 	addi	r2,r2,1
  800198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  80019c:	003fde06 	br	800118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
  8001a0:	e037883a 	mov	sp,fp
  8001a4:	dfc00117 	ldw	ra,4(sp)
  8001a8:	df000017 	ldw	fp,0(sp)
  8001ac:	dec00204 	addi	sp,sp,8
  8001b0:	f800283a 	ret

Disassembly of section .text:

008001b4 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  8001b4:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  8001b8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
  8001bc:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  8001c0:	d6a69f14 	ori	gp,gp,39548
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  8001c4:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  8001c8:	108d4614 	ori	r2,r2,13592

    movhi r3, %hi(__bss_end)
  8001cc:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  8001d0:	18ce0114 	ori	r3,r3,14340

    beq r2, r3, 1f
  8001d4:	10c00326 	beq	r2,r3,8001e4 <_start+0x30>

0:
    stw zero, (r2)
  8001d8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  8001dc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  8001e0:	10fffd36 	bltu	r2,r3,8001d8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  8001e4:	080d2ec0 	call	80d2ec <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  8001e8:	080d52c0 	call	80d52c <alt_main>

008001ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  8001ec:	003fff06 	br	8001ec <alt_after_alt_main>

008001f0 <functionVector>:

//Test case 3
//#define step 0.001
//#define N 255001

float functionVector(float x[], int M) {
  8001f0:	defff404 	addi	sp,sp,-48
  8001f4:	dfc00b15 	stw	ra,44(sp)
  8001f8:	df000a15 	stw	fp,40(sp)
  8001fc:	dd400915 	stw	r21,36(sp)
  800200:	dd000815 	stw	r20,32(sp)
  800204:	dcc00715 	stw	r19,28(sp)
  800208:	dc800615 	stw	r18,24(sp)
  80020c:	dc400515 	stw	r17,20(sp)
  800210:	dc000415 	stw	r16,16(sp)
  800214:	df000404 	addi	fp,sp,16
  800218:	e13ffe15 	stw	r4,-8(fp)
  80021c:	e17fff15 	stw	r5,-4(fp)

	int i;
	float y = 0.0;
  800220:	e03ffc15 	stw	zero,-16(fp)

	if(M>N)
  800224:	e0bfff17 	ldw	r2,-4(fp)
  800228:	10800d50 	cmplti	r2,r2,53
  80022c:	1000021e 	bne	r2,zero,800238 <functionVector+0x48>
		M = N;
  800230:	00800d04 	movi	r2,52
  800234:	e0bfff15 	stw	r2,-4(fp)

	for(i=0;i<M;i++)
  800238:	e03ffd15 	stw	zero,-12(fp)
  80023c:	00006606 	br	8003d8 <functionVector+0x1e8>
		y += x[i]*(0.5 + x[i]*cos(floor(x[i]/4)-32));
  800240:	e13ffc17 	ldw	r4,-16(fp)
  800244:	08031440 	call	803144 <__extendsfdf2>
  800248:	1025883a 	mov	r18,r2
  80024c:	1827883a 	mov	r19,r3
  800250:	e0bffd17 	ldw	r2,-12(fp)
  800254:	1085883a 	add	r2,r2,r2
  800258:	1085883a 	add	r2,r2,r2
  80025c:	1007883a 	mov	r3,r2
  800260:	e0bffe17 	ldw	r2,-8(fp)
  800264:	1885883a 	add	r2,r3,r2
  800268:	10800017 	ldw	r2,0(r2)
  80026c:	1009883a 	mov	r4,r2
  800270:	08031440 	call	803144 <__extendsfdf2>
  800274:	1029883a 	mov	r20,r2
  800278:	182b883a 	mov	r21,r3
  80027c:	e0bffd17 	ldw	r2,-12(fp)
  800280:	1085883a 	add	r2,r2,r2
  800284:	1085883a 	add	r2,r2,r2
  800288:	1007883a 	mov	r3,r2
  80028c:	e0bffe17 	ldw	r2,-8(fp)
  800290:	1885883a 	add	r2,r3,r2
  800294:	10800017 	ldw	r2,0(r2)
  800298:	1009883a 	mov	r4,r2
  80029c:	08031440 	call	803144 <__extendsfdf2>
  8002a0:	1021883a 	mov	r16,r2
  8002a4:	1823883a 	mov	r17,r3
  8002a8:	e0bffd17 	ldw	r2,-12(fp)
  8002ac:	1085883a 	add	r2,r2,r2
  8002b0:	1085883a 	add	r2,r2,r2
  8002b4:	1007883a 	mov	r3,r2
  8002b8:	e0bffe17 	ldw	r2,-8(fp)
  8002bc:	1885883a 	add	r2,r3,r2
  8002c0:	10800017 	ldw	r2,0(r2)
  8002c4:	1009883a 	mov	r4,r2
  8002c8:	01502034 	movhi	r5,16512
  8002cc:	0802fd00 	call	802fd0 <__divsf3>
  8002d0:	1009883a 	mov	r4,r2
  8002d4:	08031440 	call	803144 <__extendsfdf2>
  8002d8:	100b883a 	mov	r5,r2
  8002dc:	180d883a 	mov	r6,r3
  8002e0:	2809883a 	mov	r4,r5
  8002e4:	300b883a 	mov	r5,r6
  8002e8:	08008080 	call	800808 <floor>
  8002ec:	100b883a 	mov	r5,r2
  8002f0:	180d883a 	mov	r6,r3
  8002f4:	2809883a 	mov	r4,r5
  8002f8:	300b883a 	mov	r5,r6
  8002fc:	000d883a 	mov	r6,zero
  800300:	01d01034 	movhi	r7,16448
  800304:	08035a80 	call	8035a8 <__subdf3>
  800308:	1009883a 	mov	r4,r2
  80030c:	180b883a 	mov	r5,r3
  800310:	2005883a 	mov	r2,r4
  800314:	2807883a 	mov	r3,r5
  800318:	1009883a 	mov	r4,r2
  80031c:	180b883a 	mov	r5,r3
  800320:	08006a00 	call	8006a0 <cos>
  800324:	100f883a 	mov	r7,r2
  800328:	1811883a 	mov	r8,r3
  80032c:	8009883a 	mov	r4,r16
  800330:	880b883a 	mov	r5,r17
  800334:	380d883a 	mov	r6,r7
  800338:	400f883a 	mov	r7,r8
  80033c:	080369c0 	call	80369c <__muldf3>
  800340:	1009883a 	mov	r4,r2
  800344:	180b883a 	mov	r5,r3
  800348:	2005883a 	mov	r2,r4
  80034c:	2807883a 	mov	r3,r5
  800350:	1009883a 	mov	r4,r2
  800354:	180b883a 	mov	r5,r3
  800358:	000d883a 	mov	r6,zero
  80035c:	01cff834 	movhi	r7,16352
  800360:	08036280 	call	803628 <__adddf3>
  800364:	1009883a 	mov	r4,r2
  800368:	180b883a 	mov	r5,r3
  80036c:	2005883a 	mov	r2,r4
  800370:	2807883a 	mov	r3,r5
  800374:	a009883a 	mov	r4,r20
  800378:	a80b883a 	mov	r5,r21
  80037c:	100d883a 	mov	r6,r2
  800380:	180f883a 	mov	r7,r3
  800384:	080369c0 	call	80369c <__muldf3>
  800388:	1009883a 	mov	r4,r2
  80038c:	180b883a 	mov	r5,r3
  800390:	2005883a 	mov	r2,r4
  800394:	2807883a 	mov	r3,r5
  800398:	9009883a 	mov	r4,r18
  80039c:	980b883a 	mov	r5,r19
  8003a0:	100d883a 	mov	r6,r2
  8003a4:	180f883a 	mov	r7,r3
  8003a8:	08036280 	call	803628 <__adddf3>
  8003ac:	1009883a 	mov	r4,r2
  8003b0:	180b883a 	mov	r5,r3
  8003b4:	2005883a 	mov	r2,r4
  8003b8:	2807883a 	mov	r3,r5
  8003bc:	1009883a 	mov	r4,r2
  8003c0:	180b883a 	mov	r5,r3
  8003c4:	0803e000 	call	803e00 <__truncdfsf2>
  8003c8:	e0bffc15 	stw	r2,-16(fp)
	float y = 0.0;

	if(M>N)
		M = N;

	for(i=0;i<M;i++)
  8003cc:	e0bffd17 	ldw	r2,-12(fp)
  8003d0:	10800044 	addi	r2,r2,1
  8003d4:	e0bffd15 	stw	r2,-12(fp)
  8003d8:	e0fffd17 	ldw	r3,-12(fp)
  8003dc:	e0bfff17 	ldw	r2,-4(fp)
  8003e0:	18bf9716 	blt	r3,r2,800240 <functionVector+0x50>
		y += x[i]*(0.5 + x[i]*cos(floor(x[i]/4)-32));

	return y;
  8003e4:	e0bffc17 	ldw	r2,-16(fp)

}
  8003e8:	e037883a 	mov	sp,fp
  8003ec:	dfc00717 	ldw	ra,28(sp)
  8003f0:	df000617 	ldw	fp,24(sp)
  8003f4:	dd400517 	ldw	r21,20(sp)
  8003f8:	dd000417 	ldw	r20,16(sp)
  8003fc:	dcc00317 	ldw	r19,12(sp)
  800400:	dc800217 	ldw	r18,8(sp)
  800404:	dc400117 	ldw	r17,4(sp)
  800408:	dc000017 	ldw	r16,0(sp)
  80040c:	dec00804 	addi	sp,sp,32
  800410:	f800283a 	ret

00800414 <generateVector>:

void generateVector(float x[N])
{
  800414:	defffb04 	addi	sp,sp,-20
  800418:	dfc00415 	stw	ra,16(sp)
  80041c:	df000315 	stw	fp,12(sp)
  800420:	dc000215 	stw	r16,8(sp)
  800424:	df000204 	addi	fp,sp,8
  800428:	e13fff15 	stw	r4,-4(fp)
	int i;
	x[0] = 0;
  80042c:	e0bfff17 	ldw	r2,-4(fp)
  800430:	10000015 	stw	zero,0(r2)

	for(i=1;i<N;i++) {
  800434:	00800044 	movi	r2,1
  800438:	e0bffe15 	stw	r2,-8(fp)
  80043c:	00001506 	br	800494 <generateVector+0x80>
		x[i] = x[i-1] + (float) step;
  800440:	e0bffe17 	ldw	r2,-8(fp)
  800444:	1085883a 	add	r2,r2,r2
  800448:	1085883a 	add	r2,r2,r2
  80044c:	1007883a 	mov	r3,r2
  800450:	e0bfff17 	ldw	r2,-4(fp)
  800454:	18a1883a 	add	r16,r3,r2
  800458:	e0bffe17 	ldw	r2,-8(fp)
  80045c:	1085883a 	add	r2,r2,r2
  800460:	1085883a 	add	r2,r2,r2
  800464:	1007883a 	mov	r3,r2
  800468:	e0bfff17 	ldw	r2,-4(fp)
  80046c:	1885883a 	add	r2,r3,r2
  800470:	10bfff04 	addi	r2,r2,-4
  800474:	10800017 	ldw	r2,0(r2)
  800478:	1009883a 	mov	r4,r2
  80047c:	01502834 	movhi	r5,16544
  800480:	0802d8c0 	call	802d8c <__addsf3>
  800484:	80800015 	stw	r2,0(r16)
void generateVector(float x[N])
{
	int i;
	x[0] = 0;

	for(i=1;i<N;i++) {
  800488:	e0bffe17 	ldw	r2,-8(fp)
  80048c:	10800044 	addi	r2,r2,1
  800490:	e0bffe15 	stw	r2,-8(fp)
  800494:	e0bffe17 	ldw	r2,-8(fp)
  800498:	10800d10 	cmplti	r2,r2,52
  80049c:	103fe81e 	bne	r2,zero,800440 <generateVector+0x2c>
		x[i] = x[i-1] + (float) step;
	}
	return;
}
  8004a0:	e037883a 	mov	sp,fp
  8004a4:	dfc00217 	ldw	ra,8(sp)
  8004a8:	df000117 	ldw	fp,4(sp)
  8004ac:	dc000017 	ldw	r16,0(sp)
  8004b0:	dec00304 	addi	sp,sp,12
  8004b4:	f800283a 	ret

008004b8 <sumVector>:

float sumVector(float x[], int M)
{
  8004b8:	defff904 	addi	sp,sp,-28
  8004bc:	dfc00615 	stw	ra,24(sp)
  8004c0:	df000515 	stw	fp,20(sp)
  8004c4:	dc000415 	stw	r16,16(sp)
  8004c8:	df000404 	addi	fp,sp,16
  8004cc:	e13ffe15 	stw	r4,-8(fp)
  8004d0:	e17fff15 	stw	r5,-4(fp)
	int i;
	float y = 0.0;
  8004d4:	e03ffc15 	stw	zero,-16(fp)

	if(M>N)
  8004d8:	e0bfff17 	ldw	r2,-4(fp)
  8004dc:	10800d50 	cmplti	r2,r2,53
  8004e0:	1000021e 	bne	r2,zero,8004ec <sumVector+0x34>
		M = N;
  8004e4:	00800d04 	movi	r2,52
  8004e8:	e0bfff15 	stw	r2,-4(fp)

	for(i=0;i<M;i++)
  8004ec:	e03ffd15 	stw	zero,-12(fp)
  8004f0:	00002106 	br	800578 <sumVector+0xc0>
		y += x[i] + x[i]*x[i];
  8004f4:	e0bffd17 	ldw	r2,-12(fp)
  8004f8:	1085883a 	add	r2,r2,r2
  8004fc:	1085883a 	add	r2,r2,r2
  800500:	1007883a 	mov	r3,r2
  800504:	e0bffe17 	ldw	r2,-8(fp)
  800508:	1885883a 	add	r2,r3,r2
  80050c:	14000017 	ldw	r16,0(r2)
  800510:	e0bffd17 	ldw	r2,-12(fp)
  800514:	1085883a 	add	r2,r2,r2
  800518:	1085883a 	add	r2,r2,r2
  80051c:	1007883a 	mov	r3,r2
  800520:	e0bffe17 	ldw	r2,-8(fp)
  800524:	1885883a 	add	r2,r3,r2
  800528:	11000017 	ldw	r4,0(r2)
  80052c:	e0bffd17 	ldw	r2,-12(fp)
  800530:	1085883a 	add	r2,r2,r2
  800534:	1085883a 	add	r2,r2,r2
  800538:	1007883a 	mov	r3,r2
  80053c:	e0bffe17 	ldw	r2,-8(fp)
  800540:	1885883a 	add	r2,r3,r2
  800544:	10800017 	ldw	r2,0(r2)
  800548:	100b883a 	mov	r5,r2
  80054c:	0802df00 	call	802df0 <__mulsf3>
  800550:	8009883a 	mov	r4,r16
  800554:	100b883a 	mov	r5,r2
  800558:	0802d8c0 	call	802d8c <__addsf3>
  80055c:	e13ffc17 	ldw	r4,-16(fp)
  800560:	100b883a 	mov	r5,r2
  800564:	0802d8c0 	call	802d8c <__addsf3>
  800568:	e0bffc15 	stw	r2,-16(fp)
	float y = 0.0;

	if(M>N)
		M = N;

	for(i=0;i<M;i++)
  80056c:	e0bffd17 	ldw	r2,-12(fp)
  800570:	10800044 	addi	r2,r2,1
  800574:	e0bffd15 	stw	r2,-12(fp)
  800578:	e0fffd17 	ldw	r3,-12(fp)
  80057c:	e0bfff17 	ldw	r2,-4(fp)
  800580:	18bfdc16 	blt	r3,r2,8004f4 <sumVector+0x3c>
		y += x[i] + x[i]*x[i];

	return y;
  800584:	e0bffc17 	ldw	r2,-16(fp)
}
  800588:	e037883a 	mov	sp,fp
  80058c:	dfc00217 	ldw	ra,8(sp)
  800590:	df000117 	ldw	fp,4(sp)
  800594:	dc000017 	ldw	r16,0(sp)
  800598:	dec00304 	addi	sp,sp,12
  80059c:	f800283a 	ret

008005a0 <main>:

int main()
{
  8005a0:	deffb904 	addi	sp,sp,-284
  8005a4:	dfc04615 	stw	ra,280(sp)
  8005a8:	df004515 	stw	fp,276(sp)
  8005ac:	df004504 	addi	fp,sp,276
  printf("Task 2!\n");
  8005b0:	01002074 	movhi	r4,129
  8005b4:	213eb704 	addi	r4,r4,-1316
  8005b8:	0804a1c0 	call	804a1c <puts>

  float x[(int) N];
  float y;

  printf("generating vector...\n");
  8005bc:	01002074 	movhi	r4,129
  8005c0:	213eb904 	addi	r4,r4,-1308
  8005c4:	0804a1c0 	call	804a1c <puts>
  generateVector(x);
  8005c8:	e13fbf04 	addi	r4,fp,-260
  8005cc:	08004140 	call	800414 <generateVector>

  char buf[50];
  clock_t exec_t1, exec_t2;

  printf("time starts now...");
  8005d0:	01002074 	movhi	r4,129
  8005d4:	213ebf04 	addi	r4,r4,-1284
  8005d8:	08049040 	call	804904 <printf>
  exec_t1 = times(NULL);
  8005dc:	0009883a 	mov	r4,zero
  8005e0:	080d8900 	call	80d890 <times>
  8005e4:	e0bfbd15 	stw	r2,-268(fp)
  int i;
  for(i =0; i< N; i++)
  8005e8:	e03fbb15 	stw	zero,-276(fp)
  8005ec:	00000d06 	br	800624 <main+0x84>
	  y = ALT_CI_AH_FUNC_INSTR_0(x[i],y);
  8005f0:	e0bfbb17 	ldw	r2,-276(fp)
  8005f4:	1085883a 	add	r2,r2,r2
  8005f8:	1085883a 	add	r2,r2,r2
  8005fc:	e0ffbb04 	addi	r3,fp,-276
  800600:	10c5883a 	add	r2,r2,r3
  800604:	10800404 	addi	r2,r2,16
  800608:	10c00017 	ldw	r3,0(r2)
  80060c:	e0bfbe17 	ldw	r2,-264(fp)
  800610:	1885c032 	custom	0,r2,r3,r2
  800614:	e0bfbe15 	stw	r2,-264(fp)
  clock_t exec_t1, exec_t2;

  printf("time starts now...");
  exec_t1 = times(NULL);
  int i;
  for(i =0; i< N; i++)
  800618:	e0bfbb17 	ldw	r2,-276(fp)
  80061c:	10800044 	addi	r2,r2,1
  800620:	e0bfbb15 	stw	r2,-276(fp)
  800624:	e0bfbb17 	ldw	r2,-276(fp)
  800628:	10800d10 	cmplti	r2,r2,52
  80062c:	103ff01e 	bne	r2,zero,8005f0 <main+0x50>
	  y = ALT_CI_AH_FUNC_INSTR_0(x[i],y);

  //y = functionVector(x, N);

  exec_t2 = times(NULL);
  800630:	0009883a 	mov	r4,zero
  800634:	080d8900 	call	80d890 <times>
  800638:	e0bfbc15 	stw	r2,-272(fp)
  printf("done.\n");
  80063c:	01002074 	movhi	r4,129
  800640:	213ec404 	addi	r4,r4,-1264
  800644:	0804a1c0 	call	804a1c <puts>

  //gcvt((exec_t2 - exec_t1), 10, buf);
  //alt_putstr(" proc time = "); alt_putstr(buf); alt_putstr(" ticks \n");


  printf("time elapsed: %d ticks\n", (int) (exec_t2 - exec_t1));
  800648:	e0ffbc17 	ldw	r3,-272(fp)
  80064c:	e0bfbd17 	ldw	r2,-268(fp)
  800650:	1885c83a 	sub	r2,r3,r2
  800654:	100b883a 	mov	r5,r2
  800658:	01002074 	movhi	r4,129
  80065c:	213ec604 	addi	r4,r4,-1256
  800660:	08049040 	call	804904 <printf>
  printf("Result: %f", y);
  800664:	e13fbe17 	ldw	r4,-264(fp)
  800668:	08031440 	call	803144 <__extendsfdf2>
  80066c:	100d883a 	mov	r6,r2
  800670:	180f883a 	mov	r7,r3
  800674:	01002074 	movhi	r4,129
  800678:	213ecc04 	addi	r4,r4,-1232
  80067c:	300b883a 	mov	r5,r6
  800680:	380d883a 	mov	r6,r7
  800684:	08049040 	call	804904 <printf>

  return 0;
  800688:	0005883a 	mov	r2,zero
}
  80068c:	e037883a 	mov	sp,fp
  800690:	dfc00117 	ldw	ra,4(sp)
  800694:	df000017 	ldw	fp,0(sp)
  800698:	dec00204 	addi	sp,sp,8
  80069c:	f800283a 	ret

008006a0 <cos>:
  8006a0:	00a00034 	movhi	r2,32768
  8006a4:	10bfffc4 	addi	r2,r2,-1
  8006a8:	defffa04 	addi	sp,sp,-24
  8006ac:	114c703a 	and	r6,r2,r5
  8006b0:	008ffa74 	movhi	r2,16361
  8006b4:	10887ec4 	addi	r2,r2,8699
  8006b8:	dfc00515 	stw	ra,20(sp)
  8006bc:	2011883a 	mov	r8,r4
  8006c0:	1180210e 	bge	r2,r6,800748 <cos+0xa8>
  8006c4:	009ffc34 	movhi	r2,32752
  8006c8:	10bfffc4 	addi	r2,r2,-1
  8006cc:	11800a0e 	bge	r2,r6,8006f8 <cos+0x58>
  8006d0:	280f883a 	mov	r7,r5
  8006d4:	400d883a 	mov	r6,r8
  8006d8:	08035a80 	call	8035a8 <__subdf3>
  8006dc:	100d883a 	mov	r6,r2
  8006e0:	180f883a 	mov	r7,r3
  8006e4:	3005883a 	mov	r2,r6
  8006e8:	3807883a 	mov	r3,r7
  8006ec:	dfc00517 	ldw	ra,20(sp)
  8006f0:	dec00604 	addi	sp,sp,24
  8006f4:	f800283a 	ret
  8006f8:	d9800104 	addi	r6,sp,4
  8006fc:	0800a2c0 	call	800a2c <__ieee754_rem_pio2>
  800700:	10c000cc 	andi	r3,r2,3
  800704:	01000044 	movi	r4,1
  800708:	19001926 	beq	r3,r4,800770 <cos+0xd0>
  80070c:	00800084 	movi	r2,2
  800710:	18803126 	beq	r3,r2,8007d8 <cos+0x138>
  800714:	1800231e 	bne	r3,zero,8007a4 <cos+0x104>
  800718:	d8800117 	ldw	r2,4(sp)
  80071c:	da000317 	ldw	r8,12(sp)
  800720:	d8c00217 	ldw	r3,8(sp)
  800724:	da400417 	ldw	r9,16(sp)
  800728:	400d883a 	mov	r6,r8
  80072c:	180b883a 	mov	r5,r3
  800730:	480f883a 	mov	r7,r9
  800734:	1009883a 	mov	r4,r2
  800738:	08012540 	call	801254 <__kernel_cos>
  80073c:	100d883a 	mov	r6,r2
  800740:	180f883a 	mov	r7,r3
  800744:	003fe706 	br	8006e4 <cos+0x44>
  800748:	000d883a 	mov	r6,zero
  80074c:	000f883a 	mov	r7,zero
  800750:	08012540 	call	801254 <__kernel_cos>
  800754:	100d883a 	mov	r6,r2
  800758:	180f883a 	mov	r7,r3
  80075c:	3005883a 	mov	r2,r6
  800760:	3807883a 	mov	r3,r7
  800764:	dfc00517 	ldw	ra,20(sp)
  800768:	dec00604 	addi	sp,sp,24
  80076c:	f800283a 	ret
  800770:	d8800117 	ldw	r2,4(sp)
  800774:	da000317 	ldw	r8,12(sp)
  800778:	d8c00217 	ldw	r3,8(sp)
  80077c:	da400417 	ldw	r9,16(sp)
  800780:	d9000015 	stw	r4,0(sp)
  800784:	400d883a 	mov	r6,r8
  800788:	480f883a 	mov	r7,r9
  80078c:	180b883a 	mov	r5,r3
  800790:	1009883a 	mov	r4,r2
  800794:	08026040 	call	802604 <__kernel_sin>
  800798:	100d883a 	mov	r6,r2
  80079c:	19e0003c 	xorhi	r7,r3,32768
  8007a0:	003fd006 	br	8006e4 <cos+0x44>
  8007a4:	d8800117 	ldw	r2,4(sp)
  8007a8:	da000317 	ldw	r8,12(sp)
  8007ac:	d8c00217 	ldw	r3,8(sp)
  8007b0:	da400417 	ldw	r9,16(sp)
  8007b4:	d9000015 	stw	r4,0(sp)
  8007b8:	400d883a 	mov	r6,r8
  8007bc:	480f883a 	mov	r7,r9
  8007c0:	180b883a 	mov	r5,r3
  8007c4:	1009883a 	mov	r4,r2
  8007c8:	08026040 	call	802604 <__kernel_sin>
  8007cc:	100d883a 	mov	r6,r2
  8007d0:	180f883a 	mov	r7,r3
  8007d4:	003fc306 	br	8006e4 <cos+0x44>
  8007d8:	d8800117 	ldw	r2,4(sp)
  8007dc:	da000317 	ldw	r8,12(sp)
  8007e0:	d8c00217 	ldw	r3,8(sp)
  8007e4:	da400417 	ldw	r9,16(sp)
  8007e8:	400d883a 	mov	r6,r8
  8007ec:	180b883a 	mov	r5,r3
  8007f0:	480f883a 	mov	r7,r9
  8007f4:	1009883a 	mov	r4,r2
  8007f8:	08012540 	call	801254 <__kernel_cos>
  8007fc:	100d883a 	mov	r6,r2
  800800:	19e0003c 	xorhi	r7,r3,32768
  800804:	003fb706 	br	8006e4 <cos+0x44>

00800808 <floor>:
  800808:	2805d53a 	srai	r2,r5,20
  80080c:	defff604 	addi	sp,sp,-40
  800810:	dd800615 	stw	r22,24(sp)
  800814:	10c1ffcc 	andi	r3,r2,2047
  800818:	1dbf0044 	addi	r22,r3,-1023
  80081c:	008004c4 	movi	r2,19
  800820:	ddc00715 	stw	r23,28(sp)
  800824:	dc800215 	stw	r18,8(sp)
  800828:	dc400115 	stw	r17,4(sp)
  80082c:	dc000015 	stw	r16,0(sp)
  800830:	dfc00915 	stw	ra,36(sp)
  800834:	df000815 	stw	fp,32(sp)
  800838:	dd400515 	stw	r21,20(sp)
  80083c:	dd000415 	stw	r20,16(sp)
  800840:	dcc00315 	stw	r19,12(sp)
  800844:	2021883a 	mov	r16,r4
  800848:	2823883a 	mov	r17,r5
  80084c:	282f883a 	mov	r23,r5
  800850:	2025883a 	mov	r18,r4
  800854:	15802916 	blt	r2,r22,8008fc <floor+0xf4>
  800858:	b0004816 	blt	r22,zero,80097c <floor+0x174>
  80085c:	00800434 	movhi	r2,16
  800860:	10bfffc4 	addi	r2,r2,-1
  800864:	15b9d83a 	sra	fp,r2,r22
  800868:	282f883a 	mov	r23,r5
  80086c:	e144703a 	and	r2,fp,r5
  800870:	1104b03a 	or	r2,r2,r4
  800874:	10001326 	beq	r2,zero,8008c4 <floor+0xbc>
  800878:	00a20034 	movhi	r2,34816
  80087c:	109d6704 	addi	r2,r2,30108
  800880:	00df8e34 	movhi	r3,32312
  800884:	18f90f04 	addi	r3,r3,-7108
  800888:	180f883a 	mov	r7,r3
  80088c:	100d883a 	mov	r6,r2
  800890:	08036280 	call	803628 <__adddf3>
  800894:	180b883a 	mov	r5,r3
  800898:	000d883a 	mov	r6,zero
  80089c:	000f883a 	mov	r7,zero
  8008a0:	1009883a 	mov	r4,r2
  8008a4:	0803ae80 	call	803ae8 <__gtdf2>
  8008a8:	0080040e 	bge	zero,r2,8008bc <floor+0xb4>
  8008ac:	88004416 	blt	r17,zero,8009c0 <floor+0x1b8>
  8008b0:	0704303a 	nor	r2,zero,fp
  8008b4:	b8ae703a 	and	r23,r23,r2
  8008b8:	0025883a 	mov	r18,zero
  8008bc:	9021883a 	mov	r16,r18
  8008c0:	b823883a 	mov	r17,r23
  8008c4:	8005883a 	mov	r2,r16
  8008c8:	8807883a 	mov	r3,r17
  8008cc:	dfc00917 	ldw	ra,36(sp)
  8008d0:	df000817 	ldw	fp,32(sp)
  8008d4:	ddc00717 	ldw	r23,28(sp)
  8008d8:	dd800617 	ldw	r22,24(sp)
  8008dc:	dd400517 	ldw	r21,20(sp)
  8008e0:	dd000417 	ldw	r20,16(sp)
  8008e4:	dcc00317 	ldw	r19,12(sp)
  8008e8:	dc800217 	ldw	r18,8(sp)
  8008ec:	dc400117 	ldw	r17,4(sp)
  8008f0:	dc000017 	ldw	r16,0(sp)
  8008f4:	dec00a04 	addi	sp,sp,40
  8008f8:	f800283a 	ret
  8008fc:	00800cc4 	movi	r2,51
  800900:	15801616 	blt	r2,r22,80095c <floor+0x154>
  800904:	18befb44 	addi	r2,r3,-1043
  800908:	00ffffc4 	movi	r3,-1
  80090c:	18b8d83a 	srl	fp,r3,r2
  800910:	e104703a 	and	r2,fp,r4
  800914:	103feb26 	beq	r2,zero,8008c4 <floor+0xbc>
  800918:	00a20034 	movhi	r2,34816
  80091c:	109d6704 	addi	r2,r2,30108
  800920:	00df8e34 	movhi	r3,32312
  800924:	18f90f04 	addi	r3,r3,-7108
  800928:	180f883a 	mov	r7,r3
  80092c:	100d883a 	mov	r6,r2
  800930:	08036280 	call	803628 <__adddf3>
  800934:	180b883a 	mov	r5,r3
  800938:	000d883a 	mov	r6,zero
  80093c:	000f883a 	mov	r7,zero
  800940:	1009883a 	mov	r4,r2
  800944:	0803ae80 	call	803ae8 <__gtdf2>
  800948:	0080210e 	bge	zero,r2,8009d0 <floor+0x1c8>
  80094c:	88002216 	blt	r17,zero,8009d8 <floor+0x1d0>
  800950:	0704303a 	nor	r2,zero,fp
  800954:	90a4703a 	and	r18,r18,r2
  800958:	003fd806 	br	8008bc <floor+0xb4>
  80095c:	00810004 	movi	r2,1024
  800960:	b0bfd81e 	bne	r22,r2,8008c4 <floor+0xbc>
  800964:	800d883a 	mov	r6,r16
  800968:	280f883a 	mov	r7,r5
  80096c:	08036280 	call	803628 <__adddf3>
  800970:	1021883a 	mov	r16,r2
  800974:	1823883a 	mov	r17,r3
  800978:	003fd206 	br	8008c4 <floor+0xbc>
  80097c:	00a20034 	movhi	r2,34816
  800980:	109d6704 	addi	r2,r2,30108
  800984:	00df8e34 	movhi	r3,32312
  800988:	18f90f04 	addi	r3,r3,-7108
  80098c:	180f883a 	mov	r7,r3
  800990:	100d883a 	mov	r6,r2
  800994:	08036280 	call	803628 <__adddf3>
  800998:	180b883a 	mov	r5,r3
  80099c:	000d883a 	mov	r6,zero
  8009a0:	000f883a 	mov	r7,zero
  8009a4:	1009883a 	mov	r4,r2
  8009a8:	0803ae80 	call	803ae8 <__gtdf2>
  8009ac:	00bfc30e 	bge	zero,r2,8008bc <floor+0xb4>
  8009b0:	88001416 	blt	r17,zero,800a04 <floor+0x1fc>
  8009b4:	002f883a 	mov	r23,zero
  8009b8:	0025883a 	mov	r18,zero
  8009bc:	003fbf06 	br	8008bc <floor+0xb4>
  8009c0:	00800434 	movhi	r2,16
  8009c4:	1585d83a 	sra	r2,r2,r22
  8009c8:	88af883a 	add	r23,r17,r2
  8009cc:	003fb806 	br	8008b0 <floor+0xa8>
  8009d0:	882f883a 	mov	r23,r17
  8009d4:	003fb906 	br	8008bc <floor+0xb4>
  8009d8:	00800504 	movi	r2,20
  8009dc:	b0801126 	beq	r22,r2,800a24 <floor+0x21c>
  8009e0:	00c00d04 	movi	r3,52
  8009e4:	1d87c83a 	sub	r3,r3,r22
  8009e8:	00800044 	movi	r2,1
  8009ec:	10c4983a 	sll	r2,r2,r3
  8009f0:	8085883a 	add	r2,r16,r2
  8009f4:	1400012e 	bgeu	r2,r16,8009fc <floor+0x1f4>
  8009f8:	8dc00044 	addi	r23,r17,1
  8009fc:	1025883a 	mov	r18,r2
  800a00:	003fd306 	br	800950 <floor+0x148>
  800a04:	00a00034 	movhi	r2,32768
  800a08:	10bfffc4 	addi	r2,r2,-1
  800a0c:	8884703a 	and	r2,r17,r2
  800a10:	8084b03a 	or	r2,r16,r2
  800a14:	103fee26 	beq	r2,zero,8009d0 <floor+0x1c8>
  800a18:	05effc34 	movhi	r23,49136
  800a1c:	0025883a 	mov	r18,zero
  800a20:	003fa606 	br	8008bc <floor+0xb4>
  800a24:	8dc00044 	addi	r23,r17,1
  800a28:	003fc906 	br	800950 <floor+0x148>

00800a2c <__ieee754_rem_pio2>:
  800a2c:	deffe304 	addi	sp,sp,-116
  800a30:	00a00034 	movhi	r2,32768
  800a34:	10bfffc4 	addi	r2,r2,-1
  800a38:	dd801915 	stw	r22,100(sp)
  800a3c:	28ac703a 	and	r22,r5,r2
  800a40:	008ffa74 	movhi	r2,16361
  800a44:	10887ec4 	addi	r2,r2,8699
  800a48:	df001b15 	stw	fp,108(sp)
  800a4c:	dfc01c15 	stw	ra,112(sp)
  800a50:	ddc01a15 	stw	r23,104(sp)
  800a54:	dd401815 	stw	r21,96(sp)
  800a58:	dd001715 	stw	r20,92(sp)
  800a5c:	dcc01615 	stw	r19,88(sp)
  800a60:	dc801515 	stw	r18,84(sp)
  800a64:	dc401415 	stw	r17,80(sp)
  800a68:	dc001315 	stw	r16,76(sp)
  800a6c:	2013883a 	mov	r9,r4
  800a70:	d9400a15 	stw	r5,40(sp)
  800a74:	3039883a 	mov	fp,r6
  800a78:	15801216 	blt	r2,r22,800ac4 <__ieee754_rem_pio2+0x98>
  800a7c:	e1400115 	stw	r5,4(fp)
  800a80:	30000315 	stw	zero,12(r6)
  800a84:	e1000015 	stw	r4,0(fp)
  800a88:	d8000b15 	stw	zero,44(sp)
  800a8c:	30000215 	stw	zero,8(r6)
  800a90:	d8800b17 	ldw	r2,44(sp)
  800a94:	dfc01c17 	ldw	ra,112(sp)
  800a98:	df001b17 	ldw	fp,108(sp)
  800a9c:	ddc01a17 	ldw	r23,104(sp)
  800aa0:	dd801917 	ldw	r22,100(sp)
  800aa4:	dd401817 	ldw	r21,96(sp)
  800aa8:	dd001717 	ldw	r20,92(sp)
  800aac:	dcc01617 	ldw	r19,88(sp)
  800ab0:	dc801517 	ldw	r18,84(sp)
  800ab4:	dc401417 	ldw	r17,80(sp)
  800ab8:	dc001317 	ldw	r16,76(sp)
  800abc:	dec01d04 	addi	sp,sp,116
  800ac0:	f800283a 	ret
  800ac4:	009000f4 	movhi	r2,16387
  800ac8:	10b65ec4 	addi	r2,r2,-9861
  800acc:	15800f0e 	bge	r2,r22,800b0c <__ieee754_rem_pio2+0xe0>
  800ad0:	00904e74 	movhi	r2,16697
  800ad4:	10887ec4 	addi	r2,r2,8699
  800ad8:	1580330e 	bge	r2,r22,800ba8 <__ieee754_rem_pio2+0x17c>
  800adc:	009ffc34 	movhi	r2,32752
  800ae0:	10bfffc4 	addi	r2,r2,-1
  800ae4:	1580fe0e 	bge	r2,r22,800ee0 <__ieee754_rem_pio2+0x4b4>
  800ae8:	280f883a 	mov	r7,r5
  800aec:	480d883a 	mov	r6,r9
  800af0:	08035a80 	call	8035a8 <__subdf3>
  800af4:	e0c00115 	stw	r3,4(fp)
  800af8:	d8000b15 	stw	zero,44(sp)
  800afc:	e0800015 	stw	r2,0(fp)
  800b00:	e0800215 	stw	r2,8(fp)
  800b04:	e0c00315 	stw	r3,12(fp)
  800b08:	003fe106 	br	800a90 <__ieee754_rem_pio2+0x64>
  800b0c:	d9000a17 	ldw	r4,40(sp)
  800b10:	0100ce0e 	bge	zero,r4,800e4c <__ieee754_rem_pio2+0x420>
  800b14:	04151034 	movhi	r16,21568
  800b18:	044ffe74 	movhi	r17,16377
  800b1c:	8c487ec4 	addi	r17,r17,8699
  800b20:	4809883a 	mov	r4,r9
  800b24:	800d883a 	mov	r6,r16
  800b28:	880f883a 	mov	r7,r17
  800b2c:	08035a80 	call	8035a8 <__subdf3>
  800b30:	1025883a 	mov	r18,r2
  800b34:	1827883a 	mov	r19,r3
  800b38:	b4413c26 	beq	r22,r17,80102c <__ieee754_rem_pio2+0x600>
  800b3c:	040698b4 	movhi	r16,6754
  800b40:	8418cc44 	addi	r16,r16,25393
  800b44:	044f7474 	movhi	r17,15825
  800b48:	8c6d1844 	addi	r17,r17,-19359
  800b4c:	1009883a 	mov	r4,r2
  800b50:	180b883a 	mov	r5,r3
  800b54:	800d883a 	mov	r6,r16
  800b58:	880f883a 	mov	r7,r17
  800b5c:	08035a80 	call	8035a8 <__subdf3>
  800b60:	100d883a 	mov	r6,r2
  800b64:	9009883a 	mov	r4,r18
  800b68:	980b883a 	mov	r5,r19
  800b6c:	180f883a 	mov	r7,r3
  800b70:	e0800015 	stw	r2,0(fp)
  800b74:	e0c00115 	stw	r3,4(fp)
  800b78:	08035a80 	call	8035a8 <__subdf3>
  800b7c:	1009883a 	mov	r4,r2
  800b80:	800d883a 	mov	r6,r16
  800b84:	880f883a 	mov	r7,r17
  800b88:	180b883a 	mov	r5,r3
  800b8c:	08035a80 	call	8035a8 <__subdf3>
  800b90:	1009883a 	mov	r4,r2
  800b94:	00800044 	movi	r2,1
  800b98:	d8800b15 	stw	r2,44(sp)
  800b9c:	e0c00315 	stw	r3,12(fp)
  800ba0:	e1000215 	stw	r4,8(fp)
  800ba4:	003fba06 	br	800a90 <__ieee754_rem_pio2+0x64>
  800ba8:	080291c0 	call	80291c <fabs>
  800bac:	021b72b4 	movhi	r8,28106
  800bb0:	423220c4 	addi	r8,r8,-14205
  800bb4:	024ff934 	movhi	r9,16356
  800bb8:	4a57cc04 	addi	r9,r9,24368
  800bbc:	480f883a 	mov	r7,r9
  800bc0:	400d883a 	mov	r6,r8
  800bc4:	1009883a 	mov	r4,r2
  800bc8:	180b883a 	mov	r5,r3
  800bcc:	1025883a 	mov	r18,r2
  800bd0:	1827883a 	mov	r19,r3
  800bd4:	080369c0 	call	80369c <__muldf3>
  800bd8:	0011883a 	mov	r8,zero
  800bdc:	024ff834 	movhi	r9,16352
  800be0:	480f883a 	mov	r7,r9
  800be4:	400d883a 	mov	r6,r8
  800be8:	180b883a 	mov	r5,r3
  800bec:	1009883a 	mov	r4,r2
  800bf0:	08036280 	call	803628 <__adddf3>
  800bf4:	180b883a 	mov	r5,r3
  800bf8:	1009883a 	mov	r4,r2
  800bfc:	0803cf00 	call	803cf0 <__fixdfsi>
  800c00:	1009883a 	mov	r4,r2
  800c04:	d8800b15 	stw	r2,44(sp)
  800c08:	0803bf80 	call	803bf8 <__floatsidf>
  800c0c:	1823883a 	mov	r17,r3
  800c10:	1009883a 	mov	r4,r2
  800c14:	d8800c15 	stw	r2,48(sp)
  800c18:	00effe74 	movhi	r3,49145
  800c1c:	18c87ec4 	addi	r3,r3,8699
  800c20:	00951034 	movhi	r2,21568
  800c24:	880b883a 	mov	r5,r17
  800c28:	180f883a 	mov	r7,r3
  800c2c:	100d883a 	mov	r6,r2
  800c30:	dc400d15 	stw	r17,52(sp)
  800c34:	080369c0 	call	80369c <__muldf3>
  800c38:	180f883a 	mov	r7,r3
  800c3c:	980b883a 	mov	r5,r19
  800c40:	9009883a 	mov	r4,r18
  800c44:	100d883a 	mov	r6,r2
  800c48:	08036280 	call	803628 <__adddf3>
  800c4c:	d9000c17 	ldw	r4,48(sp)
  800c50:	020698b4 	movhi	r8,6754
  800c54:	4218cc44 	addi	r8,r8,25393
  800c58:	024f7474 	movhi	r9,15825
  800c5c:	4a6d1844 	addi	r9,r9,-19359
  800c60:	880b883a 	mov	r5,r17
  800c64:	480f883a 	mov	r7,r9
  800c68:	400d883a 	mov	r6,r8
  800c6c:	1025883a 	mov	r18,r2
  800c70:	1827883a 	mov	r19,r3
  800c74:	080369c0 	call	80369c <__muldf3>
  800c78:	d9000b17 	ldw	r4,44(sp)
  800c7c:	100f883a 	mov	r7,r2
  800c80:	1811883a 	mov	r8,r3
  800c84:	008007c4 	movi	r2,31
  800c88:	dc800e15 	stw	r18,56(sp)
  800c8c:	3821883a 	mov	r16,r7
  800c90:	dcc00f15 	stw	r19,60(sp)
  800c94:	4023883a 	mov	r17,r8
  800c98:	11010a0e 	bge	r2,r4,8010c4 <__ieee754_rem_pio2+0x698>
  800c9c:	d9000e17 	ldw	r4,56(sp)
  800ca0:	d9400f17 	ldw	r5,60(sp)
  800ca4:	800d883a 	mov	r6,r16
  800ca8:	880f883a 	mov	r7,r17
  800cac:	08035a80 	call	8035a8 <__subdf3>
  800cb0:	1810d53a 	srli	r8,r3,20
  800cb4:	b02dd53a 	srai	r22,r22,20
  800cb8:	1009883a 	mov	r4,r2
  800cbc:	4201ffcc 	andi	r8,r8,2047
  800cc0:	180b883a 	mov	r5,r3
  800cc4:	b211c83a 	sub	r8,r22,r8
  800cc8:	00800404 	movi	r2,16
  800ccc:	dd801015 	stw	r22,64(sp)
  800cd0:	e1000015 	stw	r4,0(fp)
  800cd4:	e1400115 	stw	r5,4(fp)
  800cd8:	1200430e 	bge	r2,r8,800de8 <__ieee754_rem_pio2+0x3bc>
  800cdc:	d9000c17 	ldw	r4,48(sp)
  800ce0:	d9400d17 	ldw	r5,52(sp)
  800ce4:	00869834 	movhi	r2,6752
  800ce8:	00cf7474 	movhi	r3,15825
  800cec:	18ed1844 	addi	r3,r3,-19359
  800cf0:	180f883a 	mov	r7,r3
  800cf4:	100d883a 	mov	r6,r2
  800cf8:	080369c0 	call	80369c <__muldf3>
  800cfc:	d9000e17 	ldw	r4,56(sp)
  800d00:	d9400f17 	ldw	r5,60(sp)
  800d04:	100d883a 	mov	r6,r2
  800d08:	180f883a 	mov	r7,r3
  800d0c:	1025883a 	mov	r18,r2
  800d10:	1827883a 	mov	r19,r3
  800d14:	08035a80 	call	8035a8 <__subdf3>
  800d18:	d9000c17 	ldw	r4,48(sp)
  800d1c:	d9400d17 	ldw	r5,52(sp)
  800d20:	058b80f4 	movhi	r22,11779
  800d24:	b59c1cc4 	addi	r22,r22,28787
  800d28:	05cee8f4 	movhi	r23,15267
  800d2c:	bdc66284 	addi	r23,r23,6538
  800d30:	b00d883a 	mov	r6,r22
  800d34:	b80f883a 	mov	r7,r23
  800d38:	d8801115 	stw	r2,68(sp)
  800d3c:	d8c01215 	stw	r3,72(sp)
  800d40:	d8800815 	stw	r2,32(sp)
  800d44:	080369c0 	call	80369c <__muldf3>
  800d48:	d9001217 	ldw	r4,72(sp)
  800d4c:	d9400f17 	ldw	r5,60(sp)
  800d50:	d9800817 	ldw	r6,32(sp)
  800d54:	d9000915 	stw	r4,36(sp)
  800d58:	d9c01217 	ldw	r7,72(sp)
  800d5c:	d9000e17 	ldw	r4,56(sp)
  800d60:	1021883a 	mov	r16,r2
  800d64:	1823883a 	mov	r17,r3
  800d68:	08035a80 	call	8035a8 <__subdf3>
  800d6c:	180b883a 	mov	r5,r3
  800d70:	900d883a 	mov	r6,r18
  800d74:	980f883a 	mov	r7,r19
  800d78:	1009883a 	mov	r4,r2
  800d7c:	08035a80 	call	8035a8 <__subdf3>
  800d80:	180f883a 	mov	r7,r3
  800d84:	880b883a 	mov	r5,r17
  800d88:	8009883a 	mov	r4,r16
  800d8c:	100d883a 	mov	r6,r2
  800d90:	08035a80 	call	8035a8 <__subdf3>
  800d94:	d9000817 	ldw	r4,32(sp)
  800d98:	d9401217 	ldw	r5,72(sp)
  800d9c:	180f883a 	mov	r7,r3
  800da0:	100d883a 	mov	r6,r2
  800da4:	1021883a 	mov	r16,r2
  800da8:	1823883a 	mov	r17,r3
  800dac:	08035a80 	call	8035a8 <__subdf3>
  800db0:	1810d53a 	srli	r8,r3,20
  800db4:	1009883a 	mov	r4,r2
  800db8:	d8801017 	ldw	r2,64(sp)
  800dbc:	4201ffcc 	andi	r8,r8,2047
  800dc0:	180b883a 	mov	r5,r3
  800dc4:	1211c83a 	sub	r8,r2,r8
  800dc8:	00800c44 	movi	r2,49
  800dcc:	e1000015 	stw	r4,0(fp)
  800dd0:	e1400115 	stw	r5,4(fp)
  800dd4:	1200f016 	blt	r2,r8,801198 <__ieee754_rem_pio2+0x76c>
  800dd8:	d8c00817 	ldw	r3,32(sp)
  800ddc:	d9001217 	ldw	r4,72(sp)
  800de0:	d8c00e15 	stw	r3,56(sp)
  800de4:	d9000f15 	stw	r4,60(sp)
  800de8:	e1800017 	ldw	r6,0(fp)
  800dec:	e1c00117 	ldw	r7,4(fp)
  800df0:	d9400f17 	ldw	r5,60(sp)
  800df4:	d9000e17 	ldw	r4,56(sp)
  800df8:	08035a80 	call	8035a8 <__subdf3>
  800dfc:	180b883a 	mov	r5,r3
  800e00:	800d883a 	mov	r6,r16
  800e04:	880f883a 	mov	r7,r17
  800e08:	1009883a 	mov	r4,r2
  800e0c:	08035a80 	call	8035a8 <__subdf3>
  800e10:	d9400a17 	ldw	r5,40(sp)
  800e14:	e0800215 	stw	r2,8(fp)
  800e18:	e1800204 	addi	r6,fp,8
  800e1c:	30c00115 	stw	r3,4(r6)
  800e20:	283f1b0e 	bge	r5,zero,800a90 <__ieee754_rem_pio2+0x64>
  800e24:	e0c00117 	ldw	r3,4(fp)
  800e28:	d8800b17 	ldw	r2,44(sp)
  800e2c:	18e0003c 	xorhi	r3,r3,32768
  800e30:	0085c83a 	sub	r2,zero,r2
  800e34:	e0c00115 	stw	r3,4(fp)
  800e38:	d8800b15 	stw	r2,44(sp)
  800e3c:	30800117 	ldw	r2,4(r6)
  800e40:	10a0003c 	xorhi	r2,r2,32768
  800e44:	30800115 	stw	r2,4(r6)
  800e48:	003f1106 	br	800a90 <__ieee754_rem_pio2+0x64>
  800e4c:	04151034 	movhi	r16,21568
  800e50:	044ffe74 	movhi	r17,16377
  800e54:	8c487ec4 	addi	r17,r17,8699
  800e58:	4809883a 	mov	r4,r9
  800e5c:	800d883a 	mov	r6,r16
  800e60:	880f883a 	mov	r7,r17
  800e64:	08036280 	call	803628 <__adddf3>
  800e68:	1025883a 	mov	r18,r2
  800e6c:	1827883a 	mov	r19,r3
  800e70:	b440a326 	beq	r22,r17,801100 <__ieee754_rem_pio2+0x6d4>
  800e74:	040698b4 	movhi	r16,6754
  800e78:	8418cc44 	addi	r16,r16,25393
  800e7c:	044f7474 	movhi	r17,15825
  800e80:	8c6d1844 	addi	r17,r17,-19359
  800e84:	1009883a 	mov	r4,r2
  800e88:	180b883a 	mov	r5,r3
  800e8c:	800d883a 	mov	r6,r16
  800e90:	880f883a 	mov	r7,r17
  800e94:	08036280 	call	803628 <__adddf3>
  800e98:	100d883a 	mov	r6,r2
  800e9c:	9009883a 	mov	r4,r18
  800ea0:	980b883a 	mov	r5,r19
  800ea4:	180f883a 	mov	r7,r3
  800ea8:	e0800015 	stw	r2,0(fp)
  800eac:	e0c00115 	stw	r3,4(fp)
  800eb0:	08035a80 	call	8035a8 <__subdf3>
  800eb4:	1009883a 	mov	r4,r2
  800eb8:	800d883a 	mov	r6,r16
  800ebc:	880f883a 	mov	r7,r17
  800ec0:	180b883a 	mov	r5,r3
  800ec4:	08036280 	call	803628 <__adddf3>
  800ec8:	1009883a 	mov	r4,r2
  800ecc:	00bfffc4 	movi	r2,-1
  800ed0:	d8800b15 	stw	r2,44(sp)
  800ed4:	e0c00315 	stw	r3,12(fp)
  800ed8:	e1000215 	stw	r4,8(fp)
  800edc:	003eec06 	br	800a90 <__ieee754_rem_pio2+0x64>
  800ee0:	b005d53a 	srai	r2,r22,20
  800ee4:	4821883a 	mov	r16,r9
  800ee8:	05505c34 	movhi	r21,16752
  800eec:	15fefa84 	addi	r23,r2,-1046
  800ef0:	b826953a 	slli	r19,r23,20
  800ef4:	0029883a 	mov	r20,zero
  800ef8:	048000c4 	movi	r18,3
  800efc:	b4e7c83a 	sub	r19,r22,r19
  800f00:	980b883a 	mov	r5,r19
  800f04:	0803cf00 	call	803cf0 <__fixdfsi>
  800f08:	1009883a 	mov	r4,r2
  800f0c:	0803bf80 	call	803bf8 <__floatsidf>
  800f10:	980b883a 	mov	r5,r19
  800f14:	8009883a 	mov	r4,r16
  800f18:	180f883a 	mov	r7,r3
  800f1c:	100d883a 	mov	r6,r2
  800f20:	d8800215 	stw	r2,8(sp)
  800f24:	d8c00315 	stw	r3,12(sp)
  800f28:	08035a80 	call	8035a8 <__subdf3>
  800f2c:	180b883a 	mov	r5,r3
  800f30:	a00d883a 	mov	r6,r20
  800f34:	a80f883a 	mov	r7,r21
  800f38:	1009883a 	mov	r4,r2
  800f3c:	080369c0 	call	80369c <__muldf3>
  800f40:	180b883a 	mov	r5,r3
  800f44:	1009883a 	mov	r4,r2
  800f48:	1823883a 	mov	r17,r3
  800f4c:	1021883a 	mov	r16,r2
  800f50:	0803cf00 	call	803cf0 <__fixdfsi>
  800f54:	1009883a 	mov	r4,r2
  800f58:	0803bf80 	call	803bf8 <__floatsidf>
  800f5c:	880b883a 	mov	r5,r17
  800f60:	8009883a 	mov	r4,r16
  800f64:	180f883a 	mov	r7,r3
  800f68:	100d883a 	mov	r6,r2
  800f6c:	d8800415 	stw	r2,16(sp)
  800f70:	d8c00515 	stw	r3,20(sp)
  800f74:	08035a80 	call	8035a8 <__subdf3>
  800f78:	180b883a 	mov	r5,r3
  800f7c:	000d883a 	mov	r6,zero
  800f80:	a80f883a 	mov	r7,r21
  800f84:	1009883a 	mov	r4,r2
  800f88:	080369c0 	call	80369c <__muldf3>
  800f8c:	d8c00715 	stw	r3,28(sp)
  800f90:	d8800615 	stw	r2,24(sp)
  800f94:	00000106 	br	800f9c <__ieee754_rem_pio2+0x570>
  800f98:	8025883a 	mov	r18,r16
  800f9c:	943fffc4 	addi	r16,r18,-1
  800fa0:	800890fa 	slli	r4,r16,3
  800fa4:	d9400204 	addi	r5,sp,8
  800fa8:	000d883a 	mov	r6,zero
  800fac:	2149883a 	add	r4,r4,r5
  800fb0:	20c00117 	ldw	r3,4(r4)
  800fb4:	20800017 	ldw	r2,0(r4)
  800fb8:	000f883a 	mov	r7,zero
  800fbc:	180b883a 	mov	r5,r3
  800fc0:	1009883a 	mov	r4,r2
  800fc4:	0803a600 	call	803a60 <__eqdf2>
  800fc8:	103ff326 	beq	r2,zero,800f98 <__ieee754_rem_pio2+0x56c>
  800fcc:	00800084 	movi	r2,2
  800fd0:	00c02074 	movhi	r3,129
  800fd4:	18feef04 	addi	r3,r3,-1092
  800fd8:	b80d883a 	mov	r6,r23
  800fdc:	900f883a 	mov	r7,r18
  800fe0:	d9000204 	addi	r4,sp,8
  800fe4:	e00b883a 	mov	r5,fp
  800fe8:	d8800015 	stw	r2,0(sp)
  800fec:	d8c00115 	stw	r3,4(sp)
  800ff0:	08017800 	call	801780 <__kernel_rem_pio2>
  800ff4:	d8800b15 	stw	r2,44(sp)
  800ff8:	d8800a17 	ldw	r2,40(sp)
  800ffc:	103ea40e 	bge	r2,zero,800a90 <__ieee754_rem_pio2+0x64>
  801000:	e0800117 	ldw	r2,4(fp)
  801004:	d8c00b17 	ldw	r3,44(sp)
  801008:	e1000204 	addi	r4,fp,8
  80100c:	10a0003c 	xorhi	r2,r2,32768
  801010:	00c7c83a 	sub	r3,zero,r3
  801014:	e0800115 	stw	r2,4(fp)
  801018:	d8c00b15 	stw	r3,44(sp)
  80101c:	20c00117 	ldw	r3,4(r4)
  801020:	18e0003c 	xorhi	r3,r3,32768
  801024:	20c00115 	stw	r3,4(r4)
  801028:	003e9906 	br	800a90 <__ieee754_rem_pio2+0x64>
  80102c:	00869834 	movhi	r2,6752
  801030:	00cf7474 	movhi	r3,15825
  801034:	18ed1844 	addi	r3,r3,-19359
  801038:	9009883a 	mov	r4,r18
  80103c:	980b883a 	mov	r5,r19
  801040:	180f883a 	mov	r7,r3
  801044:	100d883a 	mov	r6,r2
  801048:	08035a80 	call	8035a8 <__subdf3>
  80104c:	048b80f4 	movhi	r18,11779
  801050:	949c1cc4 	addi	r18,r18,28787
  801054:	04cee8f4 	movhi	r19,15267
  801058:	9cc66284 	addi	r19,r19,6538
  80105c:	1009883a 	mov	r4,r2
  801060:	180b883a 	mov	r5,r3
  801064:	900d883a 	mov	r6,r18
  801068:	980f883a 	mov	r7,r19
  80106c:	1021883a 	mov	r16,r2
  801070:	1823883a 	mov	r17,r3
  801074:	08035a80 	call	8035a8 <__subdf3>
  801078:	100d883a 	mov	r6,r2
  80107c:	8009883a 	mov	r4,r16
  801080:	880b883a 	mov	r5,r17
  801084:	180f883a 	mov	r7,r3
  801088:	e0800015 	stw	r2,0(fp)
  80108c:	e0c00115 	stw	r3,4(fp)
  801090:	08035a80 	call	8035a8 <__subdf3>
  801094:	180b883a 	mov	r5,r3
  801098:	1009883a 	mov	r4,r2
  80109c:	900d883a 	mov	r6,r18
  8010a0:	980f883a 	mov	r7,r19
  8010a4:	08035a80 	call	8035a8 <__subdf3>
  8010a8:	180b883a 	mov	r5,r3
  8010ac:	1009883a 	mov	r4,r2
  8010b0:	00c00044 	movi	r3,1
  8010b4:	d8c00b15 	stw	r3,44(sp)
  8010b8:	e1400315 	stw	r5,12(fp)
  8010bc:	e1000215 	stw	r4,8(fp)
  8010c0:	003e7306 	br	800a90 <__ieee754_rem_pio2+0x64>
  8010c4:	2105883a 	add	r2,r4,r4
  8010c8:	1085883a 	add	r2,r2,r2
  8010cc:	00c02074 	movhi	r3,129
  8010d0:	18fecf04 	addi	r3,r3,-1220
  8010d4:	10c5883a 	add	r2,r2,r3
  8010d8:	113fff17 	ldw	r4,-4(r2)
  8010dc:	b13eef26 	beq	r22,r4,800c9c <__ieee754_rem_pio2+0x270>
  8010e0:	980b883a 	mov	r5,r19
  8010e4:	400f883a 	mov	r7,r8
  8010e8:	9009883a 	mov	r4,r18
  8010ec:	800d883a 	mov	r6,r16
  8010f0:	08035a80 	call	8035a8 <__subdf3>
  8010f4:	e0c00115 	stw	r3,4(fp)
  8010f8:	e0800015 	stw	r2,0(fp)
  8010fc:	003f3a06 	br	800de8 <__ieee754_rem_pio2+0x3bc>
  801100:	00869834 	movhi	r2,6752
  801104:	00cf7474 	movhi	r3,15825
  801108:	18ed1844 	addi	r3,r3,-19359
  80110c:	9009883a 	mov	r4,r18
  801110:	980b883a 	mov	r5,r19
  801114:	180f883a 	mov	r7,r3
  801118:	100d883a 	mov	r6,r2
  80111c:	08036280 	call	803628 <__adddf3>
  801120:	048b80f4 	movhi	r18,11779
  801124:	949c1cc4 	addi	r18,r18,28787
  801128:	04cee8f4 	movhi	r19,15267
  80112c:	9cc66284 	addi	r19,r19,6538
  801130:	1009883a 	mov	r4,r2
  801134:	180b883a 	mov	r5,r3
  801138:	900d883a 	mov	r6,r18
  80113c:	980f883a 	mov	r7,r19
  801140:	1021883a 	mov	r16,r2
  801144:	1823883a 	mov	r17,r3
  801148:	08036280 	call	803628 <__adddf3>
  80114c:	100d883a 	mov	r6,r2
  801150:	8009883a 	mov	r4,r16
  801154:	880b883a 	mov	r5,r17
  801158:	180f883a 	mov	r7,r3
  80115c:	e0800015 	stw	r2,0(fp)
  801160:	e0c00115 	stw	r3,4(fp)
  801164:	08035a80 	call	8035a8 <__subdf3>
  801168:	180b883a 	mov	r5,r3
  80116c:	1009883a 	mov	r4,r2
  801170:	900d883a 	mov	r6,r18
  801174:	980f883a 	mov	r7,r19
  801178:	08036280 	call	803628 <__adddf3>
  80117c:	180b883a 	mov	r5,r3
  801180:	1009883a 	mov	r4,r2
  801184:	00ffffc4 	movi	r3,-1
  801188:	d8c00b15 	stw	r3,44(sp)
  80118c:	e1400315 	stw	r5,12(fp)
  801190:	e1000215 	stw	r4,8(fp)
  801194:	003e3e06 	br	800a90 <__ieee754_rem_pio2+0x64>
  801198:	d9000c17 	ldw	r4,48(sp)
  80119c:	d9400d17 	ldw	r5,52(sp)
  8011a0:	018b8034 	movhi	r6,11776
  8011a4:	b80f883a 	mov	r7,r23
  8011a8:	080369c0 	call	80369c <__muldf3>
  8011ac:	d9000817 	ldw	r4,32(sp)
  8011b0:	d9401217 	ldw	r5,72(sp)
  8011b4:	100d883a 	mov	r6,r2
  8011b8:	180f883a 	mov	r7,r3
  8011bc:	1025883a 	mov	r18,r2
  8011c0:	1827883a 	mov	r19,r3
  8011c4:	08035a80 	call	8035a8 <__subdf3>
  8011c8:	d9400d17 	ldw	r5,52(sp)
  8011cc:	d9000c17 	ldw	r4,48(sp)
  8011d0:	02094834 	movhi	r8,9504
  8011d4:	42127044 	addi	r8,r8,18881
  8011d8:	024e5f34 	movhi	r9,14716
  8011dc:	4a60e684 	addi	r9,r9,-31846
  8011e0:	480f883a 	mov	r7,r9
  8011e4:	400d883a 	mov	r6,r8
  8011e8:	182b883a 	mov	r21,r3
  8011ec:	d8800e15 	stw	r2,56(sp)
  8011f0:	080369c0 	call	80369c <__muldf3>
  8011f4:	d9000817 	ldw	r4,32(sp)
  8011f8:	d9401217 	ldw	r5,72(sp)
  8011fc:	d9800e17 	ldw	r6,56(sp)
  801200:	a80f883a 	mov	r7,r21
  801204:	1021883a 	mov	r16,r2
  801208:	1823883a 	mov	r17,r3
  80120c:	dd400f15 	stw	r21,60(sp)
  801210:	08035a80 	call	8035a8 <__subdf3>
  801214:	180b883a 	mov	r5,r3
  801218:	900d883a 	mov	r6,r18
  80121c:	980f883a 	mov	r7,r19
  801220:	1009883a 	mov	r4,r2
  801224:	08035a80 	call	8035a8 <__subdf3>
  801228:	180f883a 	mov	r7,r3
  80122c:	880b883a 	mov	r5,r17
  801230:	8009883a 	mov	r4,r16
  801234:	100d883a 	mov	r6,r2
  801238:	08035a80 	call	8035a8 <__subdf3>
  80123c:	d9000e17 	ldw	r4,56(sp)
  801240:	1021883a 	mov	r16,r2
  801244:	1823883a 	mov	r17,r3
  801248:	a80b883a 	mov	r5,r21
  80124c:	180f883a 	mov	r7,r3
  801250:	003fa606 	br	8010ec <__ieee754_rem_pio2+0x6c0>

00801254 <__kernel_cos>:
  801254:	defff104 	addi	sp,sp,-60
  801258:	00a00034 	movhi	r2,32768
  80125c:	10bfffc4 	addi	r2,r2,-1
  801260:	dd800c15 	stw	r22,48(sp)
  801264:	116c703a 	and	r22,r2,r5
  801268:	0005883a 	mov	r2,zero
  80126c:	dd000a15 	stw	r20,40(sp)
  801270:	d8800215 	stw	r2,8(sp)
  801274:	2029883a 	mov	r20,r4
  801278:	008f9034 	movhi	r2,15936
  80127c:	10bfffc4 	addi	r2,r2,-1
  801280:	0009883a 	mov	r4,zero
  801284:	dd400b15 	stw	r21,44(sp)
  801288:	dfc00e15 	stw	ra,56(sp)
  80128c:	ddc00d15 	stw	r23,52(sp)
  801290:	dcc00915 	stw	r19,36(sp)
  801294:	dc800815 	stw	r18,32(sp)
  801298:	dc400715 	stw	r17,28(sp)
  80129c:	dc000615 	stw	r16,24(sp)
  8012a0:	282b883a 	mov	r21,r5
  8012a4:	d9800415 	stw	r6,16(sp)
  8012a8:	d9c00515 	stw	r7,20(sp)
  8012ac:	d9000315 	stw	r4,12(sp)
  8012b0:	15809216 	blt	r2,r22,8014fc <__kernel_cos+0x2a8>
  8012b4:	a009883a 	mov	r4,r20
  8012b8:	0803cf00 	call	803cf0 <__fixdfsi>
  8012bc:	10011c26 	beq	r2,zero,801730 <__kernel_cos+0x4dc>
  8012c0:	a009883a 	mov	r4,r20
  8012c4:	a80b883a 	mov	r5,r21
  8012c8:	a00d883a 	mov	r6,r20
  8012cc:	a80f883a 	mov	r7,r21
  8012d0:	080369c0 	call	80369c <__muldf3>
  8012d4:	1021883a 	mov	r16,r2
  8012d8:	1823883a 	mov	r17,r3
  8012dc:	1025883a 	mov	r18,r2
  8012e0:	1827883a 	mov	r19,r3
  8012e4:	00afa234 	movhi	r2,48776
  8012e8:	108e3504 	addi	r2,r2,14548
  8012ec:	00ef6a74 	movhi	r3,48553
  8012f0:	18feba44 	addi	r3,r3,-1303
  8012f4:	8009883a 	mov	r4,r16
  8012f8:	880b883a 	mov	r5,r17
  8012fc:	180f883a 	mov	r7,r3
  801300:	100d883a 	mov	r6,r2
  801304:	080369c0 	call	80369c <__muldf3>
  801308:	022f6d74 	movhi	r8,48565
  80130c:	422c7104 	addi	r8,r8,-20028
  801310:	024f88b4 	movhi	r9,15906
  801314:	4a7ba784 	addi	r9,r9,-4450
  801318:	480f883a 	mov	r7,r9
  80131c:	400d883a 	mov	r6,r8
  801320:	180b883a 	mov	r5,r3
  801324:	1009883a 	mov	r4,r2
  801328:	08036280 	call	803628 <__adddf3>
  80132c:	180f883a 	mov	r7,r3
  801330:	8009883a 	mov	r4,r16
  801334:	880b883a 	mov	r5,r17
  801338:	100d883a 	mov	r6,r2
  80133c:	080369c0 	call	80369c <__muldf3>
  801340:	02202734 	movhi	r8,32924
  801344:	4214ab44 	addi	r8,r8,21165
  801348:	024fa4b4 	movhi	r9,16018
  80134c:	4a5f93c4 	addi	r9,r9,32335
  801350:	480f883a 	mov	r7,r9
  801354:	400d883a 	mov	r6,r8
  801358:	180b883a 	mov	r5,r3
  80135c:	1009883a 	mov	r4,r2
  801360:	08035a80 	call	8035a8 <__subdf3>
  801364:	180f883a 	mov	r7,r3
  801368:	8009883a 	mov	r4,r16
  80136c:	880b883a 	mov	r5,r17
  801370:	100d883a 	mov	r6,r2
  801374:	080369c0 	call	80369c <__muldf3>
  801378:	020672f4 	movhi	r8,6603
  80137c:	42056404 	addi	r8,r8,5520
  801380:	024fbeb4 	movhi	r9,16122
  801384:	4a406804 	addi	r9,r9,416
  801388:	480f883a 	mov	r7,r9
  80138c:	400d883a 	mov	r6,r8
  801390:	180b883a 	mov	r5,r3
  801394:	1009883a 	mov	r4,r2
  801398:	08036280 	call	803628 <__adddf3>
  80139c:	180f883a 	mov	r7,r3
  8013a0:	8009883a 	mov	r4,r16
  8013a4:	880b883a 	mov	r5,r17
  8013a8:	100d883a 	mov	r6,r2
  8013ac:	080369c0 	call	80369c <__muldf3>
  8013b0:	0205b074 	movhi	r8,5825
  8013b4:	42145dc4 	addi	r8,r8,20855
  8013b8:	024fd5f4 	movhi	r9,16215
  8013bc:	4a705b04 	addi	r9,r9,-16020
  8013c0:	480f883a 	mov	r7,r9
  8013c4:	400d883a 	mov	r6,r8
  8013c8:	180b883a 	mov	r5,r3
  8013cc:	1009883a 	mov	r4,r2
  8013d0:	08035a80 	call	8035a8 <__subdf3>
  8013d4:	180f883a 	mov	r7,r3
  8013d8:	8009883a 	mov	r4,r16
  8013dc:	880b883a 	mov	r5,r17
  8013e0:	100d883a 	mov	r6,r2
  8013e4:	080369c0 	call	80369c <__muldf3>
  8013e8:	02155574 	movhi	r8,21845
  8013ec:	42155304 	addi	r8,r8,21836
  8013f0:	024fe974 	movhi	r9,16293
  8013f4:	4a555544 	addi	r9,r9,21845
  8013f8:	480f883a 	mov	r7,r9
  8013fc:	400d883a 	mov	r6,r8
  801400:	180b883a 	mov	r5,r3
  801404:	1009883a 	mov	r4,r2
  801408:	08036280 	call	803628 <__adddf3>
  80140c:	180f883a 	mov	r7,r3
  801410:	880b883a 	mov	r5,r17
  801414:	8009883a 	mov	r4,r16
  801418:	100d883a 	mov	r6,r2
  80141c:	080369c0 	call	80369c <__muldf3>
  801420:	1021883a 	mov	r16,r2
  801424:	1823883a 	mov	r17,r3
  801428:	0005883a 	mov	r2,zero
  80142c:	00cff834 	movhi	r3,16352
  801430:	9009883a 	mov	r4,r18
  801434:	980b883a 	mov	r5,r19
  801438:	180f883a 	mov	r7,r3
  80143c:	100d883a 	mov	r6,r2
  801440:	080369c0 	call	80369c <__muldf3>
  801444:	980b883a 	mov	r5,r19
  801448:	880f883a 	mov	r7,r17
  80144c:	9009883a 	mov	r4,r18
  801450:	800d883a 	mov	r6,r16
  801454:	1025883a 	mov	r18,r2
  801458:	1827883a 	mov	r19,r3
  80145c:	080369c0 	call	80369c <__muldf3>
  801460:	d9c00517 	ldw	r7,20(sp)
  801464:	d9800417 	ldw	r6,16(sp)
  801468:	a80b883a 	mov	r5,r21
  80146c:	a009883a 	mov	r4,r20
  801470:	1021883a 	mov	r16,r2
  801474:	1823883a 	mov	r17,r3
  801478:	080369c0 	call	80369c <__muldf3>
  80147c:	180f883a 	mov	r7,r3
  801480:	880b883a 	mov	r5,r17
  801484:	8009883a 	mov	r4,r16
  801488:	100d883a 	mov	r6,r2
  80148c:	08035a80 	call	8035a8 <__subdf3>
  801490:	180f883a 	mov	r7,r3
  801494:	980b883a 	mov	r5,r19
  801498:	9009883a 	mov	r4,r18
  80149c:	100d883a 	mov	r6,r2
  8014a0:	08035a80 	call	8035a8 <__subdf3>
  8014a4:	0011883a 	mov	r8,zero
  8014a8:	024ffc34 	movhi	r9,16368
  8014ac:	480b883a 	mov	r5,r9
  8014b0:	180f883a 	mov	r7,r3
  8014b4:	4009883a 	mov	r4,r8
  8014b8:	100d883a 	mov	r6,r2
  8014bc:	08035a80 	call	8035a8 <__subdf3>
  8014c0:	100d883a 	mov	r6,r2
  8014c4:	180f883a 	mov	r7,r3
  8014c8:	3005883a 	mov	r2,r6
  8014cc:	3807883a 	mov	r3,r7
  8014d0:	dfc00e17 	ldw	ra,56(sp)
  8014d4:	ddc00d17 	ldw	r23,52(sp)
  8014d8:	dd800c17 	ldw	r22,48(sp)
  8014dc:	dd400b17 	ldw	r21,44(sp)
  8014e0:	dd000a17 	ldw	r20,40(sp)
  8014e4:	dcc00917 	ldw	r19,36(sp)
  8014e8:	dc800817 	ldw	r18,32(sp)
  8014ec:	dc400717 	ldw	r17,28(sp)
  8014f0:	dc000617 	ldw	r16,24(sp)
  8014f4:	dec00f04 	addi	sp,sp,60
  8014f8:	f800283a 	ret
  8014fc:	280f883a 	mov	r7,r5
  801500:	a009883a 	mov	r4,r20
  801504:	a00d883a 	mov	r6,r20
  801508:	080369c0 	call	80369c <__muldf3>
  80150c:	1021883a 	mov	r16,r2
  801510:	1823883a 	mov	r17,r3
  801514:	1025883a 	mov	r18,r2
  801518:	1827883a 	mov	r19,r3
  80151c:	00afa234 	movhi	r2,48776
  801520:	108e3504 	addi	r2,r2,14548
  801524:	00ef6a74 	movhi	r3,48553
  801528:	18feba44 	addi	r3,r3,-1303
  80152c:	8009883a 	mov	r4,r16
  801530:	880b883a 	mov	r5,r17
  801534:	180f883a 	mov	r7,r3
  801538:	100d883a 	mov	r6,r2
  80153c:	080369c0 	call	80369c <__muldf3>
  801540:	022f6d74 	movhi	r8,48565
  801544:	422c7104 	addi	r8,r8,-20028
  801548:	024f88b4 	movhi	r9,15906
  80154c:	4a7ba784 	addi	r9,r9,-4450
  801550:	480f883a 	mov	r7,r9
  801554:	400d883a 	mov	r6,r8
  801558:	180b883a 	mov	r5,r3
  80155c:	1009883a 	mov	r4,r2
  801560:	08036280 	call	803628 <__adddf3>
  801564:	180f883a 	mov	r7,r3
  801568:	8009883a 	mov	r4,r16
  80156c:	880b883a 	mov	r5,r17
  801570:	100d883a 	mov	r6,r2
  801574:	080369c0 	call	80369c <__muldf3>
  801578:	02202734 	movhi	r8,32924
  80157c:	4214ab44 	addi	r8,r8,21165
  801580:	024fa4b4 	movhi	r9,16018
  801584:	4a5f93c4 	addi	r9,r9,32335
  801588:	480f883a 	mov	r7,r9
  80158c:	400d883a 	mov	r6,r8
  801590:	180b883a 	mov	r5,r3
  801594:	1009883a 	mov	r4,r2
  801598:	08035a80 	call	8035a8 <__subdf3>
  80159c:	180f883a 	mov	r7,r3
  8015a0:	8009883a 	mov	r4,r16
  8015a4:	880b883a 	mov	r5,r17
  8015a8:	100d883a 	mov	r6,r2
  8015ac:	080369c0 	call	80369c <__muldf3>
  8015b0:	020672f4 	movhi	r8,6603
  8015b4:	42056404 	addi	r8,r8,5520
  8015b8:	024fbeb4 	movhi	r9,16122
  8015bc:	4a406804 	addi	r9,r9,416
  8015c0:	480f883a 	mov	r7,r9
  8015c4:	400d883a 	mov	r6,r8
  8015c8:	180b883a 	mov	r5,r3
  8015cc:	1009883a 	mov	r4,r2
  8015d0:	08036280 	call	803628 <__adddf3>
  8015d4:	180f883a 	mov	r7,r3
  8015d8:	8009883a 	mov	r4,r16
  8015dc:	880b883a 	mov	r5,r17
  8015e0:	100d883a 	mov	r6,r2
  8015e4:	080369c0 	call	80369c <__muldf3>
  8015e8:	0205b074 	movhi	r8,5825
  8015ec:	42145dc4 	addi	r8,r8,20855
  8015f0:	024fd5f4 	movhi	r9,16215
  8015f4:	4a705b04 	addi	r9,r9,-16020
  8015f8:	480f883a 	mov	r7,r9
  8015fc:	400d883a 	mov	r6,r8
  801600:	180b883a 	mov	r5,r3
  801604:	1009883a 	mov	r4,r2
  801608:	08035a80 	call	8035a8 <__subdf3>
  80160c:	180f883a 	mov	r7,r3
  801610:	8009883a 	mov	r4,r16
  801614:	880b883a 	mov	r5,r17
  801618:	100d883a 	mov	r6,r2
  80161c:	080369c0 	call	80369c <__muldf3>
  801620:	02155574 	movhi	r8,21845
  801624:	42155304 	addi	r8,r8,21836
  801628:	024fe974 	movhi	r9,16293
  80162c:	4a555544 	addi	r9,r9,21845
  801630:	480f883a 	mov	r7,r9
  801634:	400d883a 	mov	r6,r8
  801638:	180b883a 	mov	r5,r3
  80163c:	1009883a 	mov	r4,r2
  801640:	08036280 	call	803628 <__adddf3>
  801644:	180f883a 	mov	r7,r3
  801648:	880b883a 	mov	r5,r17
  80164c:	8009883a 	mov	r4,r16
  801650:	100d883a 	mov	r6,r2
  801654:	080369c0 	call	80369c <__muldf3>
  801658:	1021883a 	mov	r16,r2
  80165c:	008ff4f4 	movhi	r2,16339
  801660:	108ccc84 	addi	r2,r2,13106
  801664:	1823883a 	mov	r17,r3
  801668:	15bf6f0e 	bge	r2,r22,801428 <__kernel_cos+0x1d4>
  80166c:	008ffa74 	movhi	r2,16361
  801670:	1580320e 	bge	r2,r22,80173c <__kernel_cos+0x4e8>
  801674:	0005883a 	mov	r2,zero
  801678:	010ff9f4 	movhi	r4,16359
  80167c:	002d883a 	mov	r22,zero
  801680:	d8800015 	stw	r2,0(sp)
  801684:	05cff4b4 	movhi	r23,16338
  801688:	d9000115 	stw	r4,4(sp)
  80168c:	0005883a 	mov	r2,zero
  801690:	00cff834 	movhi	r3,16352
  801694:	9009883a 	mov	r4,r18
  801698:	980b883a 	mov	r5,r19
  80169c:	180f883a 	mov	r7,r3
  8016a0:	100d883a 	mov	r6,r2
  8016a4:	080369c0 	call	80369c <__muldf3>
  8016a8:	180b883a 	mov	r5,r3
  8016ac:	b80f883a 	mov	r7,r23
  8016b0:	1009883a 	mov	r4,r2
  8016b4:	b00d883a 	mov	r6,r22
  8016b8:	08035a80 	call	8035a8 <__subdf3>
  8016bc:	980b883a 	mov	r5,r19
  8016c0:	880f883a 	mov	r7,r17
  8016c4:	9009883a 	mov	r4,r18
  8016c8:	800d883a 	mov	r6,r16
  8016cc:	1025883a 	mov	r18,r2
  8016d0:	1827883a 	mov	r19,r3
  8016d4:	080369c0 	call	80369c <__muldf3>
  8016d8:	d9c00517 	ldw	r7,20(sp)
  8016dc:	d9800417 	ldw	r6,16(sp)
  8016e0:	a80b883a 	mov	r5,r21
  8016e4:	a009883a 	mov	r4,r20
  8016e8:	1021883a 	mov	r16,r2
  8016ec:	1823883a 	mov	r17,r3
  8016f0:	080369c0 	call	80369c <__muldf3>
  8016f4:	180f883a 	mov	r7,r3
  8016f8:	880b883a 	mov	r5,r17
  8016fc:	8009883a 	mov	r4,r16
  801700:	100d883a 	mov	r6,r2
  801704:	08035a80 	call	8035a8 <__subdf3>
  801708:	180f883a 	mov	r7,r3
  80170c:	980b883a 	mov	r5,r19
  801710:	9009883a 	mov	r4,r18
  801714:	100d883a 	mov	r6,r2
  801718:	08035a80 	call	8035a8 <__subdf3>
  80171c:	d9400117 	ldw	r5,4(sp)
  801720:	d9000017 	ldw	r4,0(sp)
  801724:	180f883a 	mov	r7,r3
  801728:	100d883a 	mov	r6,r2
  80172c:	003f6306 	br	8014bc <__kernel_cos+0x268>
  801730:	000d883a 	mov	r6,zero
  801734:	01cffc34 	movhi	r7,16368
  801738:	003f6306 	br	8014c8 <__kernel_cos+0x274>
  80173c:	00bff834 	movhi	r2,65504
  801740:	b0ad883a 	add	r22,r22,r2
  801744:	dd800315 	stw	r22,12(sp)
  801748:	d9000317 	ldw	r4,12(sp)
  80174c:	0005883a 	mov	r2,zero
  801750:	00cffc34 	movhi	r3,16368
  801754:	002d883a 	mov	r22,zero
  801758:	200f883a 	mov	r7,r4
  80175c:	202f883a 	mov	r23,r4
  801760:	180b883a 	mov	r5,r3
  801764:	1009883a 	mov	r4,r2
  801768:	b00d883a 	mov	r6,r22
  80176c:	d8800215 	stw	r2,8(sp)
  801770:	08035a80 	call	8035a8 <__subdf3>
  801774:	d8800015 	stw	r2,0(sp)
  801778:	d8c00115 	stw	r3,4(sp)
  80177c:	003fc306 	br	80168c <__kernel_cos+0x438>

00801780 <__kernel_rem_pio2>:
  801780:	deff5304 	addi	sp,sp,-692
  801784:	d880ad17 	ldw	r2,692(sp)
  801788:	d9009615 	stw	r4,600(sp)
  80178c:	d9409715 	stw	r5,604(sp)
  801790:	1087883a 	add	r3,r2,r2
  801794:	18c7883a 	add	r3,r3,r3
  801798:	00802074 	movhi	r2,129
  80179c:	10bf3104 	addi	r2,r2,-828
  8017a0:	1887883a 	add	r3,r3,r2
  8017a4:	18c00017 	ldw	r3,0(r3)
  8017a8:	313fff44 	addi	r4,r6,-3
  8017ac:	01400604 	movi	r5,24
  8017b0:	df00ab15 	stw	fp,684(sp)
  8017b4:	dc00a315 	stw	r16,652(sp)
  8017b8:	d8c09515 	stw	r3,596(sp)
  8017bc:	dfc0ac15 	stw	ra,688(sp)
  8017c0:	ddc0aa15 	stw	r23,680(sp)
  8017c4:	dd80a915 	stw	r22,676(sp)
  8017c8:	dd40a815 	stw	r21,672(sp)
  8017cc:	dd00a715 	stw	r20,668(sp)
  8017d0:	dcc0a615 	stw	r19,664(sp)
  8017d4:	dc80a515 	stw	r18,660(sp)
  8017d8:	dc40a415 	stw	r17,656(sp)
  8017dc:	3021883a 	mov	r16,r6
  8017e0:	d9c09815 	stw	r7,608(sp)
  8017e4:	0803ef00 	call	803ef0 <__divsi3>
  8017e8:	d8c09817 	ldw	r3,608(sp)
  8017ec:	d8808c15 	stw	r2,560(sp)
  8017f0:	1f3fffc4 	addi	fp,r3,-1
  8017f4:	10031a16 	blt	r2,zero,802460 <__kernel_rem_pio2+0xce0>
  8017f8:	d9008c17 	ldw	r4,560(sp)
  8017fc:	017ffa04 	movi	r5,-24
  801800:	0803fc00 	call	803fc0 <__mulsi3>
  801804:	d9009517 	ldw	r4,596(sp)
  801808:	8085883a 	add	r2,r16,r2
  80180c:	10bffa04 	addi	r2,r2,-24
  801810:	2707883a 	add	r3,r4,fp
  801814:	d8809315 	stw	r2,588(sp)
  801818:	18001616 	blt	r3,zero,801874 <__kernel_rem_pio2+0xf4>
  80181c:	d9408c17 	ldw	r5,560(sp)
  801820:	d980ae17 	ldw	r6,696(sp)
  801824:	dc801404 	addi	r18,sp,80
  801828:	2f21c83a 	sub	r16,r5,fp
  80182c:	8405883a 	add	r2,r16,r16
  801830:	1085883a 	add	r2,r2,r2
  801834:	30a3883a 	add	r17,r6,r2
  801838:	80e7883a 	add	r19,r16,r3
  80183c:	00000106 	br	801844 <__kernel_rem_pio2+0xc4>
  801840:	84000044 	addi	r16,r16,1
  801844:	0009883a 	mov	r4,zero
  801848:	000b883a 	mov	r5,zero
  80184c:	80000416 	blt	r16,zero,801860 <__kernel_rem_pio2+0xe0>
  801850:	89000017 	ldw	r4,0(r17)
  801854:	0803bf80 	call	803bf8 <__floatsidf>
  801858:	1009883a 	mov	r4,r2
  80185c:	180b883a 	mov	r5,r3
  801860:	91400115 	stw	r5,4(r18)
  801864:	91000015 	stw	r4,0(r18)
  801868:	8c400104 	addi	r17,r17,4
  80186c:	94800204 	addi	r18,r18,8
  801870:	84fff31e 	bne	r16,r19,801840 <__kernel_rem_pio2+0xc0>
  801874:	d9c09517 	ldw	r7,596(sp)
  801878:	38002416 	blt	r7,zero,80190c <__kernel_rem_pio2+0x18c>
  80187c:	da809817 	ldw	r10,608(sp)
  801880:	e029883a 	mov	r20,fp
  801884:	dd406404 	addi	r21,sp,400
  801888:	3aaf883a 	add	r23,r7,r10
  80188c:	e02c403a 	cmpge	r22,fp,zero
  801890:	b0023e26 	beq	r22,zero,80218c <__kernel_rem_pio2+0xa0c>
  801894:	dcc09617 	ldw	r19,600(sp)
  801898:	0021883a 	mov	r16,zero
  80189c:	0025883a 	mov	r18,zero
  8018a0:	0023883a 	mov	r17,zero
  8018a4:	a489c83a 	sub	r4,r20,r18
  8018a8:	200890fa 	slli	r4,r4,3
  8018ac:	99800017 	ldw	r6,0(r19)
  8018b0:	99c00117 	ldw	r7,4(r19)
  8018b4:	26c9883a 	add	r4,r4,sp
  8018b8:	20c01517 	ldw	r3,84(r4)
  8018bc:	20801417 	ldw	r2,80(r4)
  8018c0:	94800044 	addi	r18,r18,1
  8018c4:	180b883a 	mov	r5,r3
  8018c8:	1009883a 	mov	r4,r2
  8018cc:	080369c0 	call	80369c <__muldf3>
  8018d0:	180f883a 	mov	r7,r3
  8018d4:	880b883a 	mov	r5,r17
  8018d8:	8009883a 	mov	r4,r16
  8018dc:	100d883a 	mov	r6,r2
  8018e0:	08036280 	call	803628 <__adddf3>
  8018e4:	1021883a 	mov	r16,r2
  8018e8:	d8809817 	ldw	r2,608(sp)
  8018ec:	9cc00204 	addi	r19,r19,8
  8018f0:	1823883a 	mov	r17,r3
  8018f4:	14bfeb1e 	bne	r2,r18,8018a4 <__kernel_rem_pio2+0x124>
  8018f8:	a5000044 	addi	r20,r20,1
  8018fc:	ac400115 	stw	r17,4(r21)
  801900:	ac000015 	stw	r16,0(r21)
  801904:	ad400204 	addi	r21,r21,8
  801908:	a5ffe11e 	bne	r20,r23,801890 <__kernel_rem_pio2+0x110>
  80190c:	d8c09517 	ldw	r3,596(sp)
  801910:	d9409317 	ldw	r5,588(sp)
  801914:	e038403a 	cmpge	fp,fp,zero
  801918:	d8c08d15 	stw	r3,564(sp)
  80191c:	d9008d17 	ldw	r4,564(sp)
  801920:	18c5883a 	add	r2,r3,r3
  801924:	10c7883a 	add	r3,r2,r3
  801928:	1907883a 	add	r3,r3,r4
  80192c:	1085883a 	add	r2,r2,r2
  801930:	16c5883a 	add	r2,r2,sp
  801934:	1ec7883a 	add	r3,r3,sp
  801938:	29400050 	cmplti	r5,r5,1
  80193c:	df00a215 	stw	fp,648(sp)
  801940:	d8809915 	stw	r2,612(sp)
  801944:	d8c0a115 	stw	r3,644(sp)
  801948:	d940a015 	stw	r5,640(sp)
  80194c:	d9808d17 	ldw	r6,564(sp)
  801950:	300490fa 	slli	r2,r6,3
  801954:	16c5883a 	add	r2,r2,sp
  801958:	15006417 	ldw	r20,400(r2)
  80195c:	15406517 	ldw	r21,404(r2)
  801960:	01802e0e 	bge	zero,r6,801a1c <__kernel_rem_pio2+0x29c>
  801964:	102d883a 	mov	r22,r2
  801968:	302f883a 	mov	r23,r6
  80196c:	d839883a 	mov	fp,sp
  801970:	0005883a 	mov	r2,zero
  801974:	00cf9c34 	movhi	r3,15984
  801978:	180f883a 	mov	r7,r3
  80197c:	100d883a 	mov	r6,r2
  801980:	a009883a 	mov	r4,r20
  801984:	a80b883a 	mov	r5,r21
  801988:	080369c0 	call	80369c <__muldf3>
  80198c:	180b883a 	mov	r5,r3
  801990:	1009883a 	mov	r4,r2
  801994:	0803cf00 	call	803cf0 <__fixdfsi>
  801998:	1009883a 	mov	r4,r2
  80199c:	0803bf80 	call	803bf8 <__floatsidf>
  8019a0:	1021883a 	mov	r16,r2
  8019a4:	1823883a 	mov	r17,r3
  8019a8:	0005883a 	mov	r2,zero
  8019ac:	00f05c34 	movhi	r3,49520
  8019b0:	180f883a 	mov	r7,r3
  8019b4:	8009883a 	mov	r4,r16
  8019b8:	880b883a 	mov	r5,r17
  8019bc:	100d883a 	mov	r6,r2
  8019c0:	080369c0 	call	80369c <__muldf3>
  8019c4:	180b883a 	mov	r5,r3
  8019c8:	a80f883a 	mov	r7,r21
  8019cc:	a00d883a 	mov	r6,r20
  8019d0:	1009883a 	mov	r4,r2
  8019d4:	08036280 	call	803628 <__adddf3>
  8019d8:	180b883a 	mov	r5,r3
  8019dc:	1009883a 	mov	r4,r2
  8019e0:	0803cf00 	call	803cf0 <__fixdfsi>
  8019e4:	e0800015 	stw	r2,0(fp)
  8019e8:	b5bffe04 	addi	r22,r22,-8
  8019ec:	b0806417 	ldw	r2,400(r22)
  8019f0:	b0c06517 	ldw	r3,404(r22)
  8019f4:	8009883a 	mov	r4,r16
  8019f8:	880b883a 	mov	r5,r17
  8019fc:	180f883a 	mov	r7,r3
  801a00:	100d883a 	mov	r6,r2
  801a04:	08036280 	call	803628 <__adddf3>
  801a08:	bdffffc4 	addi	r23,r23,-1
  801a0c:	e7000104 	addi	fp,fp,4
  801a10:	1029883a 	mov	r20,r2
  801a14:	182b883a 	mov	r21,r3
  801a18:	b83fd51e 	bne	r23,zero,801970 <__kernel_rem_pio2+0x1f0>
  801a1c:	d9809317 	ldw	r6,588(sp)
  801a20:	a80b883a 	mov	r5,r21
  801a24:	a009883a 	mov	r4,r20
  801a28:	08029340 	call	802934 <scalbn>
  801a2c:	0009883a 	mov	r4,zero
  801a30:	014ff034 	movhi	r5,16320
  801a34:	280f883a 	mov	r7,r5
  801a38:	200d883a 	mov	r6,r4
  801a3c:	180b883a 	mov	r5,r3
  801a40:	1009883a 	mov	r4,r2
  801a44:	1021883a 	mov	r16,r2
  801a48:	1823883a 	mov	r17,r3
  801a4c:	080369c0 	call	80369c <__muldf3>
  801a50:	180b883a 	mov	r5,r3
  801a54:	1009883a 	mov	r4,r2
  801a58:	08008080 	call	800808 <floor>
  801a5c:	0011883a 	mov	r8,zero
  801a60:	02700834 	movhi	r9,49184
  801a64:	480f883a 	mov	r7,r9
  801a68:	400d883a 	mov	r6,r8
  801a6c:	180b883a 	mov	r5,r3
  801a70:	1009883a 	mov	r4,r2
  801a74:	080369c0 	call	80369c <__muldf3>
  801a78:	180f883a 	mov	r7,r3
  801a7c:	100d883a 	mov	r6,r2
  801a80:	880b883a 	mov	r5,r17
  801a84:	8009883a 	mov	r4,r16
  801a88:	08036280 	call	803628 <__adddf3>
  801a8c:	180b883a 	mov	r5,r3
  801a90:	1009883a 	mov	r4,r2
  801a94:	1823883a 	mov	r17,r3
  801a98:	1021883a 	mov	r16,r2
  801a9c:	0803cf00 	call	803cf0 <__fixdfsi>
  801aa0:	1009883a 	mov	r4,r2
  801aa4:	d8809415 	stw	r2,592(sp)
  801aa8:	0803bf80 	call	803bf8 <__floatsidf>
  801aac:	880b883a 	mov	r5,r17
  801ab0:	8009883a 	mov	r4,r16
  801ab4:	180f883a 	mov	r7,r3
  801ab8:	100d883a 	mov	r6,r2
  801abc:	08035a80 	call	8035a8 <__subdf3>
  801ac0:	d9c0a017 	ldw	r7,640(sp)
  801ac4:	180d883a 	mov	r6,r3
  801ac8:	1021883a 	mov	r16,r2
  801acc:	1823883a 	mov	r17,r3
  801ad0:	38017d1e 	bne	r7,zero,8020c8 <__kernel_rem_pio2+0x948>
  801ad4:	da808d17 	ldw	r10,564(sp)
  801ad8:	d9009317 	ldw	r4,588(sp)
  801adc:	00c00604 	movi	r3,24
  801ae0:	50bfffc4 	addi	r2,r10,-1
  801ae4:	1085883a 	add	r2,r2,r2
  801ae8:	1085883a 	add	r2,r2,r2
  801aec:	16c5883a 	add	r2,r2,sp
  801af0:	11400017 	ldw	r5,0(r2)
  801af4:	1907c83a 	sub	r3,r3,r4
  801af8:	d9c09317 	ldw	r7,588(sp)
  801afc:	28cdd83a 	sra	r6,r5,r3
  801b00:	010005c4 	movi	r4,23
  801b04:	da809417 	ldw	r10,592(sp)
  801b08:	30c6983a 	sll	r3,r6,r3
  801b0c:	21c9c83a 	sub	r4,r4,r7
  801b10:	5195883a 	add	r10,r10,r6
  801b14:	28cbc83a 	sub	r5,r5,r3
  801b18:	2909d83a 	sra	r4,r5,r4
  801b1c:	da809415 	stw	r10,592(sp)
  801b20:	11400015 	stw	r5,0(r2)
  801b24:	d9009215 	stw	r4,584(sp)
  801b28:	d9409217 	ldw	r5,584(sp)
  801b2c:	0140270e 	bge	zero,r5,801bcc <__kernel_rem_pio2+0x44c>
  801b30:	d9809417 	ldw	r6,592(sp)
  801b34:	d9c08d17 	ldw	r7,564(sp)
  801b38:	31800044 	addi	r6,r6,1
  801b3c:	d9809415 	stw	r6,592(sp)
  801b40:	01c1a50e 	bge	zero,r7,8021d8 <__kernel_rem_pio2+0xa58>
  801b44:	002d883a 	mov	r22,zero
  801b48:	000b883a 	mov	r5,zero
  801b4c:	d809883a 	mov	r4,sp
  801b50:	01c04034 	movhi	r7,256
  801b54:	01804034 	movhi	r6,256
  801b58:	31bfffc4 	addi	r6,r6,-1
  801b5c:	00000806 	br	801b80 <__kernel_rem_pio2+0x400>
  801b60:	38c5c83a 	sub	r2,r7,r3
  801b64:	18000226 	beq	r3,zero,801b70 <__kernel_rem_pio2+0x3f0>
  801b68:	05800044 	movi	r22,1
  801b6c:	20800015 	stw	r2,0(r4)
  801b70:	da808d17 	ldw	r10,564(sp)
  801b74:	29400044 	addi	r5,r5,1
  801b78:	21000104 	addi	r4,r4,4
  801b7c:	51400926 	beq	r10,r5,801ba4 <__kernel_rem_pio2+0x424>
  801b80:	b004c03a 	cmpne	r2,r22,zero
  801b84:	20c00017 	ldw	r3,0(r4)
  801b88:	103ff526 	beq	r2,zero,801b60 <__kernel_rem_pio2+0x3e0>
  801b8c:	da808d17 	ldw	r10,564(sp)
  801b90:	30c5c83a 	sub	r2,r6,r3
  801b94:	29400044 	addi	r5,r5,1
  801b98:	20800015 	stw	r2,0(r4)
  801b9c:	21000104 	addi	r4,r4,4
  801ba0:	517ff71e 	bne	r10,r5,801b80 <__kernel_rem_pio2+0x400>
  801ba4:	d880a017 	ldw	r2,640(sp)
  801ba8:	1000051e 	bne	r2,zero,801bc0 <__kernel_rem_pio2+0x440>
  801bac:	d8c09317 	ldw	r3,588(sp)
  801bb0:	00800044 	movi	r2,1
  801bb4:	18814e26 	beq	r3,r2,8020f0 <__kernel_rem_pio2+0x970>
  801bb8:	00800084 	movi	r2,2
  801bbc:	18815826 	beq	r3,r2,802120 <__kernel_rem_pio2+0x9a0>
  801bc0:	d9c09217 	ldw	r7,584(sp)
  801bc4:	00800084 	movi	r2,2
  801bc8:	38806926 	beq	r7,r2,801d70 <__kernel_rem_pio2+0x5f0>
  801bcc:	000d883a 	mov	r6,zero
  801bd0:	000f883a 	mov	r7,zero
  801bd4:	8009883a 	mov	r4,r16
  801bd8:	880b883a 	mov	r5,r17
  801bdc:	0803a600 	call	803a60 <__eqdf2>
  801be0:	1000811e 	bne	r2,zero,801de8 <__kernel_rem_pio2+0x668>
  801be4:	da808d17 	ldw	r10,564(sp)
  801be8:	d8809517 	ldw	r2,596(sp)
  801bec:	51bfffc4 	addi	r6,r10,-1
  801bf0:	30800c16 	blt	r6,r2,801c24 <__kernel_rem_pio2+0x4a4>
  801bf4:	3185883a 	add	r2,r6,r6
  801bf8:	1085883a 	add	r2,r2,r2
  801bfc:	16c9883a 	add	r4,r2,sp
  801c00:	3007883a 	mov	r3,r6
  801c04:	000b883a 	mov	r5,zero
  801c08:	20800017 	ldw	r2,0(r4)
  801c0c:	d9c09517 	ldw	r7,596(sp)
  801c10:	18ffffc4 	addi	r3,r3,-1
  801c14:	213fff04 	addi	r4,r4,-4
  801c18:	288ab03a 	or	r5,r5,r2
  801c1c:	19fffa0e 	bge	r3,r7,801c08 <__kernel_rem_pio2+0x488>
  801c20:	2800791e 	bne	r5,zero,801e08 <__kernel_rem_pio2+0x688>
  801c24:	da809917 	ldw	r10,612(sp)
  801c28:	50bfff17 	ldw	r2,-4(r10)
  801c2c:	1001511e 	bne	r2,zero,802174 <__kernel_rem_pio2+0x9f4>
  801c30:	d880a117 	ldw	r2,644(sp)
  801c34:	01000044 	movi	r4,1
  801c38:	10ffff04 	addi	r3,r2,-4
  801c3c:	18ffff04 	addi	r3,r3,-4
  801c40:	18800017 	ldw	r2,0(r3)
  801c44:	21000044 	addi	r4,r4,1
  801c48:	103ffc26 	beq	r2,zero,801c3c <__kernel_rem_pio2+0x4bc>
  801c4c:	d8c08d17 	ldw	r3,564(sp)
  801c50:	192f883a 	add	r23,r3,r4
  801c54:	1f000044 	addi	fp,r3,1
  801c58:	bf00020e 	bge	r23,fp,801c64 <__kernel_rem_pio2+0x4e4>
  801c5c:	ddc08d15 	stw	r23,564(sp)
  801c60:	003f3a06 	br	80194c <__kernel_rem_pio2+0x1cc>
  801c64:	d9408c17 	ldw	r5,560(sp)
  801c68:	d9009817 	ldw	r4,608(sp)
  801c6c:	da80ae17 	ldw	r10,696(sp)
  801c70:	1945883a 	add	r2,r3,r5
  801c74:	190f883a 	add	r7,r3,r4
  801c78:	1085883a 	add	r2,r2,r2
  801c7c:	380a90fa 	slli	r5,r7,3
  801c80:	e00c90fa 	slli	r6,fp,3
  801c84:	1085883a 	add	r2,r2,r2
  801c88:	5085883a 	add	r2,r10,r2
  801c8c:	d8c01404 	addi	r3,sp,80
  801c90:	d9006404 	addi	r4,sp,400
  801c94:	10800104 	addi	r2,r2,4
  801c98:	196b883a 	add	r21,r3,r5
  801c9c:	21a1883a 	add	r16,r4,r6
  801ca0:	d8809115 	stw	r2,580(sp)
  801ca4:	d9c09015 	stw	r7,576(sp)
  801ca8:	d8809117 	ldw	r2,580(sp)
  801cac:	11000017 	ldw	r4,0(r2)
  801cb0:	0803bf80 	call	803bf8 <__floatsidf>
  801cb4:	a8c00115 	stw	r3,4(r21)
  801cb8:	d8c0a217 	ldw	r3,648(sp)
  801cbc:	a8800015 	stw	r2,0(r21)
  801cc0:	18002826 	beq	r3,zero,801d64 <__kernel_rem_pio2+0x5e4>
  801cc4:	d9009017 	ldw	r4,576(sp)
  801cc8:	dd009617 	ldw	r20,600(sp)
  801ccc:	0023883a 	mov	r17,zero
  801cd0:	200490fa 	slli	r2,r4,3
  801cd4:	002d883a 	mov	r22,zero
  801cd8:	0025883a 	mov	r18,zero
  801cdc:	16e7883a 	add	r19,r2,sp
  801ce0:	98801417 	ldw	r2,80(r19)
  801ce4:	98c01517 	ldw	r3,84(r19)
  801ce8:	a1800017 	ldw	r6,0(r20)
  801cec:	a1c00117 	ldw	r7,4(r20)
  801cf0:	180b883a 	mov	r5,r3
  801cf4:	1009883a 	mov	r4,r2
  801cf8:	080369c0 	call	80369c <__muldf3>
  801cfc:	180f883a 	mov	r7,r3
  801d00:	900b883a 	mov	r5,r18
  801d04:	8809883a 	mov	r4,r17
  801d08:	100d883a 	mov	r6,r2
  801d0c:	08036280 	call	803628 <__adddf3>
  801d10:	d9409817 	ldw	r5,608(sp)
  801d14:	b5800044 	addi	r22,r22,1
  801d18:	9cfffe04 	addi	r19,r19,-8
  801d1c:	1023883a 	mov	r17,r2
  801d20:	1825883a 	mov	r18,r3
  801d24:	a5000204 	addi	r20,r20,8
  801d28:	2dbfed1e 	bne	r5,r22,801ce0 <__kernel_rem_pio2+0x560>
  801d2c:	d9809117 	ldw	r6,580(sp)
  801d30:	d9c09017 	ldw	r7,576(sp)
  801d34:	e7000044 	addi	fp,fp,1
  801d38:	31800104 	addi	r6,r6,4
  801d3c:	39c00044 	addi	r7,r7,1
  801d40:	84800115 	stw	r18,4(r16)
  801d44:	84400015 	stw	r17,0(r16)
  801d48:	d9809115 	stw	r6,580(sp)
  801d4c:	ad400204 	addi	r21,r21,8
  801d50:	84000204 	addi	r16,r16,8
  801d54:	d9c09015 	stw	r7,576(sp)
  801d58:	bf3fd30e 	bge	r23,fp,801ca8 <__kernel_rem_pio2+0x528>
  801d5c:	ddc08d15 	stw	r23,564(sp)
  801d60:	003efa06 	br	80194c <__kernel_rem_pio2+0x1cc>
  801d64:	0023883a 	mov	r17,zero
  801d68:	0025883a 	mov	r18,zero
  801d6c:	003fef06 	br	801d2c <__kernel_rem_pio2+0x5ac>
  801d70:	0029883a 	mov	r20,zero
  801d74:	054ffc34 	movhi	r21,16368
  801d78:	880f883a 	mov	r7,r17
  801d7c:	800d883a 	mov	r6,r16
  801d80:	a009883a 	mov	r4,r20
  801d84:	a80b883a 	mov	r5,r21
  801d88:	08035a80 	call	8035a8 <__subdf3>
  801d8c:	1025883a 	mov	r18,r2
  801d90:	b005003a 	cmpeq	r2,r22,zero
  801d94:	1827883a 	mov	r19,r3
  801d98:	9021883a 	mov	r16,r18
  801d9c:	1823883a 	mov	r17,r3
  801da0:	103f8a1e 	bne	r2,zero,801bcc <__kernel_rem_pio2+0x44c>
  801da4:	d9809317 	ldw	r6,588(sp)
  801da8:	0009883a 	mov	r4,zero
  801dac:	a80b883a 	mov	r5,r21
  801db0:	08029340 	call	802934 <scalbn>
  801db4:	180f883a 	mov	r7,r3
  801db8:	9009883a 	mov	r4,r18
  801dbc:	980b883a 	mov	r5,r19
  801dc0:	100d883a 	mov	r6,r2
  801dc4:	08035a80 	call	8035a8 <__subdf3>
  801dc8:	1021883a 	mov	r16,r2
  801dcc:	1823883a 	mov	r17,r3
  801dd0:	000d883a 	mov	r6,zero
  801dd4:	000f883a 	mov	r7,zero
  801dd8:	8009883a 	mov	r4,r16
  801ddc:	880b883a 	mov	r5,r17
  801de0:	0803a600 	call	803a60 <__eqdf2>
  801de4:	103f7f26 	beq	r2,zero,801be4 <__kernel_rem_pio2+0x464>
  801de8:	000d883a 	mov	r6,zero
  801dec:	000f883a 	mov	r7,zero
  801df0:	8009883a 	mov	r4,r16
  801df4:	880b883a 	mov	r5,r17
  801df8:	0803a600 	call	803a60 <__eqdf2>
  801dfc:	10019a1e 	bne	r2,zero,802468 <__kernel_rem_pio2+0xce8>
  801e00:	da808d17 	ldw	r10,564(sp)
  801e04:	51bfffc4 	addi	r6,r10,-1
  801e08:	3185883a 	add	r2,r6,r6
  801e0c:	1085883a 	add	r2,r2,r2
  801e10:	d9009317 	ldw	r4,588(sp)
  801e14:	16c5883a 	add	r2,r2,sp
  801e18:	10c00017 	ldw	r3,0(r2)
  801e1c:	213ffa04 	addi	r4,r4,-24
  801e20:	d9009315 	stw	r4,588(sp)
  801e24:	1801d41e 	bne	r3,zero,802578 <__kernel_rem_pio2+0xdf8>
  801e28:	d9808d15 	stw	r6,564(sp)
  801e2c:	1007883a 	mov	r3,r2
  801e30:	d9408d17 	ldw	r5,564(sp)
  801e34:	d9809317 	ldw	r6,588(sp)
  801e38:	18ffff04 	addi	r3,r3,-4
  801e3c:	18800017 	ldw	r2,0(r3)
  801e40:	297fffc4 	addi	r5,r5,-1
  801e44:	31bffa04 	addi	r6,r6,-24
  801e48:	d9408d15 	stw	r5,564(sp)
  801e4c:	d9809315 	stw	r6,588(sp)
  801e50:	103ff726 	beq	r2,zero,801e30 <__kernel_rem_pio2+0x6b0>
  801e54:	d9809317 	ldw	r6,588(sp)
  801e58:	0005883a 	mov	r2,zero
  801e5c:	00cffc34 	movhi	r3,16368
  801e60:	180b883a 	mov	r5,r3
  801e64:	1009883a 	mov	r4,r2
  801e68:	08029340 	call	802934 <scalbn>
  801e6c:	d9808d17 	ldw	r6,564(sp)
  801e70:	1021883a 	mov	r16,r2
  801e74:	1823883a 	mov	r17,r3
  801e78:	30004616 	blt	r6,zero,801f94 <__kernel_rem_pio2+0x814>
  801e7c:	300690fa 	slli	r3,r6,3
  801e80:	3185883a 	add	r2,r6,r6
  801e84:	1085883a 	add	r2,r2,r2
  801e88:	16e9883a 	add	r20,r2,sp
  801e8c:	1ee5883a 	add	r18,r3,sp
  801e90:	3027883a 	mov	r19,r6
  801e94:	057fffc4 	movi	r21,-1
  801e98:	a1000017 	ldw	r4,0(r20)
  801e9c:	9cffffc4 	addi	r19,r19,-1
  801ea0:	a53fff04 	addi	r20,r20,-4
  801ea4:	0803bf80 	call	803bf8 <__floatsidf>
  801ea8:	800d883a 	mov	r6,r16
  801eac:	880f883a 	mov	r7,r17
  801eb0:	180b883a 	mov	r5,r3
  801eb4:	1009883a 	mov	r4,r2
  801eb8:	080369c0 	call	80369c <__muldf3>
  801ebc:	0015883a 	mov	r10,zero
  801ec0:	02cf9c34 	movhi	r11,15984
  801ec4:	880b883a 	mov	r5,r17
  801ec8:	8009883a 	mov	r4,r16
  801ecc:	90c06515 	stw	r3,404(r18)
  801ed0:	90806415 	stw	r2,400(r18)
  801ed4:	580f883a 	mov	r7,r11
  801ed8:	500d883a 	mov	r6,r10
  801edc:	080369c0 	call	80369c <__muldf3>
  801ee0:	1021883a 	mov	r16,r2
  801ee4:	1823883a 	mov	r17,r3
  801ee8:	94bffe04 	addi	r18,r18,-8
  801eec:	9d7fea1e 	bne	r19,r21,801e98 <__kernel_rem_pio2+0x718>
  801ef0:	d9c09517 	ldw	r7,596(sp)
  801ef4:	dd808d17 	ldw	r22,564(sp)
  801ef8:	002b883a 	mov	r21,zero
  801efc:	382e403a 	cmpge	r23,r7,zero
  801f00:	b800aa26 	beq	r23,zero,8021ac <__kernel_rem_pio2+0xa2c>
  801f04:	a800a916 	blt	r21,zero,8021ac <__kernel_rem_pio2+0xa2c>
  801f08:	b00690fa 	slli	r3,r22,3
  801f0c:	d8806404 	addi	r2,sp,400
  801f10:	0021883a 	mov	r16,zero
  801f14:	10e9883a 	add	r20,r2,r3
  801f18:	0027883a 	mov	r19,zero
  801f1c:	0023883a 	mov	r17,zero
  801f20:	04802074 	movhi	r18,129
  801f24:	94bf3504 	addi	r18,r18,-812
  801f28:	00000106 	br	801f30 <__kernel_rem_pio2+0x7b0>
  801f2c:	acc01116 	blt	r21,r19,801f74 <__kernel_rem_pio2+0x7f4>
  801f30:	91000017 	ldw	r4,0(r18)
  801f34:	91400117 	ldw	r5,4(r18)
  801f38:	a1800017 	ldw	r6,0(r20)
  801f3c:	a1c00117 	ldw	r7,4(r20)
  801f40:	9cc00044 	addi	r19,r19,1
  801f44:	94800204 	addi	r18,r18,8
  801f48:	080369c0 	call	80369c <__muldf3>
  801f4c:	180f883a 	mov	r7,r3
  801f50:	880b883a 	mov	r5,r17
  801f54:	8009883a 	mov	r4,r16
  801f58:	100d883a 	mov	r6,r2
  801f5c:	08036280 	call	803628 <__adddf3>
  801f60:	da809517 	ldw	r10,596(sp)
  801f64:	a5000204 	addi	r20,r20,8
  801f68:	1021883a 	mov	r16,r2
  801f6c:	1823883a 	mov	r17,r3
  801f70:	54ffee0e 	bge	r10,r19,801f2c <__kernel_rem_pio2+0x7ac>
  801f74:	a80490fa 	slli	r2,r21,3
  801f78:	b5bfffc4 	addi	r22,r22,-1
  801f7c:	ad400044 	addi	r21,r21,1
  801f80:	16c5883a 	add	r2,r2,sp
  801f84:	14403d15 	stw	r17,244(r2)
  801f88:	14003c15 	stw	r16,240(r2)
  801f8c:	00bfffc4 	movi	r2,-1
  801f90:	b0bfdb1e 	bne	r22,r2,801f00 <__kernel_rem_pio2+0x780>
  801f94:	d8c0ad17 	ldw	r3,692(sp)
  801f98:	00800084 	movi	r2,2
  801f9c:	10c09316 	blt	r2,r3,8021ec <__kernel_rem_pio2+0xa6c>
  801fa0:	00c1120e 	bge	zero,r3,8023ec <__kernel_rem_pio2+0xc6c>
  801fa4:	d9808d17 	ldw	r6,564(sp)
  801fa8:	30018d16 	blt	r6,zero,8025e0 <__kernel_rem_pio2+0xe60>
  801fac:	d8c08d17 	ldw	r3,564(sp)
  801fb0:	0011883a 	mov	r8,zero
  801fb4:	0013883a 	mov	r9,zero
  801fb8:	180490fa 	slli	r2,r3,3
  801fbc:	1823883a 	mov	r17,r3
  801fc0:	04bfffc4 	movi	r18,-1
  801fc4:	16e1883a 	add	r16,r2,sp
  801fc8:	80803c17 	ldw	r2,240(r16)
  801fcc:	80c03d17 	ldw	r3,244(r16)
  801fd0:	480b883a 	mov	r5,r9
  801fd4:	4009883a 	mov	r4,r8
  801fd8:	180f883a 	mov	r7,r3
  801fdc:	100d883a 	mov	r6,r2
  801fe0:	08036280 	call	803628 <__adddf3>
  801fe4:	8c7fffc4 	addi	r17,r17,-1
  801fe8:	843ffe04 	addi	r16,r16,-8
  801fec:	1011883a 	mov	r8,r2
  801ff0:	1813883a 	mov	r9,r3
  801ff4:	8cbff41e 	bne	r17,r18,801fc8 <__kernel_rem_pio2+0x848>
  801ff8:	d9009217 	ldw	r4,584(sp)
  801ffc:	20015b1e 	bne	r4,zero,80256c <__kernel_rem_pio2+0xdec>
  802000:	4009883a 	mov	r4,r8
  802004:	480b883a 	mov	r5,r9
  802008:	d9809717 	ldw	r6,604(sp)
  80200c:	d8803c17 	ldw	r2,240(sp)
  802010:	480f883a 	mov	r7,r9
  802014:	31400115 	stw	r5,4(r6)
  802018:	31000015 	stw	r4,0(r6)
  80201c:	d8c03d17 	ldw	r3,244(sp)
  802020:	400d883a 	mov	r6,r8
  802024:	1009883a 	mov	r4,r2
  802028:	180b883a 	mov	r5,r3
  80202c:	08035a80 	call	8035a8 <__subdf3>
  802030:	d9c08d17 	ldw	r7,564(sp)
  802034:	1011883a 	mov	r8,r2
  802038:	1813883a 	mov	r9,r3
  80203c:	01c00d0e 	bge	zero,r7,802074 <__kernel_rem_pio2+0x8f4>
  802040:	0023883a 	mov	r17,zero
  802044:	dc003e04 	addi	r16,sp,248
  802048:	81800017 	ldw	r6,0(r16)
  80204c:	81c00117 	ldw	r7,4(r16)
  802050:	480b883a 	mov	r5,r9
  802054:	4009883a 	mov	r4,r8
  802058:	08036280 	call	803628 <__adddf3>
  80205c:	da808d17 	ldw	r10,564(sp)
  802060:	8c400044 	addi	r17,r17,1
  802064:	1011883a 	mov	r8,r2
  802068:	1813883a 	mov	r9,r3
  80206c:	84000204 	addi	r16,r16,8
  802070:	8abff51e 	bne	r17,r10,802048 <__kernel_rem_pio2+0x8c8>
  802074:	d8809217 	ldw	r2,584(sp)
  802078:	10000226 	beq	r2,zero,802084 <__kernel_rem_pio2+0x904>
  80207c:	48e0003c 	xorhi	r3,r9,32768
  802080:	1813883a 	mov	r9,r3
  802084:	d8c09717 	ldw	r3,604(sp)
  802088:	1a400315 	stw	r9,12(r3)
  80208c:	1a000215 	stw	r8,8(r3)
  802090:	d8c09417 	ldw	r3,592(sp)
  802094:	188001cc 	andi	r2,r3,7
  802098:	dfc0ac17 	ldw	ra,688(sp)
  80209c:	df00ab17 	ldw	fp,684(sp)
  8020a0:	ddc0aa17 	ldw	r23,680(sp)
  8020a4:	dd80a917 	ldw	r22,676(sp)
  8020a8:	dd40a817 	ldw	r21,672(sp)
  8020ac:	dd00a717 	ldw	r20,668(sp)
  8020b0:	dcc0a617 	ldw	r19,664(sp)
  8020b4:	dc80a517 	ldw	r18,660(sp)
  8020b8:	dc40a417 	ldw	r17,656(sp)
  8020bc:	dc00a317 	ldw	r16,652(sp)
  8020c0:	dec0ad04 	addi	sp,sp,692
  8020c4:	f800283a 	ret
  8020c8:	d8809317 	ldw	r2,588(sp)
  8020cc:	10001f1e 	bne	r2,zero,80214c <__kernel_rem_pio2+0x9cc>
  8020d0:	d8c08d17 	ldw	r3,564(sp)
  8020d4:	18c5883a 	add	r2,r3,r3
  8020d8:	1085883a 	add	r2,r2,r2
  8020dc:	16c5883a 	add	r2,r2,sp
  8020e0:	10ffff17 	ldw	r3,-4(r2)
  8020e4:	1807d5fa 	srai	r3,r3,23
  8020e8:	d8c09215 	stw	r3,584(sp)
  8020ec:	003e8e06 	br	801b28 <__kernel_rem_pio2+0x3a8>
  8020f0:	d9008d17 	ldw	r4,564(sp)
  8020f4:	d9409317 	ldw	r5,588(sp)
  8020f8:	2145c83a 	sub	r2,r4,r5
  8020fc:	1085883a 	add	r2,r2,r2
  802100:	1085883a 	add	r2,r2,r2
  802104:	16c5883a 	add	r2,r2,sp
  802108:	10c00017 	ldw	r3,0(r2)
  80210c:	01002034 	movhi	r4,128
  802110:	213fffc4 	addi	r4,r4,-1
  802114:	1906703a 	and	r3,r3,r4
  802118:	10c00015 	stw	r3,0(r2)
  80211c:	003ea806 	br	801bc0 <__kernel_rem_pio2+0x440>
  802120:	d9808d17 	ldw	r6,564(sp)
  802124:	01001034 	movhi	r4,64
  802128:	213fffc4 	addi	r4,r4,-1
  80212c:	30bfffc4 	addi	r2,r6,-1
  802130:	1085883a 	add	r2,r2,r2
  802134:	1085883a 	add	r2,r2,r2
  802138:	16c5883a 	add	r2,r2,sp
  80213c:	10c00017 	ldw	r3,0(r2)
  802140:	1906703a 	and	r3,r3,r4
  802144:	10c00015 	stw	r3,0(r2)
  802148:	003e9d06 	br	801bc0 <__kernel_rem_pio2+0x440>
  80214c:	0005883a 	mov	r2,zero
  802150:	00cff834 	movhi	r3,16352
  802154:	300b883a 	mov	r5,r6
  802158:	180f883a 	mov	r7,r3
  80215c:	8009883a 	mov	r4,r16
  802160:	100d883a 	mov	r6,r2
  802164:	0803b700 	call	803b70 <__gedf2>
  802168:	10001d0e 	bge	r2,zero,8021e0 <__kernel_rem_pio2+0xa60>
  80216c:	d8009215 	stw	zero,584(sp)
  802170:	003e9606 	br	801bcc <__kernel_rem_pio2+0x44c>
  802174:	d8c08d17 	ldw	r3,564(sp)
  802178:	01000044 	movi	r4,1
  80217c:	192f883a 	add	r23,r3,r4
  802180:	1f000044 	addi	fp,r3,1
  802184:	bf3eb516 	blt	r23,fp,801c5c <__kernel_rem_pio2+0x4dc>
  802188:	003eb606 	br	801c64 <__kernel_rem_pio2+0x4e4>
  80218c:	0021883a 	mov	r16,zero
  802190:	0023883a 	mov	r17,zero
  802194:	a5000044 	addi	r20,r20,1
  802198:	ac400115 	stw	r17,4(r21)
  80219c:	ac000015 	stw	r16,0(r21)
  8021a0:	ad400204 	addi	r21,r21,8
  8021a4:	a5fdba1e 	bne	r20,r23,801890 <__kernel_rem_pio2+0x110>
  8021a8:	003dd806 	br	80190c <__kernel_rem_pio2+0x18c>
  8021ac:	a80490fa 	slli	r2,r21,3
  8021b0:	0021883a 	mov	r16,zero
  8021b4:	0023883a 	mov	r17,zero
  8021b8:	16c5883a 	add	r2,r2,sp
  8021bc:	14403d15 	stw	r17,244(r2)
  8021c0:	14003c15 	stw	r16,240(r2)
  8021c4:	b5bfffc4 	addi	r22,r22,-1
  8021c8:	00bfffc4 	movi	r2,-1
  8021cc:	ad400044 	addi	r21,r21,1
  8021d0:	b0bf4b1e 	bne	r22,r2,801f00 <__kernel_rem_pio2+0x780>
  8021d4:	003f6f06 	br	801f94 <__kernel_rem_pio2+0x814>
  8021d8:	002d883a 	mov	r22,zero
  8021dc:	003e7106 	br	801ba4 <__kernel_rem_pio2+0x424>
  8021e0:	01000084 	movi	r4,2
  8021e4:	d9009215 	stw	r4,584(sp)
  8021e8:	003e5106 	br	801b30 <__kernel_rem_pio2+0x3b0>
  8021ec:	d900ad17 	ldw	r4,692(sp)
  8021f0:	008000c4 	movi	r2,3
  8021f4:	20bfa61e 	bne	r4,r2,802090 <__kernel_rem_pio2+0x910>
  8021f8:	d9c08d17 	ldw	r7,564(sp)
  8021fc:	01c02c0e 	bge	zero,r7,8022b0 <__kernel_rem_pio2+0xb30>
  802200:	3805883a 	mov	r2,r7
  802204:	00000106 	br	80220c <__kernel_rem_pio2+0xa8c>
  802208:	d8808e17 	ldw	r2,568(sp)
  80220c:	113fffc4 	addi	r4,r2,-1
  802210:	100690fa 	slli	r3,r2,3
  802214:	200490fa 	slli	r2,r4,3
  802218:	d9008e15 	stw	r4,568(sp)
  80221c:	1ef9883a 	add	fp,r3,sp
  802220:	16c5883a 	add	r2,r2,sp
  802224:	d8809a15 	stw	r2,616(sp)
  802228:	11403c04 	addi	r5,r2,240
  80222c:	e1803c04 	addi	r6,fp,240
  802230:	14003c17 	ldw	r16,240(r2)
  802234:	e5003c17 	ldw	r20,240(fp)
  802238:	d9409b15 	stw	r5,620(sp)
  80223c:	d9809c15 	stw	r6,624(sp)
  802240:	35400117 	ldw	r21,4(r6)
  802244:	2c400117 	ldw	r17,4(r5)
  802248:	8009883a 	mov	r4,r16
  80224c:	a00d883a 	mov	r6,r20
  802250:	880b883a 	mov	r5,r17
  802254:	a80f883a 	mov	r7,r21
  802258:	08036280 	call	803628 <__adddf3>
  80225c:	100d883a 	mov	r6,r2
  802260:	880b883a 	mov	r5,r17
  802264:	8009883a 	mov	r4,r16
  802268:	180f883a 	mov	r7,r3
  80226c:	1025883a 	mov	r18,r2
  802270:	1827883a 	mov	r19,r3
  802274:	08035a80 	call	8035a8 <__subdf3>
  802278:	180f883a 	mov	r7,r3
  80227c:	a80b883a 	mov	r5,r21
  802280:	a009883a 	mov	r4,r20
  802284:	100d883a 	mov	r6,r2
  802288:	08036280 	call	803628 <__adddf3>
  80228c:	e0803c15 	stw	r2,240(fp)
  802290:	d9c09c17 	ldw	r7,624(sp)
  802294:	38c00115 	stw	r3,4(r7)
  802298:	da809a17 	ldw	r10,616(sp)
  80229c:	54803c15 	stw	r18,240(r10)
  8022a0:	d8809b17 	ldw	r2,620(sp)
  8022a4:	14c00115 	stw	r19,4(r2)
  8022a8:	d8c08e17 	ldw	r3,568(sp)
  8022ac:	183fd61e 	bne	r3,zero,802208 <__kernel_rem_pio2+0xa88>
  8022b0:	d9008d17 	ldw	r4,564(sp)
  8022b4:	00800044 	movi	r2,1
  8022b8:	1100cc0e 	bge	r2,r4,8025ec <__kernel_rem_pio2+0xe6c>
  8022bc:	d8808d17 	ldw	r2,564(sp)
  8022c0:	117fffc4 	addi	r5,r2,-1
  8022c4:	100690fa 	slli	r3,r2,3
  8022c8:	280490fa 	slli	r2,r5,3
  8022cc:	d9408f15 	stw	r5,572(sp)
  8022d0:	1ef9883a 	add	fp,r3,sp
  8022d4:	16c5883a 	add	r2,r2,sp
  8022d8:	d8809d15 	stw	r2,628(sp)
  8022dc:	11803c04 	addi	r6,r2,240
  8022e0:	e1c03c04 	addi	r7,fp,240
  8022e4:	14003c17 	ldw	r16,240(r2)
  8022e8:	e5003c17 	ldw	r20,240(fp)
  8022ec:	d9809e15 	stw	r6,632(sp)
  8022f0:	d9c09f15 	stw	r7,636(sp)
  8022f4:	34400117 	ldw	r17,4(r6)
  8022f8:	3d400117 	ldw	r21,4(r7)
  8022fc:	8009883a 	mov	r4,r16
  802300:	880b883a 	mov	r5,r17
  802304:	a00d883a 	mov	r6,r20
  802308:	a80f883a 	mov	r7,r21
  80230c:	08036280 	call	803628 <__adddf3>
  802310:	100d883a 	mov	r6,r2
  802314:	880b883a 	mov	r5,r17
  802318:	8009883a 	mov	r4,r16
  80231c:	180f883a 	mov	r7,r3
  802320:	1025883a 	mov	r18,r2
  802324:	1827883a 	mov	r19,r3
  802328:	08035a80 	call	8035a8 <__subdf3>
  80232c:	180f883a 	mov	r7,r3
  802330:	a80b883a 	mov	r5,r21
  802334:	a009883a 	mov	r4,r20
  802338:	100d883a 	mov	r6,r2
  80233c:	08036280 	call	803628 <__adddf3>
  802340:	e0803c15 	stw	r2,240(fp)
  802344:	da809f17 	ldw	r10,636(sp)
  802348:	50c00115 	stw	r3,4(r10)
  80234c:	d8c09d17 	ldw	r3,628(sp)
  802350:	d8808f17 	ldw	r2,572(sp)
  802354:	1c803c15 	stw	r18,240(r3)
  802358:	d9009e17 	ldw	r4,632(sp)
  80235c:	00c00044 	movi	r3,1
  802360:	24c00115 	stw	r19,4(r4)
  802364:	d9408f17 	ldw	r5,572(sp)
  802368:	28ffd51e 	bne	r5,r3,8022c0 <__kernel_rem_pio2+0xb40>
  80236c:	dc008d17 	ldw	r16,564(sp)
  802370:	0011883a 	mov	r8,zero
  802374:	1825883a 	mov	r18,r3
  802378:	800490fa 	slli	r2,r16,3
  80237c:	0013883a 	mov	r9,zero
  802380:	16e3883a 	add	r17,r2,sp
  802384:	88803c17 	ldw	r2,240(r17)
  802388:	88c03d17 	ldw	r3,244(r17)
  80238c:	480b883a 	mov	r5,r9
  802390:	4009883a 	mov	r4,r8
  802394:	180f883a 	mov	r7,r3
  802398:	100d883a 	mov	r6,r2
  80239c:	08036280 	call	803628 <__adddf3>
  8023a0:	843fffc4 	addi	r16,r16,-1
  8023a4:	8c7ffe04 	addi	r17,r17,-8
  8023a8:	1011883a 	mov	r8,r2
  8023ac:	1813883a 	mov	r9,r3
  8023b0:	84bff41e 	bne	r16,r18,802384 <__kernel_rem_pio2+0xc04>
  8023b4:	d9809217 	ldw	r6,584(sp)
  8023b8:	30007a1e 	bne	r6,zero,8025a4 <__kernel_rem_pio2+0xe24>
  8023bc:	d9c09717 	ldw	r7,604(sp)
  8023c0:	d8803c17 	ldw	r2,240(sp)
  8023c4:	d9003e17 	ldw	r4,248(sp)
  8023c8:	3a400515 	stw	r9,20(r7)
  8023cc:	d8c03d17 	ldw	r3,244(sp)
  8023d0:	d9403f17 	ldw	r5,252(sp)
  8023d4:	3a000415 	stw	r8,16(r7)
  8023d8:	38c00115 	stw	r3,4(r7)
  8023dc:	39400315 	stw	r5,12(r7)
  8023e0:	38800015 	stw	r2,0(r7)
  8023e4:	39000215 	stw	r4,8(r7)
  8023e8:	003f2906 	br	802090 <__kernel_rem_pio2+0x910>
  8023ec:	183f281e 	bne	r3,zero,802090 <__kernel_rem_pio2+0x910>
  8023f0:	d9408d17 	ldw	r5,564(sp)
  8023f4:	28008016 	blt	r5,zero,8025f8 <__kernel_rem_pio2+0xe78>
  8023f8:	dc008d17 	ldw	r16,564(sp)
  8023fc:	000d883a 	mov	r6,zero
  802400:	000f883a 	mov	r7,zero
  802404:	800490fa 	slli	r2,r16,3
  802408:	04bfffc4 	movi	r18,-1
  80240c:	16e3883a 	add	r17,r2,sp
  802410:	88803c17 	ldw	r2,240(r17)
  802414:	88c03d17 	ldw	r3,244(r17)
  802418:	380b883a 	mov	r5,r7
  80241c:	3009883a 	mov	r4,r6
  802420:	180f883a 	mov	r7,r3
  802424:	100d883a 	mov	r6,r2
  802428:	08036280 	call	803628 <__adddf3>
  80242c:	843fffc4 	addi	r16,r16,-1
  802430:	8c7ffe04 	addi	r17,r17,-8
  802434:	100d883a 	mov	r6,r2
  802438:	180f883a 	mov	r7,r3
  80243c:	84bff41e 	bne	r16,r18,802410 <__kernel_rem_pio2+0xc90>
  802440:	da809217 	ldw	r10,584(sp)
  802444:	50000226 	beq	r10,zero,802450 <__kernel_rem_pio2+0xcd0>
  802448:	38e0003c 	xorhi	r3,r7,32768
  80244c:	180f883a 	mov	r7,r3
  802450:	d8809717 	ldw	r2,604(sp)
  802454:	11c00115 	stw	r7,4(r2)
  802458:	11800015 	stw	r6,0(r2)
  80245c:	003f0c06 	br	802090 <__kernel_rem_pio2+0x910>
  802460:	d8008c15 	stw	zero,560(sp)
  802464:	003ce406 	br	8017f8 <__kernel_rem_pio2+0x78>
  802468:	d9c09317 	ldw	r7,588(sp)
  80246c:	880b883a 	mov	r5,r17
  802470:	8009883a 	mov	r4,r16
  802474:	01cdc83a 	sub	r6,zero,r7
  802478:	08029340 	call	802934 <scalbn>
  80247c:	0011883a 	mov	r8,zero
  802480:	02505c34 	movhi	r9,16752
  802484:	480f883a 	mov	r7,r9
  802488:	1009883a 	mov	r4,r2
  80248c:	180b883a 	mov	r5,r3
  802490:	400d883a 	mov	r6,r8
  802494:	102d883a 	mov	r22,r2
  802498:	182f883a 	mov	r23,r3
  80249c:	0803b700 	call	803b70 <__gedf2>
  8024a0:	10003716 	blt	r2,zero,802580 <__kernel_rem_pio2+0xe00>
  8024a4:	0005883a 	mov	r2,zero
  8024a8:	00cf9c34 	movhi	r3,15984
  8024ac:	180f883a 	mov	r7,r3
  8024b0:	100d883a 	mov	r6,r2
  8024b4:	b009883a 	mov	r4,r22
  8024b8:	b80b883a 	mov	r5,r23
  8024bc:	080369c0 	call	80369c <__muldf3>
  8024c0:	180b883a 	mov	r5,r3
  8024c4:	1009883a 	mov	r4,r2
  8024c8:	0803cf00 	call	803cf0 <__fixdfsi>
  8024cc:	1009883a 	mov	r4,r2
  8024d0:	0803bf80 	call	803bf8 <__floatsidf>
  8024d4:	da808d17 	ldw	r10,564(sp)
  8024d8:	1023883a 	mov	r17,r2
  8024dc:	1825883a 	mov	r18,r3
  8024e0:	0005883a 	mov	r2,zero
  8024e4:	00f05c34 	movhi	r3,49520
  8024e8:	180f883a 	mov	r7,r3
  8024ec:	8809883a 	mov	r4,r17
  8024f0:	900b883a 	mov	r5,r18
  8024f4:	100d883a 	mov	r6,r2
  8024f8:	52ab883a 	add	r21,r10,r10
  8024fc:	080369c0 	call	80369c <__muldf3>
  802500:	180f883a 	mov	r7,r3
  802504:	b80b883a 	mov	r5,r23
  802508:	100d883a 	mov	r6,r2
  80250c:	b009883a 	mov	r4,r22
  802510:	08036280 	call	803628 <__adddf3>
  802514:	100d883a 	mov	r6,r2
  802518:	d8808d17 	ldw	r2,564(sp)
  80251c:	180b883a 	mov	r5,r3
  802520:	3009883a 	mov	r4,r6
  802524:	10800044 	addi	r2,r2,1
  802528:	ad6b883a 	add	r21,r21,r21
  80252c:	d8808d15 	stw	r2,564(sp)
  802530:	0803cf00 	call	803cf0 <__fixdfsi>
  802534:	d8c08d17 	ldw	r3,564(sp)
  802538:	aeeb883a 	add	r21,r21,sp
  80253c:	8809883a 	mov	r4,r17
  802540:	900b883a 	mov	r5,r18
  802544:	a8800015 	stw	r2,0(r21)
  802548:	18e1883a 	add	r16,r3,r3
  80254c:	0803cf00 	call	803cf0 <__fixdfsi>
  802550:	d9009317 	ldw	r4,588(sp)
  802554:	8421883a 	add	r16,r16,r16
  802558:	86e1883a 	add	r16,r16,sp
  80255c:	21000604 	addi	r4,r4,24
  802560:	d9009315 	stw	r4,588(sp)
  802564:	80800015 	stw	r2,0(r16)
  802568:	003e3a06 	br	801e54 <__kernel_rem_pio2+0x6d4>
  80256c:	4009883a 	mov	r4,r8
  802570:	4960003c 	xorhi	r5,r9,32768
  802574:	003ea406 	br	802008 <__kernel_rem_pio2+0x888>
  802578:	d9808d15 	stw	r6,564(sp)
  80257c:	003e3506 	br	801e54 <__kernel_rem_pio2+0x6d4>
  802580:	d9408d17 	ldw	r5,564(sp)
  802584:	b009883a 	mov	r4,r22
  802588:	2961883a 	add	r16,r5,r5
  80258c:	8421883a 	add	r16,r16,r16
  802590:	b80b883a 	mov	r5,r23
  802594:	86e1883a 	add	r16,r16,sp
  802598:	0803cf00 	call	803cf0 <__fixdfsi>
  80259c:	80800015 	stw	r2,0(r16)
  8025a0:	003e2c06 	br	801e54 <__kernel_rem_pio2+0x6d4>
  8025a4:	d8c03d17 	ldw	r3,244(sp)
  8025a8:	d9403f17 	ldw	r5,252(sp)
  8025ac:	da809717 	ldw	r10,604(sp)
  8025b0:	d8803c17 	ldw	r2,240(sp)
  8025b4:	d9003e17 	ldw	r4,248(sp)
  8025b8:	49e0003c 	xorhi	r7,r9,32768
  8025bc:	51c00515 	stw	r7,20(r10)
  8025c0:	19a0003c 	xorhi	r6,r3,32768
  8025c4:	29e0003c 	xorhi	r7,r5,32768
  8025c8:	51800115 	stw	r6,4(r10)
  8025cc:	51c00315 	stw	r7,12(r10)
  8025d0:	50800015 	stw	r2,0(r10)
  8025d4:	51000215 	stw	r4,8(r10)
  8025d8:	52000415 	stw	r8,16(r10)
  8025dc:	003eac06 	br	802090 <__kernel_rem_pio2+0x910>
  8025e0:	0011883a 	mov	r8,zero
  8025e4:	0013883a 	mov	r9,zero
  8025e8:	003e8306 	br	801ff8 <__kernel_rem_pio2+0x878>
  8025ec:	0011883a 	mov	r8,zero
  8025f0:	0013883a 	mov	r9,zero
  8025f4:	003f6f06 	br	8023b4 <__kernel_rem_pio2+0xc34>
  8025f8:	000d883a 	mov	r6,zero
  8025fc:	000f883a 	mov	r7,zero
  802600:	003f8f06 	br	802440 <__kernel_rem_pio2+0xcc0>

00802604 <__kernel_sin>:
  802604:	00a00034 	movhi	r2,32768
  802608:	10bfffc4 	addi	r2,r2,-1
  80260c:	deffef04 	addi	sp,sp,-68
  802610:	1144703a 	and	r2,r2,r5
  802614:	00cf9034 	movhi	r3,15936
  802618:	18ffffc4 	addi	r3,r3,-1
  80261c:	dd400d15 	stw	r21,52(sp)
  802620:	dd000c15 	stw	r20,48(sp)
  802624:	dfc01015 	stw	ra,64(sp)
  802628:	ddc00f15 	stw	r23,60(sp)
  80262c:	dd800e15 	stw	r22,56(sp)
  802630:	dcc00b15 	stw	r19,44(sp)
  802634:	dc800a15 	stw	r18,40(sp)
  802638:	dc400915 	stw	r17,36(sp)
  80263c:	dc000815 	stw	r16,32(sp)
  802640:	2029883a 	mov	r20,r4
  802644:	282b883a 	mov	r21,r5
  802648:	d9800415 	stw	r6,16(sp)
  80264c:	d9c00515 	stw	r7,20(sp)
  802650:	18800216 	blt	r3,r2,80265c <__kernel_sin+0x58>
  802654:	0803cf00 	call	803cf0 <__fixdfsi>
  802658:	10008826 	beq	r2,zero,80287c <__kernel_sin+0x278>
  80265c:	a009883a 	mov	r4,r20
  802660:	a80b883a 	mov	r5,r21
  802664:	a00d883a 	mov	r6,r20
  802668:	a80f883a 	mov	r7,r21
  80266c:	080369c0 	call	80369c <__muldf3>
  802670:	102d883a 	mov	r22,r2
  802674:	a009883a 	mov	r4,r20
  802678:	a80b883a 	mov	r5,r21
  80267c:	b00d883a 	mov	r6,r22
  802680:	180f883a 	mov	r7,r3
  802684:	182f883a 	mov	r23,r3
  802688:	d8800215 	stw	r2,8(sp)
  80268c:	d8c00315 	stw	r3,12(sp)
  802690:	080369c0 	call	80369c <__muldf3>
  802694:	d9000217 	ldw	r4,8(sp)
  802698:	0216b434 	movhi	r8,23248
  80269c:	42355f04 	addi	r8,r8,-10884
  8026a0:	024f79b4 	movhi	r9,15846
  8026a4:	4a764e84 	addi	r9,r9,-9926
  8026a8:	480f883a 	mov	r7,r9
  8026ac:	400d883a 	mov	r6,r8
  8026b0:	b80b883a 	mov	r5,r23
  8026b4:	d8800615 	stw	r2,24(sp)
  8026b8:	d8c00715 	stw	r3,28(sp)
  8026bc:	080369c0 	call	80369c <__muldf3>
  8026c0:	02228b34 	movhi	r8,35372
  8026c4:	42273ac4 	addi	r8,r8,-25365
  8026c8:	024f96f4 	movhi	r9,15963
  8026cc:	4a797984 	addi	r9,r9,-6682
  8026d0:	480f883a 	mov	r7,r9
  8026d4:	400d883a 	mov	r6,r8
  8026d8:	180b883a 	mov	r5,r3
  8026dc:	1009883a 	mov	r4,r2
  8026e0:	08035a80 	call	8035a8 <__subdf3>
  8026e4:	d9000217 	ldw	r4,8(sp)
  8026e8:	180f883a 	mov	r7,r3
  8026ec:	b80b883a 	mov	r5,r23
  8026f0:	100d883a 	mov	r6,r2
  8026f4:	080369c0 	call	80369c <__muldf3>
  8026f8:	0215ecb4 	movhi	r8,22450
  8026fc:	423f9f44 	addi	r8,r8,-387
  802700:	024fb1f4 	movhi	r9,16071
  802704:	4a4778c4 	addi	r9,r9,7651
  802708:	480f883a 	mov	r7,r9
  80270c:	400d883a 	mov	r6,r8
  802710:	180b883a 	mov	r5,r3
  802714:	1009883a 	mov	r4,r2
  802718:	08036280 	call	803628 <__adddf3>
  80271c:	d9000217 	ldw	r4,8(sp)
  802720:	180f883a 	mov	r7,r3
  802724:	b80b883a 	mov	r5,r23
  802728:	100d883a 	mov	r6,r2
  80272c:	080369c0 	call	80369c <__muldf3>
  802730:	02067074 	movhi	r8,6593
  802734:	42187544 	addi	r8,r8,25045
  802738:	024fcab4 	movhi	r9,16170
  80273c:	4a406804 	addi	r9,r9,416
  802740:	480f883a 	mov	r7,r9
  802744:	400d883a 	mov	r6,r8
  802748:	180b883a 	mov	r5,r3
  80274c:	1009883a 	mov	r4,r2
  802750:	08035a80 	call	8035a8 <__subdf3>
  802754:	d9000217 	ldw	r4,8(sp)
  802758:	180f883a 	mov	r7,r3
  80275c:	b80b883a 	mov	r5,r23
  802760:	100d883a 	mov	r6,r2
  802764:	080369c0 	call	80369c <__muldf3>
  802768:	02044474 	movhi	r8,4369
  80276c:	423e2984 	addi	r8,r8,-1882
  802770:	024fe074 	movhi	r9,16257
  802774:	4a444444 	addi	r9,r9,4369
  802778:	180b883a 	mov	r5,r3
  80277c:	480f883a 	mov	r7,r9
  802780:	1009883a 	mov	r4,r2
  802784:	400d883a 	mov	r6,r8
  802788:	08036280 	call	803628 <__adddf3>
  80278c:	1021883a 	mov	r16,r2
  802790:	d8800617 	ldw	r2,24(sp)
  802794:	1823883a 	mov	r17,r3
  802798:	d8800015 	stw	r2,0(sp)
  80279c:	d8800717 	ldw	r2,28(sp)
  8027a0:	d8800115 	stw	r2,4(sp)
  8027a4:	d8801117 	ldw	r2,68(sp)
  8027a8:	10004126 	beq	r2,zero,8028b0 <__kernel_sin+0x2ac>
  8027ac:	d9000417 	ldw	r4,16(sp)
  8027b0:	d9400517 	ldw	r5,20(sp)
  8027b4:	0005883a 	mov	r2,zero
  8027b8:	00cff834 	movhi	r3,16352
  8027bc:	180f883a 	mov	r7,r3
  8027c0:	100d883a 	mov	r6,r2
  8027c4:	080369c0 	call	80369c <__muldf3>
  8027c8:	d9000017 	ldw	r4,0(sp)
  8027cc:	d9400717 	ldw	r5,28(sp)
  8027d0:	800d883a 	mov	r6,r16
  8027d4:	880f883a 	mov	r7,r17
  8027d8:	1021883a 	mov	r16,r2
  8027dc:	1823883a 	mov	r17,r3
  8027e0:	080369c0 	call	80369c <__muldf3>
  8027e4:	180f883a 	mov	r7,r3
  8027e8:	880b883a 	mov	r5,r17
  8027ec:	8009883a 	mov	r4,r16
  8027f0:	100d883a 	mov	r6,r2
  8027f4:	08035a80 	call	8035a8 <__subdf3>
  8027f8:	d9000217 	ldw	r4,8(sp)
  8027fc:	b80b883a 	mov	r5,r23
  802800:	180f883a 	mov	r7,r3
  802804:	100d883a 	mov	r6,r2
  802808:	080369c0 	call	80369c <__muldf3>
  80280c:	d9c00517 	ldw	r7,20(sp)
  802810:	d9800417 	ldw	r6,16(sp)
  802814:	180b883a 	mov	r5,r3
  802818:	1009883a 	mov	r4,r2
  80281c:	08035a80 	call	8035a8 <__subdf3>
  802820:	d9000017 	ldw	r4,0(sp)
  802824:	d9400717 	ldw	r5,28(sp)
  802828:	02155574 	movhi	r8,21845
  80282c:	42155244 	addi	r8,r8,21833
  802830:	024ff174 	movhi	r9,16325
  802834:	4a555544 	addi	r9,r9,21845
  802838:	480f883a 	mov	r7,r9
  80283c:	400d883a 	mov	r6,r8
  802840:	1021883a 	mov	r16,r2
  802844:	1823883a 	mov	r17,r3
  802848:	080369c0 	call	80369c <__muldf3>
  80284c:	180f883a 	mov	r7,r3
  802850:	880b883a 	mov	r5,r17
  802854:	8009883a 	mov	r4,r16
  802858:	100d883a 	mov	r6,r2
  80285c:	08036280 	call	803628 <__adddf3>
  802860:	180f883a 	mov	r7,r3
  802864:	a80b883a 	mov	r5,r21
  802868:	a009883a 	mov	r4,r20
  80286c:	100d883a 	mov	r6,r2
  802870:	08035a80 	call	8035a8 <__subdf3>
  802874:	1029883a 	mov	r20,r2
  802878:	182b883a 	mov	r21,r3
  80287c:	a005883a 	mov	r2,r20
  802880:	a807883a 	mov	r3,r21
  802884:	dfc01017 	ldw	ra,64(sp)
  802888:	ddc00f17 	ldw	r23,60(sp)
  80288c:	dd800e17 	ldw	r22,56(sp)
  802890:	dd400d17 	ldw	r21,52(sp)
  802894:	dd000c17 	ldw	r20,48(sp)
  802898:	dcc00b17 	ldw	r19,44(sp)
  80289c:	dc800a17 	ldw	r18,40(sp)
  8028a0:	dc400917 	ldw	r17,36(sp)
  8028a4:	dc000817 	ldw	r16,32(sp)
  8028a8:	dec01104 	addi	sp,sp,68
  8028ac:	f800283a 	ret
  8028b0:	d9000217 	ldw	r4,8(sp)
  8028b4:	b80b883a 	mov	r5,r23
  8028b8:	800d883a 	mov	r6,r16
  8028bc:	180f883a 	mov	r7,r3
  8028c0:	080369c0 	call	80369c <__muldf3>
  8028c4:	02155574 	movhi	r8,21845
  8028c8:	42155244 	addi	r8,r8,21833
  8028cc:	024ff174 	movhi	r9,16325
  8028d0:	4a555544 	addi	r9,r9,21845
  8028d4:	480f883a 	mov	r7,r9
  8028d8:	400d883a 	mov	r6,r8
  8028dc:	180b883a 	mov	r5,r3
  8028e0:	1009883a 	mov	r4,r2
  8028e4:	08035a80 	call	8035a8 <__subdf3>
  8028e8:	d9000017 	ldw	r4,0(sp)
  8028ec:	d9400717 	ldw	r5,28(sp)
  8028f0:	180f883a 	mov	r7,r3
  8028f4:	100d883a 	mov	r6,r2
  8028f8:	080369c0 	call	80369c <__muldf3>
  8028fc:	180f883a 	mov	r7,r3
  802900:	a80b883a 	mov	r5,r21
  802904:	a009883a 	mov	r4,r20
  802908:	100d883a 	mov	r6,r2
  80290c:	08036280 	call	803628 <__adddf3>
  802910:	1029883a 	mov	r20,r2
  802914:	182b883a 	mov	r21,r3
  802918:	003fd806 	br	80287c <__kernel_sin+0x278>

0080291c <fabs>:
  80291c:	01e00034 	movhi	r7,32768
  802920:	39ffffc4 	addi	r7,r7,-1
  802924:	394e703a 	and	r7,r7,r5
  802928:	2005883a 	mov	r2,r4
  80292c:	3807883a 	mov	r3,r7
  802930:	f800283a 	ret

00802934 <scalbn>:
  802934:	2011883a 	mov	r8,r4
  802938:	291ffc2c 	andhi	r4,r5,32752
  80293c:	2009d53a 	srai	r4,r4,20
  802940:	defffd04 	addi	sp,sp,-12
  802944:	dc000015 	stw	r16,0(sp)
  802948:	dfc00215 	stw	ra,8(sp)
  80294c:	dc400115 	stw	r17,4(sp)
  802950:	2813883a 	mov	r9,r5
  802954:	2815883a 	mov	r10,r5
  802958:	3021883a 	mov	r16,r6
  80295c:	2000281e 	bne	r4,zero,802a00 <scalbn+0xcc>
  802960:	00a00034 	movhi	r2,32768
  802964:	10bfffc4 	addi	r2,r2,-1
  802968:	2884703a 	and	r2,r5,r2
  80296c:	4084b03a 	or	r2,r8,r2
  802970:	10001826 	beq	r2,zero,8029d4 <scalbn+0xa0>
  802974:	0005883a 	mov	r2,zero
  802978:	00d0d434 	movhi	r3,17232
  80297c:	4009883a 	mov	r4,r8
  802980:	100d883a 	mov	r6,r2
  802984:	180f883a 	mov	r7,r3
  802988:	080369c0 	call	80369c <__muldf3>
  80298c:	100b883a 	mov	r5,r2
  802990:	1011883a 	mov	r8,r2
  802994:	00bffff4 	movhi	r2,65535
  802998:	108f2c04 	addi	r2,r2,15536
  80299c:	180d883a 	mov	r6,r3
  8029a0:	1813883a 	mov	r9,r3
  8029a4:	8080120e 	bge	r16,r2,8029f0 <scalbn+0xbc>
  8029a8:	00b0be74 	movhi	r2,49913
  8029ac:	10bcd644 	addi	r2,r2,-3239
  8029b0:	00c06974 	movhi	r3,421
  8029b4:	18db87c4 	addi	r3,r3,28191
  8029b8:	2809883a 	mov	r4,r5
  8029bc:	180f883a 	mov	r7,r3
  8029c0:	300b883a 	mov	r5,r6
  8029c4:	100d883a 	mov	r6,r2
  8029c8:	080369c0 	call	80369c <__muldf3>
  8029cc:	1011883a 	mov	r8,r2
  8029d0:	1813883a 	mov	r9,r3
  8029d4:	4005883a 	mov	r2,r8
  8029d8:	4807883a 	mov	r3,r9
  8029dc:	dfc00217 	ldw	ra,8(sp)
  8029e0:	dc400117 	ldw	r17,4(sp)
  8029e4:	dc000017 	ldw	r16,0(sp)
  8029e8:	dec00304 	addi	sp,sp,12
  8029ec:	f800283a 	ret
  8029f0:	189ffc2c 	andhi	r2,r3,32752
  8029f4:	1005d53a 	srai	r2,r2,20
  8029f8:	1815883a 	mov	r10,r3
  8029fc:	113ff284 	addi	r4,r2,-54
  802a00:	0081ffc4 	movi	r2,2047
  802a04:	20801126 	beq	r4,r2,802a4c <scalbn+0x118>
  802a08:	2409883a 	add	r4,r4,r16
  802a0c:	0081ff84 	movi	r2,2046
  802a10:	11001c16 	blt	r2,r4,802a84 <scalbn+0x150>
  802a14:	0100290e 	bge	zero,r4,802abc <scalbn+0x188>
  802a18:	200a953a 	slli	r5,r4,20
  802a1c:	01200434 	movhi	r4,32784
  802a20:	213fffc4 	addi	r4,r4,-1
  802a24:	5108703a 	and	r4,r10,r4
  802a28:	2148b03a 	or	r4,r4,r5
  802a2c:	2013883a 	mov	r9,r4
  802a30:	4005883a 	mov	r2,r8
  802a34:	4807883a 	mov	r3,r9
  802a38:	dfc00217 	ldw	ra,8(sp)
  802a3c:	dc400117 	ldw	r17,4(sp)
  802a40:	dc000017 	ldw	r16,0(sp)
  802a44:	dec00304 	addi	sp,sp,12
  802a48:	f800283a 	ret
  802a4c:	480f883a 	mov	r7,r9
  802a50:	4009883a 	mov	r4,r8
  802a54:	480b883a 	mov	r5,r9
  802a58:	400d883a 	mov	r6,r8
  802a5c:	08036280 	call	803628 <__adddf3>
  802a60:	1011883a 	mov	r8,r2
  802a64:	1813883a 	mov	r9,r3
  802a68:	4005883a 	mov	r2,r8
  802a6c:	4807883a 	mov	r3,r9
  802a70:	dfc00217 	ldw	ra,8(sp)
  802a74:	dc400117 	ldw	r17,4(sp)
  802a78:	dc000017 	ldw	r16,0(sp)
  802a7c:	dec00304 	addi	sp,sp,12
  802a80:	f800283a 	ret
  802a84:	04220034 	movhi	r16,34816
  802a88:	841d6704 	addi	r16,r16,30108
  802a8c:	045f8e34 	movhi	r17,32312
  802a90:	8c790f04 	addi	r17,r17,-7108
  802a94:	480f883a 	mov	r7,r9
  802a98:	400d883a 	mov	r6,r8
  802a9c:	8009883a 	mov	r4,r16
  802aa0:	880b883a 	mov	r5,r17
  802aa4:	0802b140 	call	802b14 <copysign>
  802aa8:	180b883a 	mov	r5,r3
  802aac:	800d883a 	mov	r6,r16
  802ab0:	880f883a 	mov	r7,r17
  802ab4:	1009883a 	mov	r4,r2
  802ab8:	003fc306 	br	8029c8 <scalbn+0x94>
  802abc:	00bff284 	movi	r2,-54
  802ac0:	11000716 	blt	r2,r4,802ae0 <scalbn+0x1ac>
  802ac4:	00b0d414 	movui	r2,50000
  802ac8:	143fee16 	blt	r2,r16,802a84 <scalbn+0x150>
  802acc:	0430be74 	movhi	r16,49913
  802ad0:	843cd644 	addi	r16,r16,-3239
  802ad4:	04406974 	movhi	r17,421
  802ad8:	8c5b87c4 	addi	r17,r17,28191
  802adc:	003fed06 	br	802a94 <scalbn+0x160>
  802ae0:	21000d84 	addi	r4,r4,54
  802ae4:	2008953a 	slli	r4,r4,20
  802ae8:	01e00434 	movhi	r7,32784
  802aec:	39ffffc4 	addi	r7,r7,-1
  802af0:	51ce703a 	and	r7,r10,r7
  802af4:	390eb03a 	or	r7,r7,r4
  802af8:	024f2434 	movhi	r9,15504
  802afc:	4009883a 	mov	r4,r8
  802b00:	0011883a 	mov	r8,zero
  802b04:	380b883a 	mov	r5,r7
  802b08:	400d883a 	mov	r6,r8
  802b0c:	480f883a 	mov	r7,r9
  802b10:	003fad06 	br	8029c8 <scalbn+0x94>

00802b14 <copysign>:
  802b14:	3813883a 	mov	r9,r7
  802b18:	01e00034 	movhi	r7,32768
  802b1c:	39ffffc4 	addi	r7,r7,-1
  802b20:	394e703a 	and	r7,r7,r5
  802b24:	4aa0002c 	andhi	r10,r9,32768
  802b28:	3a8eb03a 	or	r7,r7,r10
  802b2c:	2005883a 	mov	r2,r4
  802b30:	3807883a 	mov	r3,r7
  802b34:	f800283a 	ret

00802b38 <_fpadd_parts>:
  802b38:	21c00017 	ldw	r7,0(r4)
  802b3c:	02000044 	movi	r8,1
  802b40:	41c0332e 	bgeu	r8,r7,802c10 <_fpadd_parts+0xd8>
  802b44:	28800017 	ldw	r2,0(r5)
  802b48:	4080462e 	bgeu	r8,r2,802c64 <_fpadd_parts+0x12c>
  802b4c:	00c00104 	movi	r3,4
  802b50:	38c06b26 	beq	r7,r3,802d00 <_fpadd_parts+0x1c8>
  802b54:	10c04326 	beq	r2,r3,802c64 <_fpadd_parts+0x12c>
  802b58:	00c00084 	movi	r3,2
  802b5c:	10c02e26 	beq	r2,r3,802c18 <_fpadd_parts+0xe0>
  802b60:	38c04026 	beq	r7,r3,802c64 <_fpadd_parts+0x12c>
  802b64:	22800217 	ldw	r10,8(r4)
  802b68:	28c00217 	ldw	r3,8(r5)
  802b6c:	23000317 	ldw	r12,12(r4)
  802b70:	2a400317 	ldw	r9,12(r5)
  802b74:	50cfc83a 	sub	r7,r10,r3
  802b78:	3817883a 	mov	r11,r7
  802b7c:	38004f16 	blt	r7,zero,802cbc <_fpadd_parts+0x184>
  802b80:	008007c4 	movi	r2,31
  802b84:	11c03316 	blt	r2,r7,802c54 <_fpadd_parts+0x11c>
  802b88:	02c0540e 	bge	zero,r11,802cdc <_fpadd_parts+0x1a4>
  802b8c:	41c4983a 	sll	r2,r8,r7
  802b90:	49c6d83a 	srl	r3,r9,r7
  802b94:	10bfffc4 	addi	r2,r2,-1
  802b98:	4884703a 	and	r2,r9,r2
  802b9c:	1004c03a 	cmpne	r2,r2,zero
  802ba0:	1892b03a 	or	r9,r3,r2
  802ba4:	20c00117 	ldw	r3,4(r4)
  802ba8:	28800117 	ldw	r2,4(r5)
  802bac:	18803c26 	beq	r3,r2,802ca0 <_fpadd_parts+0x168>
  802bb0:	18002f26 	beq	r3,zero,802c70 <_fpadd_parts+0x138>
  802bb4:	4b05c83a 	sub	r2,r9,r12
  802bb8:	10004216 	blt	r2,zero,802cc4 <_fpadd_parts+0x18c>
  802bbc:	32800215 	stw	r10,8(r6)
  802bc0:	30800315 	stw	r2,12(r6)
  802bc4:	30000115 	stw	zero,4(r6)
  802bc8:	31000317 	ldw	r4,12(r6)
  802bcc:	01d00034 	movhi	r7,16384
  802bd0:	39ffff84 	addi	r7,r7,-2
  802bd4:	20bfffc4 	addi	r2,r4,-1
  802bd8:	2007883a 	mov	r3,r4
  802bdc:	38800836 	bltu	r7,r2,802c00 <_fpadd_parts+0xc8>
  802be0:	31400217 	ldw	r5,8(r6)
  802be4:	18c9883a 	add	r4,r3,r3
  802be8:	20bfffc4 	addi	r2,r4,-1
  802bec:	297fffc4 	addi	r5,r5,-1
  802bf0:	2007883a 	mov	r3,r4
  802bf4:	38bffb2e 	bgeu	r7,r2,802be4 <_fpadd_parts+0xac>
  802bf8:	31400215 	stw	r5,8(r6)
  802bfc:	31000315 	stw	r4,12(r6)
  802c00:	008000c4 	movi	r2,3
  802c04:	30800015 	stw	r2,0(r6)
  802c08:	20001b16 	blt	r4,zero,802c78 <_fpadd_parts+0x140>
  802c0c:	3009883a 	mov	r4,r6
  802c10:	2005883a 	mov	r2,r4
  802c14:	f800283a 	ret
  802c18:	38fffd1e 	bne	r7,r3,802c10 <_fpadd_parts+0xd8>
  802c1c:	31c00015 	stw	r7,0(r6)
  802c20:	20800117 	ldw	r2,4(r4)
  802c24:	30800115 	stw	r2,4(r6)
  802c28:	20c00217 	ldw	r3,8(r4)
  802c2c:	30c00215 	stw	r3,8(r6)
  802c30:	20800317 	ldw	r2,12(r4)
  802c34:	30800315 	stw	r2,12(r6)
  802c38:	20c00117 	ldw	r3,4(r4)
  802c3c:	28800117 	ldw	r2,4(r5)
  802c40:	3009883a 	mov	r4,r6
  802c44:	1886703a 	and	r3,r3,r2
  802c48:	2005883a 	mov	r2,r4
  802c4c:	30c00115 	stw	r3,4(r6)
  802c50:	f800283a 	ret
  802c54:	1a801716 	blt	r3,r10,802cb4 <_fpadd_parts+0x17c>
  802c58:	1815883a 	mov	r10,r3
  802c5c:	0019883a 	mov	r12,zero
  802c60:	003fd006 	br	802ba4 <_fpadd_parts+0x6c>
  802c64:	2809883a 	mov	r4,r5
  802c68:	2005883a 	mov	r2,r4
  802c6c:	f800283a 	ret
  802c70:	6245c83a 	sub	r2,r12,r9
  802c74:	003fd006 	br	802bb8 <_fpadd_parts+0x80>
  802c78:	30800217 	ldw	r2,8(r6)
  802c7c:	2006d07a 	srli	r3,r4,1
  802c80:	2100004c 	andi	r4,r4,1
  802c84:	10800044 	addi	r2,r2,1
  802c88:	1906b03a 	or	r3,r3,r4
  802c8c:	3009883a 	mov	r4,r6
  802c90:	30800215 	stw	r2,8(r6)
  802c94:	2005883a 	mov	r2,r4
  802c98:	30c00315 	stw	r3,12(r6)
  802c9c:	f800283a 	ret
  802ca0:	4b09883a 	add	r4,r9,r12
  802ca4:	30c00115 	stw	r3,4(r6)
  802ca8:	32800215 	stw	r10,8(r6)
  802cac:	31000315 	stw	r4,12(r6)
  802cb0:	003fd306 	br	802c00 <_fpadd_parts+0xc8>
  802cb4:	0013883a 	mov	r9,zero
  802cb8:	003fba06 	br	802ba4 <_fpadd_parts+0x6c>
  802cbc:	01cfc83a 	sub	r7,zero,r7
  802cc0:	003faf06 	br	802b80 <_fpadd_parts+0x48>
  802cc4:	0089c83a 	sub	r4,zero,r2
  802cc8:	00800044 	movi	r2,1
  802ccc:	30800115 	stw	r2,4(r6)
  802cd0:	32800215 	stw	r10,8(r6)
  802cd4:	31000315 	stw	r4,12(r6)
  802cd8:	003fbb06 	br	802bc8 <_fpadd_parts+0x90>
  802cdc:	583fb126 	beq	r11,zero,802ba4 <_fpadd_parts+0x6c>
  802ce0:	41c4983a 	sll	r2,r8,r7
  802ce4:	61c6d83a 	srl	r3,r12,r7
  802ce8:	51d5883a 	add	r10,r10,r7
  802cec:	10bfffc4 	addi	r2,r2,-1
  802cf0:	6084703a 	and	r2,r12,r2
  802cf4:	1004c03a 	cmpne	r2,r2,zero
  802cf8:	1898b03a 	or	r12,r3,r2
  802cfc:	003fa906 	br	802ba4 <_fpadd_parts+0x6c>
  802d00:	11ffc31e 	bne	r2,r7,802c10 <_fpadd_parts+0xd8>
  802d04:	28c00117 	ldw	r3,4(r5)
  802d08:	20800117 	ldw	r2,4(r4)
  802d0c:	10ffc026 	beq	r2,r3,802c10 <_fpadd_parts+0xd8>
  802d10:	01002074 	movhi	r4,129
  802d14:	213f4504 	addi	r4,r4,-748
  802d18:	003fbd06 	br	802c10 <_fpadd_parts+0xd8>

00802d1c <__subsf3>:
  802d1c:	deffef04 	addi	sp,sp,-68
  802d20:	dcc00f15 	stw	r19,60(sp)
  802d24:	dcc00204 	addi	r19,sp,8
  802d28:	dc400e15 	stw	r17,56(sp)
  802d2c:	d9000015 	stw	r4,0(sp)
  802d30:	d9400115 	stw	r5,4(sp)
  802d34:	d809883a 	mov	r4,sp
  802d38:	980b883a 	mov	r5,r19
  802d3c:	dc400604 	addi	r17,sp,24
  802d40:	dfc01015 	stw	ra,64(sp)
  802d44:	08042fc0 	call	8042fc <__unpack_f>
  802d48:	d9000104 	addi	r4,sp,4
  802d4c:	880b883a 	mov	r5,r17
  802d50:	08042fc0 	call	8042fc <__unpack_f>
  802d54:	d8800717 	ldw	r2,28(sp)
  802d58:	9809883a 	mov	r4,r19
  802d5c:	880b883a 	mov	r5,r17
  802d60:	d9800a04 	addi	r6,sp,40
  802d64:	1080005c 	xori	r2,r2,1
  802d68:	d8800715 	stw	r2,28(sp)
  802d6c:	0802b380 	call	802b38 <_fpadd_parts>
  802d70:	1009883a 	mov	r4,r2
  802d74:	080419c0 	call	80419c <__pack_f>
  802d78:	dfc01017 	ldw	ra,64(sp)
  802d7c:	dcc00f17 	ldw	r19,60(sp)
  802d80:	dc400e17 	ldw	r17,56(sp)
  802d84:	dec01104 	addi	sp,sp,68
  802d88:	f800283a 	ret

00802d8c <__addsf3>:
  802d8c:	deffef04 	addi	sp,sp,-68
  802d90:	dcc00f15 	stw	r19,60(sp)
  802d94:	dcc00204 	addi	r19,sp,8
  802d98:	dc400e15 	stw	r17,56(sp)
  802d9c:	d9000015 	stw	r4,0(sp)
  802da0:	d9400115 	stw	r5,4(sp)
  802da4:	d809883a 	mov	r4,sp
  802da8:	980b883a 	mov	r5,r19
  802dac:	dc400604 	addi	r17,sp,24
  802db0:	dfc01015 	stw	ra,64(sp)
  802db4:	08042fc0 	call	8042fc <__unpack_f>
  802db8:	d9000104 	addi	r4,sp,4
  802dbc:	880b883a 	mov	r5,r17
  802dc0:	08042fc0 	call	8042fc <__unpack_f>
  802dc4:	d9800a04 	addi	r6,sp,40
  802dc8:	9809883a 	mov	r4,r19
  802dcc:	880b883a 	mov	r5,r17
  802dd0:	0802b380 	call	802b38 <_fpadd_parts>
  802dd4:	1009883a 	mov	r4,r2
  802dd8:	080419c0 	call	80419c <__pack_f>
  802ddc:	dfc01017 	ldw	ra,64(sp)
  802de0:	dcc00f17 	ldw	r19,60(sp)
  802de4:	dc400e17 	ldw	r17,56(sp)
  802de8:	dec01104 	addi	sp,sp,68
  802dec:	f800283a 	ret

00802df0 <__mulsf3>:
  802df0:	deffef04 	addi	sp,sp,-68
  802df4:	dc400f15 	stw	r17,60(sp)
  802df8:	dc400204 	addi	r17,sp,8
  802dfc:	dc000e15 	stw	r16,56(sp)
  802e00:	d9000015 	stw	r4,0(sp)
  802e04:	d9400115 	stw	r5,4(sp)
  802e08:	d809883a 	mov	r4,sp
  802e0c:	880b883a 	mov	r5,r17
  802e10:	dc000604 	addi	r16,sp,24
  802e14:	dfc01015 	stw	ra,64(sp)
  802e18:	08042fc0 	call	8042fc <__unpack_f>
  802e1c:	d9000104 	addi	r4,sp,4
  802e20:	800b883a 	mov	r5,r16
  802e24:	08042fc0 	call	8042fc <__unpack_f>
  802e28:	d9000217 	ldw	r4,8(sp)
  802e2c:	00800044 	movi	r2,1
  802e30:	01400104 	movi	r5,4
  802e34:	1100142e 	bgeu	r2,r4,802e88 <__mulsf3+0x98>
  802e38:	d8c00617 	ldw	r3,24(sp)
  802e3c:	10c0052e 	bgeu	r2,r3,802e54 <__mulsf3+0x64>
  802e40:	21400f26 	beq	r4,r5,802e80 <__mulsf3+0x90>
  802e44:	19405d26 	beq	r3,r5,802fbc <__mulsf3+0x1cc>
  802e48:	00800084 	movi	r2,2
  802e4c:	20800e26 	beq	r4,r2,802e88 <__mulsf3+0x98>
  802e50:	1880181e 	bne	r3,r2,802eb4 <__mulsf3+0xc4>
  802e54:	d8c00717 	ldw	r3,28(sp)
  802e58:	d8800317 	ldw	r2,12(sp)
  802e5c:	8009883a 	mov	r4,r16
  802e60:	10c4c03a 	cmpne	r2,r2,r3
  802e64:	d8800715 	stw	r2,28(sp)
  802e68:	080419c0 	call	80419c <__pack_f>
  802e6c:	dfc01017 	ldw	ra,64(sp)
  802e70:	dc400f17 	ldw	r17,60(sp)
  802e74:	dc000e17 	ldw	r16,56(sp)
  802e78:	dec01104 	addi	sp,sp,68
  802e7c:	f800283a 	ret
  802e80:	00800084 	movi	r2,2
  802e84:	18804f26 	beq	r3,r2,802fc4 <__mulsf3+0x1d4>
  802e88:	d8800317 	ldw	r2,12(sp)
  802e8c:	d8c00717 	ldw	r3,28(sp)
  802e90:	8809883a 	mov	r4,r17
  802e94:	10c4c03a 	cmpne	r2,r2,r3
  802e98:	d8800315 	stw	r2,12(sp)
  802e9c:	080419c0 	call	80419c <__pack_f>
  802ea0:	dfc01017 	ldw	ra,64(sp)
  802ea4:	dc400f17 	ldw	r17,60(sp)
  802ea8:	dc000e17 	ldw	r16,56(sp)
  802eac:	dec01104 	addi	sp,sp,68
  802eb0:	f800283a 	ret
  802eb4:	d8800517 	ldw	r2,20(sp)
  802eb8:	da000917 	ldw	r8,36(sp)
  802ebc:	0013883a 	mov	r9,zero
  802ec0:	0007883a 	mov	r3,zero
  802ec4:	480f883a 	mov	r7,r9
  802ec8:	180b883a 	mov	r5,r3
  802ecc:	400d883a 	mov	r6,r8
  802ed0:	1009883a 	mov	r4,r2
  802ed4:	0803ff80 	call	803ff8 <__muldi3>
  802ed8:	da800417 	ldw	r10,16(sp)
  802edc:	d9800817 	ldw	r6,32(sp)
  802ee0:	da400317 	ldw	r9,12(sp)
  802ee4:	52800084 	addi	r10,r10,2
  802ee8:	3295883a 	add	r10,r6,r10
  802eec:	d9800717 	ldw	r6,28(sp)
  802ef0:	180b883a 	mov	r5,r3
  802ef4:	180f883a 	mov	r7,r3
  802ef8:	4992c03a 	cmpne	r9,r9,r6
  802efc:	da400b15 	stw	r9,44(sp)
  802f00:	1007883a 	mov	r3,r2
  802f04:	da800c15 	stw	r10,48(sp)
  802f08:	2800070e 	bge	r5,zero,802f28 <__mulsf3+0x138>
  802f0c:	2880004c 	andi	r2,r5,1
  802f10:	1005003a 	cmpeq	r2,r2,zero
  802f14:	500d883a 	mov	r6,r10
  802f18:	10001e26 	beq	r2,zero,802f94 <__mulsf3+0x1a4>
  802f1c:	380ed07a 	srli	r7,r7,1
  802f20:	31800044 	addi	r6,r6,1
  802f24:	d9800c15 	stw	r6,48(sp)
  802f28:	01100034 	movhi	r4,16384
  802f2c:	213fffc4 	addi	r4,r4,-1
  802f30:	21c00b36 	bltu	r4,r7,802f60 <__mulsf3+0x170>
  802f34:	d8800c17 	ldw	r2,48(sp)
  802f38:	00000206 	br	802f44 <__mulsf3+0x154>
  802f3c:	18c7883a 	add	r3,r3,r3
  802f40:	21c00636 	bltu	r4,r7,802f5c <__mulsf3+0x16c>
  802f44:	10bfffc4 	addi	r2,r2,-1
  802f48:	39cf883a 	add	r7,r7,r7
  802f4c:	183ffb0e 	bge	r3,zero,802f3c <__mulsf3+0x14c>
  802f50:	39c00054 	ori	r7,r7,1
  802f54:	18c7883a 	add	r3,r3,r3
  802f58:	21fffa2e 	bgeu	r4,r7,802f44 <__mulsf3+0x154>
  802f5c:	d8800c15 	stw	r2,48(sp)
  802f60:	39001fcc 	andi	r4,r7,127
  802f64:	00801004 	movi	r2,64
  802f68:	20800d26 	beq	r4,r2,802fa0 <__mulsf3+0x1b0>
  802f6c:	008000c4 	movi	r2,3
  802f70:	d9000a04 	addi	r4,sp,40
  802f74:	d9c00d15 	stw	r7,52(sp)
  802f78:	d8800a15 	stw	r2,40(sp)
  802f7c:	080419c0 	call	80419c <__pack_f>
  802f80:	dfc01017 	ldw	ra,64(sp)
  802f84:	dc400f17 	ldw	r17,60(sp)
  802f88:	dc000e17 	ldw	r16,56(sp)
  802f8c:	dec01104 	addi	sp,sp,68
  802f90:	f800283a 	ret
  802f94:	1804d07a 	srli	r2,r3,1
  802f98:	10e00034 	orhi	r3,r2,32768
  802f9c:	003fdf06 	br	802f1c <__mulsf3+0x12c>
  802fa0:	3880200c 	andi	r2,r7,128
  802fa4:	103ff11e 	bne	r2,zero,802f6c <__mulsf3+0x17c>
  802fa8:	183ff026 	beq	r3,zero,802f6c <__mulsf3+0x17c>
  802fac:	3907883a 	add	r3,r7,r4
  802fb0:	00bfe004 	movi	r2,-128
  802fb4:	188e703a 	and	r7,r3,r2
  802fb8:	003fec06 	br	802f6c <__mulsf3+0x17c>
  802fbc:	00800084 	movi	r2,2
  802fc0:	20bfa41e 	bne	r4,r2,802e54 <__mulsf3+0x64>
  802fc4:	01002074 	movhi	r4,129
  802fc8:	213f4504 	addi	r4,r4,-748
  802fcc:	003fb306 	br	802e9c <__mulsf3+0xac>

00802fd0 <__divsf3>:
  802fd0:	defff304 	addi	sp,sp,-52
  802fd4:	dc400b15 	stw	r17,44(sp)
  802fd8:	dc400204 	addi	r17,sp,8
  802fdc:	dc000a15 	stw	r16,40(sp)
  802fe0:	d9000015 	stw	r4,0(sp)
  802fe4:	d9400115 	stw	r5,4(sp)
  802fe8:	d809883a 	mov	r4,sp
  802fec:	880b883a 	mov	r5,r17
  802ff0:	dc000604 	addi	r16,sp,24
  802ff4:	dfc00c15 	stw	ra,48(sp)
  802ff8:	08042fc0 	call	8042fc <__unpack_f>
  802ffc:	d9000104 	addi	r4,sp,4
  803000:	800b883a 	mov	r5,r16
  803004:	08042fc0 	call	8042fc <__unpack_f>
  803008:	d9000217 	ldw	r4,8(sp)
  80300c:	00800044 	movi	r2,1
  803010:	01800104 	movi	r6,4
  803014:	11000a2e 	bgeu	r2,r4,803040 <__divsf3+0x70>
  803018:	d9400617 	ldw	r5,24(sp)
  80301c:	1140432e 	bgeu	r2,r5,80312c <__divsf3+0x15c>
  803020:	d8800317 	ldw	r2,12(sp)
  803024:	d8c00717 	ldw	r3,28(sp)
  803028:	10c4f03a 	xor	r2,r2,r3
  80302c:	d8800315 	stw	r2,12(sp)
  803030:	21800226 	beq	r4,r6,80303c <__divsf3+0x6c>
  803034:	00800084 	movi	r2,2
  803038:	2080101e 	bne	r4,r2,80307c <__divsf3+0xac>
  80303c:	29000726 	beq	r5,r4,80305c <__divsf3+0x8c>
  803040:	8809883a 	mov	r4,r17
  803044:	080419c0 	call	80419c <__pack_f>
  803048:	dfc00c17 	ldw	ra,48(sp)
  80304c:	dc400b17 	ldw	r17,44(sp)
  803050:	dc000a17 	ldw	r16,40(sp)
  803054:	dec00d04 	addi	sp,sp,52
  803058:	f800283a 	ret
  80305c:	01002074 	movhi	r4,129
  803060:	213f4504 	addi	r4,r4,-748
  803064:	080419c0 	call	80419c <__pack_f>
  803068:	dfc00c17 	ldw	ra,48(sp)
  80306c:	dc400b17 	ldw	r17,44(sp)
  803070:	dc000a17 	ldw	r16,40(sp)
  803074:	dec00d04 	addi	sp,sp,52
  803078:	f800283a 	ret
  80307c:	29802d26 	beq	r5,r6,803134 <__divsf3+0x164>
  803080:	28801a26 	beq	r5,r2,8030ec <__divsf3+0x11c>
  803084:	d8c00417 	ldw	r3,16(sp)
  803088:	d8800817 	ldw	r2,32(sp)
  80308c:	d9000517 	ldw	r4,20(sp)
  803090:	d9800917 	ldw	r6,36(sp)
  803094:	1885c83a 	sub	r2,r3,r2
  803098:	d8800415 	stw	r2,16(sp)
  80309c:	2180032e 	bgeu	r4,r6,8030ac <__divsf3+0xdc>
  8030a0:	10bfffc4 	addi	r2,r2,-1
  8030a4:	d8800415 	stw	r2,16(sp)
  8030a8:	2109883a 	add	r4,r4,r4
  8030ac:	01500034 	movhi	r5,16384
  8030b0:	0007883a 	mov	r3,zero
  8030b4:	0005883a 	mov	r2,zero
  8030b8:	01c007c4 	movi	r7,31
  8030bc:	10800044 	addi	r2,r2,1
  8030c0:	21800236 	bltu	r4,r6,8030cc <__divsf3+0xfc>
  8030c4:	1946b03a 	or	r3,r3,r5
  8030c8:	2189c83a 	sub	r4,r4,r6
  8030cc:	280ad07a 	srli	r5,r5,1
  8030d0:	2109883a 	add	r4,r4,r4
  8030d4:	11fff91e 	bne	r2,r7,8030bc <__divsf3+0xec>
  8030d8:	19401fcc 	andi	r5,r3,127
  8030dc:	00801004 	movi	r2,64
  8030e0:	28800a26 	beq	r5,r2,80310c <__divsf3+0x13c>
  8030e4:	d8c00515 	stw	r3,20(sp)
  8030e8:	003fd506 	br	803040 <__divsf3+0x70>
  8030ec:	8809883a 	mov	r4,r17
  8030f0:	d9800215 	stw	r6,8(sp)
  8030f4:	080419c0 	call	80419c <__pack_f>
  8030f8:	dfc00c17 	ldw	ra,48(sp)
  8030fc:	dc400b17 	ldw	r17,44(sp)
  803100:	dc000a17 	ldw	r16,40(sp)
  803104:	dec00d04 	addi	sp,sp,52
  803108:	f800283a 	ret
  80310c:	1880200c 	andi	r2,r3,128
  803110:	103ff41e 	bne	r2,zero,8030e4 <__divsf3+0x114>
  803114:	203ff326 	beq	r4,zero,8030e4 <__divsf3+0x114>
  803118:	1947883a 	add	r3,r3,r5
  80311c:	00bfe004 	movi	r2,-128
  803120:	1886703a 	and	r3,r3,r2
  803124:	d8c00515 	stw	r3,20(sp)
  803128:	003fc506 	br	803040 <__divsf3+0x70>
  80312c:	8009883a 	mov	r4,r16
  803130:	003fc406 	br	803044 <__divsf3+0x74>
  803134:	8809883a 	mov	r4,r17
  803138:	d8000515 	stw	zero,20(sp)
  80313c:	d8000415 	stw	zero,16(sp)
  803140:	003fc006 	br	803044 <__divsf3+0x74>

00803144 <__extendsfdf2>:
  803144:	defff904 	addi	sp,sp,-28
  803148:	d9000115 	stw	r4,4(sp)
  80314c:	d9400204 	addi	r5,sp,8
  803150:	d9000104 	addi	r4,sp,4
  803154:	dfc00615 	stw	ra,24(sp)
  803158:	08042fc0 	call	8042fc <__unpack_f>
  80315c:	d9c00517 	ldw	r7,20(sp)
  803160:	0011883a 	mov	r8,zero
  803164:	400697ba 	slli	r3,r8,30
  803168:	3812d0ba 	srli	r9,r7,2
  80316c:	380497ba 	slli	r2,r7,30
  803170:	d9000217 	ldw	r4,8(sp)
  803174:	d9400317 	ldw	r5,12(sp)
  803178:	d9800417 	ldw	r6,16(sp)
  80317c:	48c6b03a 	or	r3,r9,r3
  803180:	100f883a 	mov	r7,r2
  803184:	d8c00015 	stw	r3,0(sp)
  803188:	0803dc80 	call	803dc8 <__make_dp>
  80318c:	dfc00617 	ldw	ra,24(sp)
  803190:	dec00704 	addi	sp,sp,28
  803194:	f800283a 	ret

00803198 <_fpadd_parts>:
  803198:	defff804 	addi	sp,sp,-32
  80319c:	dcc00315 	stw	r19,12(sp)
  8031a0:	2027883a 	mov	r19,r4
  8031a4:	21000017 	ldw	r4,0(r4)
  8031a8:	00c00044 	movi	r3,1
  8031ac:	dd400515 	stw	r21,20(sp)
  8031b0:	dd000415 	stw	r20,16(sp)
  8031b4:	ddc00715 	stw	r23,28(sp)
  8031b8:	dd800615 	stw	r22,24(sp)
  8031bc:	dc800215 	stw	r18,8(sp)
  8031c0:	dc400115 	stw	r17,4(sp)
  8031c4:	dc000015 	stw	r16,0(sp)
  8031c8:	282b883a 	mov	r21,r5
  8031cc:	3029883a 	mov	r20,r6
  8031d0:	1900632e 	bgeu	r3,r4,803360 <_fpadd_parts+0x1c8>
  8031d4:	28800017 	ldw	r2,0(r5)
  8031d8:	1880812e 	bgeu	r3,r2,8033e0 <_fpadd_parts+0x248>
  8031dc:	00c00104 	movi	r3,4
  8031e0:	20c0dc26 	beq	r4,r3,803554 <_fpadd_parts+0x3bc>
  8031e4:	10c07e26 	beq	r2,r3,8033e0 <_fpadd_parts+0x248>
  8031e8:	00c00084 	movi	r3,2
  8031ec:	10c06726 	beq	r2,r3,80338c <_fpadd_parts+0x1f4>
  8031f0:	20c07b26 	beq	r4,r3,8033e0 <_fpadd_parts+0x248>
  8031f4:	9dc00217 	ldw	r23,8(r19)
  8031f8:	28c00217 	ldw	r3,8(r5)
  8031fc:	9c400317 	ldw	r17,12(r19)
  803200:	2bc00317 	ldw	r15,12(r5)
  803204:	b8cdc83a 	sub	r6,r23,r3
  803208:	9c800417 	ldw	r18,16(r19)
  80320c:	2c000417 	ldw	r16,16(r5)
  803210:	3009883a 	mov	r4,r6
  803214:	30009716 	blt	r6,zero,803474 <_fpadd_parts+0x2dc>
  803218:	00800fc4 	movi	r2,63
  80321c:	11806b16 	blt	r2,r6,8033cc <_fpadd_parts+0x234>
  803220:	0100a40e 	bge	zero,r4,8034b4 <_fpadd_parts+0x31c>
  803224:	35bff804 	addi	r22,r6,-32
  803228:	b000bc16 	blt	r22,zero,80351c <_fpadd_parts+0x384>
  80322c:	8596d83a 	srl	r11,r16,r22
  803230:	0019883a 	mov	r12,zero
  803234:	0013883a 	mov	r9,zero
  803238:	01000044 	movi	r4,1
  80323c:	0015883a 	mov	r10,zero
  803240:	b000be16 	blt	r22,zero,80353c <_fpadd_parts+0x3a4>
  803244:	2590983a 	sll	r8,r4,r22
  803248:	000f883a 	mov	r7,zero
  80324c:	00bfffc4 	movi	r2,-1
  803250:	3889883a 	add	r4,r7,r2
  803254:	408b883a 	add	r5,r8,r2
  803258:	21cd803a 	cmpltu	r6,r4,r7
  80325c:	314b883a 	add	r5,r6,r5
  803260:	7904703a 	and	r2,r15,r4
  803264:	8146703a 	and	r3,r16,r5
  803268:	10c4b03a 	or	r2,r2,r3
  80326c:	10000226 	beq	r2,zero,803278 <_fpadd_parts+0xe0>
  803270:	02400044 	movi	r9,1
  803274:	0015883a 	mov	r10,zero
  803278:	5a5eb03a 	or	r15,r11,r9
  80327c:	62a0b03a 	or	r16,r12,r10
  803280:	99400117 	ldw	r5,4(r19)
  803284:	a8800117 	ldw	r2,4(r21)
  803288:	28806e26 	beq	r5,r2,803444 <_fpadd_parts+0x2ac>
  80328c:	28006626 	beq	r5,zero,803428 <_fpadd_parts+0x290>
  803290:	7c45c83a 	sub	r2,r15,r17
  803294:	7889803a 	cmpltu	r4,r15,r2
  803298:	8487c83a 	sub	r3,r16,r18
  80329c:	1909c83a 	sub	r4,r3,r4
  8032a0:	100d883a 	mov	r6,r2
  8032a4:	200f883a 	mov	r7,r4
  8032a8:	38007716 	blt	r7,zero,803488 <_fpadd_parts+0x2f0>
  8032ac:	a5c00215 	stw	r23,8(r20)
  8032b0:	a1c00415 	stw	r7,16(r20)
  8032b4:	a0000115 	stw	zero,4(r20)
  8032b8:	a1800315 	stw	r6,12(r20)
  8032bc:	a2000317 	ldw	r8,12(r20)
  8032c0:	a2400417 	ldw	r9,16(r20)
  8032c4:	00bfffc4 	movi	r2,-1
  8032c8:	408b883a 	add	r5,r8,r2
  8032cc:	2a09803a 	cmpltu	r4,r5,r8
  8032d0:	488d883a 	add	r6,r9,r2
  8032d4:	01c40034 	movhi	r7,4096
  8032d8:	39ffffc4 	addi	r7,r7,-1
  8032dc:	218d883a 	add	r6,r4,r6
  8032e0:	39801736 	bltu	r7,r6,803340 <_fpadd_parts+0x1a8>
  8032e4:	31c06526 	beq	r6,r7,80347c <_fpadd_parts+0x2e4>
  8032e8:	a3000217 	ldw	r12,8(r20)
  8032ec:	4209883a 	add	r4,r8,r8
  8032f0:	00bfffc4 	movi	r2,-1
  8032f4:	220f803a 	cmpltu	r7,r4,r8
  8032f8:	4a4b883a 	add	r5,r9,r9
  8032fc:	394f883a 	add	r7,r7,r5
  803300:	2095883a 	add	r10,r4,r2
  803304:	3897883a 	add	r11,r7,r2
  803308:	510d803a 	cmpltu	r6,r10,r4
  80330c:	6099883a 	add	r12,r12,r2
  803310:	32d7883a 	add	r11,r6,r11
  803314:	00840034 	movhi	r2,4096
  803318:	10bfffc4 	addi	r2,r2,-1
  80331c:	2011883a 	mov	r8,r4
  803320:	3813883a 	mov	r9,r7
  803324:	a1000315 	stw	r4,12(r20)
  803328:	a1c00415 	stw	r7,16(r20)
  80332c:	a3000215 	stw	r12,8(r20)
  803330:	12c00336 	bltu	r2,r11,803340 <_fpadd_parts+0x1a8>
  803334:	58bfed1e 	bne	r11,r2,8032ec <_fpadd_parts+0x154>
  803338:	00bfff84 	movi	r2,-2
  80333c:	12bfeb2e 	bgeu	r2,r10,8032ec <_fpadd_parts+0x154>
  803340:	a2800417 	ldw	r10,16(r20)
  803344:	008000c4 	movi	r2,3
  803348:	00c80034 	movhi	r3,8192
  80334c:	18ffffc4 	addi	r3,r3,-1
  803350:	a2400317 	ldw	r9,12(r20)
  803354:	a0800015 	stw	r2,0(r20)
  803358:	1a802336 	bltu	r3,r10,8033e8 <_fpadd_parts+0x250>
  80335c:	a027883a 	mov	r19,r20
  803360:	9805883a 	mov	r2,r19
  803364:	ddc00717 	ldw	r23,28(sp)
  803368:	dd800617 	ldw	r22,24(sp)
  80336c:	dd400517 	ldw	r21,20(sp)
  803370:	dd000417 	ldw	r20,16(sp)
  803374:	dcc00317 	ldw	r19,12(sp)
  803378:	dc800217 	ldw	r18,8(sp)
  80337c:	dc400117 	ldw	r17,4(sp)
  803380:	dc000017 	ldw	r16,0(sp)
  803384:	dec00804 	addi	sp,sp,32
  803388:	f800283a 	ret
  80338c:	20fff41e 	bne	r4,r3,803360 <_fpadd_parts+0x1c8>
  803390:	31000015 	stw	r4,0(r6)
  803394:	98800117 	ldw	r2,4(r19)
  803398:	30800115 	stw	r2,4(r6)
  80339c:	98c00217 	ldw	r3,8(r19)
  8033a0:	30c00215 	stw	r3,8(r6)
  8033a4:	98800317 	ldw	r2,12(r19)
  8033a8:	30800315 	stw	r2,12(r6)
  8033ac:	98c00417 	ldw	r3,16(r19)
  8033b0:	30c00415 	stw	r3,16(r6)
  8033b4:	98800117 	ldw	r2,4(r19)
  8033b8:	28c00117 	ldw	r3,4(r5)
  8033bc:	3027883a 	mov	r19,r6
  8033c0:	10c4703a 	and	r2,r2,r3
  8033c4:	30800115 	stw	r2,4(r6)
  8033c8:	003fe506 	br	803360 <_fpadd_parts+0x1c8>
  8033cc:	1dc02616 	blt	r3,r23,803468 <_fpadd_parts+0x2d0>
  8033d0:	0023883a 	mov	r17,zero
  8033d4:	182f883a 	mov	r23,r3
  8033d8:	0025883a 	mov	r18,zero
  8033dc:	003fa806 	br	803280 <_fpadd_parts+0xe8>
  8033e0:	a827883a 	mov	r19,r21
  8033e4:	003fde06 	br	803360 <_fpadd_parts+0x1c8>
  8033e8:	01800044 	movi	r6,1
  8033ec:	500497fa 	slli	r2,r10,31
  8033f0:	4808d07a 	srli	r4,r9,1
  8033f4:	518ad83a 	srl	r5,r10,r6
  8033f8:	a2000217 	ldw	r8,8(r20)
  8033fc:	1108b03a 	or	r4,r2,r4
  803400:	0007883a 	mov	r3,zero
  803404:	4984703a 	and	r2,r9,r6
  803408:	208cb03a 	or	r6,r4,r2
  80340c:	28ceb03a 	or	r7,r5,r3
  803410:	42000044 	addi	r8,r8,1
  803414:	a027883a 	mov	r19,r20
  803418:	a1c00415 	stw	r7,16(r20)
  80341c:	a2000215 	stw	r8,8(r20)
  803420:	a1800315 	stw	r6,12(r20)
  803424:	003fce06 	br	803360 <_fpadd_parts+0x1c8>
  803428:	8bc5c83a 	sub	r2,r17,r15
  80342c:	8889803a 	cmpltu	r4,r17,r2
  803430:	9407c83a 	sub	r3,r18,r16
  803434:	1909c83a 	sub	r4,r3,r4
  803438:	100d883a 	mov	r6,r2
  80343c:	200f883a 	mov	r7,r4
  803440:	003f9906 	br	8032a8 <_fpadd_parts+0x110>
  803444:	7c45883a 	add	r2,r15,r17
  803448:	13c9803a 	cmpltu	r4,r2,r15
  80344c:	8487883a 	add	r3,r16,r18
  803450:	20c9883a 	add	r4,r4,r3
  803454:	a1400115 	stw	r5,4(r20)
  803458:	a5c00215 	stw	r23,8(r20)
  80345c:	a0800315 	stw	r2,12(r20)
  803460:	a1000415 	stw	r4,16(r20)
  803464:	003fb606 	br	803340 <_fpadd_parts+0x1a8>
  803468:	001f883a 	mov	r15,zero
  80346c:	0021883a 	mov	r16,zero
  803470:	003f8306 	br	803280 <_fpadd_parts+0xe8>
  803474:	018dc83a 	sub	r6,zero,r6
  803478:	003f6706 	br	803218 <_fpadd_parts+0x80>
  80347c:	00bfff84 	movi	r2,-2
  803480:	117faf36 	bltu	r2,r5,803340 <_fpadd_parts+0x1a8>
  803484:	003f9806 	br	8032e8 <_fpadd_parts+0x150>
  803488:	0005883a 	mov	r2,zero
  80348c:	1189c83a 	sub	r4,r2,r6
  803490:	1105803a 	cmpltu	r2,r2,r4
  803494:	01cbc83a 	sub	r5,zero,r7
  803498:	2885c83a 	sub	r2,r5,r2
  80349c:	01800044 	movi	r6,1
  8034a0:	a1800115 	stw	r6,4(r20)
  8034a4:	a5c00215 	stw	r23,8(r20)
  8034a8:	a1000315 	stw	r4,12(r20)
  8034ac:	a0800415 	stw	r2,16(r20)
  8034b0:	003f8206 	br	8032bc <_fpadd_parts+0x124>
  8034b4:	203f7226 	beq	r4,zero,803280 <_fpadd_parts+0xe8>
  8034b8:	35bff804 	addi	r22,r6,-32
  8034bc:	b9af883a 	add	r23,r23,r6
  8034c0:	b0003116 	blt	r22,zero,803588 <_fpadd_parts+0x3f0>
  8034c4:	959ad83a 	srl	r13,r18,r22
  8034c8:	001d883a 	mov	r14,zero
  8034cc:	000f883a 	mov	r7,zero
  8034d0:	01000044 	movi	r4,1
  8034d4:	0011883a 	mov	r8,zero
  8034d8:	b0002516 	blt	r22,zero,803570 <_fpadd_parts+0x3d8>
  8034dc:	2594983a 	sll	r10,r4,r22
  8034e0:	0013883a 	mov	r9,zero
  8034e4:	00bfffc4 	movi	r2,-1
  8034e8:	4889883a 	add	r4,r9,r2
  8034ec:	508b883a 	add	r5,r10,r2
  8034f0:	224d803a 	cmpltu	r6,r4,r9
  8034f4:	314b883a 	add	r5,r6,r5
  8034f8:	8904703a 	and	r2,r17,r4
  8034fc:	9146703a 	and	r3,r18,r5
  803500:	10c4b03a 	or	r2,r2,r3
  803504:	10000226 	beq	r2,zero,803510 <_fpadd_parts+0x378>
  803508:	01c00044 	movi	r7,1
  80350c:	0011883a 	mov	r8,zero
  803510:	69e2b03a 	or	r17,r13,r7
  803514:	7224b03a 	or	r18,r14,r8
  803518:	003f5906 	br	803280 <_fpadd_parts+0xe8>
  80351c:	8407883a 	add	r3,r16,r16
  803520:	008007c4 	movi	r2,31
  803524:	1185c83a 	sub	r2,r2,r6
  803528:	1886983a 	sll	r3,r3,r2
  80352c:	7996d83a 	srl	r11,r15,r6
  803530:	8198d83a 	srl	r12,r16,r6
  803534:	1ad6b03a 	or	r11,r3,r11
  803538:	003f3e06 	br	803234 <_fpadd_parts+0x9c>
  80353c:	2006d07a 	srli	r3,r4,1
  803540:	008007c4 	movi	r2,31
  803544:	1185c83a 	sub	r2,r2,r6
  803548:	1890d83a 	srl	r8,r3,r2
  80354c:	218e983a 	sll	r7,r4,r6
  803550:	003f3e06 	br	80324c <_fpadd_parts+0xb4>
  803554:	113f821e 	bne	r2,r4,803360 <_fpadd_parts+0x1c8>
  803558:	28c00117 	ldw	r3,4(r5)
  80355c:	98800117 	ldw	r2,4(r19)
  803560:	10ff7f26 	beq	r2,r3,803360 <_fpadd_parts+0x1c8>
  803564:	04c02074 	movhi	r19,129
  803568:	9cff4904 	addi	r19,r19,-732
  80356c:	003f7c06 	br	803360 <_fpadd_parts+0x1c8>
  803570:	2006d07a 	srli	r3,r4,1
  803574:	008007c4 	movi	r2,31
  803578:	1185c83a 	sub	r2,r2,r6
  80357c:	1894d83a 	srl	r10,r3,r2
  803580:	2192983a 	sll	r9,r4,r6
  803584:	003fd706 	br	8034e4 <_fpadd_parts+0x34c>
  803588:	9487883a 	add	r3,r18,r18
  80358c:	008007c4 	movi	r2,31
  803590:	1185c83a 	sub	r2,r2,r6
  803594:	1886983a 	sll	r3,r3,r2
  803598:	899ad83a 	srl	r13,r17,r6
  80359c:	919cd83a 	srl	r14,r18,r6
  8035a0:	1b5ab03a 	or	r13,r3,r13
  8035a4:	003fc906 	br	8034cc <_fpadd_parts+0x334>

008035a8 <__subdf3>:
  8035a8:	deffea04 	addi	sp,sp,-88
  8035ac:	dcc01415 	stw	r19,80(sp)
  8035b0:	dcc00404 	addi	r19,sp,16
  8035b4:	2011883a 	mov	r8,r4
  8035b8:	2813883a 	mov	r9,r5
  8035bc:	dc401315 	stw	r17,76(sp)
  8035c0:	d809883a 	mov	r4,sp
  8035c4:	980b883a 	mov	r5,r19
  8035c8:	dc400904 	addi	r17,sp,36
  8035cc:	dfc01515 	stw	ra,84(sp)
  8035d0:	da400115 	stw	r9,4(sp)
  8035d4:	d9c00315 	stw	r7,12(sp)
  8035d8:	da000015 	stw	r8,0(sp)
  8035dc:	d9800215 	stw	r6,8(sp)
  8035e0:	08047040 	call	804704 <__unpack_d>
  8035e4:	d9000204 	addi	r4,sp,8
  8035e8:	880b883a 	mov	r5,r17
  8035ec:	08047040 	call	804704 <__unpack_d>
  8035f0:	d8800a17 	ldw	r2,40(sp)
  8035f4:	880b883a 	mov	r5,r17
  8035f8:	9809883a 	mov	r4,r19
  8035fc:	d9800e04 	addi	r6,sp,56
  803600:	1080005c 	xori	r2,r2,1
  803604:	d8800a15 	stw	r2,40(sp)
  803608:	08031980 	call	803198 <_fpadd_parts>
  80360c:	1009883a 	mov	r4,r2
  803610:	08043f00 	call	8043f0 <__pack_d>
  803614:	dfc01517 	ldw	ra,84(sp)
  803618:	dcc01417 	ldw	r19,80(sp)
  80361c:	dc401317 	ldw	r17,76(sp)
  803620:	dec01604 	addi	sp,sp,88
  803624:	f800283a 	ret

00803628 <__adddf3>:
  803628:	deffea04 	addi	sp,sp,-88
  80362c:	dcc01415 	stw	r19,80(sp)
  803630:	dcc00404 	addi	r19,sp,16
  803634:	2011883a 	mov	r8,r4
  803638:	2813883a 	mov	r9,r5
  80363c:	dc401315 	stw	r17,76(sp)
  803640:	d809883a 	mov	r4,sp
  803644:	980b883a 	mov	r5,r19
  803648:	dc400904 	addi	r17,sp,36
  80364c:	dfc01515 	stw	ra,84(sp)
  803650:	da400115 	stw	r9,4(sp)
  803654:	d9c00315 	stw	r7,12(sp)
  803658:	da000015 	stw	r8,0(sp)
  80365c:	d9800215 	stw	r6,8(sp)
  803660:	08047040 	call	804704 <__unpack_d>
  803664:	d9000204 	addi	r4,sp,8
  803668:	880b883a 	mov	r5,r17
  80366c:	08047040 	call	804704 <__unpack_d>
  803670:	d9800e04 	addi	r6,sp,56
  803674:	9809883a 	mov	r4,r19
  803678:	880b883a 	mov	r5,r17
  80367c:	08031980 	call	803198 <_fpadd_parts>
  803680:	1009883a 	mov	r4,r2
  803684:	08043f00 	call	8043f0 <__pack_d>
  803688:	dfc01517 	ldw	ra,84(sp)
  80368c:	dcc01417 	ldw	r19,80(sp)
  803690:	dc401317 	ldw	r17,76(sp)
  803694:	dec01604 	addi	sp,sp,88
  803698:	f800283a 	ret

0080369c <__muldf3>:
  80369c:	deffe004 	addi	sp,sp,-128
  8036a0:	dc401815 	stw	r17,96(sp)
  8036a4:	dc400404 	addi	r17,sp,16
  8036a8:	2011883a 	mov	r8,r4
  8036ac:	2813883a 	mov	r9,r5
  8036b0:	dc001715 	stw	r16,92(sp)
  8036b4:	d809883a 	mov	r4,sp
  8036b8:	880b883a 	mov	r5,r17
  8036bc:	dc000904 	addi	r16,sp,36
  8036c0:	dfc01f15 	stw	ra,124(sp)
  8036c4:	da400115 	stw	r9,4(sp)
  8036c8:	d9c00315 	stw	r7,12(sp)
  8036cc:	da000015 	stw	r8,0(sp)
  8036d0:	d9800215 	stw	r6,8(sp)
  8036d4:	ddc01e15 	stw	r23,120(sp)
  8036d8:	dd801d15 	stw	r22,116(sp)
  8036dc:	dd401c15 	stw	r21,112(sp)
  8036e0:	dd001b15 	stw	r20,108(sp)
  8036e4:	dcc01a15 	stw	r19,104(sp)
  8036e8:	dc801915 	stw	r18,100(sp)
  8036ec:	08047040 	call	804704 <__unpack_d>
  8036f0:	d9000204 	addi	r4,sp,8
  8036f4:	800b883a 	mov	r5,r16
  8036f8:	08047040 	call	804704 <__unpack_d>
  8036fc:	d9000417 	ldw	r4,16(sp)
  803700:	00800044 	movi	r2,1
  803704:	1100102e 	bgeu	r2,r4,803748 <__muldf3+0xac>
  803708:	d8c00917 	ldw	r3,36(sp)
  80370c:	10c0062e 	bgeu	r2,r3,803728 <__muldf3+0x8c>
  803710:	00800104 	movi	r2,4
  803714:	20800a26 	beq	r4,r2,803740 <__muldf3+0xa4>
  803718:	1880cc26 	beq	r3,r2,803a4c <__muldf3+0x3b0>
  80371c:	00800084 	movi	r2,2
  803720:	20800926 	beq	r4,r2,803748 <__muldf3+0xac>
  803724:	1880191e 	bne	r3,r2,80378c <__muldf3+0xf0>
  803728:	d8c00a17 	ldw	r3,40(sp)
  80372c:	d8800517 	ldw	r2,20(sp)
  803730:	8009883a 	mov	r4,r16
  803734:	10c4c03a 	cmpne	r2,r2,r3
  803738:	d8800a15 	stw	r2,40(sp)
  80373c:	00000706 	br	80375c <__muldf3+0xc0>
  803740:	00800084 	movi	r2,2
  803744:	1880c326 	beq	r3,r2,803a54 <__muldf3+0x3b8>
  803748:	d8800517 	ldw	r2,20(sp)
  80374c:	d8c00a17 	ldw	r3,40(sp)
  803750:	8809883a 	mov	r4,r17
  803754:	10c4c03a 	cmpne	r2,r2,r3
  803758:	d8800515 	stw	r2,20(sp)
  80375c:	08043f00 	call	8043f0 <__pack_d>
  803760:	dfc01f17 	ldw	ra,124(sp)
  803764:	ddc01e17 	ldw	r23,120(sp)
  803768:	dd801d17 	ldw	r22,116(sp)
  80376c:	dd401c17 	ldw	r21,112(sp)
  803770:	dd001b17 	ldw	r20,108(sp)
  803774:	dcc01a17 	ldw	r19,104(sp)
  803778:	dc801917 	ldw	r18,100(sp)
  80377c:	dc401817 	ldw	r17,96(sp)
  803780:	dc001717 	ldw	r16,92(sp)
  803784:	dec02004 	addi	sp,sp,128
  803788:	f800283a 	ret
  80378c:	dd800717 	ldw	r22,28(sp)
  803790:	dc800c17 	ldw	r18,48(sp)
  803794:	002b883a 	mov	r21,zero
  803798:	0023883a 	mov	r17,zero
  80379c:	a80b883a 	mov	r5,r21
  8037a0:	b00d883a 	mov	r6,r22
  8037a4:	880f883a 	mov	r7,r17
  8037a8:	ddc00817 	ldw	r23,32(sp)
  8037ac:	dcc00d17 	ldw	r19,52(sp)
  8037b0:	9009883a 	mov	r4,r18
  8037b4:	0803ff80 	call	803ff8 <__muldi3>
  8037b8:	001b883a 	mov	r13,zero
  8037bc:	680f883a 	mov	r7,r13
  8037c0:	b009883a 	mov	r4,r22
  8037c4:	000b883a 	mov	r5,zero
  8037c8:	980d883a 	mov	r6,r19
  8037cc:	b82d883a 	mov	r22,r23
  8037d0:	002f883a 	mov	r23,zero
  8037d4:	db401615 	stw	r13,88(sp)
  8037d8:	d8801315 	stw	r2,76(sp)
  8037dc:	d8c01415 	stw	r3,80(sp)
  8037e0:	dcc01515 	stw	r19,84(sp)
  8037e4:	0803ff80 	call	803ff8 <__muldi3>
  8037e8:	b00d883a 	mov	r6,r22
  8037ec:	000b883a 	mov	r5,zero
  8037f0:	9009883a 	mov	r4,r18
  8037f4:	b80f883a 	mov	r7,r23
  8037f8:	1021883a 	mov	r16,r2
  8037fc:	1823883a 	mov	r17,r3
  803800:	0803ff80 	call	803ff8 <__muldi3>
  803804:	8085883a 	add	r2,r16,r2
  803808:	140d803a 	cmpltu	r6,r2,r16
  80380c:	88c7883a 	add	r3,r17,r3
  803810:	30cd883a 	add	r6,r6,r3
  803814:	1029883a 	mov	r20,r2
  803818:	302b883a 	mov	r21,r6
  80381c:	da801317 	ldw	r10,76(sp)
  803820:	dac01417 	ldw	r11,80(sp)
  803824:	db001517 	ldw	r12,84(sp)
  803828:	db401617 	ldw	r13,88(sp)
  80382c:	3440612e 	bgeu	r6,r17,8039b4 <__muldf3+0x318>
  803830:	0009883a 	mov	r4,zero
  803834:	5105883a 	add	r2,r10,r4
  803838:	128d803a 	cmpltu	r6,r2,r10
  80383c:	5d07883a 	add	r3,r11,r20
  803840:	30cd883a 	add	r6,r6,r3
  803844:	0021883a 	mov	r16,zero
  803848:	04400044 	movi	r17,1
  80384c:	1025883a 	mov	r18,r2
  803850:	3027883a 	mov	r19,r6
  803854:	32c06236 	bltu	r6,r11,8039e0 <__muldf3+0x344>
  803858:	59807a26 	beq	r11,r6,803a44 <__muldf3+0x3a8>
  80385c:	680b883a 	mov	r5,r13
  803860:	b80f883a 	mov	r7,r23
  803864:	6009883a 	mov	r4,r12
  803868:	b00d883a 	mov	r6,r22
  80386c:	0803ff80 	call	803ff8 <__muldi3>
  803870:	1009883a 	mov	r4,r2
  803874:	000f883a 	mov	r7,zero
  803878:	1545883a 	add	r2,r2,r21
  80387c:	1111803a 	cmpltu	r8,r2,r4
  803880:	19c7883a 	add	r3,r3,r7
  803884:	40c7883a 	add	r3,r8,r3
  803888:	88cb883a 	add	r5,r17,r3
  80388c:	d8c00617 	ldw	r3,24(sp)
  803890:	8089883a 	add	r4,r16,r2
  803894:	d8800b17 	ldw	r2,44(sp)
  803898:	18c00104 	addi	r3,r3,4
  80389c:	240d803a 	cmpltu	r6,r4,r16
  8038a0:	10c7883a 	add	r3,r2,r3
  8038a4:	2013883a 	mov	r9,r4
  8038a8:	d8800a17 	ldw	r2,40(sp)
  8038ac:	d9000517 	ldw	r4,20(sp)
  8038b0:	314d883a 	add	r6,r6,r5
  8038b4:	3015883a 	mov	r10,r6
  8038b8:	2088c03a 	cmpne	r4,r4,r2
  8038bc:	00880034 	movhi	r2,8192
  8038c0:	10bfffc4 	addi	r2,r2,-1
  8038c4:	d9000f15 	stw	r4,60(sp)
  8038c8:	d8c01015 	stw	r3,64(sp)
  8038cc:	1180162e 	bgeu	r2,r6,803928 <__muldf3+0x28c>
  8038d0:	1811883a 	mov	r8,r3
  8038d4:	101f883a 	mov	r15,r2
  8038d8:	980497fa 	slli	r2,r19,31
  8038dc:	9016d07a 	srli	r11,r18,1
  8038e0:	500697fa 	slli	r3,r10,31
  8038e4:	480cd07a 	srli	r6,r9,1
  8038e8:	500ed07a 	srli	r7,r10,1
  8038ec:	12d6b03a 	or	r11,r2,r11
  8038f0:	00800044 	movi	r2,1
  8038f4:	198cb03a 	or	r6,r3,r6
  8038f8:	4888703a 	and	r4,r9,r2
  8038fc:	9818d07a 	srli	r12,r19,1
  803900:	001b883a 	mov	r13,zero
  803904:	03a00034 	movhi	r14,32768
  803908:	3013883a 	mov	r9,r6
  80390c:	3815883a 	mov	r10,r7
  803910:	4091883a 	add	r8,r8,r2
  803914:	20000226 	beq	r4,zero,803920 <__muldf3+0x284>
  803918:	5b64b03a 	or	r18,r11,r13
  80391c:	63a6b03a 	or	r19,r12,r14
  803920:	7abfed36 	bltu	r15,r10,8038d8 <__muldf3+0x23c>
  803924:	da001015 	stw	r8,64(sp)
  803928:	00840034 	movhi	r2,4096
  80392c:	10bfffc4 	addi	r2,r2,-1
  803930:	12801436 	bltu	r2,r10,803984 <__muldf3+0x2e8>
  803934:	da001017 	ldw	r8,64(sp)
  803938:	101f883a 	mov	r15,r2
  80393c:	4a45883a 	add	r2,r9,r9
  803940:	124d803a 	cmpltu	r6,r2,r9
  803944:	5287883a 	add	r3,r10,r10
  803948:	9497883a 	add	r11,r18,r18
  80394c:	5c8f803a 	cmpltu	r7,r11,r18
  803950:	9cd9883a 	add	r12,r19,r19
  803954:	01000044 	movi	r4,1
  803958:	30cd883a 	add	r6,r6,r3
  80395c:	3b0f883a 	add	r7,r7,r12
  803960:	423fffc4 	addi	r8,r8,-1
  803964:	1013883a 	mov	r9,r2
  803968:	3015883a 	mov	r10,r6
  80396c:	111ab03a 	or	r13,r2,r4
  803970:	98003016 	blt	r19,zero,803a34 <__muldf3+0x398>
  803974:	5825883a 	mov	r18,r11
  803978:	3827883a 	mov	r19,r7
  80397c:	7abfef2e 	bgeu	r15,r10,80393c <__muldf3+0x2a0>
  803980:	da001015 	stw	r8,64(sp)
  803984:	00803fc4 	movi	r2,255
  803988:	488e703a 	and	r7,r9,r2
  80398c:	00802004 	movi	r2,128
  803990:	0007883a 	mov	r3,zero
  803994:	0011883a 	mov	r8,zero
  803998:	38801826 	beq	r7,r2,8039fc <__muldf3+0x360>
  80399c:	008000c4 	movi	r2,3
  8039a0:	d9000e04 	addi	r4,sp,56
  8039a4:	da801215 	stw	r10,72(sp)
  8039a8:	d8800e15 	stw	r2,56(sp)
  8039ac:	da401115 	stw	r9,68(sp)
  8039b0:	003f6a06 	br	80375c <__muldf3+0xc0>
  8039b4:	89802126 	beq	r17,r6,803a3c <__muldf3+0x3a0>
  8039b8:	0009883a 	mov	r4,zero
  8039bc:	5105883a 	add	r2,r10,r4
  8039c0:	128d803a 	cmpltu	r6,r2,r10
  8039c4:	5d07883a 	add	r3,r11,r20
  8039c8:	30cd883a 	add	r6,r6,r3
  8039cc:	0021883a 	mov	r16,zero
  8039d0:	0023883a 	mov	r17,zero
  8039d4:	1025883a 	mov	r18,r2
  8039d8:	3027883a 	mov	r19,r6
  8039dc:	32ff9e2e 	bgeu	r6,r11,803858 <__muldf3+0x1bc>
  8039e0:	00800044 	movi	r2,1
  8039e4:	8089883a 	add	r4,r16,r2
  8039e8:	240d803a 	cmpltu	r6,r4,r16
  8039ec:	344d883a 	add	r6,r6,r17
  8039f0:	2021883a 	mov	r16,r4
  8039f4:	3023883a 	mov	r17,r6
  8039f8:	003f9806 	br	80385c <__muldf3+0x1c0>
  8039fc:	403fe71e 	bne	r8,zero,80399c <__muldf3+0x300>
  803a00:	01004004 	movi	r4,256
  803a04:	4904703a 	and	r2,r9,r4
  803a08:	10c4b03a 	or	r2,r2,r3
  803a0c:	103fe31e 	bne	r2,zero,80399c <__muldf3+0x300>
  803a10:	94c4b03a 	or	r2,r18,r19
  803a14:	103fe126 	beq	r2,zero,80399c <__muldf3+0x300>
  803a18:	49c5883a 	add	r2,r9,r7
  803a1c:	1251803a 	cmpltu	r8,r2,r9
  803a20:	4291883a 	add	r8,r8,r10
  803a24:	013fc004 	movi	r4,-256
  803a28:	1112703a 	and	r9,r2,r4
  803a2c:	4015883a 	mov	r10,r8
  803a30:	003fda06 	br	80399c <__muldf3+0x300>
  803a34:	6813883a 	mov	r9,r13
  803a38:	003fce06 	br	803974 <__muldf3+0x2d8>
  803a3c:	143f7c36 	bltu	r2,r16,803830 <__muldf3+0x194>
  803a40:	003fdd06 	br	8039b8 <__muldf3+0x31c>
  803a44:	12bf852e 	bgeu	r2,r10,80385c <__muldf3+0x1c0>
  803a48:	003fe506 	br	8039e0 <__muldf3+0x344>
  803a4c:	00800084 	movi	r2,2
  803a50:	20bf351e 	bne	r4,r2,803728 <__muldf3+0x8c>
  803a54:	01002074 	movhi	r4,129
  803a58:	213f4904 	addi	r4,r4,-732
  803a5c:	003f3f06 	br	80375c <__muldf3+0xc0>

00803a60 <__eqdf2>:
  803a60:	deffef04 	addi	sp,sp,-68
  803a64:	dc400f15 	stw	r17,60(sp)
  803a68:	dc400404 	addi	r17,sp,16
  803a6c:	2005883a 	mov	r2,r4
  803a70:	2807883a 	mov	r3,r5
  803a74:	dc000e15 	stw	r16,56(sp)
  803a78:	d809883a 	mov	r4,sp
  803a7c:	880b883a 	mov	r5,r17
  803a80:	dc000904 	addi	r16,sp,36
  803a84:	d8c00115 	stw	r3,4(sp)
  803a88:	d8800015 	stw	r2,0(sp)
  803a8c:	d9800215 	stw	r6,8(sp)
  803a90:	dfc01015 	stw	ra,64(sp)
  803a94:	d9c00315 	stw	r7,12(sp)
  803a98:	08047040 	call	804704 <__unpack_d>
  803a9c:	d9000204 	addi	r4,sp,8
  803aa0:	800b883a 	mov	r5,r16
  803aa4:	08047040 	call	804704 <__unpack_d>
  803aa8:	d8800417 	ldw	r2,16(sp)
  803aac:	00c00044 	movi	r3,1
  803ab0:	180d883a 	mov	r6,r3
  803ab4:	1880062e 	bgeu	r3,r2,803ad0 <__eqdf2+0x70>
  803ab8:	d8800917 	ldw	r2,36(sp)
  803abc:	8809883a 	mov	r4,r17
  803ac0:	800b883a 	mov	r5,r16
  803ac4:	1880022e 	bgeu	r3,r2,803ad0 <__eqdf2+0x70>
  803ac8:	080483c0 	call	80483c <__fpcmp_parts_d>
  803acc:	100d883a 	mov	r6,r2
  803ad0:	3005883a 	mov	r2,r6
  803ad4:	dfc01017 	ldw	ra,64(sp)
  803ad8:	dc400f17 	ldw	r17,60(sp)
  803adc:	dc000e17 	ldw	r16,56(sp)
  803ae0:	dec01104 	addi	sp,sp,68
  803ae4:	f800283a 	ret

00803ae8 <__gtdf2>:
  803ae8:	deffef04 	addi	sp,sp,-68
  803aec:	dc400f15 	stw	r17,60(sp)
  803af0:	dc400404 	addi	r17,sp,16
  803af4:	2005883a 	mov	r2,r4
  803af8:	2807883a 	mov	r3,r5
  803afc:	dc000e15 	stw	r16,56(sp)
  803b00:	d809883a 	mov	r4,sp
  803b04:	880b883a 	mov	r5,r17
  803b08:	dc000904 	addi	r16,sp,36
  803b0c:	d8c00115 	stw	r3,4(sp)
  803b10:	d8800015 	stw	r2,0(sp)
  803b14:	d9800215 	stw	r6,8(sp)
  803b18:	dfc01015 	stw	ra,64(sp)
  803b1c:	d9c00315 	stw	r7,12(sp)
  803b20:	08047040 	call	804704 <__unpack_d>
  803b24:	d9000204 	addi	r4,sp,8
  803b28:	800b883a 	mov	r5,r16
  803b2c:	08047040 	call	804704 <__unpack_d>
  803b30:	d8800417 	ldw	r2,16(sp)
  803b34:	00c00044 	movi	r3,1
  803b38:	01bfffc4 	movi	r6,-1
  803b3c:	1880062e 	bgeu	r3,r2,803b58 <__gtdf2+0x70>
  803b40:	d8800917 	ldw	r2,36(sp)
  803b44:	8809883a 	mov	r4,r17
  803b48:	800b883a 	mov	r5,r16
  803b4c:	1880022e 	bgeu	r3,r2,803b58 <__gtdf2+0x70>
  803b50:	080483c0 	call	80483c <__fpcmp_parts_d>
  803b54:	100d883a 	mov	r6,r2
  803b58:	3005883a 	mov	r2,r6
  803b5c:	dfc01017 	ldw	ra,64(sp)
  803b60:	dc400f17 	ldw	r17,60(sp)
  803b64:	dc000e17 	ldw	r16,56(sp)
  803b68:	dec01104 	addi	sp,sp,68
  803b6c:	f800283a 	ret

00803b70 <__gedf2>:
  803b70:	deffef04 	addi	sp,sp,-68
  803b74:	dc400f15 	stw	r17,60(sp)
  803b78:	dc400404 	addi	r17,sp,16
  803b7c:	2005883a 	mov	r2,r4
  803b80:	2807883a 	mov	r3,r5
  803b84:	dc000e15 	stw	r16,56(sp)
  803b88:	d809883a 	mov	r4,sp
  803b8c:	880b883a 	mov	r5,r17
  803b90:	dc000904 	addi	r16,sp,36
  803b94:	d8c00115 	stw	r3,4(sp)
  803b98:	d8800015 	stw	r2,0(sp)
  803b9c:	d9800215 	stw	r6,8(sp)
  803ba0:	dfc01015 	stw	ra,64(sp)
  803ba4:	d9c00315 	stw	r7,12(sp)
  803ba8:	08047040 	call	804704 <__unpack_d>
  803bac:	d9000204 	addi	r4,sp,8
  803bb0:	800b883a 	mov	r5,r16
  803bb4:	08047040 	call	804704 <__unpack_d>
  803bb8:	d8800417 	ldw	r2,16(sp)
  803bbc:	00c00044 	movi	r3,1
  803bc0:	01bfffc4 	movi	r6,-1
  803bc4:	1880062e 	bgeu	r3,r2,803be0 <__gedf2+0x70>
  803bc8:	d8800917 	ldw	r2,36(sp)
  803bcc:	8809883a 	mov	r4,r17
  803bd0:	800b883a 	mov	r5,r16
  803bd4:	1880022e 	bgeu	r3,r2,803be0 <__gedf2+0x70>
  803bd8:	080483c0 	call	80483c <__fpcmp_parts_d>
  803bdc:	100d883a 	mov	r6,r2
  803be0:	3005883a 	mov	r2,r6
  803be4:	dfc01017 	ldw	ra,64(sp)
  803be8:	dc400f17 	ldw	r17,60(sp)
  803bec:	dc000e17 	ldw	r16,56(sp)
  803bf0:	dec01104 	addi	sp,sp,68
  803bf4:	f800283a 	ret

00803bf8 <__floatsidf>:
  803bf8:	2006d7fa 	srli	r3,r4,31
  803bfc:	defff604 	addi	sp,sp,-40
  803c00:	008000c4 	movi	r2,3
  803c04:	dfc00915 	stw	ra,36(sp)
  803c08:	dcc00815 	stw	r19,32(sp)
  803c0c:	dc800715 	stw	r18,28(sp)
  803c10:	dc400615 	stw	r17,24(sp)
  803c14:	dc000515 	stw	r16,20(sp)
  803c18:	d8800015 	stw	r2,0(sp)
  803c1c:	d8c00115 	stw	r3,4(sp)
  803c20:	20000f1e 	bne	r4,zero,803c60 <__floatsidf+0x68>
  803c24:	00800084 	movi	r2,2
  803c28:	d8800015 	stw	r2,0(sp)
  803c2c:	d809883a 	mov	r4,sp
  803c30:	08043f00 	call	8043f0 <__pack_d>
  803c34:	1009883a 	mov	r4,r2
  803c38:	180b883a 	mov	r5,r3
  803c3c:	2005883a 	mov	r2,r4
  803c40:	2807883a 	mov	r3,r5
  803c44:	dfc00917 	ldw	ra,36(sp)
  803c48:	dcc00817 	ldw	r19,32(sp)
  803c4c:	dc800717 	ldw	r18,28(sp)
  803c50:	dc400617 	ldw	r17,24(sp)
  803c54:	dc000517 	ldw	r16,20(sp)
  803c58:	dec00a04 	addi	sp,sp,40
  803c5c:	f800283a 	ret
  803c60:	00800f04 	movi	r2,60
  803c64:	1807003a 	cmpeq	r3,r3,zero
  803c68:	d8800215 	stw	r2,8(sp)
  803c6c:	18001126 	beq	r3,zero,803cb4 <__floatsidf+0xbc>
  803c70:	0027883a 	mov	r19,zero
  803c74:	2025883a 	mov	r18,r4
  803c78:	d9000315 	stw	r4,12(sp)
  803c7c:	dcc00415 	stw	r19,16(sp)
  803c80:	080411c0 	call	80411c <__clzsi2>
  803c84:	11000744 	addi	r4,r2,29
  803c88:	013fe80e 	bge	zero,r4,803c2c <__floatsidf+0x34>
  803c8c:	10bfff44 	addi	r2,r2,-3
  803c90:	10000c16 	blt	r2,zero,803cc4 <__floatsidf+0xcc>
  803c94:	90a2983a 	sll	r17,r18,r2
  803c98:	0021883a 	mov	r16,zero
  803c9c:	d8800217 	ldw	r2,8(sp)
  803ca0:	dc400415 	stw	r17,16(sp)
  803ca4:	dc000315 	stw	r16,12(sp)
  803ca8:	1105c83a 	sub	r2,r2,r4
  803cac:	d8800215 	stw	r2,8(sp)
  803cb0:	003fde06 	br	803c2c <__floatsidf+0x34>
  803cb4:	00a00034 	movhi	r2,32768
  803cb8:	20800a26 	beq	r4,r2,803ce4 <__floatsidf+0xec>
  803cbc:	0109c83a 	sub	r4,zero,r4
  803cc0:	003feb06 	br	803c70 <__floatsidf+0x78>
  803cc4:	9006d07a 	srli	r3,r18,1
  803cc8:	008007c4 	movi	r2,31
  803ccc:	1105c83a 	sub	r2,r2,r4
  803cd0:	1886d83a 	srl	r3,r3,r2
  803cd4:	9922983a 	sll	r17,r19,r4
  803cd8:	9120983a 	sll	r16,r18,r4
  803cdc:	1c62b03a 	or	r17,r3,r17
  803ce0:	003fee06 	br	803c9c <__floatsidf+0xa4>
  803ce4:	0009883a 	mov	r4,zero
  803ce8:	01707834 	movhi	r5,49632
  803cec:	003fd306 	br	803c3c <__floatsidf+0x44>

00803cf0 <__fixdfsi>:
  803cf0:	defff804 	addi	sp,sp,-32
  803cf4:	2005883a 	mov	r2,r4
  803cf8:	2807883a 	mov	r3,r5
  803cfc:	d809883a 	mov	r4,sp
  803d00:	d9400204 	addi	r5,sp,8
  803d04:	d8c00115 	stw	r3,4(sp)
  803d08:	d8800015 	stw	r2,0(sp)
  803d0c:	dfc00715 	stw	ra,28(sp)
  803d10:	08047040 	call	804704 <__unpack_d>
  803d14:	d8c00217 	ldw	r3,8(sp)
  803d18:	00800084 	movi	r2,2
  803d1c:	1880051e 	bne	r3,r2,803d34 <__fixdfsi+0x44>
  803d20:	0007883a 	mov	r3,zero
  803d24:	1805883a 	mov	r2,r3
  803d28:	dfc00717 	ldw	ra,28(sp)
  803d2c:	dec00804 	addi	sp,sp,32
  803d30:	f800283a 	ret
  803d34:	00800044 	movi	r2,1
  803d38:	10fff92e 	bgeu	r2,r3,803d20 <__fixdfsi+0x30>
  803d3c:	00800104 	movi	r2,4
  803d40:	18800426 	beq	r3,r2,803d54 <__fixdfsi+0x64>
  803d44:	d8c00417 	ldw	r3,16(sp)
  803d48:	183ff516 	blt	r3,zero,803d20 <__fixdfsi+0x30>
  803d4c:	00800784 	movi	r2,30
  803d50:	10c0080e 	bge	r2,r3,803d74 <__fixdfsi+0x84>
  803d54:	d8800317 	ldw	r2,12(sp)
  803d58:	1000121e 	bne	r2,zero,803da4 <__fixdfsi+0xb4>
  803d5c:	00e00034 	movhi	r3,32768
  803d60:	18ffffc4 	addi	r3,r3,-1
  803d64:	1805883a 	mov	r2,r3
  803d68:	dfc00717 	ldw	ra,28(sp)
  803d6c:	dec00804 	addi	sp,sp,32
  803d70:	f800283a 	ret
  803d74:	00800f04 	movi	r2,60
  803d78:	10d1c83a 	sub	r8,r2,r3
  803d7c:	40bff804 	addi	r2,r8,-32
  803d80:	d9800517 	ldw	r6,20(sp)
  803d84:	d9c00617 	ldw	r7,24(sp)
  803d88:	10000816 	blt	r2,zero,803dac <__fixdfsi+0xbc>
  803d8c:	3888d83a 	srl	r4,r7,r2
  803d90:	d8800317 	ldw	r2,12(sp)
  803d94:	2007883a 	mov	r3,r4
  803d98:	103fe226 	beq	r2,zero,803d24 <__fixdfsi+0x34>
  803d9c:	0107c83a 	sub	r3,zero,r4
  803da0:	003fe006 	br	803d24 <__fixdfsi+0x34>
  803da4:	00e00034 	movhi	r3,32768
  803da8:	003fde06 	br	803d24 <__fixdfsi+0x34>
  803dac:	39c7883a 	add	r3,r7,r7
  803db0:	008007c4 	movi	r2,31
  803db4:	1205c83a 	sub	r2,r2,r8
  803db8:	1886983a 	sll	r3,r3,r2
  803dbc:	3208d83a 	srl	r4,r6,r8
  803dc0:	1908b03a 	or	r4,r3,r4
  803dc4:	003ff206 	br	803d90 <__fixdfsi+0xa0>

00803dc8 <__make_dp>:
  803dc8:	defff904 	addi	sp,sp,-28
  803dcc:	d8c00717 	ldw	r3,28(sp)
  803dd0:	d9000015 	stw	r4,0(sp)
  803dd4:	d809883a 	mov	r4,sp
  803dd8:	dfc00515 	stw	ra,20(sp)
  803ddc:	d9c00615 	stw	r7,24(sp)
  803de0:	d9400115 	stw	r5,4(sp)
  803de4:	d9800215 	stw	r6,8(sp)
  803de8:	d8c00415 	stw	r3,16(sp)
  803dec:	d9c00315 	stw	r7,12(sp)
  803df0:	08043f00 	call	8043f0 <__pack_d>
  803df4:	dfc00517 	ldw	ra,20(sp)
  803df8:	dec00704 	addi	sp,sp,28
  803dfc:	f800283a 	ret

00803e00 <__truncdfsf2>:
  803e00:	defff804 	addi	sp,sp,-32
  803e04:	2005883a 	mov	r2,r4
  803e08:	2807883a 	mov	r3,r5
  803e0c:	d809883a 	mov	r4,sp
  803e10:	d9400204 	addi	r5,sp,8
  803e14:	d8c00115 	stw	r3,4(sp)
  803e18:	d8800015 	stw	r2,0(sp)
  803e1c:	dfc00715 	stw	ra,28(sp)
  803e20:	08047040 	call	804704 <__unpack_d>
  803e24:	d9c00517 	ldw	r7,20(sp)
  803e28:	da000617 	ldw	r8,24(sp)
  803e2c:	02d00034 	movhi	r11,16384
  803e30:	5affffc4 	addi	r11,r11,-1
  803e34:	3812d7ba 	srli	r9,r7,30
  803e38:	401a90ba 	slli	r13,r8,2
  803e3c:	3ac4703a 	and	r2,r7,r11
  803e40:	0007883a 	mov	r3,zero
  803e44:	6a52b03a 	or	r9,r13,r9
  803e48:	10c4b03a 	or	r2,r2,r3
  803e4c:	d9000217 	ldw	r4,8(sp)
  803e50:	d9400317 	ldw	r5,12(sp)
  803e54:	d9800417 	ldw	r6,16(sp)
  803e58:	480f883a 	mov	r7,r9
  803e5c:	10000126 	beq	r2,zero,803e64 <__truncdfsf2+0x64>
  803e60:	49c00054 	ori	r7,r9,1
  803e64:	08043c40 	call	8043c4 <__make_fp>
  803e68:	dfc00717 	ldw	ra,28(sp)
  803e6c:	dec00804 	addi	sp,sp,32
  803e70:	f800283a 	ret

00803e74 <udivmodsi4>:
  803e74:	29001b2e 	bgeu	r5,r4,803ee4 <udivmodsi4+0x70>
  803e78:	28001a16 	blt	r5,zero,803ee4 <udivmodsi4+0x70>
  803e7c:	00800044 	movi	r2,1
  803e80:	0007883a 	mov	r3,zero
  803e84:	01c007c4 	movi	r7,31
  803e88:	00000306 	br	803e98 <udivmodsi4+0x24>
  803e8c:	19c01326 	beq	r3,r7,803edc <udivmodsi4+0x68>
  803e90:	18c00044 	addi	r3,r3,1
  803e94:	28000416 	blt	r5,zero,803ea8 <udivmodsi4+0x34>
  803e98:	294b883a 	add	r5,r5,r5
  803e9c:	1085883a 	add	r2,r2,r2
  803ea0:	293ffa36 	bltu	r5,r4,803e8c <udivmodsi4+0x18>
  803ea4:	10000d26 	beq	r2,zero,803edc <udivmodsi4+0x68>
  803ea8:	0007883a 	mov	r3,zero
  803eac:	21400236 	bltu	r4,r5,803eb8 <udivmodsi4+0x44>
  803eb0:	2149c83a 	sub	r4,r4,r5
  803eb4:	1886b03a 	or	r3,r3,r2
  803eb8:	1004d07a 	srli	r2,r2,1
  803ebc:	280ad07a 	srli	r5,r5,1
  803ec0:	103ffa1e 	bne	r2,zero,803eac <udivmodsi4+0x38>
  803ec4:	30000226 	beq	r6,zero,803ed0 <udivmodsi4+0x5c>
  803ec8:	2005883a 	mov	r2,r4
  803ecc:	f800283a 	ret
  803ed0:	1809883a 	mov	r4,r3
  803ed4:	2005883a 	mov	r2,r4
  803ed8:	f800283a 	ret
  803edc:	0007883a 	mov	r3,zero
  803ee0:	003ff806 	br	803ec4 <udivmodsi4+0x50>
  803ee4:	00800044 	movi	r2,1
  803ee8:	0007883a 	mov	r3,zero
  803eec:	003fef06 	br	803eac <udivmodsi4+0x38>

00803ef0 <__divsi3>:
  803ef0:	defffe04 	addi	sp,sp,-8
  803ef4:	dc000015 	stw	r16,0(sp)
  803ef8:	dfc00115 	stw	ra,4(sp)
  803efc:	0021883a 	mov	r16,zero
  803f00:	20000c16 	blt	r4,zero,803f34 <__divsi3+0x44>
  803f04:	000d883a 	mov	r6,zero
  803f08:	28000e16 	blt	r5,zero,803f44 <__divsi3+0x54>
  803f0c:	0803e740 	call	803e74 <udivmodsi4>
  803f10:	1007883a 	mov	r3,r2
  803f14:	8005003a 	cmpeq	r2,r16,zero
  803f18:	1000011e 	bne	r2,zero,803f20 <__divsi3+0x30>
  803f1c:	00c7c83a 	sub	r3,zero,r3
  803f20:	1805883a 	mov	r2,r3
  803f24:	dfc00117 	ldw	ra,4(sp)
  803f28:	dc000017 	ldw	r16,0(sp)
  803f2c:	dec00204 	addi	sp,sp,8
  803f30:	f800283a 	ret
  803f34:	0109c83a 	sub	r4,zero,r4
  803f38:	04000044 	movi	r16,1
  803f3c:	000d883a 	mov	r6,zero
  803f40:	283ff20e 	bge	r5,zero,803f0c <__divsi3+0x1c>
  803f44:	014bc83a 	sub	r5,zero,r5
  803f48:	8021003a 	cmpeq	r16,r16,zero
  803f4c:	003fef06 	br	803f0c <__divsi3+0x1c>

00803f50 <__modsi3>:
  803f50:	deffff04 	addi	sp,sp,-4
  803f54:	dfc00015 	stw	ra,0(sp)
  803f58:	01800044 	movi	r6,1
  803f5c:	2807883a 	mov	r3,r5
  803f60:	20000416 	blt	r4,zero,803f74 <__modsi3+0x24>
  803f64:	28000c16 	blt	r5,zero,803f98 <__modsi3+0x48>
  803f68:	dfc00017 	ldw	ra,0(sp)
  803f6c:	dec00104 	addi	sp,sp,4
  803f70:	0803e741 	jmpi	803e74 <udivmodsi4>
  803f74:	0109c83a 	sub	r4,zero,r4
  803f78:	28000b16 	blt	r5,zero,803fa8 <__modsi3+0x58>
  803f7c:	180b883a 	mov	r5,r3
  803f80:	01800044 	movi	r6,1
  803f84:	0803e740 	call	803e74 <udivmodsi4>
  803f88:	0085c83a 	sub	r2,zero,r2
  803f8c:	dfc00017 	ldw	ra,0(sp)
  803f90:	dec00104 	addi	sp,sp,4
  803f94:	f800283a 	ret
  803f98:	014bc83a 	sub	r5,zero,r5
  803f9c:	dfc00017 	ldw	ra,0(sp)
  803fa0:	dec00104 	addi	sp,sp,4
  803fa4:	0803e741 	jmpi	803e74 <udivmodsi4>
  803fa8:	0147c83a 	sub	r3,zero,r5
  803fac:	003ff306 	br	803f7c <__modsi3+0x2c>

00803fb0 <__udivsi3>:
  803fb0:	000d883a 	mov	r6,zero
  803fb4:	0803e741 	jmpi	803e74 <udivmodsi4>

00803fb8 <__umodsi3>:
  803fb8:	01800044 	movi	r6,1
  803fbc:	0803e741 	jmpi	803e74 <udivmodsi4>

00803fc0 <__mulsi3>:
  803fc0:	20000a26 	beq	r4,zero,803fec <__mulsi3+0x2c>
  803fc4:	0007883a 	mov	r3,zero
  803fc8:	2080004c 	andi	r2,r4,1
  803fcc:	1005003a 	cmpeq	r2,r2,zero
  803fd0:	2008d07a 	srli	r4,r4,1
  803fd4:	1000011e 	bne	r2,zero,803fdc <__mulsi3+0x1c>
  803fd8:	1947883a 	add	r3,r3,r5
  803fdc:	294b883a 	add	r5,r5,r5
  803fe0:	203ff91e 	bne	r4,zero,803fc8 <__mulsi3+0x8>
  803fe4:	1805883a 	mov	r2,r3
  803fe8:	f800283a 	ret
  803fec:	0007883a 	mov	r3,zero
  803ff0:	1805883a 	mov	r2,r3
  803ff4:	f800283a 	ret

00803ff8 <__muldi3>:
  803ff8:	defff204 	addi	sp,sp,-56
  803ffc:	df000c15 	stw	fp,48(sp)
  804000:	3038d43a 	srli	fp,r6,16
  804004:	dd000815 	stw	r20,32(sp)
  804008:	dc400515 	stw	r17,20(sp)
  80400c:	2028d43a 	srli	r20,r4,16
  804010:	247fffcc 	andi	r17,r4,65535
  804014:	dc000415 	stw	r16,16(sp)
  804018:	343fffcc 	andi	r16,r6,65535
  80401c:	dcc00715 	stw	r19,28(sp)
  804020:	d9000015 	stw	r4,0(sp)
  804024:	2827883a 	mov	r19,r5
  804028:	8809883a 	mov	r4,r17
  80402c:	d9400115 	stw	r5,4(sp)
  804030:	800b883a 	mov	r5,r16
  804034:	d9800215 	stw	r6,8(sp)
  804038:	dfc00d15 	stw	ra,52(sp)
  80403c:	d9c00315 	stw	r7,12(sp)
  804040:	dd800a15 	stw	r22,40(sp)
  804044:	dd400915 	stw	r21,36(sp)
  804048:	302d883a 	mov	r22,r6
  80404c:	ddc00b15 	stw	r23,44(sp)
  804050:	dc800615 	stw	r18,24(sp)
  804054:	0803fc00 	call	803fc0 <__mulsi3>
  804058:	8809883a 	mov	r4,r17
  80405c:	e00b883a 	mov	r5,fp
  804060:	102b883a 	mov	r21,r2
  804064:	0803fc00 	call	803fc0 <__mulsi3>
  804068:	800b883a 	mov	r5,r16
  80406c:	a009883a 	mov	r4,r20
  804070:	1023883a 	mov	r17,r2
  804074:	0803fc00 	call	803fc0 <__mulsi3>
  804078:	a009883a 	mov	r4,r20
  80407c:	e00b883a 	mov	r5,fp
  804080:	1021883a 	mov	r16,r2
  804084:	0803fc00 	call	803fc0 <__mulsi3>
  804088:	a8ffffcc 	andi	r3,r21,65535
  80408c:	a82ad43a 	srli	r21,r21,16
  804090:	8c23883a 	add	r17,r17,r16
  804094:	1011883a 	mov	r8,r2
  804098:	ac6b883a 	add	r21,r21,r17
  80409c:	a804943a 	slli	r2,r21,16
  8040a0:	b009883a 	mov	r4,r22
  8040a4:	980b883a 	mov	r5,r19
  8040a8:	10c7883a 	add	r3,r2,r3
  8040ac:	a812d43a 	srli	r9,r21,16
  8040b0:	180d883a 	mov	r6,r3
  8040b4:	ac00022e 	bgeu	r21,r16,8040c0 <__muldi3+0xc8>
  8040b8:	00800074 	movhi	r2,1
  8040bc:	4091883a 	add	r8,r8,r2
  8040c0:	4267883a 	add	r19,r8,r9
  8040c4:	302d883a 	mov	r22,r6
  8040c8:	0803fc00 	call	803fc0 <__mulsi3>
  8040cc:	d9400317 	ldw	r5,12(sp)
  8040d0:	d9000017 	ldw	r4,0(sp)
  8040d4:	1023883a 	mov	r17,r2
  8040d8:	0803fc00 	call	803fc0 <__mulsi3>
  8040dc:	14cb883a 	add	r5,r2,r19
  8040e0:	894b883a 	add	r5,r17,r5
  8040e4:	b005883a 	mov	r2,r22
  8040e8:	2807883a 	mov	r3,r5
  8040ec:	dfc00d17 	ldw	ra,52(sp)
  8040f0:	df000c17 	ldw	fp,48(sp)
  8040f4:	ddc00b17 	ldw	r23,44(sp)
  8040f8:	dd800a17 	ldw	r22,40(sp)
  8040fc:	dd400917 	ldw	r21,36(sp)
  804100:	dd000817 	ldw	r20,32(sp)
  804104:	dcc00717 	ldw	r19,28(sp)
  804108:	dc800617 	ldw	r18,24(sp)
  80410c:	dc400517 	ldw	r17,20(sp)
  804110:	dc000417 	ldw	r16,16(sp)
  804114:	dec00e04 	addi	sp,sp,56
  804118:	f800283a 	ret

0080411c <__clzsi2>:
  80411c:	00bfffd4 	movui	r2,65535
  804120:	11000e36 	bltu	r2,r4,80415c <__clzsi2+0x40>
  804124:	00803fc4 	movi	r2,255
  804128:	01400204 	movi	r5,8
  80412c:	0007883a 	mov	r3,zero
  804130:	11001036 	bltu	r2,r4,804174 <__clzsi2+0x58>
  804134:	000b883a 	mov	r5,zero
  804138:	20c6d83a 	srl	r3,r4,r3
  80413c:	00802074 	movhi	r2,129
  804140:	10bf4e04 	addi	r2,r2,-712
  804144:	1887883a 	add	r3,r3,r2
  804148:	18800003 	ldbu	r2,0(r3)
  80414c:	00c00804 	movi	r3,32
  804150:	2885883a 	add	r2,r5,r2
  804154:	1885c83a 	sub	r2,r3,r2
  804158:	f800283a 	ret
  80415c:	01400404 	movi	r5,16
  804160:	00804034 	movhi	r2,256
  804164:	10bfffc4 	addi	r2,r2,-1
  804168:	2807883a 	mov	r3,r5
  80416c:	113ff22e 	bgeu	r2,r4,804138 <__clzsi2+0x1c>
  804170:	01400604 	movi	r5,24
  804174:	2807883a 	mov	r3,r5
  804178:	20c6d83a 	srl	r3,r4,r3
  80417c:	00802074 	movhi	r2,129
  804180:	10bf4e04 	addi	r2,r2,-712
  804184:	1887883a 	add	r3,r3,r2
  804188:	18800003 	ldbu	r2,0(r3)
  80418c:	00c00804 	movi	r3,32
  804190:	2885883a 	add	r2,r5,r2
  804194:	1885c83a 	sub	r2,r3,r2
  804198:	f800283a 	ret

0080419c <__pack_f>:
  80419c:	20c00017 	ldw	r3,0(r4)
  8041a0:	01c00044 	movi	r7,1
  8041a4:	21800317 	ldw	r6,12(r4)
  8041a8:	21400117 	ldw	r5,4(r4)
  8041ac:	38c02d2e 	bgeu	r7,r3,804264 <__pack_f+0xc8>
  8041b0:	00800104 	movi	r2,4
  8041b4:	18802826 	beq	r3,r2,804258 <__pack_f+0xbc>
  8041b8:	00800084 	movi	r2,2
  8041bc:	18800126 	beq	r3,r2,8041c4 <__pack_f+0x28>
  8041c0:	3000101e 	bne	r6,zero,804204 <__pack_f+0x68>
  8041c4:	000d883a 	mov	r6,zero
  8041c8:	0007883a 	mov	r3,zero
  8041cc:	19003fcc 	andi	r4,r3,255
  8041d0:	200895fa 	slli	r4,r4,23
  8041d4:	00c02034 	movhi	r3,128
  8041d8:	18ffffc4 	addi	r3,r3,-1
  8041dc:	30c6703a 	and	r3,r6,r3
  8041e0:	10a0002c 	andhi	r2,r2,32768
  8041e4:	10c4b03a 	or	r2,r2,r3
  8041e8:	280a97fa 	slli	r5,r5,31
  8041ec:	1104b03a 	or	r2,r2,r4
  8041f0:	00e00034 	movhi	r3,32768
  8041f4:	18ffffc4 	addi	r3,r3,-1
  8041f8:	10c4703a 	and	r2,r2,r3
  8041fc:	1144b03a 	or	r2,r2,r5
  804200:	f800283a 	ret
  804204:	21000217 	ldw	r4,8(r4)
  804208:	00bfe084 	movi	r2,-126
  80420c:	20801b16 	blt	r4,r2,80427c <__pack_f+0xe0>
  804210:	00801fc4 	movi	r2,127
  804214:	11001016 	blt	r2,r4,804258 <__pack_f+0xbc>
  804218:	308e703a 	and	r7,r6,r2
  80421c:	2087883a 	add	r3,r4,r2
  804220:	00801004 	movi	r2,64
  804224:	38800526 	beq	r7,r2,80423c <__pack_f+0xa0>
  804228:	31800fc4 	addi	r6,r6,63
  80422c:	30000716 	blt	r6,zero,80424c <__pack_f+0xb0>
  804230:	300490ba 	slli	r2,r6,2
  804234:	100cd27a 	srli	r6,r2,9
  804238:	003fe406 	br	8041cc <__pack_f+0x30>
  80423c:	3080200c 	andi	r2,r6,128
  804240:	103ffa26 	beq	r2,zero,80422c <__pack_f+0x90>
  804244:	31cd883a 	add	r6,r6,r7
  804248:	003ff806 	br	80422c <__pack_f+0x90>
  80424c:	300cd07a 	srli	r6,r6,1
  804250:	18c00044 	addi	r3,r3,1
  804254:	003ff606 	br	804230 <__pack_f+0x94>
  804258:	000d883a 	mov	r6,zero
  80425c:	00ffffc4 	movi	r3,-1
  804260:	003fda06 	br	8041cc <__pack_f+0x30>
  804264:	31800434 	orhi	r6,r6,16
  804268:	00802034 	movhi	r2,128
  80426c:	10bfffc4 	addi	r2,r2,-1
  804270:	308c703a 	and	r6,r6,r2
  804274:	00ffffc4 	movi	r3,-1
  804278:	003fd406 	br	8041cc <__pack_f+0x30>
  80427c:	1109c83a 	sub	r4,r2,r4
  804280:	00800644 	movi	r2,25
  804284:	11001216 	blt	r2,r4,8042d0 <__pack_f+0x134>
  804288:	3904983a 	sll	r2,r7,r4
  80428c:	3106d83a 	srl	r3,r6,r4
  804290:	10bfffc4 	addi	r2,r2,-1
  804294:	3084703a 	and	r2,r6,r2
  804298:	1004c03a 	cmpne	r2,r2,zero
  80429c:	1886b03a 	or	r3,r3,r2
  8042a0:	19001fcc 	andi	r4,r3,127
  8042a4:	00801004 	movi	r2,64
  8042a8:	20800c26 	beq	r4,r2,8042dc <__pack_f+0x140>
  8042ac:	18c00fc4 	addi	r3,r3,63
  8042b0:	00900034 	movhi	r2,16384
  8042b4:	10bfffc4 	addi	r2,r2,-1
  8042b8:	180cd1fa 	srli	r6,r3,7
  8042bc:	10c7803a 	cmpltu	r3,r2,r3
  8042c0:	00802034 	movhi	r2,128
  8042c4:	10bfffc4 	addi	r2,r2,-1
  8042c8:	308c703a 	and	r6,r6,r2
  8042cc:	003fbf06 	br	8041cc <__pack_f+0x30>
  8042d0:	0007883a 	mov	r3,zero
  8042d4:	000d883a 	mov	r6,zero
  8042d8:	003ff906 	br	8042c0 <__pack_f+0x124>
  8042dc:	1880200c 	andi	r2,r3,128
  8042e0:	10000126 	beq	r2,zero,8042e8 <__pack_f+0x14c>
  8042e4:	1907883a 	add	r3,r3,r4
  8042e8:	180cd1fa 	srli	r6,r3,7
  8042ec:	00900034 	movhi	r2,16384
  8042f0:	10bfffc4 	addi	r2,r2,-1
  8042f4:	10c7803a 	cmpltu	r3,r2,r3
  8042f8:	003ff106 	br	8042c0 <__pack_f+0x124>

008042fc <__unpack_f>:
  8042fc:	21800017 	ldw	r6,0(r4)
  804300:	00c02034 	movhi	r3,128
  804304:	18ffffc4 	addi	r3,r3,-1
  804308:	3004d5fa 	srli	r2,r6,23
  80430c:	3008d7fa 	srli	r4,r6,31
  804310:	30ce703a 	and	r7,r6,r3
  804314:	10c03fcc 	andi	r3,r2,255
  804318:	29000115 	stw	r4,4(r5)
  80431c:	1800131e 	bne	r3,zero,80436c <__unpack_f+0x70>
  804320:	38000f26 	beq	r7,zero,804360 <__unpack_f+0x64>
  804324:	380691fa 	slli	r3,r7,7
  804328:	01bfe084 	movi	r6,-126
  80432c:	008000c4 	movi	r2,3
  804330:	01100034 	movhi	r4,16384
  804334:	213fffc4 	addi	r4,r4,-1
  804338:	28800015 	stw	r2,0(r5)
  80433c:	29800215 	stw	r6,8(r5)
  804340:	20c00536 	bltu	r4,r3,804358 <__unpack_f+0x5c>
  804344:	3005883a 	mov	r2,r6
  804348:	18c7883a 	add	r3,r3,r3
  80434c:	10bfffc4 	addi	r2,r2,-1
  804350:	20fffd2e 	bgeu	r4,r3,804348 <__unpack_f+0x4c>
  804354:	28800215 	stw	r2,8(r5)
  804358:	28c00315 	stw	r3,12(r5)
  80435c:	f800283a 	ret
  804360:	00800084 	movi	r2,2
  804364:	28800015 	stw	r2,0(r5)
  804368:	f800283a 	ret
  80436c:	00803fc4 	movi	r2,255
  804370:	18800826 	beq	r3,r2,804394 <__unpack_f+0x98>
  804374:	380491fa 	slli	r2,r7,7
  804378:	18ffe044 	addi	r3,r3,-127
  80437c:	28c00215 	stw	r3,8(r5)
  804380:	10900034 	orhi	r2,r2,16384
  804384:	28800315 	stw	r2,12(r5)
  804388:	008000c4 	movi	r2,3
  80438c:	28800015 	stw	r2,0(r5)
  804390:	f800283a 	ret
  804394:	3800031e 	bne	r7,zero,8043a4 <__unpack_f+0xa8>
  804398:	00800104 	movi	r2,4
  80439c:	28800015 	stw	r2,0(r5)
  8043a0:	f800283a 	ret
  8043a4:	3080042c 	andhi	r2,r6,16
  8043a8:	10000426 	beq	r2,zero,8043bc <__unpack_f+0xc0>
  8043ac:	00800044 	movi	r2,1
  8043b0:	28800015 	stw	r2,0(r5)
  8043b4:	29c00315 	stw	r7,12(r5)
  8043b8:	f800283a 	ret
  8043bc:	28000015 	stw	zero,0(r5)
  8043c0:	003ffc06 	br	8043b4 <__unpack_f+0xb8>

008043c4 <__make_fp>:
  8043c4:	defffb04 	addi	sp,sp,-20
  8043c8:	d9000015 	stw	r4,0(sp)
  8043cc:	d809883a 	mov	r4,sp
  8043d0:	dfc00415 	stw	ra,16(sp)
  8043d4:	d9400115 	stw	r5,4(sp)
  8043d8:	d9800215 	stw	r6,8(sp)
  8043dc:	d9c00315 	stw	r7,12(sp)
  8043e0:	080419c0 	call	80419c <__pack_f>
  8043e4:	dfc00417 	ldw	ra,16(sp)
  8043e8:	dec00504 	addi	sp,sp,20
  8043ec:	f800283a 	ret

008043f0 <__pack_d>:
  8043f0:	20c00017 	ldw	r3,0(r4)
  8043f4:	defffd04 	addi	sp,sp,-12
  8043f8:	dc000015 	stw	r16,0(sp)
  8043fc:	dc800215 	stw	r18,8(sp)
  804400:	dc400115 	stw	r17,4(sp)
  804404:	00800044 	movi	r2,1
  804408:	22000317 	ldw	r8,12(r4)
  80440c:	001f883a 	mov	r15,zero
  804410:	22400417 	ldw	r9,16(r4)
  804414:	24000117 	ldw	r16,4(r4)
  804418:	10c0552e 	bgeu	r2,r3,804570 <__pack_d+0x180>
  80441c:	00800104 	movi	r2,4
  804420:	18804f26 	beq	r3,r2,804560 <__pack_d+0x170>
  804424:	00800084 	movi	r2,2
  804428:	18800226 	beq	r3,r2,804434 <__pack_d+0x44>
  80442c:	4244b03a 	or	r2,r8,r9
  804430:	10001a1e 	bne	r2,zero,80449c <__pack_d+0xac>
  804434:	000d883a 	mov	r6,zero
  804438:	000f883a 	mov	r7,zero
  80443c:	0011883a 	mov	r8,zero
  804440:	00800434 	movhi	r2,16
  804444:	10bfffc4 	addi	r2,r2,-1
  804448:	301d883a 	mov	r14,r6
  80444c:	3884703a 	and	r2,r7,r2
  804450:	400a953a 	slli	r5,r8,20
  804454:	79bffc2c 	andhi	r6,r15,65520
  804458:	308cb03a 	or	r6,r6,r2
  80445c:	00e00434 	movhi	r3,32784
  804460:	18ffffc4 	addi	r3,r3,-1
  804464:	800497fa 	slli	r2,r16,31
  804468:	30c6703a 	and	r3,r6,r3
  80446c:	1946b03a 	or	r3,r3,r5
  804470:	01600034 	movhi	r5,32768
  804474:	297fffc4 	addi	r5,r5,-1
  804478:	194a703a 	and	r5,r3,r5
  80447c:	288ab03a 	or	r5,r5,r2
  804480:	2807883a 	mov	r3,r5
  804484:	7005883a 	mov	r2,r14
  804488:	dc800217 	ldw	r18,8(sp)
  80448c:	dc400117 	ldw	r17,4(sp)
  804490:	dc000017 	ldw	r16,0(sp)
  804494:	dec00304 	addi	sp,sp,12
  804498:	f800283a 	ret
  80449c:	21000217 	ldw	r4,8(r4)
  8044a0:	00bf0084 	movi	r2,-1022
  8044a4:	20803f16 	blt	r4,r2,8045a4 <__pack_d+0x1b4>
  8044a8:	0080ffc4 	movi	r2,1023
  8044ac:	11002c16 	blt	r2,r4,804560 <__pack_d+0x170>
  8044b0:	00803fc4 	movi	r2,255
  8044b4:	408c703a 	and	r6,r8,r2
  8044b8:	00802004 	movi	r2,128
  8044bc:	0007883a 	mov	r3,zero
  8044c0:	000f883a 	mov	r7,zero
  8044c4:	2280ffc4 	addi	r10,r4,1023
  8044c8:	30801e26 	beq	r6,r2,804544 <__pack_d+0x154>
  8044cc:	00801fc4 	movi	r2,127
  8044d0:	4089883a 	add	r4,r8,r2
  8044d4:	220d803a 	cmpltu	r6,r4,r8
  8044d8:	324d883a 	add	r6,r6,r9
  8044dc:	2011883a 	mov	r8,r4
  8044e0:	3013883a 	mov	r9,r6
  8044e4:	00880034 	movhi	r2,8192
  8044e8:	10bfffc4 	addi	r2,r2,-1
  8044ec:	12400d36 	bltu	r2,r9,804524 <__pack_d+0x134>
  8044f0:	4804963a 	slli	r2,r9,24
  8044f4:	400cd23a 	srli	r6,r8,8
  8044f8:	480ed23a 	srli	r7,r9,8
  8044fc:	013fffc4 	movi	r4,-1
  804500:	118cb03a 	or	r6,r2,r6
  804504:	01400434 	movhi	r5,16
  804508:	297fffc4 	addi	r5,r5,-1
  80450c:	3104703a 	and	r2,r6,r4
  804510:	3946703a 	and	r3,r7,r5
  804514:	5201ffcc 	andi	r8,r10,2047
  804518:	100d883a 	mov	r6,r2
  80451c:	180f883a 	mov	r7,r3
  804520:	003fc706 	br	804440 <__pack_d+0x50>
  804524:	480897fa 	slli	r4,r9,31
  804528:	4004d07a 	srli	r2,r8,1
  80452c:	4806d07a 	srli	r3,r9,1
  804530:	52800044 	addi	r10,r10,1
  804534:	2084b03a 	or	r2,r4,r2
  804538:	1011883a 	mov	r8,r2
  80453c:	1813883a 	mov	r9,r3
  804540:	003feb06 	br	8044f0 <__pack_d+0x100>
  804544:	383fe11e 	bne	r7,zero,8044cc <__pack_d+0xdc>
  804548:	01004004 	movi	r4,256
  80454c:	4104703a 	and	r2,r8,r4
  804550:	10c4b03a 	or	r2,r2,r3
  804554:	103fe326 	beq	r2,zero,8044e4 <__pack_d+0xf4>
  804558:	3005883a 	mov	r2,r6
  80455c:	003fdc06 	br	8044d0 <__pack_d+0xe0>
  804560:	000d883a 	mov	r6,zero
  804564:	000f883a 	mov	r7,zero
  804568:	0201ffc4 	movi	r8,2047
  80456c:	003fb406 	br	804440 <__pack_d+0x50>
  804570:	0005883a 	mov	r2,zero
  804574:	00c00234 	movhi	r3,8
  804578:	408cb03a 	or	r6,r8,r2
  80457c:	48ceb03a 	or	r7,r9,r3
  804580:	013fffc4 	movi	r4,-1
  804584:	01400434 	movhi	r5,16
  804588:	297fffc4 	addi	r5,r5,-1
  80458c:	3104703a 	and	r2,r6,r4
  804590:	3946703a 	and	r3,r7,r5
  804594:	100d883a 	mov	r6,r2
  804598:	180f883a 	mov	r7,r3
  80459c:	0201ffc4 	movi	r8,2047
  8045a0:	003fa706 	br	804440 <__pack_d+0x50>
  8045a4:	1109c83a 	sub	r4,r2,r4
  8045a8:	00800e04 	movi	r2,56
  8045ac:	11004316 	blt	r2,r4,8046bc <__pack_d+0x2cc>
  8045b0:	21fff804 	addi	r7,r4,-32
  8045b4:	38004516 	blt	r7,zero,8046cc <__pack_d+0x2dc>
  8045b8:	49d8d83a 	srl	r12,r9,r7
  8045bc:	001b883a 	mov	r13,zero
  8045c0:	0023883a 	mov	r17,zero
  8045c4:	01400044 	movi	r5,1
  8045c8:	0025883a 	mov	r18,zero
  8045cc:	38004716 	blt	r7,zero,8046ec <__pack_d+0x2fc>
  8045d0:	29d6983a 	sll	r11,r5,r7
  8045d4:	0015883a 	mov	r10,zero
  8045d8:	00bfffc4 	movi	r2,-1
  8045dc:	5089883a 	add	r4,r10,r2
  8045e0:	588b883a 	add	r5,r11,r2
  8045e4:	228d803a 	cmpltu	r6,r4,r10
  8045e8:	314b883a 	add	r5,r6,r5
  8045ec:	4104703a 	and	r2,r8,r4
  8045f0:	4946703a 	and	r3,r9,r5
  8045f4:	10c4b03a 	or	r2,r2,r3
  8045f8:	10000226 	beq	r2,zero,804604 <__pack_d+0x214>
  8045fc:	04400044 	movi	r17,1
  804600:	0025883a 	mov	r18,zero
  804604:	00803fc4 	movi	r2,255
  804608:	644eb03a 	or	r7,r12,r17
  80460c:	3892703a 	and	r9,r7,r2
  804610:	00802004 	movi	r2,128
  804614:	6c90b03a 	or	r8,r13,r18
  804618:	0015883a 	mov	r10,zero
  80461c:	48801626 	beq	r9,r2,804678 <__pack_d+0x288>
  804620:	01001fc4 	movi	r4,127
  804624:	3905883a 	add	r2,r7,r4
  804628:	11cd803a 	cmpltu	r6,r2,r7
  80462c:	320d883a 	add	r6,r6,r8
  804630:	100f883a 	mov	r7,r2
  804634:	00840034 	movhi	r2,4096
  804638:	10bfffc4 	addi	r2,r2,-1
  80463c:	3011883a 	mov	r8,r6
  804640:	0007883a 	mov	r3,zero
  804644:	11801b36 	bltu	r2,r6,8046b4 <__pack_d+0x2c4>
  804648:	4004963a 	slli	r2,r8,24
  80464c:	3808d23a 	srli	r4,r7,8
  804650:	400ad23a 	srli	r5,r8,8
  804654:	1813883a 	mov	r9,r3
  804658:	1108b03a 	or	r4,r2,r4
  80465c:	00bfffc4 	movi	r2,-1
  804660:	00c00434 	movhi	r3,16
  804664:	18ffffc4 	addi	r3,r3,-1
  804668:	208c703a 	and	r6,r4,r2
  80466c:	28ce703a 	and	r7,r5,r3
  804670:	4a01ffcc 	andi	r8,r9,2047
  804674:	003f7206 	br	804440 <__pack_d+0x50>
  804678:	503fe91e 	bne	r10,zero,804620 <__pack_d+0x230>
  80467c:	01004004 	movi	r4,256
  804680:	3904703a 	and	r2,r7,r4
  804684:	0007883a 	mov	r3,zero
  804688:	10c4b03a 	or	r2,r2,r3
  80468c:	10000626 	beq	r2,zero,8046a8 <__pack_d+0x2b8>
  804690:	3a45883a 	add	r2,r7,r9
  804694:	11cd803a 	cmpltu	r6,r2,r7
  804698:	320d883a 	add	r6,r6,r8
  80469c:	100f883a 	mov	r7,r2
  8046a0:	3011883a 	mov	r8,r6
  8046a4:	0007883a 	mov	r3,zero
  8046a8:	00840034 	movhi	r2,4096
  8046ac:	10bfffc4 	addi	r2,r2,-1
  8046b0:	123fe52e 	bgeu	r2,r8,804648 <__pack_d+0x258>
  8046b4:	00c00044 	movi	r3,1
  8046b8:	003fe306 	br	804648 <__pack_d+0x258>
  8046bc:	0009883a 	mov	r4,zero
  8046c0:	0013883a 	mov	r9,zero
  8046c4:	000b883a 	mov	r5,zero
  8046c8:	003fe406 	br	80465c <__pack_d+0x26c>
  8046cc:	4a47883a 	add	r3,r9,r9
  8046d0:	008007c4 	movi	r2,31
  8046d4:	1105c83a 	sub	r2,r2,r4
  8046d8:	1886983a 	sll	r3,r3,r2
  8046dc:	4118d83a 	srl	r12,r8,r4
  8046e0:	491ad83a 	srl	r13,r9,r4
  8046e4:	1b18b03a 	or	r12,r3,r12
  8046e8:	003fb506 	br	8045c0 <__pack_d+0x1d0>
  8046ec:	2806d07a 	srli	r3,r5,1
  8046f0:	008007c4 	movi	r2,31
  8046f4:	1105c83a 	sub	r2,r2,r4
  8046f8:	1896d83a 	srl	r11,r3,r2
  8046fc:	2914983a 	sll	r10,r5,r4
  804700:	003fb506 	br	8045d8 <__pack_d+0x1e8>

00804704 <__unpack_d>:
  804704:	20c00117 	ldw	r3,4(r4)
  804708:	22400017 	ldw	r9,0(r4)
  80470c:	00800434 	movhi	r2,16
  804710:	10bfffc4 	addi	r2,r2,-1
  804714:	1808d53a 	srli	r4,r3,20
  804718:	180cd7fa 	srli	r6,r3,31
  80471c:	1894703a 	and	r10,r3,r2
  804720:	2201ffcc 	andi	r8,r4,2047
  804724:	281b883a 	mov	r13,r5
  804728:	4817883a 	mov	r11,r9
  80472c:	29800115 	stw	r6,4(r5)
  804730:	5019883a 	mov	r12,r10
  804734:	40001e1e 	bne	r8,zero,8047b0 <__unpack_d+0xac>
  804738:	4a84b03a 	or	r2,r9,r10
  80473c:	10001926 	beq	r2,zero,8047a4 <__unpack_d+0xa0>
  804740:	4804d63a 	srli	r2,r9,24
  804744:	500c923a 	slli	r6,r10,8
  804748:	013f0084 	movi	r4,-1022
  80474c:	00c40034 	movhi	r3,4096
  804750:	18ffffc4 	addi	r3,r3,-1
  804754:	118cb03a 	or	r6,r2,r6
  804758:	008000c4 	movi	r2,3
  80475c:	480a923a 	slli	r5,r9,8
  804760:	68800015 	stw	r2,0(r13)
  804764:	69000215 	stw	r4,8(r13)
  804768:	19800b36 	bltu	r3,r6,804798 <__unpack_d+0x94>
  80476c:	200f883a 	mov	r7,r4
  804770:	1811883a 	mov	r8,r3
  804774:	2945883a 	add	r2,r5,r5
  804778:	1149803a 	cmpltu	r4,r2,r5
  80477c:	3187883a 	add	r3,r6,r6
  804780:	20c9883a 	add	r4,r4,r3
  804784:	100b883a 	mov	r5,r2
  804788:	200d883a 	mov	r6,r4
  80478c:	39ffffc4 	addi	r7,r7,-1
  804790:	413ff82e 	bgeu	r8,r4,804774 <__unpack_d+0x70>
  804794:	69c00215 	stw	r7,8(r13)
  804798:	69800415 	stw	r6,16(r13)
  80479c:	69400315 	stw	r5,12(r13)
  8047a0:	f800283a 	ret
  8047a4:	00800084 	movi	r2,2
  8047a8:	28800015 	stw	r2,0(r5)
  8047ac:	f800283a 	ret
  8047b0:	0081ffc4 	movi	r2,2047
  8047b4:	40800f26 	beq	r8,r2,8047f4 <__unpack_d+0xf0>
  8047b8:	480cd63a 	srli	r6,r9,24
  8047bc:	5006923a 	slli	r3,r10,8
  8047c0:	4804923a 	slli	r2,r9,8
  8047c4:	0009883a 	mov	r4,zero
  8047c8:	30c6b03a 	or	r3,r6,r3
  8047cc:	01440034 	movhi	r5,4096
  8047d0:	110cb03a 	or	r6,r2,r4
  8047d4:	423f0044 	addi	r8,r8,-1023
  8047d8:	194eb03a 	or	r7,r3,r5
  8047dc:	008000c4 	movi	r2,3
  8047e0:	69c00415 	stw	r7,16(r13)
  8047e4:	6a000215 	stw	r8,8(r13)
  8047e8:	68800015 	stw	r2,0(r13)
  8047ec:	69800315 	stw	r6,12(r13)
  8047f0:	f800283a 	ret
  8047f4:	4a84b03a 	or	r2,r9,r10
  8047f8:	1000031e 	bne	r2,zero,804808 <__unpack_d+0x104>
  8047fc:	00800104 	movi	r2,4
  804800:	28800015 	stw	r2,0(r5)
  804804:	f800283a 	ret
  804808:	0009883a 	mov	r4,zero
  80480c:	01400234 	movhi	r5,8
  804810:	4904703a 	and	r2,r9,r4
  804814:	5146703a 	and	r3,r10,r5
  804818:	10c4b03a 	or	r2,r2,r3
  80481c:	10000526 	beq	r2,zero,804834 <__unpack_d+0x130>
  804820:	00800044 	movi	r2,1
  804824:	68800015 	stw	r2,0(r13)
  804828:	6b000415 	stw	r12,16(r13)
  80482c:	6ac00315 	stw	r11,12(r13)
  804830:	f800283a 	ret
  804834:	68000015 	stw	zero,0(r13)
  804838:	003ffb06 	br	804828 <__unpack_d+0x124>

0080483c <__fpcmp_parts_d>:
  80483c:	21800017 	ldw	r6,0(r4)
  804840:	00c00044 	movi	r3,1
  804844:	19800a2e 	bgeu	r3,r6,804870 <__fpcmp_parts_d+0x34>
  804848:	28800017 	ldw	r2,0(r5)
  80484c:	1880082e 	bgeu	r3,r2,804870 <__fpcmp_parts_d+0x34>
  804850:	00c00104 	movi	r3,4
  804854:	30c02626 	beq	r6,r3,8048f0 <__fpcmp_parts_d+0xb4>
  804858:	10c02226 	beq	r2,r3,8048e4 <__fpcmp_parts_d+0xa8>
  80485c:	00c00084 	movi	r3,2
  804860:	30c00526 	beq	r6,r3,804878 <__fpcmp_parts_d+0x3c>
  804864:	10c0071e 	bne	r2,r3,804884 <__fpcmp_parts_d+0x48>
  804868:	20800117 	ldw	r2,4(r4)
  80486c:	1000091e 	bne	r2,zero,804894 <__fpcmp_parts_d+0x58>
  804870:	00800044 	movi	r2,1
  804874:	f800283a 	ret
  804878:	10c01a1e 	bne	r2,r3,8048e4 <__fpcmp_parts_d+0xa8>
  80487c:	0005883a 	mov	r2,zero
  804880:	f800283a 	ret
  804884:	22000117 	ldw	r8,4(r4)
  804888:	28800117 	ldw	r2,4(r5)
  80488c:	40800326 	beq	r8,r2,80489c <__fpcmp_parts_d+0x60>
  804890:	403ff726 	beq	r8,zero,804870 <__fpcmp_parts_d+0x34>
  804894:	00bfffc4 	movi	r2,-1
  804898:	f800283a 	ret
  80489c:	20c00217 	ldw	r3,8(r4)
  8048a0:	28800217 	ldw	r2,8(r5)
  8048a4:	10fffa16 	blt	r2,r3,804890 <__fpcmp_parts_d+0x54>
  8048a8:	18800916 	blt	r3,r2,8048d0 <__fpcmp_parts_d+0x94>
  8048ac:	21c00417 	ldw	r7,16(r4)
  8048b0:	28c00417 	ldw	r3,16(r5)
  8048b4:	21800317 	ldw	r6,12(r4)
  8048b8:	28800317 	ldw	r2,12(r5)
  8048bc:	19fff436 	bltu	r3,r7,804890 <__fpcmp_parts_d+0x54>
  8048c0:	38c00526 	beq	r7,r3,8048d8 <__fpcmp_parts_d+0x9c>
  8048c4:	38c00236 	bltu	r7,r3,8048d0 <__fpcmp_parts_d+0x94>
  8048c8:	19ffec1e 	bne	r3,r7,80487c <__fpcmp_parts_d+0x40>
  8048cc:	30bfeb2e 	bgeu	r6,r2,80487c <__fpcmp_parts_d+0x40>
  8048d0:	403fe71e 	bne	r8,zero,804870 <__fpcmp_parts_d+0x34>
  8048d4:	003fef06 	br	804894 <__fpcmp_parts_d+0x58>
  8048d8:	11bffa2e 	bgeu	r2,r6,8048c4 <__fpcmp_parts_d+0x88>
  8048dc:	403fe426 	beq	r8,zero,804870 <__fpcmp_parts_d+0x34>
  8048e0:	003fec06 	br	804894 <__fpcmp_parts_d+0x58>
  8048e4:	28800117 	ldw	r2,4(r5)
  8048e8:	103fe11e 	bne	r2,zero,804870 <__fpcmp_parts_d+0x34>
  8048ec:	003fe906 	br	804894 <__fpcmp_parts_d+0x58>
  8048f0:	11bfdd1e 	bne	r2,r6,804868 <__fpcmp_parts_d+0x2c>
  8048f4:	28c00117 	ldw	r3,4(r5)
  8048f8:	20800117 	ldw	r2,4(r4)
  8048fc:	1885c83a 	sub	r2,r3,r2
  804900:	f800283a 	ret

00804904 <printf>:
  804904:	defffb04 	addi	sp,sp,-20
  804908:	dfc00115 	stw	ra,4(sp)
  80490c:	d9400215 	stw	r5,8(sp)
  804910:	d9800315 	stw	r6,12(sp)
  804914:	d9c00415 	stw	r7,16(sp)
  804918:	00802074 	movhi	r2,129
  80491c:	10869f04 	addi	r2,r2,6780
  804920:	10c00017 	ldw	r3,0(r2)
  804924:	200b883a 	mov	r5,r4
  804928:	d8800204 	addi	r2,sp,8
  80492c:	19000217 	ldw	r4,8(r3)
  804930:	100d883a 	mov	r6,r2
  804934:	d8800015 	stw	r2,0(sp)
  804938:	08069c00 	call	8069c0 <__vfprintf_internal>
  80493c:	dfc00117 	ldw	ra,4(sp)
  804940:	dec00504 	addi	sp,sp,20
  804944:	f800283a 	ret

00804948 <_printf_r>:
  804948:	defffc04 	addi	sp,sp,-16
  80494c:	dfc00115 	stw	ra,4(sp)
  804950:	d9800215 	stw	r6,8(sp)
  804954:	d9c00315 	stw	r7,12(sp)
  804958:	280d883a 	mov	r6,r5
  80495c:	21400217 	ldw	r5,8(r4)
  804960:	d8c00204 	addi	r3,sp,8
  804964:	180f883a 	mov	r7,r3
  804968:	d8c00015 	stw	r3,0(sp)
  80496c:	0804afc0 	call	804afc <___vfprintf_internal_r>
  804970:	dfc00117 	ldw	ra,4(sp)
  804974:	dec00404 	addi	sp,sp,16
  804978:	f800283a 	ret

0080497c <_puts_r>:
  80497c:	defff604 	addi	sp,sp,-40
  804980:	dc400715 	stw	r17,28(sp)
  804984:	2023883a 	mov	r17,r4
  804988:	2809883a 	mov	r4,r5
  80498c:	dfc00915 	stw	ra,36(sp)
  804990:	dcc00815 	stw	r19,32(sp)
  804994:	2827883a 	mov	r19,r5
  804998:	0804a300 	call	804a30 <strlen>
  80499c:	89400217 	ldw	r5,8(r17)
  8049a0:	00c02074 	movhi	r3,129
  8049a4:	18ff8e04 	addi	r3,r3,-456
  8049a8:	01c00044 	movi	r7,1
  8049ac:	12000044 	addi	r8,r2,1
  8049b0:	d8c00515 	stw	r3,20(sp)
  8049b4:	d9c00615 	stw	r7,24(sp)
  8049b8:	d8c00304 	addi	r3,sp,12
  8049bc:	01c00084 	movi	r7,2
  8049c0:	8809883a 	mov	r4,r17
  8049c4:	d80d883a 	mov	r6,sp
  8049c8:	d8c00015 	stw	r3,0(sp)
  8049cc:	dcc00315 	stw	r19,12(sp)
  8049d0:	da000215 	stw	r8,8(sp)
  8049d4:	d9c00115 	stw	r7,4(sp)
  8049d8:	d8800415 	stw	r2,16(sp)
  8049dc:	0808c7c0 	call	808c7c <__sfvwrite_r>
  8049e0:	00ffffc4 	movi	r3,-1
  8049e4:	10000626 	beq	r2,zero,804a00 <_puts_r+0x84>
  8049e8:	1805883a 	mov	r2,r3
  8049ec:	dfc00917 	ldw	ra,36(sp)
  8049f0:	dcc00817 	ldw	r19,32(sp)
  8049f4:	dc400717 	ldw	r17,28(sp)
  8049f8:	dec00a04 	addi	sp,sp,40
  8049fc:	f800283a 	ret
  804a00:	00c00284 	movi	r3,10
  804a04:	1805883a 	mov	r2,r3
  804a08:	dfc00917 	ldw	ra,36(sp)
  804a0c:	dcc00817 	ldw	r19,32(sp)
  804a10:	dc400717 	ldw	r17,28(sp)
  804a14:	dec00a04 	addi	sp,sp,40
  804a18:	f800283a 	ret

00804a1c <puts>:
  804a1c:	00802074 	movhi	r2,129
  804a20:	10869f04 	addi	r2,r2,6780
  804a24:	200b883a 	mov	r5,r4
  804a28:	11000017 	ldw	r4,0(r2)
  804a2c:	080497c1 	jmpi	80497c <_puts_r>

00804a30 <strlen>:
  804a30:	208000cc 	andi	r2,r4,3
  804a34:	2011883a 	mov	r8,r4
  804a38:	1000161e 	bne	r2,zero,804a94 <strlen+0x64>
  804a3c:	20c00017 	ldw	r3,0(r4)
  804a40:	017fbff4 	movhi	r5,65279
  804a44:	297fbfc4 	addi	r5,r5,-257
  804a48:	01e02074 	movhi	r7,32897
  804a4c:	39e02004 	addi	r7,r7,-32640
  804a50:	1945883a 	add	r2,r3,r5
  804a54:	11c4703a 	and	r2,r2,r7
  804a58:	00c6303a 	nor	r3,zero,r3
  804a5c:	1886703a 	and	r3,r3,r2
  804a60:	18000c1e 	bne	r3,zero,804a94 <strlen+0x64>
  804a64:	280d883a 	mov	r6,r5
  804a68:	380b883a 	mov	r5,r7
  804a6c:	21000104 	addi	r4,r4,4
  804a70:	20800017 	ldw	r2,0(r4)
  804a74:	1187883a 	add	r3,r2,r6
  804a78:	1946703a 	and	r3,r3,r5
  804a7c:	0084303a 	nor	r2,zero,r2
  804a80:	10c4703a 	and	r2,r2,r3
  804a84:	103ff926 	beq	r2,zero,804a6c <strlen+0x3c>
  804a88:	20800007 	ldb	r2,0(r4)
  804a8c:	10000326 	beq	r2,zero,804a9c <strlen+0x6c>
  804a90:	21000044 	addi	r4,r4,1
  804a94:	20800007 	ldb	r2,0(r4)
  804a98:	103ffd1e 	bne	r2,zero,804a90 <strlen+0x60>
  804a9c:	2205c83a 	sub	r2,r4,r8
  804aa0:	f800283a 	ret

00804aa4 <__sprint_r>:
  804aa4:	30800217 	ldw	r2,8(r6)
  804aa8:	defffe04 	addi	sp,sp,-8
  804aac:	dc000015 	stw	r16,0(sp)
  804ab0:	dfc00115 	stw	ra,4(sp)
  804ab4:	3021883a 	mov	r16,r6
  804ab8:	0007883a 	mov	r3,zero
  804abc:	1000061e 	bne	r2,zero,804ad8 <__sprint_r+0x34>
  804ac0:	1805883a 	mov	r2,r3
  804ac4:	30000115 	stw	zero,4(r6)
  804ac8:	dfc00117 	ldw	ra,4(sp)
  804acc:	dc000017 	ldw	r16,0(sp)
  804ad0:	dec00204 	addi	sp,sp,8
  804ad4:	f800283a 	ret
  804ad8:	0808c7c0 	call	808c7c <__sfvwrite_r>
  804adc:	1007883a 	mov	r3,r2
  804ae0:	1805883a 	mov	r2,r3
  804ae4:	80000115 	stw	zero,4(r16)
  804ae8:	80000215 	stw	zero,8(r16)
  804aec:	dfc00117 	ldw	ra,4(sp)
  804af0:	dc000017 	ldw	r16,0(sp)
  804af4:	dec00204 	addi	sp,sp,8
  804af8:	f800283a 	ret

00804afc <___vfprintf_internal_r>:
  804afc:	defea404 	addi	sp,sp,-1392
  804b00:	dd815815 	stw	r22,1376(sp)
  804b04:	dc015215 	stw	r16,1352(sp)
  804b08:	d9c15115 	stw	r7,1348(sp)
  804b0c:	dfc15b15 	stw	ra,1388(sp)
  804b10:	df015a15 	stw	fp,1384(sp)
  804b14:	ddc15915 	stw	r23,1380(sp)
  804b18:	dd415715 	stw	r21,1372(sp)
  804b1c:	dd015615 	stw	r20,1368(sp)
  804b20:	dcc15515 	stw	r19,1364(sp)
  804b24:	dc815415 	stw	r18,1360(sp)
  804b28:	dc415315 	stw	r17,1356(sp)
  804b2c:	282d883a 	mov	r22,r5
  804b30:	3021883a 	mov	r16,r6
  804b34:	d9014f15 	stw	r4,1340(sp)
  804b38:	08092a00 	call	8092a0 <_localeconv_r>
  804b3c:	10800017 	ldw	r2,0(r2)
  804b40:	d9c15117 	ldw	r7,1348(sp)
  804b44:	d8814915 	stw	r2,1316(sp)
  804b48:	d8814f17 	ldw	r2,1340(sp)
  804b4c:	10000226 	beq	r2,zero,804b58 <___vfprintf_internal_r+0x5c>
  804b50:	10800e17 	ldw	r2,56(r2)
  804b54:	10020d26 	beq	r2,zero,80538c <___vfprintf_internal_r+0x890>
  804b58:	b080030b 	ldhu	r2,12(r22)
  804b5c:	1080020c 	andi	r2,r2,8
  804b60:	10020e26 	beq	r2,zero,80539c <___vfprintf_internal_r+0x8a0>
  804b64:	b0800417 	ldw	r2,16(r22)
  804b68:	10020c26 	beq	r2,zero,80539c <___vfprintf_internal_r+0x8a0>
  804b6c:	b200030b 	ldhu	r8,12(r22)
  804b70:	00800284 	movi	r2,10
  804b74:	40c0068c 	andi	r3,r8,26
  804b78:	18802f1e 	bne	r3,r2,804c38 <___vfprintf_internal_r+0x13c>
  804b7c:	b080038f 	ldh	r2,14(r22)
  804b80:	10002d16 	blt	r2,zero,804c38 <___vfprintf_internal_r+0x13c>
  804b84:	b240038b 	ldhu	r9,14(r22)
  804b88:	b2800717 	ldw	r10,28(r22)
  804b8c:	b2c00917 	ldw	r11,36(r22)
  804b90:	d9014f17 	ldw	r4,1340(sp)
  804b94:	dc402904 	addi	r17,sp,164
  804b98:	d8804004 	addi	r2,sp,256
  804b9c:	00c10004 	movi	r3,1024
  804ba0:	423fff4c 	andi	r8,r8,65533
  804ba4:	800d883a 	mov	r6,r16
  804ba8:	880b883a 	mov	r5,r17
  804bac:	da002c0d 	sth	r8,176(sp)
  804bb0:	da402c8d 	sth	r9,178(sp)
  804bb4:	da803015 	stw	r10,192(sp)
  804bb8:	dac03215 	stw	r11,200(sp)
  804bbc:	d8802d15 	stw	r2,180(sp)
  804bc0:	d8c02e15 	stw	r3,184(sp)
  804bc4:	d8802915 	stw	r2,164(sp)
  804bc8:	d8c02b15 	stw	r3,172(sp)
  804bcc:	d8002f15 	stw	zero,188(sp)
  804bd0:	0804afc0 	call	804afc <___vfprintf_internal_r>
  804bd4:	d8814b15 	stw	r2,1324(sp)
  804bd8:	10000416 	blt	r2,zero,804bec <___vfprintf_internal_r+0xf0>
  804bdc:	d9014f17 	ldw	r4,1340(sp)
  804be0:	880b883a 	mov	r5,r17
  804be4:	08083180 	call	808318 <_fflush_r>
  804be8:	1002321e 	bne	r2,zero,8054b4 <___vfprintf_internal_r+0x9b8>
  804bec:	d8802c0b 	ldhu	r2,176(sp)
  804bf0:	1080100c 	andi	r2,r2,64
  804bf4:	10000326 	beq	r2,zero,804c04 <___vfprintf_internal_r+0x108>
  804bf8:	b080030b 	ldhu	r2,12(r22)
  804bfc:	10801014 	ori	r2,r2,64
  804c00:	b080030d 	sth	r2,12(r22)
  804c04:	d8814b17 	ldw	r2,1324(sp)
  804c08:	dfc15b17 	ldw	ra,1388(sp)
  804c0c:	df015a17 	ldw	fp,1384(sp)
  804c10:	ddc15917 	ldw	r23,1380(sp)
  804c14:	dd815817 	ldw	r22,1376(sp)
  804c18:	dd415717 	ldw	r21,1372(sp)
  804c1c:	dd015617 	ldw	r20,1368(sp)
  804c20:	dcc15517 	ldw	r19,1364(sp)
  804c24:	dc815417 	ldw	r18,1360(sp)
  804c28:	dc415317 	ldw	r17,1356(sp)
  804c2c:	dc015217 	ldw	r16,1352(sp)
  804c30:	dec15c04 	addi	sp,sp,1392
  804c34:	f800283a 	ret
  804c38:	0005883a 	mov	r2,zero
  804c3c:	0007883a 	mov	r3,zero
  804c40:	dd401904 	addi	r21,sp,100
  804c44:	d8814215 	stw	r2,1288(sp)
  804c48:	802f883a 	mov	r23,r16
  804c4c:	d8c14315 	stw	r3,1292(sp)
  804c50:	d8014b15 	stw	zero,1324(sp)
  804c54:	d8014815 	stw	zero,1312(sp)
  804c58:	d8014415 	stw	zero,1296(sp)
  804c5c:	d8014715 	stw	zero,1308(sp)
  804c60:	dd400c15 	stw	r21,48(sp)
  804c64:	d8000e15 	stw	zero,56(sp)
  804c68:	d8000d15 	stw	zero,52(sp)
  804c6c:	b8800007 	ldb	r2,0(r23)
  804c70:	10001926 	beq	r2,zero,804cd8 <___vfprintf_internal_r+0x1dc>
  804c74:	00c00944 	movi	r3,37
  804c78:	10c01726 	beq	r2,r3,804cd8 <___vfprintf_internal_r+0x1dc>
  804c7c:	b821883a 	mov	r16,r23
  804c80:	00000106 	br	804c88 <___vfprintf_internal_r+0x18c>
  804c84:	10c00326 	beq	r2,r3,804c94 <___vfprintf_internal_r+0x198>
  804c88:	84000044 	addi	r16,r16,1
  804c8c:	80800007 	ldb	r2,0(r16)
  804c90:	103ffc1e 	bne	r2,zero,804c84 <___vfprintf_internal_r+0x188>
  804c94:	85e7c83a 	sub	r19,r16,r23
  804c98:	98000e26 	beq	r19,zero,804cd4 <___vfprintf_internal_r+0x1d8>
  804c9c:	dc800e17 	ldw	r18,56(sp)
  804ca0:	dc400d17 	ldw	r17,52(sp)
  804ca4:	008001c4 	movi	r2,7
  804ca8:	94e5883a 	add	r18,r18,r19
  804cac:	8c400044 	addi	r17,r17,1
  804cb0:	adc00015 	stw	r23,0(r21)
  804cb4:	dc800e15 	stw	r18,56(sp)
  804cb8:	acc00115 	stw	r19,4(r21)
  804cbc:	dc400d15 	stw	r17,52(sp)
  804cc0:	14428b16 	blt	r2,r17,8056f0 <___vfprintf_internal_r+0xbf4>
  804cc4:	ad400204 	addi	r21,r21,8
  804cc8:	d9014b17 	ldw	r4,1324(sp)
  804ccc:	24c9883a 	add	r4,r4,r19
  804cd0:	d9014b15 	stw	r4,1324(sp)
  804cd4:	802f883a 	mov	r23,r16
  804cd8:	b8800007 	ldb	r2,0(r23)
  804cdc:	10013c26 	beq	r2,zero,8051d0 <___vfprintf_internal_r+0x6d4>
  804ce0:	bdc00044 	addi	r23,r23,1
  804ce4:	d8000405 	stb	zero,16(sp)
  804ce8:	b8c00007 	ldb	r3,0(r23)
  804cec:	04ffffc4 	movi	r19,-1
  804cf0:	d8014c15 	stw	zero,1328(sp)
  804cf4:	d8014a15 	stw	zero,1320(sp)
  804cf8:	d8c14d15 	stw	r3,1332(sp)
  804cfc:	bdc00044 	addi	r23,r23,1
  804d00:	d9414d17 	ldw	r5,1332(sp)
  804d04:	00801604 	movi	r2,88
  804d08:	28fff804 	addi	r3,r5,-32
  804d0c:	10c06036 	bltu	r2,r3,804e90 <___vfprintf_internal_r+0x394>
  804d10:	18c5883a 	add	r2,r3,r3
  804d14:	1085883a 	add	r2,r2,r2
  804d18:	00c02034 	movhi	r3,128
  804d1c:	18d34b04 	addi	r3,r3,19756
  804d20:	10c5883a 	add	r2,r2,r3
  804d24:	11000017 	ldw	r4,0(r2)
  804d28:	2000683a 	jmp	r4
  804d2c:	00805ca0 	cmpeqi	r2,zero,370
  804d30:	00804e90 	cmplti	r2,zero,314
  804d34:	00804e90 	cmplti	r2,zero,314
  804d38:	00805c8c 	andi	r2,zero,370
  804d3c:	00804e90 	cmplti	r2,zero,314
  804d40:	00804e90 	cmplti	r2,zero,314
  804d44:	00804e90 	cmplti	r2,zero,314
  804d48:	00804e90 	cmplti	r2,zero,314
  804d4c:	00804e90 	cmplti	r2,zero,314
  804d50:	00804e90 	cmplti	r2,zero,314
  804d54:	00805a6c 	andhi	r2,zero,361
  804d58:	00805c7c 	xorhi	r2,zero,369
  804d5c:	00804e90 	cmplti	r2,zero,314
  804d60:	00805a84 	movi	r2,362
  804d64:	00805d24 	muli	r2,zero,372
  804d68:	00804e90 	cmplti	r2,zero,314
  804d6c:	00805d10 	cmplti	r2,zero,372
  804d70:	00805ccc 	andi	r2,zero,371
  804d74:	00805ccc 	andi	r2,zero,371
  804d78:	00805ccc 	andi	r2,zero,371
  804d7c:	00805ccc 	andi	r2,zero,371
  804d80:	00805ccc 	andi	r2,zero,371
  804d84:	00805ccc 	andi	r2,zero,371
  804d88:	00805ccc 	andi	r2,zero,371
  804d8c:	00805ccc 	andi	r2,zero,371
  804d90:	00805ccc 	andi	r2,zero,371
  804d94:	00804e90 	cmplti	r2,zero,314
  804d98:	00804e90 	cmplti	r2,zero,314
  804d9c:	00804e90 	cmplti	r2,zero,314
  804da0:	00804e90 	cmplti	r2,zero,314
  804da4:	00804e90 	cmplti	r2,zero,314
  804da8:	00804e90 	cmplti	r2,zero,314
  804dac:	00804e90 	cmplti	r2,zero,314
  804db0:	00804e90 	cmplti	r2,zero,314
  804db4:	00804e90 	cmplti	r2,zero,314
  804db8:	00804e90 	cmplti	r2,zero,314
  804dbc:	008054e8 	cmpgeui	r2,zero,339
  804dc0:	00805b54 	movui	r2,365
  804dc4:	00804e90 	cmplti	r2,zero,314
  804dc8:	00805b54 	movui	r2,365
  804dcc:	00804e90 	cmplti	r2,zero,314
  804dd0:	00804e90 	cmplti	r2,zero,314
  804dd4:	00804e90 	cmplti	r2,zero,314
  804dd8:	00804e90 	cmplti	r2,zero,314
  804ddc:	00805cb8 	rdprs	r2,zero,370
  804de0:	00804e90 	cmplti	r2,zero,314
  804de4:	00804e90 	cmplti	r2,zero,314
  804de8:	0080559c 	xori	r2,zero,342
  804dec:	00804e90 	cmplti	r2,zero,314
  804df0:	00804e90 	cmplti	r2,zero,314
  804df4:	00804e90 	cmplti	r2,zero,314
  804df8:	00804e90 	cmplti	r2,zero,314
  804dfc:	00804e90 	cmplti	r2,zero,314
  804e00:	008055e8 	cmpgeui	r2,zero,343
  804e04:	00804e90 	cmplti	r2,zero,314
  804e08:	00804e90 	cmplti	r2,zero,314
  804e0c:	00805c08 	cmpgei	r2,zero,368
  804e10:	00804e90 	cmplti	r2,zero,314
  804e14:	00804e90 	cmplti	r2,zero,314
  804e18:	00804e90 	cmplti	r2,zero,314
  804e1c:	00804e90 	cmplti	r2,zero,314
  804e20:	00804e90 	cmplti	r2,zero,314
  804e24:	00804e90 	cmplti	r2,zero,314
  804e28:	00804e90 	cmplti	r2,zero,314
  804e2c:	00804e90 	cmplti	r2,zero,314
  804e30:	00804e90 	cmplti	r2,zero,314
  804e34:	00804e90 	cmplti	r2,zero,314
  804e38:	00805bdc 	xori	r2,zero,367
  804e3c:	008054f4 	movhi	r2,339
  804e40:	00805b54 	movui	r2,365
  804e44:	00805b54 	movui	r2,365
  804e48:	00805b54 	movui	r2,365
  804e4c:	00805b40 	call	805b4 <__reset-0x77fa4c>
  804e50:	008054f4 	movhi	r2,339
  804e54:	00804e90 	cmplti	r2,zero,314
  804e58:	00804e90 	cmplti	r2,zero,314
  804e5c:	00805ac8 	cmpgei	r2,zero,363
  804e60:	00804e90 	cmplti	r2,zero,314
  804e64:	00805a98 	cmpnei	r2,zero,362
  804e68:	008055a8 	cmpgeui	r2,zero,342
  804e6c:	00805af8 	rdprs	r2,zero,363
  804e70:	00805ae4 	muli	r2,zero,363
  804e74:	00804e90 	cmplti	r2,zero,314
  804e78:	00805d8c 	andi	r2,zero,374
  804e7c:	00804e90 	cmplti	r2,zero,314
  804e80:	008055f4 	movhi	r2,343
  804e84:	00804e90 	cmplti	r2,zero,314
  804e88:	00804e90 	cmplti	r2,zero,314
  804e8c:	00805c6c 	andhi	r2,zero,369
  804e90:	d9014d17 	ldw	r4,1332(sp)
  804e94:	2000ce26 	beq	r4,zero,8051d0 <___vfprintf_internal_r+0x6d4>
  804e98:	01400044 	movi	r5,1
  804e9c:	d9800f04 	addi	r6,sp,60
  804ea0:	d9c14015 	stw	r7,1280(sp)
  804ea4:	d9414515 	stw	r5,1300(sp)
  804ea8:	d9814115 	stw	r6,1284(sp)
  804eac:	280f883a 	mov	r7,r5
  804eb0:	d9000f05 	stb	r4,60(sp)
  804eb4:	d8000405 	stb	zero,16(sp)
  804eb8:	d8014615 	stw	zero,1304(sp)
  804ebc:	d8c14c17 	ldw	r3,1328(sp)
  804ec0:	1880008c 	andi	r2,r3,2
  804ec4:	1005003a 	cmpeq	r2,r2,zero
  804ec8:	d8815015 	stw	r2,1344(sp)
  804ecc:	1000031e 	bne	r2,zero,804edc <___vfprintf_internal_r+0x3e0>
  804ed0:	d9014517 	ldw	r4,1300(sp)
  804ed4:	21000084 	addi	r4,r4,2
  804ed8:	d9014515 	stw	r4,1300(sp)
  804edc:	d9414c17 	ldw	r5,1328(sp)
  804ee0:	2940210c 	andi	r5,r5,132
  804ee4:	d9414e15 	stw	r5,1336(sp)
  804ee8:	28002d1e 	bne	r5,zero,804fa0 <___vfprintf_internal_r+0x4a4>
  804eec:	d9814a17 	ldw	r6,1320(sp)
  804ef0:	d8814517 	ldw	r2,1300(sp)
  804ef4:	30a1c83a 	sub	r16,r6,r2
  804ef8:	0400290e 	bge	zero,r16,804fa0 <___vfprintf_internal_r+0x4a4>
  804efc:	00800404 	movi	r2,16
  804f00:	14045e0e 	bge	r2,r16,80607c <___vfprintf_internal_r+0x1580>
  804f04:	dc800e17 	ldw	r18,56(sp)
  804f08:	dc400d17 	ldw	r17,52(sp)
  804f0c:	1027883a 	mov	r19,r2
  804f10:	07002074 	movhi	fp,129
  804f14:	e73faa84 	addi	fp,fp,-342
  804f18:	050001c4 	movi	r20,7
  804f1c:	00000306 	br	804f2c <___vfprintf_internal_r+0x430>
  804f20:	843ffc04 	addi	r16,r16,-16
  804f24:	ad400204 	addi	r21,r21,8
  804f28:	9c00130e 	bge	r19,r16,804f78 <___vfprintf_internal_r+0x47c>
  804f2c:	94800404 	addi	r18,r18,16
  804f30:	8c400044 	addi	r17,r17,1
  804f34:	af000015 	stw	fp,0(r21)
  804f38:	acc00115 	stw	r19,4(r21)
  804f3c:	dc800e15 	stw	r18,56(sp)
  804f40:	dc400d15 	stw	r17,52(sp)
  804f44:	a47ff60e 	bge	r20,r17,804f20 <___vfprintf_internal_r+0x424>
  804f48:	d9014f17 	ldw	r4,1340(sp)
  804f4c:	b00b883a 	mov	r5,r22
  804f50:	d9800c04 	addi	r6,sp,48
  804f54:	d9c15115 	stw	r7,1348(sp)
  804f58:	0804aa40 	call	804aa4 <__sprint_r>
  804f5c:	d9c15117 	ldw	r7,1348(sp)
  804f60:	10009e1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  804f64:	843ffc04 	addi	r16,r16,-16
  804f68:	dc800e17 	ldw	r18,56(sp)
  804f6c:	dc400d17 	ldw	r17,52(sp)
  804f70:	dd401904 	addi	r21,sp,100
  804f74:	9c3fed16 	blt	r19,r16,804f2c <___vfprintf_internal_r+0x430>
  804f78:	9425883a 	add	r18,r18,r16
  804f7c:	8c400044 	addi	r17,r17,1
  804f80:	008001c4 	movi	r2,7
  804f84:	af000015 	stw	fp,0(r21)
  804f88:	ac000115 	stw	r16,4(r21)
  804f8c:	dc800e15 	stw	r18,56(sp)
  804f90:	dc400d15 	stw	r17,52(sp)
  804f94:	1441f516 	blt	r2,r17,80576c <___vfprintf_internal_r+0xc70>
  804f98:	ad400204 	addi	r21,r21,8
  804f9c:	00000206 	br	804fa8 <___vfprintf_internal_r+0x4ac>
  804fa0:	dc800e17 	ldw	r18,56(sp)
  804fa4:	dc400d17 	ldw	r17,52(sp)
  804fa8:	d8800407 	ldb	r2,16(sp)
  804fac:	10000b26 	beq	r2,zero,804fdc <___vfprintf_internal_r+0x4e0>
  804fb0:	00800044 	movi	r2,1
  804fb4:	94800044 	addi	r18,r18,1
  804fb8:	8c400044 	addi	r17,r17,1
  804fbc:	a8800115 	stw	r2,4(r21)
  804fc0:	d8c00404 	addi	r3,sp,16
  804fc4:	008001c4 	movi	r2,7
  804fc8:	a8c00015 	stw	r3,0(r21)
  804fcc:	dc800e15 	stw	r18,56(sp)
  804fd0:	dc400d15 	stw	r17,52(sp)
  804fd4:	1441da16 	blt	r2,r17,805740 <___vfprintf_internal_r+0xc44>
  804fd8:	ad400204 	addi	r21,r21,8
  804fdc:	d9015017 	ldw	r4,1344(sp)
  804fe0:	20000b1e 	bne	r4,zero,805010 <___vfprintf_internal_r+0x514>
  804fe4:	d8800444 	addi	r2,sp,17
  804fe8:	94800084 	addi	r18,r18,2
  804fec:	8c400044 	addi	r17,r17,1
  804ff0:	a8800015 	stw	r2,0(r21)
  804ff4:	00c00084 	movi	r3,2
  804ff8:	008001c4 	movi	r2,7
  804ffc:	a8c00115 	stw	r3,4(r21)
  805000:	dc800e15 	stw	r18,56(sp)
  805004:	dc400d15 	stw	r17,52(sp)
  805008:	1441c216 	blt	r2,r17,805714 <___vfprintf_internal_r+0xc18>
  80500c:	ad400204 	addi	r21,r21,8
  805010:	d9414e17 	ldw	r5,1336(sp)
  805014:	00802004 	movi	r2,128
  805018:	2880b126 	beq	r5,r2,8052e0 <___vfprintf_internal_r+0x7e4>
  80501c:	d8c14617 	ldw	r3,1304(sp)
  805020:	19e1c83a 	sub	r16,r3,r7
  805024:	0400260e 	bge	zero,r16,8050c0 <___vfprintf_internal_r+0x5c4>
  805028:	00800404 	movi	r2,16
  80502c:	1403cf0e 	bge	r2,r16,805f6c <___vfprintf_internal_r+0x1470>
  805030:	1027883a 	mov	r19,r2
  805034:	07002074 	movhi	fp,129
  805038:	e73fa684 	addi	fp,fp,-358
  80503c:	050001c4 	movi	r20,7
  805040:	00000306 	br	805050 <___vfprintf_internal_r+0x554>
  805044:	843ffc04 	addi	r16,r16,-16
  805048:	ad400204 	addi	r21,r21,8
  80504c:	9c00130e 	bge	r19,r16,80509c <___vfprintf_internal_r+0x5a0>
  805050:	94800404 	addi	r18,r18,16
  805054:	8c400044 	addi	r17,r17,1
  805058:	af000015 	stw	fp,0(r21)
  80505c:	acc00115 	stw	r19,4(r21)
  805060:	dc800e15 	stw	r18,56(sp)
  805064:	dc400d15 	stw	r17,52(sp)
  805068:	a47ff60e 	bge	r20,r17,805044 <___vfprintf_internal_r+0x548>
  80506c:	d9014f17 	ldw	r4,1340(sp)
  805070:	b00b883a 	mov	r5,r22
  805074:	d9800c04 	addi	r6,sp,48
  805078:	d9c15115 	stw	r7,1348(sp)
  80507c:	0804aa40 	call	804aa4 <__sprint_r>
  805080:	d9c15117 	ldw	r7,1348(sp)
  805084:	1000551e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  805088:	843ffc04 	addi	r16,r16,-16
  80508c:	dc800e17 	ldw	r18,56(sp)
  805090:	dc400d17 	ldw	r17,52(sp)
  805094:	dd401904 	addi	r21,sp,100
  805098:	9c3fed16 	blt	r19,r16,805050 <___vfprintf_internal_r+0x554>
  80509c:	9425883a 	add	r18,r18,r16
  8050a0:	8c400044 	addi	r17,r17,1
  8050a4:	008001c4 	movi	r2,7
  8050a8:	af000015 	stw	fp,0(r21)
  8050ac:	ac000115 	stw	r16,4(r21)
  8050b0:	dc800e15 	stw	r18,56(sp)
  8050b4:	dc400d15 	stw	r17,52(sp)
  8050b8:	14418216 	blt	r2,r17,8056c4 <___vfprintf_internal_r+0xbc8>
  8050bc:	ad400204 	addi	r21,r21,8
  8050c0:	d9014c17 	ldw	r4,1328(sp)
  8050c4:	2080400c 	andi	r2,r4,256
  8050c8:	10004a1e 	bne	r2,zero,8051f4 <___vfprintf_internal_r+0x6f8>
  8050cc:	d9414117 	ldw	r5,1284(sp)
  8050d0:	91e5883a 	add	r18,r18,r7
  8050d4:	8c400044 	addi	r17,r17,1
  8050d8:	008001c4 	movi	r2,7
  8050dc:	a9400015 	stw	r5,0(r21)
  8050e0:	a9c00115 	stw	r7,4(r21)
  8050e4:	dc800e15 	stw	r18,56(sp)
  8050e8:	dc400d15 	stw	r17,52(sp)
  8050ec:	14416716 	blt	r2,r17,80568c <___vfprintf_internal_r+0xb90>
  8050f0:	a8c00204 	addi	r3,r21,8
  8050f4:	d9814c17 	ldw	r6,1328(sp)
  8050f8:	3080010c 	andi	r2,r6,4
  8050fc:	10002826 	beq	r2,zero,8051a0 <___vfprintf_internal_r+0x6a4>
  805100:	d8814a17 	ldw	r2,1320(sp)
  805104:	d9014517 	ldw	r4,1300(sp)
  805108:	1121c83a 	sub	r16,r2,r4
  80510c:	0400240e 	bge	zero,r16,8051a0 <___vfprintf_internal_r+0x6a4>
  805110:	00800404 	movi	r2,16
  805114:	1404550e 	bge	r2,r16,80626c <___vfprintf_internal_r+0x1770>
  805118:	dc400d17 	ldw	r17,52(sp)
  80511c:	1027883a 	mov	r19,r2
  805120:	07002074 	movhi	fp,129
  805124:	e73faa84 	addi	fp,fp,-342
  805128:	050001c4 	movi	r20,7
  80512c:	00000306 	br	80513c <___vfprintf_internal_r+0x640>
  805130:	843ffc04 	addi	r16,r16,-16
  805134:	18c00204 	addi	r3,r3,8
  805138:	9c00110e 	bge	r19,r16,805180 <___vfprintf_internal_r+0x684>
  80513c:	94800404 	addi	r18,r18,16
  805140:	8c400044 	addi	r17,r17,1
  805144:	1f000015 	stw	fp,0(r3)
  805148:	1cc00115 	stw	r19,4(r3)
  80514c:	dc800e15 	stw	r18,56(sp)
  805150:	dc400d15 	stw	r17,52(sp)
  805154:	a47ff60e 	bge	r20,r17,805130 <___vfprintf_internal_r+0x634>
  805158:	d9014f17 	ldw	r4,1340(sp)
  80515c:	b00b883a 	mov	r5,r22
  805160:	d9800c04 	addi	r6,sp,48
  805164:	0804aa40 	call	804aa4 <__sprint_r>
  805168:	10001c1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  80516c:	843ffc04 	addi	r16,r16,-16
  805170:	dc800e17 	ldw	r18,56(sp)
  805174:	dc400d17 	ldw	r17,52(sp)
  805178:	d8c01904 	addi	r3,sp,100
  80517c:	9c3fef16 	blt	r19,r16,80513c <___vfprintf_internal_r+0x640>
  805180:	9425883a 	add	r18,r18,r16
  805184:	8c400044 	addi	r17,r17,1
  805188:	008001c4 	movi	r2,7
  80518c:	1f000015 	stw	fp,0(r3)
  805190:	1c000115 	stw	r16,4(r3)
  805194:	dc800e15 	stw	r18,56(sp)
  805198:	dc400d15 	stw	r17,52(sp)
  80519c:	1440cb16 	blt	r2,r17,8054cc <___vfprintf_internal_r+0x9d0>
  8051a0:	d8814a17 	ldw	r2,1320(sp)
  8051a4:	d9414517 	ldw	r5,1300(sp)
  8051a8:	1140010e 	bge	r2,r5,8051b0 <___vfprintf_internal_r+0x6b4>
  8051ac:	2805883a 	mov	r2,r5
  8051b0:	d9814b17 	ldw	r6,1324(sp)
  8051b4:	308d883a 	add	r6,r6,r2
  8051b8:	d9814b15 	stw	r6,1324(sp)
  8051bc:	90013b1e 	bne	r18,zero,8056ac <___vfprintf_internal_r+0xbb0>
  8051c0:	d9c14017 	ldw	r7,1280(sp)
  8051c4:	dd401904 	addi	r21,sp,100
  8051c8:	d8000d15 	stw	zero,52(sp)
  8051cc:	003ea706 	br	804c6c <___vfprintf_internal_r+0x170>
  8051d0:	d8800e17 	ldw	r2,56(sp)
  8051d4:	1005451e 	bne	r2,zero,8066ec <___vfprintf_internal_r+0x1bf0>
  8051d8:	d8000d15 	stw	zero,52(sp)
  8051dc:	b080030b 	ldhu	r2,12(r22)
  8051e0:	1080100c 	andi	r2,r2,64
  8051e4:	103e8726 	beq	r2,zero,804c04 <___vfprintf_internal_r+0x108>
  8051e8:	00bfffc4 	movi	r2,-1
  8051ec:	d8814b15 	stw	r2,1324(sp)
  8051f0:	003e8406 	br	804c04 <___vfprintf_internal_r+0x108>
  8051f4:	d9814d17 	ldw	r6,1332(sp)
  8051f8:	00801944 	movi	r2,101
  8051fc:	11806e16 	blt	r2,r6,8053b8 <___vfprintf_internal_r+0x8bc>
  805200:	d9414717 	ldw	r5,1308(sp)
  805204:	00c00044 	movi	r3,1
  805208:	1943490e 	bge	r3,r5,805f30 <___vfprintf_internal_r+0x1434>
  80520c:	d8814117 	ldw	r2,1284(sp)
  805210:	94800044 	addi	r18,r18,1
  805214:	8c400044 	addi	r17,r17,1
  805218:	a8800015 	stw	r2,0(r21)
  80521c:	008001c4 	movi	r2,7
  805220:	a8c00115 	stw	r3,4(r21)
  805224:	dc800e15 	stw	r18,56(sp)
  805228:	dc400d15 	stw	r17,52(sp)
  80522c:	1441ca16 	blt	r2,r17,805958 <___vfprintf_internal_r+0xe5c>
  805230:	a8c00204 	addi	r3,r21,8
  805234:	d9014917 	ldw	r4,1316(sp)
  805238:	00800044 	movi	r2,1
  80523c:	94800044 	addi	r18,r18,1
  805240:	8c400044 	addi	r17,r17,1
  805244:	18800115 	stw	r2,4(r3)
  805248:	008001c4 	movi	r2,7
  80524c:	19000015 	stw	r4,0(r3)
  805250:	dc800e15 	stw	r18,56(sp)
  805254:	dc400d15 	stw	r17,52(sp)
  805258:	1441b616 	blt	r2,r17,805934 <___vfprintf_internal_r+0xe38>
  80525c:	1cc00204 	addi	r19,r3,8
  805260:	d9014217 	ldw	r4,1288(sp)
  805264:	d9414317 	ldw	r5,1292(sp)
  805268:	000d883a 	mov	r6,zero
  80526c:	000f883a 	mov	r7,zero
  805270:	080cc600 	call	80cc60 <__nedf2>
  805274:	10017426 	beq	r2,zero,805848 <___vfprintf_internal_r+0xd4c>
  805278:	d9414717 	ldw	r5,1308(sp)
  80527c:	d9814117 	ldw	r6,1284(sp)
  805280:	8c400044 	addi	r17,r17,1
  805284:	2c85883a 	add	r2,r5,r18
  805288:	14bfffc4 	addi	r18,r2,-1
  80528c:	28bfffc4 	addi	r2,r5,-1
  805290:	30c00044 	addi	r3,r6,1
  805294:	98800115 	stw	r2,4(r19)
  805298:	008001c4 	movi	r2,7
  80529c:	98c00015 	stw	r3,0(r19)
  8052a0:	dc800e15 	stw	r18,56(sp)
  8052a4:	dc400d15 	stw	r17,52(sp)
  8052a8:	14418e16 	blt	r2,r17,8058e4 <___vfprintf_internal_r+0xde8>
  8052ac:	9cc00204 	addi	r19,r19,8
  8052b0:	d9414817 	ldw	r5,1312(sp)
  8052b4:	d8800804 	addi	r2,sp,32
  8052b8:	8c400044 	addi	r17,r17,1
  8052bc:	9165883a 	add	r18,r18,r5
  8052c0:	98800015 	stw	r2,0(r19)
  8052c4:	008001c4 	movi	r2,7
  8052c8:	99400115 	stw	r5,4(r19)
  8052cc:	dc800e15 	stw	r18,56(sp)
  8052d0:	dc400d15 	stw	r17,52(sp)
  8052d4:	1440ed16 	blt	r2,r17,80568c <___vfprintf_internal_r+0xb90>
  8052d8:	98c00204 	addi	r3,r19,8
  8052dc:	003f8506 	br	8050f4 <___vfprintf_internal_r+0x5f8>
  8052e0:	d9814a17 	ldw	r6,1320(sp)
  8052e4:	d8814517 	ldw	r2,1300(sp)
  8052e8:	30a1c83a 	sub	r16,r6,r2
  8052ec:	043f4b0e 	bge	zero,r16,80501c <___vfprintf_internal_r+0x520>
  8052f0:	00800404 	movi	r2,16
  8052f4:	14043a0e 	bge	r2,r16,8063e0 <___vfprintf_internal_r+0x18e4>
  8052f8:	1027883a 	mov	r19,r2
  8052fc:	07002074 	movhi	fp,129
  805300:	e73fa684 	addi	fp,fp,-358
  805304:	050001c4 	movi	r20,7
  805308:	00000306 	br	805318 <___vfprintf_internal_r+0x81c>
  80530c:	843ffc04 	addi	r16,r16,-16
  805310:	ad400204 	addi	r21,r21,8
  805314:	9c00130e 	bge	r19,r16,805364 <___vfprintf_internal_r+0x868>
  805318:	94800404 	addi	r18,r18,16
  80531c:	8c400044 	addi	r17,r17,1
  805320:	af000015 	stw	fp,0(r21)
  805324:	acc00115 	stw	r19,4(r21)
  805328:	dc800e15 	stw	r18,56(sp)
  80532c:	dc400d15 	stw	r17,52(sp)
  805330:	a47ff60e 	bge	r20,r17,80530c <___vfprintf_internal_r+0x810>
  805334:	d9014f17 	ldw	r4,1340(sp)
  805338:	b00b883a 	mov	r5,r22
  80533c:	d9800c04 	addi	r6,sp,48
  805340:	d9c15115 	stw	r7,1348(sp)
  805344:	0804aa40 	call	804aa4 <__sprint_r>
  805348:	d9c15117 	ldw	r7,1348(sp)
  80534c:	103fa31e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  805350:	843ffc04 	addi	r16,r16,-16
  805354:	dc800e17 	ldw	r18,56(sp)
  805358:	dc400d17 	ldw	r17,52(sp)
  80535c:	dd401904 	addi	r21,sp,100
  805360:	9c3fed16 	blt	r19,r16,805318 <___vfprintf_internal_r+0x81c>
  805364:	9425883a 	add	r18,r18,r16
  805368:	8c400044 	addi	r17,r17,1
  80536c:	008001c4 	movi	r2,7
  805370:	af000015 	stw	fp,0(r21)
  805374:	ac000115 	stw	r16,4(r21)
  805378:	dc800e15 	stw	r18,56(sp)
  80537c:	dc400d15 	stw	r17,52(sp)
  805380:	14416116 	blt	r2,r17,805908 <___vfprintf_internal_r+0xe0c>
  805384:	ad400204 	addi	r21,r21,8
  805388:	003f2406 	br	80501c <___vfprintf_internal_r+0x520>
  80538c:	d9014f17 	ldw	r4,1340(sp)
  805390:	08085b00 	call	8085b0 <__sinit>
  805394:	d9c15117 	ldw	r7,1348(sp)
  805398:	003def06 	br	804b58 <___vfprintf_internal_r+0x5c>
  80539c:	d9014f17 	ldw	r4,1340(sp)
  8053a0:	b00b883a 	mov	r5,r22
  8053a4:	d9c15115 	stw	r7,1348(sp)
  8053a8:	08069e40 	call	8069e4 <__swsetup_r>
  8053ac:	d9c15117 	ldw	r7,1348(sp)
  8053b0:	103dee26 	beq	r2,zero,804b6c <___vfprintf_internal_r+0x70>
  8053b4:	003f8c06 	br	8051e8 <___vfprintf_internal_r+0x6ec>
  8053b8:	d9014217 	ldw	r4,1288(sp)
  8053bc:	d9414317 	ldw	r5,1292(sp)
  8053c0:	000d883a 	mov	r6,zero
  8053c4:	000f883a 	mov	r7,zero
  8053c8:	0803a600 	call	803a60 <__eqdf2>
  8053cc:	1000f21e 	bne	r2,zero,805798 <___vfprintf_internal_r+0xc9c>
  8053d0:	00802074 	movhi	r2,129
  8053d4:	10bfa604 	addi	r2,r2,-360
  8053d8:	94800044 	addi	r18,r18,1
  8053dc:	8c400044 	addi	r17,r17,1
  8053e0:	a8800015 	stw	r2,0(r21)
  8053e4:	00c00044 	movi	r3,1
  8053e8:	008001c4 	movi	r2,7
  8053ec:	a8c00115 	stw	r3,4(r21)
  8053f0:	dc800e15 	stw	r18,56(sp)
  8053f4:	dc400d15 	stw	r17,52(sp)
  8053f8:	14430016 	blt	r2,r17,805ffc <___vfprintf_internal_r+0x1500>
  8053fc:	a8c00204 	addi	r3,r21,8
  805400:	d8800517 	ldw	r2,20(sp)
  805404:	d9014717 	ldw	r4,1308(sp)
  805408:	11015c0e 	bge	r2,r4,80597c <___vfprintf_internal_r+0xe80>
  80540c:	dc400d17 	ldw	r17,52(sp)
  805410:	d9814917 	ldw	r6,1316(sp)
  805414:	00800044 	movi	r2,1
  805418:	94800044 	addi	r18,r18,1
  80541c:	8c400044 	addi	r17,r17,1
  805420:	18800115 	stw	r2,4(r3)
  805424:	008001c4 	movi	r2,7
  805428:	19800015 	stw	r6,0(r3)
  80542c:	dc800e15 	stw	r18,56(sp)
  805430:	dc400d15 	stw	r17,52(sp)
  805434:	14431616 	blt	r2,r17,806090 <___vfprintf_internal_r+0x1594>
  805438:	18c00204 	addi	r3,r3,8
  80543c:	d8814717 	ldw	r2,1308(sp)
  805440:	143fffc4 	addi	r16,r2,-1
  805444:	043f2b0e 	bge	zero,r16,8050f4 <___vfprintf_internal_r+0x5f8>
  805448:	00800404 	movi	r2,16
  80544c:	1402a80e 	bge	r2,r16,805ef0 <___vfprintf_internal_r+0x13f4>
  805450:	dc400d17 	ldw	r17,52(sp)
  805454:	1027883a 	mov	r19,r2
  805458:	07002074 	movhi	fp,129
  80545c:	e73fa684 	addi	fp,fp,-358
  805460:	050001c4 	movi	r20,7
  805464:	00000306 	br	805474 <___vfprintf_internal_r+0x978>
  805468:	18c00204 	addi	r3,r3,8
  80546c:	843ffc04 	addi	r16,r16,-16
  805470:	9c02a20e 	bge	r19,r16,805efc <___vfprintf_internal_r+0x1400>
  805474:	94800404 	addi	r18,r18,16
  805478:	8c400044 	addi	r17,r17,1
  80547c:	1f000015 	stw	fp,0(r3)
  805480:	1cc00115 	stw	r19,4(r3)
  805484:	dc800e15 	stw	r18,56(sp)
  805488:	dc400d15 	stw	r17,52(sp)
  80548c:	a47ff60e 	bge	r20,r17,805468 <___vfprintf_internal_r+0x96c>
  805490:	d9014f17 	ldw	r4,1340(sp)
  805494:	b00b883a 	mov	r5,r22
  805498:	d9800c04 	addi	r6,sp,48
  80549c:	0804aa40 	call	804aa4 <__sprint_r>
  8054a0:	103f4e1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  8054a4:	dc800e17 	ldw	r18,56(sp)
  8054a8:	dc400d17 	ldw	r17,52(sp)
  8054ac:	d8c01904 	addi	r3,sp,100
  8054b0:	003fee06 	br	80546c <___vfprintf_internal_r+0x970>
  8054b4:	d8802c0b 	ldhu	r2,176(sp)
  8054b8:	00ffffc4 	movi	r3,-1
  8054bc:	d8c14b15 	stw	r3,1324(sp)
  8054c0:	1080100c 	andi	r2,r2,64
  8054c4:	103dcc1e 	bne	r2,zero,804bf8 <___vfprintf_internal_r+0xfc>
  8054c8:	003dce06 	br	804c04 <___vfprintf_internal_r+0x108>
  8054cc:	d9014f17 	ldw	r4,1340(sp)
  8054d0:	b00b883a 	mov	r5,r22
  8054d4:	d9800c04 	addi	r6,sp,48
  8054d8:	0804aa40 	call	804aa4 <__sprint_r>
  8054dc:	103f3f1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  8054e0:	dc800e17 	ldw	r18,56(sp)
  8054e4:	003f2e06 	br	8051a0 <___vfprintf_internal_r+0x6a4>
  8054e8:	d9414c17 	ldw	r5,1328(sp)
  8054ec:	29400414 	ori	r5,r5,16
  8054f0:	d9414c15 	stw	r5,1328(sp)
  8054f4:	d9814c17 	ldw	r6,1328(sp)
  8054f8:	3080080c 	andi	r2,r6,32
  8054fc:	10014f1e 	bne	r2,zero,805a3c <___vfprintf_internal_r+0xf40>
  805500:	d8c14c17 	ldw	r3,1328(sp)
  805504:	1880040c 	andi	r2,r3,16
  805508:	1002f01e 	bne	r2,zero,8060cc <___vfprintf_internal_r+0x15d0>
  80550c:	d9014c17 	ldw	r4,1328(sp)
  805510:	2080100c 	andi	r2,r4,64
  805514:	1002ed26 	beq	r2,zero,8060cc <___vfprintf_internal_r+0x15d0>
  805518:	3880000f 	ldh	r2,0(r7)
  80551c:	39c00104 	addi	r7,r7,4
  805520:	d9c14015 	stw	r7,1280(sp)
  805524:	1023d7fa 	srai	r17,r2,31
  805528:	1021883a 	mov	r16,r2
  80552c:	88037816 	blt	r17,zero,806310 <___vfprintf_internal_r+0x1814>
  805530:	01000044 	movi	r4,1
  805534:	98000416 	blt	r19,zero,805548 <___vfprintf_internal_r+0xa4c>
  805538:	d8c14c17 	ldw	r3,1328(sp)
  80553c:	00bfdfc4 	movi	r2,-129
  805540:	1886703a 	and	r3,r3,r2
  805544:	d8c14c15 	stw	r3,1328(sp)
  805548:	8444b03a 	or	r2,r16,r17
  80554c:	10022c1e 	bne	r2,zero,805e00 <___vfprintf_internal_r+0x1304>
  805550:	98022b1e 	bne	r19,zero,805e00 <___vfprintf_internal_r+0x1304>
  805554:	20803fcc 	andi	r2,r4,255
  805558:	1002a126 	beq	r2,zero,805fe0 <___vfprintf_internal_r+0x14e4>
  80555c:	d8c01904 	addi	r3,sp,100
  805560:	dd000f04 	addi	r20,sp,60
  805564:	d8c14115 	stw	r3,1284(sp)
  805568:	d8c14117 	ldw	r3,1284(sp)
  80556c:	dcc14515 	stw	r19,1300(sp)
  805570:	a0c5c83a 	sub	r2,r20,r3
  805574:	11c00a04 	addi	r7,r2,40
  805578:	99c0010e 	bge	r19,r7,805580 <___vfprintf_internal_r+0xa84>
  80557c:	d9c14515 	stw	r7,1300(sp)
  805580:	dcc14615 	stw	r19,1304(sp)
  805584:	d8800407 	ldb	r2,16(sp)
  805588:	103e4c26 	beq	r2,zero,804ebc <___vfprintf_internal_r+0x3c0>
  80558c:	d8814517 	ldw	r2,1300(sp)
  805590:	10800044 	addi	r2,r2,1
  805594:	d8814515 	stw	r2,1300(sp)
  805598:	003e4806 	br	804ebc <___vfprintf_internal_r+0x3c0>
  80559c:	d9814c17 	ldw	r6,1328(sp)
  8055a0:	31800414 	ori	r6,r6,16
  8055a4:	d9814c15 	stw	r6,1328(sp)
  8055a8:	d8c14c17 	ldw	r3,1328(sp)
  8055ac:	1880080c 	andi	r2,r3,32
  8055b0:	1001271e 	bne	r2,zero,805a50 <___vfprintf_internal_r+0xf54>
  8055b4:	d9414c17 	ldw	r5,1328(sp)
  8055b8:	2880040c 	andi	r2,r5,16
  8055bc:	1002bc1e 	bne	r2,zero,8060b0 <___vfprintf_internal_r+0x15b4>
  8055c0:	d9814c17 	ldw	r6,1328(sp)
  8055c4:	3080100c 	andi	r2,r6,64
  8055c8:	1002b926 	beq	r2,zero,8060b0 <___vfprintf_internal_r+0x15b4>
  8055cc:	3c00000b 	ldhu	r16,0(r7)
  8055d0:	0009883a 	mov	r4,zero
  8055d4:	39c00104 	addi	r7,r7,4
  8055d8:	0023883a 	mov	r17,zero
  8055dc:	d9c14015 	stw	r7,1280(sp)
  8055e0:	d8000405 	stb	zero,16(sp)
  8055e4:	003fd306 	br	805534 <___vfprintf_internal_r+0xa38>
  8055e8:	d9014c17 	ldw	r4,1328(sp)
  8055ec:	21000414 	ori	r4,r4,16
  8055f0:	d9014c15 	stw	r4,1328(sp)
  8055f4:	d9414c17 	ldw	r5,1328(sp)
  8055f8:	2880080c 	andi	r2,r5,32
  8055fc:	1001081e 	bne	r2,zero,805a20 <___vfprintf_internal_r+0xf24>
  805600:	d8c14c17 	ldw	r3,1328(sp)
  805604:	1880040c 	andi	r2,r3,16
  805608:	1002b61e 	bne	r2,zero,8060e4 <___vfprintf_internal_r+0x15e8>
  80560c:	d9014c17 	ldw	r4,1328(sp)
  805610:	2080100c 	andi	r2,r4,64
  805614:	1002b326 	beq	r2,zero,8060e4 <___vfprintf_internal_r+0x15e8>
  805618:	3c00000b 	ldhu	r16,0(r7)
  80561c:	01000044 	movi	r4,1
  805620:	39c00104 	addi	r7,r7,4
  805624:	0023883a 	mov	r17,zero
  805628:	d9c14015 	stw	r7,1280(sp)
  80562c:	d8000405 	stb	zero,16(sp)
  805630:	003fc006 	br	805534 <___vfprintf_internal_r+0xa38>
  805634:	d9014f17 	ldw	r4,1340(sp)
  805638:	b00b883a 	mov	r5,r22
  80563c:	d9800c04 	addi	r6,sp,48
  805640:	0804aa40 	call	804aa4 <__sprint_r>
  805644:	103ee51e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  805648:	dc800e17 	ldw	r18,56(sp)
  80564c:	d8c01904 	addi	r3,sp,100
  805650:	d9814c17 	ldw	r6,1328(sp)
  805654:	3080004c 	andi	r2,r6,1
  805658:	1005003a 	cmpeq	r2,r2,zero
  80565c:	103ea51e 	bne	r2,zero,8050f4 <___vfprintf_internal_r+0x5f8>
  805660:	00800044 	movi	r2,1
  805664:	dc400d17 	ldw	r17,52(sp)
  805668:	18800115 	stw	r2,4(r3)
  80566c:	d8814917 	ldw	r2,1316(sp)
  805670:	94800044 	addi	r18,r18,1
  805674:	8c400044 	addi	r17,r17,1
  805678:	18800015 	stw	r2,0(r3)
  80567c:	008001c4 	movi	r2,7
  805680:	dc800e15 	stw	r18,56(sp)
  805684:	dc400d15 	stw	r17,52(sp)
  805688:	1442240e 	bge	r2,r17,805f1c <___vfprintf_internal_r+0x1420>
  80568c:	d9014f17 	ldw	r4,1340(sp)
  805690:	b00b883a 	mov	r5,r22
  805694:	d9800c04 	addi	r6,sp,48
  805698:	0804aa40 	call	804aa4 <__sprint_r>
  80569c:	103ecf1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  8056a0:	dc800e17 	ldw	r18,56(sp)
  8056a4:	d8c01904 	addi	r3,sp,100
  8056a8:	003e9206 	br	8050f4 <___vfprintf_internal_r+0x5f8>
  8056ac:	d9014f17 	ldw	r4,1340(sp)
  8056b0:	b00b883a 	mov	r5,r22
  8056b4:	d9800c04 	addi	r6,sp,48
  8056b8:	0804aa40 	call	804aa4 <__sprint_r>
  8056bc:	103ec026 	beq	r2,zero,8051c0 <___vfprintf_internal_r+0x6c4>
  8056c0:	003ec606 	br	8051dc <___vfprintf_internal_r+0x6e0>
  8056c4:	d9014f17 	ldw	r4,1340(sp)
  8056c8:	b00b883a 	mov	r5,r22
  8056cc:	d9800c04 	addi	r6,sp,48
  8056d0:	d9c15115 	stw	r7,1348(sp)
  8056d4:	0804aa40 	call	804aa4 <__sprint_r>
  8056d8:	d9c15117 	ldw	r7,1348(sp)
  8056dc:	103ebf1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  8056e0:	dc800e17 	ldw	r18,56(sp)
  8056e4:	dc400d17 	ldw	r17,52(sp)
  8056e8:	dd401904 	addi	r21,sp,100
  8056ec:	003e7406 	br	8050c0 <___vfprintf_internal_r+0x5c4>
  8056f0:	d9014f17 	ldw	r4,1340(sp)
  8056f4:	b00b883a 	mov	r5,r22
  8056f8:	d9800c04 	addi	r6,sp,48
  8056fc:	d9c15115 	stw	r7,1348(sp)
  805700:	0804aa40 	call	804aa4 <__sprint_r>
  805704:	d9c15117 	ldw	r7,1348(sp)
  805708:	103eb41e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  80570c:	dd401904 	addi	r21,sp,100
  805710:	003d6d06 	br	804cc8 <___vfprintf_internal_r+0x1cc>
  805714:	d9014f17 	ldw	r4,1340(sp)
  805718:	b00b883a 	mov	r5,r22
  80571c:	d9800c04 	addi	r6,sp,48
  805720:	d9c15115 	stw	r7,1348(sp)
  805724:	0804aa40 	call	804aa4 <__sprint_r>
  805728:	d9c15117 	ldw	r7,1348(sp)
  80572c:	103eab1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  805730:	dc800e17 	ldw	r18,56(sp)
  805734:	dc400d17 	ldw	r17,52(sp)
  805738:	dd401904 	addi	r21,sp,100
  80573c:	003e3406 	br	805010 <___vfprintf_internal_r+0x514>
  805740:	d9014f17 	ldw	r4,1340(sp)
  805744:	b00b883a 	mov	r5,r22
  805748:	d9800c04 	addi	r6,sp,48
  80574c:	d9c15115 	stw	r7,1348(sp)
  805750:	0804aa40 	call	804aa4 <__sprint_r>
  805754:	d9c15117 	ldw	r7,1348(sp)
  805758:	103ea01e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  80575c:	dc800e17 	ldw	r18,56(sp)
  805760:	dc400d17 	ldw	r17,52(sp)
  805764:	dd401904 	addi	r21,sp,100
  805768:	003e1c06 	br	804fdc <___vfprintf_internal_r+0x4e0>
  80576c:	d9014f17 	ldw	r4,1340(sp)
  805770:	b00b883a 	mov	r5,r22
  805774:	d9800c04 	addi	r6,sp,48
  805778:	d9c15115 	stw	r7,1348(sp)
  80577c:	0804aa40 	call	804aa4 <__sprint_r>
  805780:	d9c15117 	ldw	r7,1348(sp)
  805784:	103e951e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  805788:	dc800e17 	ldw	r18,56(sp)
  80578c:	dc400d17 	ldw	r17,52(sp)
  805790:	dd401904 	addi	r21,sp,100
  805794:	003e0406 	br	804fa8 <___vfprintf_internal_r+0x4ac>
  805798:	d9000517 	ldw	r4,20(sp)
  80579c:	0102580e 	bge	zero,r4,806100 <___vfprintf_internal_r+0x1604>
  8057a0:	d9814717 	ldw	r6,1308(sp)
  8057a4:	21807a16 	blt	r4,r6,805990 <___vfprintf_internal_r+0xe94>
  8057a8:	d8814117 	ldw	r2,1284(sp)
  8057ac:	91a5883a 	add	r18,r18,r6
  8057b0:	8c400044 	addi	r17,r17,1
  8057b4:	a8800015 	stw	r2,0(r21)
  8057b8:	008001c4 	movi	r2,7
  8057bc:	a9800115 	stw	r6,4(r21)
  8057c0:	dc800e15 	stw	r18,56(sp)
  8057c4:	dc400d15 	stw	r17,52(sp)
  8057c8:	1442fc16 	blt	r2,r17,8063bc <___vfprintf_internal_r+0x18c0>
  8057cc:	a8c00204 	addi	r3,r21,8
  8057d0:	d9414717 	ldw	r5,1308(sp)
  8057d4:	2161c83a 	sub	r16,r4,r5
  8057d8:	043f9d0e 	bge	zero,r16,805650 <___vfprintf_internal_r+0xb54>
  8057dc:	00800404 	movi	r2,16
  8057e0:	1402190e 	bge	r2,r16,806048 <___vfprintf_internal_r+0x154c>
  8057e4:	dc400d17 	ldw	r17,52(sp)
  8057e8:	1027883a 	mov	r19,r2
  8057ec:	07002074 	movhi	fp,129
  8057f0:	e73fa684 	addi	fp,fp,-358
  8057f4:	050001c4 	movi	r20,7
  8057f8:	00000306 	br	805808 <___vfprintf_internal_r+0xd0c>
  8057fc:	18c00204 	addi	r3,r3,8
  805800:	843ffc04 	addi	r16,r16,-16
  805804:	9c02130e 	bge	r19,r16,806054 <___vfprintf_internal_r+0x1558>
  805808:	94800404 	addi	r18,r18,16
  80580c:	8c400044 	addi	r17,r17,1
  805810:	1f000015 	stw	fp,0(r3)
  805814:	1cc00115 	stw	r19,4(r3)
  805818:	dc800e15 	stw	r18,56(sp)
  80581c:	dc400d15 	stw	r17,52(sp)
  805820:	a47ff60e 	bge	r20,r17,8057fc <___vfprintf_internal_r+0xd00>
  805824:	d9014f17 	ldw	r4,1340(sp)
  805828:	b00b883a 	mov	r5,r22
  80582c:	d9800c04 	addi	r6,sp,48
  805830:	0804aa40 	call	804aa4 <__sprint_r>
  805834:	103e691e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  805838:	dc800e17 	ldw	r18,56(sp)
  80583c:	dc400d17 	ldw	r17,52(sp)
  805840:	d8c01904 	addi	r3,sp,100
  805844:	003fee06 	br	805800 <___vfprintf_internal_r+0xd04>
  805848:	d8814717 	ldw	r2,1308(sp)
  80584c:	143fffc4 	addi	r16,r2,-1
  805850:	043e970e 	bge	zero,r16,8052b0 <___vfprintf_internal_r+0x7b4>
  805854:	00800404 	movi	r2,16
  805858:	1400180e 	bge	r2,r16,8058bc <___vfprintf_internal_r+0xdc0>
  80585c:	1029883a 	mov	r20,r2
  805860:	07002074 	movhi	fp,129
  805864:	e73fa684 	addi	fp,fp,-358
  805868:	054001c4 	movi	r21,7
  80586c:	00000306 	br	80587c <___vfprintf_internal_r+0xd80>
  805870:	9cc00204 	addi	r19,r19,8
  805874:	843ffc04 	addi	r16,r16,-16
  805878:	a400120e 	bge	r20,r16,8058c4 <___vfprintf_internal_r+0xdc8>
  80587c:	94800404 	addi	r18,r18,16
  805880:	8c400044 	addi	r17,r17,1
  805884:	9f000015 	stw	fp,0(r19)
  805888:	9d000115 	stw	r20,4(r19)
  80588c:	dc800e15 	stw	r18,56(sp)
  805890:	dc400d15 	stw	r17,52(sp)
  805894:	ac7ff60e 	bge	r21,r17,805870 <___vfprintf_internal_r+0xd74>
  805898:	d9014f17 	ldw	r4,1340(sp)
  80589c:	b00b883a 	mov	r5,r22
  8058a0:	d9800c04 	addi	r6,sp,48
  8058a4:	0804aa40 	call	804aa4 <__sprint_r>
  8058a8:	103e4c1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  8058ac:	dc800e17 	ldw	r18,56(sp)
  8058b0:	dc400d17 	ldw	r17,52(sp)
  8058b4:	dcc01904 	addi	r19,sp,100
  8058b8:	003fee06 	br	805874 <___vfprintf_internal_r+0xd78>
  8058bc:	07002074 	movhi	fp,129
  8058c0:	e73fa684 	addi	fp,fp,-358
  8058c4:	9425883a 	add	r18,r18,r16
  8058c8:	8c400044 	addi	r17,r17,1
  8058cc:	008001c4 	movi	r2,7
  8058d0:	9f000015 	stw	fp,0(r19)
  8058d4:	9c000115 	stw	r16,4(r19)
  8058d8:	dc800e15 	stw	r18,56(sp)
  8058dc:	dc400d15 	stw	r17,52(sp)
  8058e0:	147e720e 	bge	r2,r17,8052ac <___vfprintf_internal_r+0x7b0>
  8058e4:	d9014f17 	ldw	r4,1340(sp)
  8058e8:	b00b883a 	mov	r5,r22
  8058ec:	d9800c04 	addi	r6,sp,48
  8058f0:	0804aa40 	call	804aa4 <__sprint_r>
  8058f4:	103e391e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  8058f8:	dc800e17 	ldw	r18,56(sp)
  8058fc:	dc400d17 	ldw	r17,52(sp)
  805900:	dcc01904 	addi	r19,sp,100
  805904:	003e6a06 	br	8052b0 <___vfprintf_internal_r+0x7b4>
  805908:	d9014f17 	ldw	r4,1340(sp)
  80590c:	b00b883a 	mov	r5,r22
  805910:	d9800c04 	addi	r6,sp,48
  805914:	d9c15115 	stw	r7,1348(sp)
  805918:	0804aa40 	call	804aa4 <__sprint_r>
  80591c:	d9c15117 	ldw	r7,1348(sp)
  805920:	103e2e1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  805924:	dc800e17 	ldw	r18,56(sp)
  805928:	dc400d17 	ldw	r17,52(sp)
  80592c:	dd401904 	addi	r21,sp,100
  805930:	003dba06 	br	80501c <___vfprintf_internal_r+0x520>
  805934:	d9014f17 	ldw	r4,1340(sp)
  805938:	b00b883a 	mov	r5,r22
  80593c:	d9800c04 	addi	r6,sp,48
  805940:	0804aa40 	call	804aa4 <__sprint_r>
  805944:	103e251e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  805948:	dc800e17 	ldw	r18,56(sp)
  80594c:	dc400d17 	ldw	r17,52(sp)
  805950:	dcc01904 	addi	r19,sp,100
  805954:	003e4206 	br	805260 <___vfprintf_internal_r+0x764>
  805958:	d9014f17 	ldw	r4,1340(sp)
  80595c:	b00b883a 	mov	r5,r22
  805960:	d9800c04 	addi	r6,sp,48
  805964:	0804aa40 	call	804aa4 <__sprint_r>
  805968:	103e1c1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  80596c:	dc800e17 	ldw	r18,56(sp)
  805970:	dc400d17 	ldw	r17,52(sp)
  805974:	d8c01904 	addi	r3,sp,100
  805978:	003e2e06 	br	805234 <___vfprintf_internal_r+0x738>
  80597c:	d9414c17 	ldw	r5,1328(sp)
  805980:	2880004c 	andi	r2,r5,1
  805984:	1005003a 	cmpeq	r2,r2,zero
  805988:	103dda1e 	bne	r2,zero,8050f4 <___vfprintf_internal_r+0x5f8>
  80598c:	003e9f06 	br	80540c <___vfprintf_internal_r+0x910>
  805990:	d8c14117 	ldw	r3,1284(sp)
  805994:	9125883a 	add	r18,r18,r4
  805998:	8c400044 	addi	r17,r17,1
  80599c:	008001c4 	movi	r2,7
  8059a0:	a8c00015 	stw	r3,0(r21)
  8059a4:	a9000115 	stw	r4,4(r21)
  8059a8:	dc800e15 	stw	r18,56(sp)
  8059ac:	dc400d15 	stw	r17,52(sp)
  8059b0:	14426c16 	blt	r2,r17,806364 <___vfprintf_internal_r+0x1868>
  8059b4:	a8c00204 	addi	r3,r21,8
  8059b8:	d9414917 	ldw	r5,1316(sp)
  8059bc:	00800044 	movi	r2,1
  8059c0:	94800044 	addi	r18,r18,1
  8059c4:	8c400044 	addi	r17,r17,1
  8059c8:	18800115 	stw	r2,4(r3)
  8059cc:	008001c4 	movi	r2,7
  8059d0:	19400015 	stw	r5,0(r3)
  8059d4:	dc800e15 	stw	r18,56(sp)
  8059d8:	dc400d15 	stw	r17,52(sp)
  8059dc:	2021883a 	mov	r16,r4
  8059e0:	14425616 	blt	r2,r17,80633c <___vfprintf_internal_r+0x1840>
  8059e4:	19400204 	addi	r5,r3,8
  8059e8:	d9814717 	ldw	r6,1308(sp)
  8059ec:	8c400044 	addi	r17,r17,1
  8059f0:	dc400d15 	stw	r17,52(sp)
  8059f4:	3107c83a 	sub	r3,r6,r4
  8059f8:	d9014117 	ldw	r4,1284(sp)
  8059fc:	90e5883a 	add	r18,r18,r3
  805a00:	28c00115 	stw	r3,4(r5)
  805a04:	8105883a 	add	r2,r16,r4
  805a08:	28800015 	stw	r2,0(r5)
  805a0c:	008001c4 	movi	r2,7
  805a10:	dc800e15 	stw	r18,56(sp)
  805a14:	147f1d16 	blt	r2,r17,80568c <___vfprintf_internal_r+0xb90>
  805a18:	28c00204 	addi	r3,r5,8
  805a1c:	003db506 	br	8050f4 <___vfprintf_internal_r+0x5f8>
  805a20:	3c000017 	ldw	r16,0(r7)
  805a24:	3c400117 	ldw	r17,4(r7)
  805a28:	39800204 	addi	r6,r7,8
  805a2c:	01000044 	movi	r4,1
  805a30:	d9814015 	stw	r6,1280(sp)
  805a34:	d8000405 	stb	zero,16(sp)
  805a38:	003ebe06 	br	805534 <___vfprintf_internal_r+0xa38>
  805a3c:	3c000017 	ldw	r16,0(r7)
  805a40:	3c400117 	ldw	r17,4(r7)
  805a44:	38800204 	addi	r2,r7,8
  805a48:	d8814015 	stw	r2,1280(sp)
  805a4c:	003eb706 	br	80552c <___vfprintf_internal_r+0xa30>
  805a50:	3c000017 	ldw	r16,0(r7)
  805a54:	3c400117 	ldw	r17,4(r7)
  805a58:	39000204 	addi	r4,r7,8
  805a5c:	d9014015 	stw	r4,1280(sp)
  805a60:	0009883a 	mov	r4,zero
  805a64:	d8000405 	stb	zero,16(sp)
  805a68:	003eb206 	br	805534 <___vfprintf_internal_r+0xa38>
  805a6c:	38c00017 	ldw	r3,0(r7)
  805a70:	39c00104 	addi	r7,r7,4
  805a74:	d8c14a15 	stw	r3,1320(sp)
  805a78:	1800d70e 	bge	r3,zero,805dd8 <___vfprintf_internal_r+0x12dc>
  805a7c:	00c7c83a 	sub	r3,zero,r3
  805a80:	d8c14a15 	stw	r3,1320(sp)
  805a84:	d9014c17 	ldw	r4,1328(sp)
  805a88:	b8c00007 	ldb	r3,0(r23)
  805a8c:	21000114 	ori	r4,r4,4
  805a90:	d9014c15 	stw	r4,1328(sp)
  805a94:	003c9806 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  805a98:	d9814c17 	ldw	r6,1328(sp)
  805a9c:	3080080c 	andi	r2,r6,32
  805aa0:	1001f626 	beq	r2,zero,80627c <___vfprintf_internal_r+0x1780>
  805aa4:	d9014b17 	ldw	r4,1324(sp)
  805aa8:	38800017 	ldw	r2,0(r7)
  805aac:	39c00104 	addi	r7,r7,4
  805ab0:	d9c14015 	stw	r7,1280(sp)
  805ab4:	2007d7fa 	srai	r3,r4,31
  805ab8:	d9c14017 	ldw	r7,1280(sp)
  805abc:	11000015 	stw	r4,0(r2)
  805ac0:	10c00115 	stw	r3,4(r2)
  805ac4:	003c6906 	br	804c6c <___vfprintf_internal_r+0x170>
  805ac8:	b8c00007 	ldb	r3,0(r23)
  805acc:	00801b04 	movi	r2,108
  805ad0:	18825526 	beq	r3,r2,806428 <___vfprintf_internal_r+0x192c>
  805ad4:	d9414c17 	ldw	r5,1328(sp)
  805ad8:	29400414 	ori	r5,r5,16
  805adc:	d9414c15 	stw	r5,1328(sp)
  805ae0:	003c8506 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  805ae4:	d9814c17 	ldw	r6,1328(sp)
  805ae8:	b8c00007 	ldb	r3,0(r23)
  805aec:	31800814 	ori	r6,r6,32
  805af0:	d9814c15 	stw	r6,1328(sp)
  805af4:	003c8006 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  805af8:	d8814c17 	ldw	r2,1328(sp)
  805afc:	3c000017 	ldw	r16,0(r7)
  805b00:	00c01e04 	movi	r3,120
  805b04:	10800094 	ori	r2,r2,2
  805b08:	d8814c15 	stw	r2,1328(sp)
  805b0c:	39c00104 	addi	r7,r7,4
  805b10:	01402074 	movhi	r5,129
  805b14:	297f8f04 	addi	r5,r5,-452
  805b18:	00800c04 	movi	r2,48
  805b1c:	0023883a 	mov	r17,zero
  805b20:	01000084 	movi	r4,2
  805b24:	d9c14015 	stw	r7,1280(sp)
  805b28:	d8c14d15 	stw	r3,1332(sp)
  805b2c:	d9414415 	stw	r5,1296(sp)
  805b30:	d8800445 	stb	r2,17(sp)
  805b34:	d8c00485 	stb	r3,18(sp)
  805b38:	d8000405 	stb	zero,16(sp)
  805b3c:	003e7d06 	br	805534 <___vfprintf_internal_r+0xa38>
  805b40:	d8814c17 	ldw	r2,1328(sp)
  805b44:	b8c00007 	ldb	r3,0(r23)
  805b48:	10801014 	ori	r2,r2,64
  805b4c:	d8814c15 	stw	r2,1328(sp)
  805b50:	003c6906 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  805b54:	d9414c17 	ldw	r5,1328(sp)
  805b58:	2880020c 	andi	r2,r5,8
  805b5c:	1001e526 	beq	r2,zero,8062f4 <___vfprintf_internal_r+0x17f8>
  805b60:	39800017 	ldw	r6,0(r7)
  805b64:	38800204 	addi	r2,r7,8
  805b68:	d8814015 	stw	r2,1280(sp)
  805b6c:	d9814215 	stw	r6,1288(sp)
  805b70:	39c00117 	ldw	r7,4(r7)
  805b74:	d9c14315 	stw	r7,1292(sp)
  805b78:	d9014217 	ldw	r4,1288(sp)
  805b7c:	d9414317 	ldw	r5,1292(sp)
  805b80:	080b5ac0 	call	80b5ac <__isinfd>
  805b84:	10021d26 	beq	r2,zero,8063fc <___vfprintf_internal_r+0x1900>
  805b88:	d9014217 	ldw	r4,1288(sp)
  805b8c:	d9414317 	ldw	r5,1292(sp)
  805b90:	000d883a 	mov	r6,zero
  805b94:	000f883a 	mov	r7,zero
  805b98:	080cce80 	call	80cce8 <__ltdf2>
  805b9c:	1002d016 	blt	r2,zero,8066e0 <___vfprintf_internal_r+0x1be4>
  805ba0:	d9414d17 	ldw	r5,1332(sp)
  805ba4:	008011c4 	movi	r2,71
  805ba8:	11421016 	blt	r2,r5,8063ec <___vfprintf_internal_r+0x18f0>
  805bac:	01802074 	movhi	r6,129
  805bb0:	31bf9404 	addi	r6,r6,-432
  805bb4:	d9814115 	stw	r6,1284(sp)
  805bb8:	d9014c17 	ldw	r4,1328(sp)
  805bbc:	00c000c4 	movi	r3,3
  805bc0:	00bfdfc4 	movi	r2,-129
  805bc4:	2088703a 	and	r4,r4,r2
  805bc8:	180f883a 	mov	r7,r3
  805bcc:	d8c14515 	stw	r3,1300(sp)
  805bd0:	d9014c15 	stw	r4,1328(sp)
  805bd4:	d8014615 	stw	zero,1304(sp)
  805bd8:	003e6a06 	br	805584 <___vfprintf_internal_r+0xa88>
  805bdc:	38800017 	ldw	r2,0(r7)
  805be0:	00c00044 	movi	r3,1
  805be4:	39c00104 	addi	r7,r7,4
  805be8:	d9c14015 	stw	r7,1280(sp)
  805bec:	d9000f04 	addi	r4,sp,60
  805bf0:	180f883a 	mov	r7,r3
  805bf4:	d8c14515 	stw	r3,1300(sp)
  805bf8:	d9014115 	stw	r4,1284(sp)
  805bfc:	d8800f05 	stb	r2,60(sp)
  805c00:	d8000405 	stb	zero,16(sp)
  805c04:	003cac06 	br	804eb8 <___vfprintf_internal_r+0x3bc>
  805c08:	01402074 	movhi	r5,129
  805c0c:	297f9a04 	addi	r5,r5,-408
  805c10:	d9414415 	stw	r5,1296(sp)
  805c14:	d9814c17 	ldw	r6,1328(sp)
  805c18:	3080080c 	andi	r2,r6,32
  805c1c:	1000ff26 	beq	r2,zero,80601c <___vfprintf_internal_r+0x1520>
  805c20:	3c000017 	ldw	r16,0(r7)
  805c24:	3c400117 	ldw	r17,4(r7)
  805c28:	38800204 	addi	r2,r7,8
  805c2c:	d8814015 	stw	r2,1280(sp)
  805c30:	d9414c17 	ldw	r5,1328(sp)
  805c34:	2880004c 	andi	r2,r5,1
  805c38:	1005003a 	cmpeq	r2,r2,zero
  805c3c:	1000b91e 	bne	r2,zero,805f24 <___vfprintf_internal_r+0x1428>
  805c40:	8444b03a 	or	r2,r16,r17
  805c44:	1000b726 	beq	r2,zero,805f24 <___vfprintf_internal_r+0x1428>
  805c48:	d9814d17 	ldw	r6,1332(sp)
  805c4c:	29400094 	ori	r5,r5,2
  805c50:	00800c04 	movi	r2,48
  805c54:	01000084 	movi	r4,2
  805c58:	d9414c15 	stw	r5,1328(sp)
  805c5c:	d8800445 	stb	r2,17(sp)
  805c60:	d9800485 	stb	r6,18(sp)
  805c64:	d8000405 	stb	zero,16(sp)
  805c68:	003e3206 	br	805534 <___vfprintf_internal_r+0xa38>
  805c6c:	01802074 	movhi	r6,129
  805c70:	31bf8f04 	addi	r6,r6,-452
  805c74:	d9814415 	stw	r6,1296(sp)
  805c78:	003fe606 	br	805c14 <___vfprintf_internal_r+0x1118>
  805c7c:	00800ac4 	movi	r2,43
  805c80:	d8800405 	stb	r2,16(sp)
  805c84:	b8c00007 	ldb	r3,0(r23)
  805c88:	003c1b06 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  805c8c:	d8814c17 	ldw	r2,1328(sp)
  805c90:	b8c00007 	ldb	r3,0(r23)
  805c94:	10800054 	ori	r2,r2,1
  805c98:	d8814c15 	stw	r2,1328(sp)
  805c9c:	003c1606 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  805ca0:	d8800407 	ldb	r2,16(sp)
  805ca4:	10004c1e 	bne	r2,zero,805dd8 <___vfprintf_internal_r+0x12dc>
  805ca8:	00800804 	movi	r2,32
  805cac:	d8800405 	stb	r2,16(sp)
  805cb0:	b8c00007 	ldb	r3,0(r23)
  805cb4:	003c1006 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  805cb8:	d9814c17 	ldw	r6,1328(sp)
  805cbc:	b8c00007 	ldb	r3,0(r23)
  805cc0:	31800214 	ori	r6,r6,8
  805cc4:	d9814c15 	stw	r6,1328(sp)
  805cc8:	003c0b06 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  805ccc:	0009883a 	mov	r4,zero
  805cd0:	04000244 	movi	r16,9
  805cd4:	01400284 	movi	r5,10
  805cd8:	d9c15115 	stw	r7,1348(sp)
  805cdc:	0803fc00 	call	803fc0 <__mulsi3>
  805ce0:	b9000007 	ldb	r4,0(r23)
  805ce4:	d8c14d17 	ldw	r3,1332(sp)
  805ce8:	bdc00044 	addi	r23,r23,1
  805cec:	d9014d15 	stw	r4,1332(sp)
  805cf0:	d9414d17 	ldw	r5,1332(sp)
  805cf4:	1885883a 	add	r2,r3,r2
  805cf8:	113ff404 	addi	r4,r2,-48
  805cfc:	28bff404 	addi	r2,r5,-48
  805d00:	d9c15117 	ldw	r7,1348(sp)
  805d04:	80bff32e 	bgeu	r16,r2,805cd4 <___vfprintf_internal_r+0x11d8>
  805d08:	d9014a15 	stw	r4,1320(sp)
  805d0c:	003bfc06 	br	804d00 <___vfprintf_internal_r+0x204>
  805d10:	d8814c17 	ldw	r2,1328(sp)
  805d14:	b8c00007 	ldb	r3,0(r23)
  805d18:	10802014 	ori	r2,r2,128
  805d1c:	d8814c15 	stw	r2,1328(sp)
  805d20:	003bf506 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  805d24:	b8c00007 	ldb	r3,0(r23)
  805d28:	00800a84 	movi	r2,42
  805d2c:	bdc00044 	addi	r23,r23,1
  805d30:	18831826 	beq	r3,r2,806994 <___vfprintf_internal_r+0x1e98>
  805d34:	d8c14d15 	stw	r3,1332(sp)
  805d38:	18bff404 	addi	r2,r3,-48
  805d3c:	00c00244 	movi	r3,9
  805d40:	18827b36 	bltu	r3,r2,806730 <___vfprintf_internal_r+0x1c34>
  805d44:	1821883a 	mov	r16,r3
  805d48:	0009883a 	mov	r4,zero
  805d4c:	01400284 	movi	r5,10
  805d50:	d9c15115 	stw	r7,1348(sp)
  805d54:	0803fc00 	call	803fc0 <__mulsi3>
  805d58:	d9414d17 	ldw	r5,1332(sp)
  805d5c:	b9800007 	ldb	r6,0(r23)
  805d60:	d9c15117 	ldw	r7,1348(sp)
  805d64:	1145883a 	add	r2,r2,r5
  805d68:	113ff404 	addi	r4,r2,-48
  805d6c:	30bff404 	addi	r2,r6,-48
  805d70:	d9814d15 	stw	r6,1332(sp)
  805d74:	bdc00044 	addi	r23,r23,1
  805d78:	80bff42e 	bgeu	r16,r2,805d4c <___vfprintf_internal_r+0x1250>
  805d7c:	2027883a 	mov	r19,r4
  805d80:	203bdf0e 	bge	r4,zero,804d00 <___vfprintf_internal_r+0x204>
  805d84:	04ffffc4 	movi	r19,-1
  805d88:	003bdd06 	br	804d00 <___vfprintf_internal_r+0x204>
  805d8c:	d8000405 	stb	zero,16(sp)
  805d90:	39800017 	ldw	r6,0(r7)
  805d94:	39c00104 	addi	r7,r7,4
  805d98:	d9c14015 	stw	r7,1280(sp)
  805d9c:	d9814115 	stw	r6,1284(sp)
  805da0:	3001c926 	beq	r6,zero,8064c8 <___vfprintf_internal_r+0x19cc>
  805da4:	98000e16 	blt	r19,zero,805de0 <___vfprintf_internal_r+0x12e4>
  805da8:	d9014117 	ldw	r4,1284(sp)
  805dac:	000b883a 	mov	r5,zero
  805db0:	980d883a 	mov	r6,r19
  805db4:	0809c300 	call	809c30 <memchr>
  805db8:	10025926 	beq	r2,zero,806720 <___vfprintf_internal_r+0x1c24>
  805dbc:	d8c14117 	ldw	r3,1284(sp)
  805dc0:	10cfc83a 	sub	r7,r2,r3
  805dc4:	99c19e16 	blt	r19,r7,806440 <___vfprintf_internal_r+0x1944>
  805dc8:	d9c14515 	stw	r7,1300(sp)
  805dcc:	38000916 	blt	r7,zero,805df4 <___vfprintf_internal_r+0x12f8>
  805dd0:	d8014615 	stw	zero,1304(sp)
  805dd4:	003deb06 	br	805584 <___vfprintf_internal_r+0xa88>
  805dd8:	b8c00007 	ldb	r3,0(r23)
  805ddc:	003bc606 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  805de0:	d9014117 	ldw	r4,1284(sp)
  805de4:	0804a300 	call	804a30 <strlen>
  805de8:	d8814515 	stw	r2,1300(sp)
  805dec:	100f883a 	mov	r7,r2
  805df0:	103ff70e 	bge	r2,zero,805dd0 <___vfprintf_internal_r+0x12d4>
  805df4:	d8014515 	stw	zero,1300(sp)
  805df8:	d8014615 	stw	zero,1304(sp)
  805dfc:	003de106 	br	805584 <___vfprintf_internal_r+0xa88>
  805e00:	20c03fcc 	andi	r3,r4,255
  805e04:	00800044 	movi	r2,1
  805e08:	18802d26 	beq	r3,r2,805ec0 <___vfprintf_internal_r+0x13c4>
  805e0c:	18800e36 	bltu	r3,r2,805e48 <___vfprintf_internal_r+0x134c>
  805e10:	00800084 	movi	r2,2
  805e14:	1880fa26 	beq	r3,r2,806200 <___vfprintf_internal_r+0x1704>
  805e18:	01002074 	movhi	r4,129
  805e1c:	213f9f04 	addi	r4,r4,-388
  805e20:	0804a300 	call	804a30 <strlen>
  805e24:	100f883a 	mov	r7,r2
  805e28:	dcc14515 	stw	r19,1300(sp)
  805e2c:	9880010e 	bge	r19,r2,805e34 <___vfprintf_internal_r+0x1338>
  805e30:	d8814515 	stw	r2,1300(sp)
  805e34:	00802074 	movhi	r2,129
  805e38:	10bf9f04 	addi	r2,r2,-388
  805e3c:	dcc14615 	stw	r19,1304(sp)
  805e40:	d8814115 	stw	r2,1284(sp)
  805e44:	003dcf06 	br	805584 <___vfprintf_internal_r+0xa88>
  805e48:	d9401904 	addi	r5,sp,100
  805e4c:	dd000f04 	addi	r20,sp,60
  805e50:	d9414115 	stw	r5,1284(sp)
  805e54:	880a977a 	slli	r5,r17,29
  805e58:	d9814117 	ldw	r6,1284(sp)
  805e5c:	8004d0fa 	srli	r2,r16,3
  805e60:	8806d0fa 	srli	r3,r17,3
  805e64:	810001cc 	andi	r4,r16,7
  805e68:	2884b03a 	or	r2,r5,r2
  805e6c:	31bfffc4 	addi	r6,r6,-1
  805e70:	21000c04 	addi	r4,r4,48
  805e74:	d9814115 	stw	r6,1284(sp)
  805e78:	10cab03a 	or	r5,r2,r3
  805e7c:	31000005 	stb	r4,0(r6)
  805e80:	1021883a 	mov	r16,r2
  805e84:	1823883a 	mov	r17,r3
  805e88:	283ff21e 	bne	r5,zero,805e54 <___vfprintf_internal_r+0x1358>
  805e8c:	d8c14c17 	ldw	r3,1328(sp)
  805e90:	1880004c 	andi	r2,r3,1
  805e94:	1005003a 	cmpeq	r2,r2,zero
  805e98:	103db31e 	bne	r2,zero,805568 <___vfprintf_internal_r+0xa6c>
  805e9c:	20803fcc 	andi	r2,r4,255
  805ea0:	1080201c 	xori	r2,r2,128
  805ea4:	10bfe004 	addi	r2,r2,-128
  805ea8:	00c00c04 	movi	r3,48
  805eac:	10fdae26 	beq	r2,r3,805568 <___vfprintf_internal_r+0xa6c>
  805eb0:	31bfffc4 	addi	r6,r6,-1
  805eb4:	d9814115 	stw	r6,1284(sp)
  805eb8:	30c00005 	stb	r3,0(r6)
  805ebc:	003daa06 	br	805568 <___vfprintf_internal_r+0xa6c>
  805ec0:	88800068 	cmpgeui	r2,r17,1
  805ec4:	10002c1e 	bne	r2,zero,805f78 <___vfprintf_internal_r+0x147c>
  805ec8:	8800021e 	bne	r17,zero,805ed4 <___vfprintf_internal_r+0x13d8>
  805ecc:	00800244 	movi	r2,9
  805ed0:	14002936 	bltu	r2,r16,805f78 <___vfprintf_internal_r+0x147c>
  805ed4:	d90018c4 	addi	r4,sp,99
  805ed8:	dd000f04 	addi	r20,sp,60
  805edc:	d9014115 	stw	r4,1284(sp)
  805ee0:	d9014117 	ldw	r4,1284(sp)
  805ee4:	80800c04 	addi	r2,r16,48
  805ee8:	20800005 	stb	r2,0(r4)
  805eec:	003d9e06 	br	805568 <___vfprintf_internal_r+0xa6c>
  805ef0:	dc400d17 	ldw	r17,52(sp)
  805ef4:	07002074 	movhi	fp,129
  805ef8:	e73fa684 	addi	fp,fp,-358
  805efc:	9425883a 	add	r18,r18,r16
  805f00:	8c400044 	addi	r17,r17,1
  805f04:	008001c4 	movi	r2,7
  805f08:	1f000015 	stw	fp,0(r3)
  805f0c:	1c000115 	stw	r16,4(r3)
  805f10:	dc800e15 	stw	r18,56(sp)
  805f14:	dc400d15 	stw	r17,52(sp)
  805f18:	147ddc16 	blt	r2,r17,80568c <___vfprintf_internal_r+0xb90>
  805f1c:	18c00204 	addi	r3,r3,8
  805f20:	003c7406 	br	8050f4 <___vfprintf_internal_r+0x5f8>
  805f24:	01000084 	movi	r4,2
  805f28:	d8000405 	stb	zero,16(sp)
  805f2c:	003d8106 	br	805534 <___vfprintf_internal_r+0xa38>
  805f30:	d9814c17 	ldw	r6,1328(sp)
  805f34:	30c4703a 	and	r2,r6,r3
  805f38:	1005003a 	cmpeq	r2,r2,zero
  805f3c:	103cb326 	beq	r2,zero,80520c <___vfprintf_internal_r+0x710>
  805f40:	d9014117 	ldw	r4,1284(sp)
  805f44:	94800044 	addi	r18,r18,1
  805f48:	8c400044 	addi	r17,r17,1
  805f4c:	008001c4 	movi	r2,7
  805f50:	a9000015 	stw	r4,0(r21)
  805f54:	a8c00115 	stw	r3,4(r21)
  805f58:	dc800e15 	stw	r18,56(sp)
  805f5c:	dc400d15 	stw	r17,52(sp)
  805f60:	147e6016 	blt	r2,r17,8058e4 <___vfprintf_internal_r+0xde8>
  805f64:	acc00204 	addi	r19,r21,8
  805f68:	003cd106 	br	8052b0 <___vfprintf_internal_r+0x7b4>
  805f6c:	07002074 	movhi	fp,129
  805f70:	e73fa684 	addi	fp,fp,-358
  805f74:	003c4906 	br	80509c <___vfprintf_internal_r+0x5a0>
  805f78:	dd000f04 	addi	r20,sp,60
  805f7c:	dc801904 	addi	r18,sp,100
  805f80:	8009883a 	mov	r4,r16
  805f84:	880b883a 	mov	r5,r17
  805f88:	01800284 	movi	r6,10
  805f8c:	000f883a 	mov	r7,zero
  805f90:	080c3a80 	call	80c3a8 <__umoddi3>
  805f94:	12000c04 	addi	r8,r2,48
  805f98:	94bfffc4 	addi	r18,r18,-1
  805f9c:	8009883a 	mov	r4,r16
  805fa0:	880b883a 	mov	r5,r17
  805fa4:	01800284 	movi	r6,10
  805fa8:	000f883a 	mov	r7,zero
  805fac:	92000005 	stb	r8,0(r18)
  805fb0:	080bd3c0 	call	80bd3c <__udivdi3>
  805fb4:	1009883a 	mov	r4,r2
  805fb8:	1021883a 	mov	r16,r2
  805fbc:	18800068 	cmpgeui	r2,r3,1
  805fc0:	1823883a 	mov	r17,r3
  805fc4:	103fee1e 	bne	r2,zero,805f80 <___vfprintf_internal_r+0x1484>
  805fc8:	1800021e 	bne	r3,zero,805fd4 <___vfprintf_internal_r+0x14d8>
  805fcc:	00800244 	movi	r2,9
  805fd0:	113feb36 	bltu	r2,r4,805f80 <___vfprintf_internal_r+0x1484>
  805fd4:	94bfffc4 	addi	r18,r18,-1
  805fd8:	dc814115 	stw	r18,1284(sp)
  805fdc:	003fc006 	br	805ee0 <___vfprintf_internal_r+0x13e4>
  805fe0:	d9014c17 	ldw	r4,1328(sp)
  805fe4:	2080004c 	andi	r2,r4,1
  805fe8:	10009a1e 	bne	r2,zero,806254 <___vfprintf_internal_r+0x1758>
  805fec:	d9401904 	addi	r5,sp,100
  805ff0:	dd000f04 	addi	r20,sp,60
  805ff4:	d9414115 	stw	r5,1284(sp)
  805ff8:	003d5b06 	br	805568 <___vfprintf_internal_r+0xa6c>
  805ffc:	d9014f17 	ldw	r4,1340(sp)
  806000:	b00b883a 	mov	r5,r22
  806004:	d9800c04 	addi	r6,sp,48
  806008:	0804aa40 	call	804aa4 <__sprint_r>
  80600c:	103c731e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  806010:	dc800e17 	ldw	r18,56(sp)
  806014:	d8c01904 	addi	r3,sp,100
  806018:	003cf906 	br	805400 <___vfprintf_internal_r+0x904>
  80601c:	d8c14c17 	ldw	r3,1328(sp)
  806020:	1880040c 	andi	r2,r3,16
  806024:	1000711e 	bne	r2,zero,8061ec <___vfprintf_internal_r+0x16f0>
  806028:	d9014c17 	ldw	r4,1328(sp)
  80602c:	2080100c 	andi	r2,r4,64
  806030:	10006e26 	beq	r2,zero,8061ec <___vfprintf_internal_r+0x16f0>
  806034:	3c00000b 	ldhu	r16,0(r7)
  806038:	0023883a 	mov	r17,zero
  80603c:	39c00104 	addi	r7,r7,4
  806040:	d9c14015 	stw	r7,1280(sp)
  806044:	003efa06 	br	805c30 <___vfprintf_internal_r+0x1134>
  806048:	dc400d17 	ldw	r17,52(sp)
  80604c:	07002074 	movhi	fp,129
  806050:	e73fa684 	addi	fp,fp,-358
  806054:	9425883a 	add	r18,r18,r16
  806058:	8c400044 	addi	r17,r17,1
  80605c:	008001c4 	movi	r2,7
  806060:	1f000015 	stw	fp,0(r3)
  806064:	1c000115 	stw	r16,4(r3)
  806068:	dc800e15 	stw	r18,56(sp)
  80606c:	dc400d15 	stw	r17,52(sp)
  806070:	147d7016 	blt	r2,r17,805634 <___vfprintf_internal_r+0xb38>
  806074:	18c00204 	addi	r3,r3,8
  806078:	003d7506 	br	805650 <___vfprintf_internal_r+0xb54>
  80607c:	dc800e17 	ldw	r18,56(sp)
  806080:	dc400d17 	ldw	r17,52(sp)
  806084:	07002074 	movhi	fp,129
  806088:	e73faa84 	addi	fp,fp,-342
  80608c:	003bba06 	br	804f78 <___vfprintf_internal_r+0x47c>
  806090:	d9014f17 	ldw	r4,1340(sp)
  806094:	b00b883a 	mov	r5,r22
  806098:	d9800c04 	addi	r6,sp,48
  80609c:	0804aa40 	call	804aa4 <__sprint_r>
  8060a0:	103c4e1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  8060a4:	dc800e17 	ldw	r18,56(sp)
  8060a8:	d8c01904 	addi	r3,sp,100
  8060ac:	003ce306 	br	80543c <___vfprintf_internal_r+0x940>
  8060b0:	3c000017 	ldw	r16,0(r7)
  8060b4:	0009883a 	mov	r4,zero
  8060b8:	39c00104 	addi	r7,r7,4
  8060bc:	0023883a 	mov	r17,zero
  8060c0:	d9c14015 	stw	r7,1280(sp)
  8060c4:	d8000405 	stb	zero,16(sp)
  8060c8:	003d1a06 	br	805534 <___vfprintf_internal_r+0xa38>
  8060cc:	38800017 	ldw	r2,0(r7)
  8060d0:	39c00104 	addi	r7,r7,4
  8060d4:	d9c14015 	stw	r7,1280(sp)
  8060d8:	1023d7fa 	srai	r17,r2,31
  8060dc:	1021883a 	mov	r16,r2
  8060e0:	003d1206 	br	80552c <___vfprintf_internal_r+0xa30>
  8060e4:	3c000017 	ldw	r16,0(r7)
  8060e8:	01000044 	movi	r4,1
  8060ec:	39c00104 	addi	r7,r7,4
  8060f0:	0023883a 	mov	r17,zero
  8060f4:	d9c14015 	stw	r7,1280(sp)
  8060f8:	d8000405 	stb	zero,16(sp)
  8060fc:	003d0d06 	br	805534 <___vfprintf_internal_r+0xa38>
  806100:	00802074 	movhi	r2,129
  806104:	10bfa604 	addi	r2,r2,-360
  806108:	94800044 	addi	r18,r18,1
  80610c:	8c400044 	addi	r17,r17,1
  806110:	a8800015 	stw	r2,0(r21)
  806114:	00c00044 	movi	r3,1
  806118:	008001c4 	movi	r2,7
  80611c:	a8c00115 	stw	r3,4(r21)
  806120:	dc800e15 	stw	r18,56(sp)
  806124:	dc400d15 	stw	r17,52(sp)
  806128:	1440ca16 	blt	r2,r17,806454 <___vfprintf_internal_r+0x1958>
  80612c:	a8c00204 	addi	r3,r21,8
  806130:	2000061e 	bne	r4,zero,80614c <___vfprintf_internal_r+0x1650>
  806134:	d9414717 	ldw	r5,1308(sp)
  806138:	2800041e 	bne	r5,zero,80614c <___vfprintf_internal_r+0x1650>
  80613c:	d9814c17 	ldw	r6,1328(sp)
  806140:	3080004c 	andi	r2,r6,1
  806144:	1005003a 	cmpeq	r2,r2,zero
  806148:	103bea1e 	bne	r2,zero,8050f4 <___vfprintf_internal_r+0x5f8>
  80614c:	00800044 	movi	r2,1
  806150:	dc400d17 	ldw	r17,52(sp)
  806154:	18800115 	stw	r2,4(r3)
  806158:	d8814917 	ldw	r2,1316(sp)
  80615c:	94800044 	addi	r18,r18,1
  806160:	8c400044 	addi	r17,r17,1
  806164:	18800015 	stw	r2,0(r3)
  806168:	008001c4 	movi	r2,7
  80616c:	dc800e15 	stw	r18,56(sp)
  806170:	dc400d15 	stw	r17,52(sp)
  806174:	1440ca16 	blt	r2,r17,8064a0 <___vfprintf_internal_r+0x19a4>
  806178:	18c00204 	addi	r3,r3,8
  80617c:	0121c83a 	sub	r16,zero,r4
  806180:	0400500e 	bge	zero,r16,8062c4 <___vfprintf_internal_r+0x17c8>
  806184:	00800404 	movi	r2,16
  806188:	1400800e 	bge	r2,r16,80638c <___vfprintf_internal_r+0x1890>
  80618c:	1027883a 	mov	r19,r2
  806190:	07002074 	movhi	fp,129
  806194:	e73fa684 	addi	fp,fp,-358
  806198:	050001c4 	movi	r20,7
  80619c:	00000306 	br	8061ac <___vfprintf_internal_r+0x16b0>
  8061a0:	18c00204 	addi	r3,r3,8
  8061a4:	843ffc04 	addi	r16,r16,-16
  8061a8:	9c007a0e 	bge	r19,r16,806394 <___vfprintf_internal_r+0x1898>
  8061ac:	94800404 	addi	r18,r18,16
  8061b0:	8c400044 	addi	r17,r17,1
  8061b4:	1f000015 	stw	fp,0(r3)
  8061b8:	1cc00115 	stw	r19,4(r3)
  8061bc:	dc800e15 	stw	r18,56(sp)
  8061c0:	dc400d15 	stw	r17,52(sp)
  8061c4:	a47ff60e 	bge	r20,r17,8061a0 <___vfprintf_internal_r+0x16a4>
  8061c8:	d9014f17 	ldw	r4,1340(sp)
  8061cc:	b00b883a 	mov	r5,r22
  8061d0:	d9800c04 	addi	r6,sp,48
  8061d4:	0804aa40 	call	804aa4 <__sprint_r>
  8061d8:	103c001e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  8061dc:	dc800e17 	ldw	r18,56(sp)
  8061e0:	dc400d17 	ldw	r17,52(sp)
  8061e4:	d8c01904 	addi	r3,sp,100
  8061e8:	003fee06 	br	8061a4 <___vfprintf_internal_r+0x16a8>
  8061ec:	3c000017 	ldw	r16,0(r7)
  8061f0:	0023883a 	mov	r17,zero
  8061f4:	39c00104 	addi	r7,r7,4
  8061f8:	d9c14015 	stw	r7,1280(sp)
  8061fc:	003e8c06 	br	805c30 <___vfprintf_internal_r+0x1134>
  806200:	d9401904 	addi	r5,sp,100
  806204:	dd000f04 	addi	r20,sp,60
  806208:	d9414115 	stw	r5,1284(sp)
  80620c:	d9814417 	ldw	r6,1296(sp)
  806210:	880a973a 	slli	r5,r17,28
  806214:	8004d13a 	srli	r2,r16,4
  806218:	810003cc 	andi	r4,r16,15
  80621c:	3109883a 	add	r4,r6,r4
  806220:	2884b03a 	or	r2,r5,r2
  806224:	21400003 	ldbu	r5,0(r4)
  806228:	d9014117 	ldw	r4,1284(sp)
  80622c:	8806d13a 	srli	r3,r17,4
  806230:	1021883a 	mov	r16,r2
  806234:	213fffc4 	addi	r4,r4,-1
  806238:	d9014115 	stw	r4,1284(sp)
  80623c:	d9814117 	ldw	r6,1284(sp)
  806240:	10c8b03a 	or	r4,r2,r3
  806244:	1823883a 	mov	r17,r3
  806248:	31400005 	stb	r5,0(r6)
  80624c:	203fef1e 	bne	r4,zero,80620c <___vfprintf_internal_r+0x1710>
  806250:	003cc506 	br	805568 <___vfprintf_internal_r+0xa6c>
  806254:	00800c04 	movi	r2,48
  806258:	d98018c4 	addi	r6,sp,99
  80625c:	dd000f04 	addi	r20,sp,60
  806260:	d88018c5 	stb	r2,99(sp)
  806264:	d9814115 	stw	r6,1284(sp)
  806268:	003cbf06 	br	805568 <___vfprintf_internal_r+0xa6c>
  80626c:	dc400d17 	ldw	r17,52(sp)
  806270:	07002074 	movhi	fp,129
  806274:	e73faa84 	addi	fp,fp,-342
  806278:	003bc106 	br	805180 <___vfprintf_internal_r+0x684>
  80627c:	d9414c17 	ldw	r5,1328(sp)
  806280:	2880040c 	andi	r2,r5,16
  806284:	10007c26 	beq	r2,zero,806478 <___vfprintf_internal_r+0x197c>
  806288:	38800017 	ldw	r2,0(r7)
  80628c:	39c00104 	addi	r7,r7,4
  806290:	d9c14015 	stw	r7,1280(sp)
  806294:	d9814b17 	ldw	r6,1324(sp)
  806298:	d9c14017 	ldw	r7,1280(sp)
  80629c:	11800015 	stw	r6,0(r2)
  8062a0:	003a7206 	br	804c6c <___vfprintf_internal_r+0x170>
  8062a4:	d9014f17 	ldw	r4,1340(sp)
  8062a8:	b00b883a 	mov	r5,r22
  8062ac:	d9800c04 	addi	r6,sp,48
  8062b0:	0804aa40 	call	804aa4 <__sprint_r>
  8062b4:	103bc91e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  8062b8:	dc800e17 	ldw	r18,56(sp)
  8062bc:	dc400d17 	ldw	r17,52(sp)
  8062c0:	d8c01904 	addi	r3,sp,100
  8062c4:	d9014717 	ldw	r4,1308(sp)
  8062c8:	d9414117 	ldw	r5,1284(sp)
  8062cc:	8c400044 	addi	r17,r17,1
  8062d0:	9125883a 	add	r18,r18,r4
  8062d4:	008001c4 	movi	r2,7
  8062d8:	19400015 	stw	r5,0(r3)
  8062dc:	19000115 	stw	r4,4(r3)
  8062e0:	dc800e15 	stw	r18,56(sp)
  8062e4:	dc400d15 	stw	r17,52(sp)
  8062e8:	147ce816 	blt	r2,r17,80568c <___vfprintf_internal_r+0xb90>
  8062ec:	18c00204 	addi	r3,r3,8
  8062f0:	003b8006 	br	8050f4 <___vfprintf_internal_r+0x5f8>
  8062f4:	38c00017 	ldw	r3,0(r7)
  8062f8:	39000204 	addi	r4,r7,8
  8062fc:	d9014015 	stw	r4,1280(sp)
  806300:	d8c14215 	stw	r3,1288(sp)
  806304:	39c00117 	ldw	r7,4(r7)
  806308:	d9c14315 	stw	r7,1292(sp)
  80630c:	003e1a06 	br	805b78 <___vfprintf_internal_r+0x107c>
  806310:	0005883a 	mov	r2,zero
  806314:	1409c83a 	sub	r4,r2,r16
  806318:	1105803a 	cmpltu	r2,r2,r4
  80631c:	044bc83a 	sub	r5,zero,r17
  806320:	2885c83a 	sub	r2,r5,r2
  806324:	2021883a 	mov	r16,r4
  806328:	1023883a 	mov	r17,r2
  80632c:	01000044 	movi	r4,1
  806330:	00800b44 	movi	r2,45
  806334:	d8800405 	stb	r2,16(sp)
  806338:	003c7e06 	br	805534 <___vfprintf_internal_r+0xa38>
  80633c:	d9014f17 	ldw	r4,1340(sp)
  806340:	b00b883a 	mov	r5,r22
  806344:	d9800c04 	addi	r6,sp,48
  806348:	0804aa40 	call	804aa4 <__sprint_r>
  80634c:	103ba31e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  806350:	dc800e17 	ldw	r18,56(sp)
  806354:	dc400d17 	ldw	r17,52(sp)
  806358:	d9000517 	ldw	r4,20(sp)
  80635c:	d9401904 	addi	r5,sp,100
  806360:	003da106 	br	8059e8 <___vfprintf_internal_r+0xeec>
  806364:	d9014f17 	ldw	r4,1340(sp)
  806368:	b00b883a 	mov	r5,r22
  80636c:	d9800c04 	addi	r6,sp,48
  806370:	0804aa40 	call	804aa4 <__sprint_r>
  806374:	103b991e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  806378:	dc800e17 	ldw	r18,56(sp)
  80637c:	dc400d17 	ldw	r17,52(sp)
  806380:	d9000517 	ldw	r4,20(sp)
  806384:	d8c01904 	addi	r3,sp,100
  806388:	003d8b06 	br	8059b8 <___vfprintf_internal_r+0xebc>
  80638c:	07002074 	movhi	fp,129
  806390:	e73fa684 	addi	fp,fp,-358
  806394:	9425883a 	add	r18,r18,r16
  806398:	8c400044 	addi	r17,r17,1
  80639c:	008001c4 	movi	r2,7
  8063a0:	1f000015 	stw	fp,0(r3)
  8063a4:	1c000115 	stw	r16,4(r3)
  8063a8:	dc800e15 	stw	r18,56(sp)
  8063ac:	dc400d15 	stw	r17,52(sp)
  8063b0:	147fbc16 	blt	r2,r17,8062a4 <___vfprintf_internal_r+0x17a8>
  8063b4:	18c00204 	addi	r3,r3,8
  8063b8:	003fc206 	br	8062c4 <___vfprintf_internal_r+0x17c8>
  8063bc:	d9014f17 	ldw	r4,1340(sp)
  8063c0:	b00b883a 	mov	r5,r22
  8063c4:	d9800c04 	addi	r6,sp,48
  8063c8:	0804aa40 	call	804aa4 <__sprint_r>
  8063cc:	103b831e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  8063d0:	dc800e17 	ldw	r18,56(sp)
  8063d4:	d9000517 	ldw	r4,20(sp)
  8063d8:	d8c01904 	addi	r3,sp,100
  8063dc:	003cfc06 	br	8057d0 <___vfprintf_internal_r+0xcd4>
  8063e0:	07002074 	movhi	fp,129
  8063e4:	e73fa684 	addi	fp,fp,-358
  8063e8:	003bde06 	br	805364 <___vfprintf_internal_r+0x868>
  8063ec:	00802074 	movhi	r2,129
  8063f0:	10bf9504 	addi	r2,r2,-428
  8063f4:	d8814115 	stw	r2,1284(sp)
  8063f8:	003def06 	br	805bb8 <___vfprintf_internal_r+0x10bc>
  8063fc:	d9014217 	ldw	r4,1288(sp)
  806400:	d9414317 	ldw	r5,1292(sp)
  806404:	080b5ec0 	call	80b5ec <__isnand>
  806408:	10003926 	beq	r2,zero,8064f0 <___vfprintf_internal_r+0x19f4>
  80640c:	d9414d17 	ldw	r5,1332(sp)
  806410:	008011c4 	movi	r2,71
  806414:	1140ce16 	blt	r2,r5,806750 <___vfprintf_internal_r+0x1c54>
  806418:	01802074 	movhi	r6,129
  80641c:	31bf9604 	addi	r6,r6,-424
  806420:	d9814115 	stw	r6,1284(sp)
  806424:	003de406 	br	805bb8 <___vfprintf_internal_r+0x10bc>
  806428:	d9014c17 	ldw	r4,1328(sp)
  80642c:	bdc00044 	addi	r23,r23,1
  806430:	b8c00007 	ldb	r3,0(r23)
  806434:	21000814 	ori	r4,r4,32
  806438:	d9014c15 	stw	r4,1328(sp)
  80643c:	003a2e06 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  806440:	dcc14515 	stw	r19,1300(sp)
  806444:	98011016 	blt	r19,zero,806888 <___vfprintf_internal_r+0x1d8c>
  806448:	980f883a 	mov	r7,r19
  80644c:	d8014615 	stw	zero,1304(sp)
  806450:	003c4c06 	br	805584 <___vfprintf_internal_r+0xa88>
  806454:	d9014f17 	ldw	r4,1340(sp)
  806458:	b00b883a 	mov	r5,r22
  80645c:	d9800c04 	addi	r6,sp,48
  806460:	0804aa40 	call	804aa4 <__sprint_r>
  806464:	103b5d1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  806468:	dc800e17 	ldw	r18,56(sp)
  80646c:	d9000517 	ldw	r4,20(sp)
  806470:	d8c01904 	addi	r3,sp,100
  806474:	003f2e06 	br	806130 <___vfprintf_internal_r+0x1634>
  806478:	d8c14c17 	ldw	r3,1328(sp)
  80647c:	1880100c 	andi	r2,r3,64
  806480:	1000a026 	beq	r2,zero,806704 <___vfprintf_internal_r+0x1c08>
  806484:	38800017 	ldw	r2,0(r7)
  806488:	39c00104 	addi	r7,r7,4
  80648c:	d9c14015 	stw	r7,1280(sp)
  806490:	d9014b17 	ldw	r4,1324(sp)
  806494:	d9c14017 	ldw	r7,1280(sp)
  806498:	1100000d 	sth	r4,0(r2)
  80649c:	0039f306 	br	804c6c <___vfprintf_internal_r+0x170>
  8064a0:	d9014f17 	ldw	r4,1340(sp)
  8064a4:	b00b883a 	mov	r5,r22
  8064a8:	d9800c04 	addi	r6,sp,48
  8064ac:	0804aa40 	call	804aa4 <__sprint_r>
  8064b0:	103b4a1e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  8064b4:	dc800e17 	ldw	r18,56(sp)
  8064b8:	dc400d17 	ldw	r17,52(sp)
  8064bc:	d9000517 	ldw	r4,20(sp)
  8064c0:	d8c01904 	addi	r3,sp,100
  8064c4:	003f2d06 	br	80617c <___vfprintf_internal_r+0x1680>
  8064c8:	00800184 	movi	r2,6
  8064cc:	14c09a36 	bltu	r2,r19,806738 <___vfprintf_internal_r+0x1c3c>
  8064d0:	dcc14515 	stw	r19,1300(sp)
  8064d4:	9800010e 	bge	r19,zero,8064dc <___vfprintf_internal_r+0x19e0>
  8064d8:	d8014515 	stw	zero,1300(sp)
  8064dc:	00802074 	movhi	r2,129
  8064e0:	10bf9804 	addi	r2,r2,-416
  8064e4:	980f883a 	mov	r7,r19
  8064e8:	d8814115 	stw	r2,1284(sp)
  8064ec:	003a7206 	br	804eb8 <___vfprintf_internal_r+0x3bc>
  8064f0:	00bfffc4 	movi	r2,-1
  8064f4:	9880e226 	beq	r19,r2,806880 <___vfprintf_internal_r+0x1d84>
  8064f8:	d9414d17 	ldw	r5,1332(sp)
  8064fc:	008019c4 	movi	r2,103
  806500:	2880dc26 	beq	r5,r2,806874 <___vfprintf_internal_r+0x1d78>
  806504:	008011c4 	movi	r2,71
  806508:	2880da26 	beq	r5,r2,806874 <___vfprintf_internal_r+0x1d78>
  80650c:	d9414c17 	ldw	r5,1328(sp)
  806510:	d9014317 	ldw	r4,1292(sp)
  806514:	d9814217 	ldw	r6,1288(sp)
  806518:	29404014 	ori	r5,r5,256
  80651c:	d9414c15 	stw	r5,1328(sp)
  806520:	2000cc16 	blt	r4,zero,806854 <___vfprintf_internal_r+0x1d58>
  806524:	3021883a 	mov	r16,r6
  806528:	2023883a 	mov	r17,r4
  80652c:	0039883a 	mov	fp,zero
  806530:	d9414d17 	ldw	r5,1332(sp)
  806534:	00801984 	movi	r2,102
  806538:	2880b726 	beq	r5,r2,806818 <___vfprintf_internal_r+0x1d1c>
  80653c:	00801184 	movi	r2,70
  806540:	2880b526 	beq	r5,r2,806818 <___vfprintf_internal_r+0x1d1c>
  806544:	00801944 	movi	r2,101
  806548:	2880c826 	beq	r5,r2,80686c <___vfprintf_internal_r+0x1d70>
  80654c:	00801144 	movi	r2,69
  806550:	2880c626 	beq	r5,r2,80686c <___vfprintf_internal_r+0x1d70>
  806554:	9829883a 	mov	r20,r19
  806558:	d9014f17 	ldw	r4,1340(sp)
  80655c:	d8800504 	addi	r2,sp,20
  806560:	880d883a 	mov	r6,r17
  806564:	d8800115 	stw	r2,4(sp)
  806568:	d8c00604 	addi	r3,sp,24
  80656c:	d8800704 	addi	r2,sp,28
  806570:	800b883a 	mov	r5,r16
  806574:	01c00084 	movi	r7,2
  806578:	d8c00215 	stw	r3,8(sp)
  80657c:	d8800315 	stw	r2,12(sp)
  806580:	dd000015 	stw	r20,0(sp)
  806584:	0806d640 	call	806d64 <_dtoa_r>
  806588:	d9814d17 	ldw	r6,1332(sp)
  80658c:	d8814115 	stw	r2,1284(sp)
  806590:	008019c4 	movi	r2,103
  806594:	30809526 	beq	r6,r2,8067ec <___vfprintf_internal_r+0x1cf0>
  806598:	d8c14d17 	ldw	r3,1332(sp)
  80659c:	008011c4 	movi	r2,71
  8065a0:	18809226 	beq	r3,r2,8067ec <___vfprintf_internal_r+0x1cf0>
  8065a4:	d9414117 	ldw	r5,1284(sp)
  8065a8:	d9814d17 	ldw	r6,1332(sp)
  8065ac:	00801984 	movi	r2,102
  8065b0:	2d25883a 	add	r18,r5,r20
  8065b4:	30808626 	beq	r6,r2,8067d0 <___vfprintf_internal_r+0x1cd4>
  8065b8:	00801184 	movi	r2,70
  8065bc:	30808426 	beq	r6,r2,8067d0 <___vfprintf_internal_r+0x1cd4>
  8065c0:	000d883a 	mov	r6,zero
  8065c4:	000f883a 	mov	r7,zero
  8065c8:	880b883a 	mov	r5,r17
  8065cc:	8009883a 	mov	r4,r16
  8065d0:	0803a600 	call	803a60 <__eqdf2>
  8065d4:	1000751e 	bne	r2,zero,8067ac <___vfprintf_internal_r+0x1cb0>
  8065d8:	9005883a 	mov	r2,r18
  8065dc:	dc800715 	stw	r18,28(sp)
  8065e0:	d9014117 	ldw	r4,1284(sp)
  8065e4:	d9414d17 	ldw	r5,1332(sp)
  8065e8:	00c019c4 	movi	r3,103
  8065ec:	1125c83a 	sub	r18,r2,r4
  8065f0:	28c06826 	beq	r5,r3,806794 <___vfprintf_internal_r+0x1c98>
  8065f4:	008011c4 	movi	r2,71
  8065f8:	28806626 	beq	r5,r2,806794 <___vfprintf_internal_r+0x1c98>
  8065fc:	d9000517 	ldw	r4,20(sp)
  806600:	d8c14d17 	ldw	r3,1332(sp)
  806604:	00801944 	movi	r2,101
  806608:	10c05516 	blt	r2,r3,806760 <___vfprintf_internal_r+0x1c64>
  80660c:	213fffc4 	addi	r4,r4,-1
  806610:	d9000515 	stw	r4,20(sp)
  806614:	d8c00805 	stb	r3,32(sp)
  806618:	2021883a 	mov	r16,r4
  80661c:	2000c116 	blt	r4,zero,806924 <___vfprintf_internal_r+0x1e28>
  806620:	00800ac4 	movi	r2,43
  806624:	d8800845 	stb	r2,33(sp)
  806628:	00800244 	movi	r2,9
  80662c:	1400af0e 	bge	r2,r16,8068ec <___vfprintf_internal_r+0x1df0>
  806630:	1027883a 	mov	r19,r2
  806634:	dc400b84 	addi	r17,sp,46
  806638:	8009883a 	mov	r4,r16
  80663c:	01400284 	movi	r5,10
  806640:	0803f500 	call	803f50 <__modsi3>
  806644:	10800c04 	addi	r2,r2,48
  806648:	8c7fffc4 	addi	r17,r17,-1
  80664c:	8009883a 	mov	r4,r16
  806650:	01400284 	movi	r5,10
  806654:	88800005 	stb	r2,0(r17)
  806658:	0803ef00 	call	803ef0 <__divsi3>
  80665c:	1021883a 	mov	r16,r2
  806660:	98bff516 	blt	r19,r2,806638 <___vfprintf_internal_r+0x1b3c>
  806664:	10c00c04 	addi	r3,r2,48
  806668:	d88009c4 	addi	r2,sp,39
  80666c:	108001c4 	addi	r2,r2,7
  806670:	897fffc4 	addi	r5,r17,-1
  806674:	88ffffc5 	stb	r3,-1(r17)
  806678:	2880a72e 	bgeu	r5,r2,806918 <___vfprintf_internal_r+0x1e1c>
  80667c:	1009883a 	mov	r4,r2
  806680:	d9800804 	addi	r6,sp,32
  806684:	d8c00884 	addi	r3,sp,34
  806688:	28800003 	ldbu	r2,0(r5)
  80668c:	29400044 	addi	r5,r5,1
  806690:	18800005 	stb	r2,0(r3)
  806694:	18c00044 	addi	r3,r3,1
  806698:	293ffb36 	bltu	r5,r4,806688 <___vfprintf_internal_r+0x1b8c>
  80669c:	1987c83a 	sub	r3,r3,r6
  8066a0:	00800044 	movi	r2,1
  8066a4:	d8c14815 	stw	r3,1312(sp)
  8066a8:	90cf883a 	add	r7,r18,r3
  8066ac:	1480960e 	bge	r2,r18,806908 <___vfprintf_internal_r+0x1e0c>
  8066b0:	39c00044 	addi	r7,r7,1
  8066b4:	d9c14515 	stw	r7,1300(sp)
  8066b8:	38003416 	blt	r7,zero,80678c <___vfprintf_internal_r+0x1c90>
  8066bc:	e0803fcc 	andi	r2,fp,255
  8066c0:	1080201c 	xori	r2,r2,128
  8066c4:	10bfe004 	addi	r2,r2,-128
  8066c8:	10004e26 	beq	r2,zero,806804 <___vfprintf_internal_r+0x1d08>
  8066cc:	00800b44 	movi	r2,45
  8066d0:	dc814715 	stw	r18,1308(sp)
  8066d4:	d8014615 	stw	zero,1304(sp)
  8066d8:	d8800405 	stb	r2,16(sp)
  8066dc:	003bab06 	br	80558c <___vfprintf_internal_r+0xa90>
  8066e0:	00800b44 	movi	r2,45
  8066e4:	d8800405 	stb	r2,16(sp)
  8066e8:	003d2d06 	br	805ba0 <___vfprintf_internal_r+0x10a4>
  8066ec:	d9014f17 	ldw	r4,1340(sp)
  8066f0:	b00b883a 	mov	r5,r22
  8066f4:	d9800c04 	addi	r6,sp,48
  8066f8:	0804aa40 	call	804aa4 <__sprint_r>
  8066fc:	103ab71e 	bne	r2,zero,8051dc <___vfprintf_internal_r+0x6e0>
  806700:	003ab506 	br	8051d8 <___vfprintf_internal_r+0x6dc>
  806704:	38800017 	ldw	r2,0(r7)
  806708:	39c00104 	addi	r7,r7,4
  80670c:	d9c14015 	stw	r7,1280(sp)
  806710:	d9414b17 	ldw	r5,1324(sp)
  806714:	d9c14017 	ldw	r7,1280(sp)
  806718:	11400015 	stw	r5,0(r2)
  80671c:	00395306 	br	804c6c <___vfprintf_internal_r+0x170>
  806720:	980f883a 	mov	r7,r19
  806724:	dcc14515 	stw	r19,1300(sp)
  806728:	d8014615 	stw	zero,1304(sp)
  80672c:	003b9506 	br	805584 <___vfprintf_internal_r+0xa88>
  806730:	0027883a 	mov	r19,zero
  806734:	00397206 	br	804d00 <___vfprintf_internal_r+0x204>
  806738:	00c02074 	movhi	r3,129
  80673c:	18ff9804 	addi	r3,r3,-416
  806740:	100f883a 	mov	r7,r2
  806744:	d8814515 	stw	r2,1300(sp)
  806748:	d8c14115 	stw	r3,1284(sp)
  80674c:	0039da06 	br	804eb8 <___vfprintf_internal_r+0x3bc>
  806750:	00802074 	movhi	r2,129
  806754:	10bf9704 	addi	r2,r2,-420
  806758:	d8814115 	stw	r2,1284(sp)
  80675c:	003d1606 	br	805bb8 <___vfprintf_internal_r+0x10bc>
  806760:	d9414d17 	ldw	r5,1332(sp)
  806764:	00801984 	movi	r2,102
  806768:	28804926 	beq	r5,r2,806890 <___vfprintf_internal_r+0x1d94>
  80676c:	200f883a 	mov	r7,r4
  806770:	24805716 	blt	r4,r18,8068d0 <___vfprintf_internal_r+0x1dd4>
  806774:	d9414c17 	ldw	r5,1328(sp)
  806778:	2880004c 	andi	r2,r5,1
  80677c:	10000126 	beq	r2,zero,806784 <___vfprintf_internal_r+0x1c88>
  806780:	21c00044 	addi	r7,r4,1
  806784:	d9c14515 	stw	r7,1300(sp)
  806788:	383fcc0e 	bge	r7,zero,8066bc <___vfprintf_internal_r+0x1bc0>
  80678c:	d8014515 	stw	zero,1300(sp)
  806790:	003fca06 	br	8066bc <___vfprintf_internal_r+0x1bc0>
  806794:	d9000517 	ldw	r4,20(sp)
  806798:	00bfff04 	movi	r2,-4
  80679c:	1100480e 	bge	r2,r4,8068c0 <___vfprintf_internal_r+0x1dc4>
  8067a0:	99004716 	blt	r19,r4,8068c0 <___vfprintf_internal_r+0x1dc4>
  8067a4:	d8c14d15 	stw	r3,1332(sp)
  8067a8:	003ff006 	br	80676c <___vfprintf_internal_r+0x1c70>
  8067ac:	d8800717 	ldw	r2,28(sp)
  8067b0:	14bf8b2e 	bgeu	r2,r18,8065e0 <___vfprintf_internal_r+0x1ae4>
  8067b4:	9007883a 	mov	r3,r18
  8067b8:	01000c04 	movi	r4,48
  8067bc:	11000005 	stb	r4,0(r2)
  8067c0:	10800044 	addi	r2,r2,1
  8067c4:	d8800715 	stw	r2,28(sp)
  8067c8:	18bffc1e 	bne	r3,r2,8067bc <___vfprintf_internal_r+0x1cc0>
  8067cc:	003f8406 	br	8065e0 <___vfprintf_internal_r+0x1ae4>
  8067d0:	d8814117 	ldw	r2,1284(sp)
  8067d4:	10c00007 	ldb	r3,0(r2)
  8067d8:	00800c04 	movi	r2,48
  8067dc:	18805b26 	beq	r3,r2,80694c <___vfprintf_internal_r+0x1e50>
  8067e0:	d9000517 	ldw	r4,20(sp)
  8067e4:	9125883a 	add	r18,r18,r4
  8067e8:	003f7506 	br	8065c0 <___vfprintf_internal_r+0x1ac4>
  8067ec:	d9014c17 	ldw	r4,1328(sp)
  8067f0:	2080004c 	andi	r2,r4,1
  8067f4:	1005003a 	cmpeq	r2,r2,zero
  8067f8:	103f6a26 	beq	r2,zero,8065a4 <___vfprintf_internal_r+0x1aa8>
  8067fc:	d8800717 	ldw	r2,28(sp)
  806800:	003f7706 	br	8065e0 <___vfprintf_internal_r+0x1ae4>
  806804:	d9c14515 	stw	r7,1300(sp)
  806808:	38004d16 	blt	r7,zero,806940 <___vfprintf_internal_r+0x1e44>
  80680c:	dc814715 	stw	r18,1308(sp)
  806810:	d8014615 	stw	zero,1304(sp)
  806814:	003b5b06 	br	805584 <___vfprintf_internal_r+0xa88>
  806818:	d9014f17 	ldw	r4,1340(sp)
  80681c:	d8800504 	addi	r2,sp,20
  806820:	d8800115 	stw	r2,4(sp)
  806824:	d8c00604 	addi	r3,sp,24
  806828:	d8800704 	addi	r2,sp,28
  80682c:	800b883a 	mov	r5,r16
  806830:	880d883a 	mov	r6,r17
  806834:	01c000c4 	movi	r7,3
  806838:	d8c00215 	stw	r3,8(sp)
  80683c:	d8800315 	stw	r2,12(sp)
  806840:	dcc00015 	stw	r19,0(sp)
  806844:	9829883a 	mov	r20,r19
  806848:	0806d640 	call	806d64 <_dtoa_r>
  80684c:	d8814115 	stw	r2,1284(sp)
  806850:	003f5106 	br	806598 <___vfprintf_internal_r+0x1a9c>
  806854:	d8c14217 	ldw	r3,1288(sp)
  806858:	d9014317 	ldw	r4,1292(sp)
  80685c:	07000b44 	movi	fp,45
  806860:	1821883a 	mov	r16,r3
  806864:	2460003c 	xorhi	r17,r4,32768
  806868:	003f3106 	br	806530 <___vfprintf_internal_r+0x1a34>
  80686c:	9d000044 	addi	r20,r19,1
  806870:	003f3906 	br	806558 <___vfprintf_internal_r+0x1a5c>
  806874:	983f251e 	bne	r19,zero,80650c <___vfprintf_internal_r+0x1a10>
  806878:	04c00044 	movi	r19,1
  80687c:	003f2306 	br	80650c <___vfprintf_internal_r+0x1a10>
  806880:	04c00184 	movi	r19,6
  806884:	003f2106 	br	80650c <___vfprintf_internal_r+0x1a10>
  806888:	d8014515 	stw	zero,1300(sp)
  80688c:	003eee06 	br	806448 <___vfprintf_internal_r+0x194c>
  806890:	200f883a 	mov	r7,r4
  806894:	0100370e 	bge	zero,r4,806974 <___vfprintf_internal_r+0x1e78>
  806898:	9800031e 	bne	r19,zero,8068a8 <___vfprintf_internal_r+0x1dac>
  80689c:	d9814c17 	ldw	r6,1328(sp)
  8068a0:	3080004c 	andi	r2,r6,1
  8068a4:	103fb726 	beq	r2,zero,806784 <___vfprintf_internal_r+0x1c88>
  8068a8:	20800044 	addi	r2,r4,1
  8068ac:	98a7883a 	add	r19,r19,r2
  8068b0:	dcc14515 	stw	r19,1300(sp)
  8068b4:	980f883a 	mov	r7,r19
  8068b8:	983f800e 	bge	r19,zero,8066bc <___vfprintf_internal_r+0x1bc0>
  8068bc:	003fb306 	br	80678c <___vfprintf_internal_r+0x1c90>
  8068c0:	d9814d17 	ldw	r6,1332(sp)
  8068c4:	31bfff84 	addi	r6,r6,-2
  8068c8:	d9814d15 	stw	r6,1332(sp)
  8068cc:	003f4c06 	br	806600 <___vfprintf_internal_r+0x1b04>
  8068d0:	0100180e 	bge	zero,r4,806934 <___vfprintf_internal_r+0x1e38>
  8068d4:	00800044 	movi	r2,1
  8068d8:	1485883a 	add	r2,r2,r18
  8068dc:	d8814515 	stw	r2,1300(sp)
  8068e0:	100f883a 	mov	r7,r2
  8068e4:	103f750e 	bge	r2,zero,8066bc <___vfprintf_internal_r+0x1bc0>
  8068e8:	003fa806 	br	80678c <___vfprintf_internal_r+0x1c90>
  8068ec:	80c00c04 	addi	r3,r16,48
  8068f0:	00800c04 	movi	r2,48
  8068f4:	d8c008c5 	stb	r3,35(sp)
  8068f8:	d9800804 	addi	r6,sp,32
  8068fc:	d8c00904 	addi	r3,sp,36
  806900:	d8800885 	stb	r2,34(sp)
  806904:	003f6506 	br	80669c <___vfprintf_internal_r+0x1ba0>
  806908:	d9014c17 	ldw	r4,1328(sp)
  80690c:	2084703a 	and	r2,r4,r2
  806910:	103f9c26 	beq	r2,zero,806784 <___vfprintf_internal_r+0x1c88>
  806914:	003f6606 	br	8066b0 <___vfprintf_internal_r+0x1bb4>
  806918:	d9800804 	addi	r6,sp,32
  80691c:	d8c00884 	addi	r3,sp,34
  806920:	003f5e06 	br	80669c <___vfprintf_internal_r+0x1ba0>
  806924:	00800b44 	movi	r2,45
  806928:	0121c83a 	sub	r16,zero,r4
  80692c:	d8800845 	stb	r2,33(sp)
  806930:	003f3d06 	br	806628 <___vfprintf_internal_r+0x1b2c>
  806934:	00800084 	movi	r2,2
  806938:	1105c83a 	sub	r2,r2,r4
  80693c:	003fe606 	br	8068d8 <___vfprintf_internal_r+0x1ddc>
  806940:	d8014515 	stw	zero,1300(sp)
  806944:	dc814715 	stw	r18,1308(sp)
  806948:	003fb106 	br	806810 <___vfprintf_internal_r+0x1d14>
  80694c:	000d883a 	mov	r6,zero
  806950:	000f883a 	mov	r7,zero
  806954:	8009883a 	mov	r4,r16
  806958:	880b883a 	mov	r5,r17
  80695c:	080cc600 	call	80cc60 <__nedf2>
  806960:	103f9f26 	beq	r2,zero,8067e0 <___vfprintf_internal_r+0x1ce4>
  806964:	00800044 	movi	r2,1
  806968:	1509c83a 	sub	r4,r2,r20
  80696c:	d9000515 	stw	r4,20(sp)
  806970:	003f9b06 	br	8067e0 <___vfprintf_internal_r+0x1ce4>
  806974:	98000d1e 	bne	r19,zero,8069ac <___vfprintf_internal_r+0x1eb0>
  806978:	d8c14c17 	ldw	r3,1328(sp)
  80697c:	1880004c 	andi	r2,r3,1
  806980:	10000a1e 	bne	r2,zero,8069ac <___vfprintf_internal_r+0x1eb0>
  806984:	01000044 	movi	r4,1
  806988:	200f883a 	mov	r7,r4
  80698c:	d9014515 	stw	r4,1300(sp)
  806990:	003f4a06 	br	8066bc <___vfprintf_internal_r+0x1bc0>
  806994:	3cc00017 	ldw	r19,0(r7)
  806998:	39c00104 	addi	r7,r7,4
  80699c:	983d0e0e 	bge	r19,zero,805dd8 <___vfprintf_internal_r+0x12dc>
  8069a0:	b8c00007 	ldb	r3,0(r23)
  8069a4:	04ffffc4 	movi	r19,-1
  8069a8:	0038d306 	br	804cf8 <___vfprintf_internal_r+0x1fc>
  8069ac:	9cc00084 	addi	r19,r19,2
  8069b0:	dcc14515 	stw	r19,1300(sp)
  8069b4:	980f883a 	mov	r7,r19
  8069b8:	983f400e 	bge	r19,zero,8066bc <___vfprintf_internal_r+0x1bc0>
  8069bc:	003f7306 	br	80678c <___vfprintf_internal_r+0x1c90>

008069c0 <__vfprintf_internal>:
  8069c0:	00802074 	movhi	r2,129
  8069c4:	10869f04 	addi	r2,r2,6780
  8069c8:	2013883a 	mov	r9,r4
  8069cc:	11000017 	ldw	r4,0(r2)
  8069d0:	2805883a 	mov	r2,r5
  8069d4:	300f883a 	mov	r7,r6
  8069d8:	480b883a 	mov	r5,r9
  8069dc:	100d883a 	mov	r6,r2
  8069e0:	0804afc1 	jmpi	804afc <___vfprintf_internal_r>

008069e4 <__swsetup_r>:
  8069e4:	00802074 	movhi	r2,129
  8069e8:	10869f04 	addi	r2,r2,6780
  8069ec:	10c00017 	ldw	r3,0(r2)
  8069f0:	defffd04 	addi	sp,sp,-12
  8069f4:	dc400115 	stw	r17,4(sp)
  8069f8:	dc000015 	stw	r16,0(sp)
  8069fc:	dfc00215 	stw	ra,8(sp)
  806a00:	2023883a 	mov	r17,r4
  806a04:	2821883a 	mov	r16,r5
  806a08:	18000226 	beq	r3,zero,806a14 <__swsetup_r+0x30>
  806a0c:	18800e17 	ldw	r2,56(r3)
  806a10:	10001f26 	beq	r2,zero,806a90 <__swsetup_r+0xac>
  806a14:	8100030b 	ldhu	r4,12(r16)
  806a18:	2080020c 	andi	r2,r4,8
  806a1c:	10002826 	beq	r2,zero,806ac0 <__swsetup_r+0xdc>
  806a20:	81400417 	ldw	r5,16(r16)
  806a24:	28001d26 	beq	r5,zero,806a9c <__swsetup_r+0xb8>
  806a28:	2080004c 	andi	r2,r4,1
  806a2c:	1005003a 	cmpeq	r2,r2,zero
  806a30:	10000b26 	beq	r2,zero,806a60 <__swsetup_r+0x7c>
  806a34:	2080008c 	andi	r2,r4,2
  806a38:	10001226 	beq	r2,zero,806a84 <__swsetup_r+0xa0>
  806a3c:	0005883a 	mov	r2,zero
  806a40:	80800215 	stw	r2,8(r16)
  806a44:	28000b26 	beq	r5,zero,806a74 <__swsetup_r+0x90>
  806a48:	0005883a 	mov	r2,zero
  806a4c:	dfc00217 	ldw	ra,8(sp)
  806a50:	dc400117 	ldw	r17,4(sp)
  806a54:	dc000017 	ldw	r16,0(sp)
  806a58:	dec00304 	addi	sp,sp,12
  806a5c:	f800283a 	ret
  806a60:	80800517 	ldw	r2,20(r16)
  806a64:	80000215 	stw	zero,8(r16)
  806a68:	0085c83a 	sub	r2,zero,r2
  806a6c:	80800615 	stw	r2,24(r16)
  806a70:	283ff51e 	bne	r5,zero,806a48 <__swsetup_r+0x64>
  806a74:	2080200c 	andi	r2,r4,128
  806a78:	103ff326 	beq	r2,zero,806a48 <__swsetup_r+0x64>
  806a7c:	00bfffc4 	movi	r2,-1
  806a80:	003ff206 	br	806a4c <__swsetup_r+0x68>
  806a84:	80800517 	ldw	r2,20(r16)
  806a88:	80800215 	stw	r2,8(r16)
  806a8c:	003fed06 	br	806a44 <__swsetup_r+0x60>
  806a90:	1809883a 	mov	r4,r3
  806a94:	08085b00 	call	8085b0 <__sinit>
  806a98:	003fde06 	br	806a14 <__swsetup_r+0x30>
  806a9c:	20c0a00c 	andi	r3,r4,640
  806aa0:	00808004 	movi	r2,512
  806aa4:	18bfe026 	beq	r3,r2,806a28 <__swsetup_r+0x44>
  806aa8:	8809883a 	mov	r4,r17
  806aac:	800b883a 	mov	r5,r16
  806ab0:	080935c0 	call	80935c <__smakebuf_r>
  806ab4:	8100030b 	ldhu	r4,12(r16)
  806ab8:	81400417 	ldw	r5,16(r16)
  806abc:	003fda06 	br	806a28 <__swsetup_r+0x44>
  806ac0:	2080040c 	andi	r2,r4,16
  806ac4:	103fed26 	beq	r2,zero,806a7c <__swsetup_r+0x98>
  806ac8:	2080010c 	andi	r2,r4,4
  806acc:	10001226 	beq	r2,zero,806b18 <__swsetup_r+0x134>
  806ad0:	81400c17 	ldw	r5,48(r16)
  806ad4:	28000526 	beq	r5,zero,806aec <__swsetup_r+0x108>
  806ad8:	80801004 	addi	r2,r16,64
  806adc:	28800226 	beq	r5,r2,806ae8 <__swsetup_r+0x104>
  806ae0:	8809883a 	mov	r4,r17
  806ae4:	08089680 	call	808968 <_free_r>
  806ae8:	80000c15 	stw	zero,48(r16)
  806aec:	8080030b 	ldhu	r2,12(r16)
  806af0:	81400417 	ldw	r5,16(r16)
  806af4:	80000115 	stw	zero,4(r16)
  806af8:	10bff6cc 	andi	r2,r2,65499
  806afc:	8080030d 	sth	r2,12(r16)
  806b00:	81400015 	stw	r5,0(r16)
  806b04:	8080030b 	ldhu	r2,12(r16)
  806b08:	10800214 	ori	r2,r2,8
  806b0c:	113fffcc 	andi	r4,r2,65535
  806b10:	8080030d 	sth	r2,12(r16)
  806b14:	003fc306 	br	806a24 <__swsetup_r+0x40>
  806b18:	81400417 	ldw	r5,16(r16)
  806b1c:	003ff906 	br	806b04 <__swsetup_r+0x120>

00806b20 <quorem>:
  806b20:	28c00417 	ldw	r3,16(r5)
  806b24:	20800417 	ldw	r2,16(r4)
  806b28:	defff104 	addi	sp,sp,-60
  806b2c:	dfc00e15 	stw	ra,56(sp)
  806b30:	df000d15 	stw	fp,52(sp)
  806b34:	ddc00c15 	stw	r23,48(sp)
  806b38:	dd800b15 	stw	r22,44(sp)
  806b3c:	dd400a15 	stw	r21,40(sp)
  806b40:	dd000915 	stw	r20,36(sp)
  806b44:	dcc00815 	stw	r19,32(sp)
  806b48:	dc800715 	stw	r18,28(sp)
  806b4c:	dc400615 	stw	r17,24(sp)
  806b50:	dc000515 	stw	r16,20(sp)
  806b54:	d9000315 	stw	r4,12(sp)
  806b58:	d9400415 	stw	r5,16(sp)
  806b5c:	10c07f16 	blt	r2,r3,806d5c <quorem+0x23c>
  806b60:	1d3fffc4 	addi	r20,r3,-1
  806b64:	d8c00417 	ldw	r3,16(sp)
  806b68:	d9000317 	ldw	r4,12(sp)
  806b6c:	a505883a 	add	r2,r20,r20
  806b70:	1085883a 	add	r2,r2,r2
  806b74:	1cc00504 	addi	r19,r3,20
  806b78:	25c00504 	addi	r23,r4,20
  806b7c:	98ad883a 	add	r22,r19,r2
  806b80:	15c7883a 	add	r3,r2,r23
  806b84:	b1400017 	ldw	r5,0(r22)
  806b88:	19000017 	ldw	r4,0(r3)
  806b8c:	d8c00015 	stw	r3,0(sp)
  806b90:	29400044 	addi	r5,r5,1
  806b94:	d9000215 	stw	r4,8(sp)
  806b98:	0803fb00 	call	803fb0 <__udivsi3>
  806b9c:	1039883a 	mov	fp,r2
  806ba0:	10003d1e 	bne	r2,zero,806c98 <quorem+0x178>
  806ba4:	d9400417 	ldw	r5,16(sp)
  806ba8:	d9000317 	ldw	r4,12(sp)
  806bac:	080a0880 	call	80a088 <__mcmp>
  806bb0:	10002c16 	blt	r2,zero,806c64 <quorem+0x144>
  806bb4:	e7000044 	addi	fp,fp,1
  806bb8:	b80f883a 	mov	r7,r23
  806bbc:	0011883a 	mov	r8,zero
  806bc0:	0009883a 	mov	r4,zero
  806bc4:	99400017 	ldw	r5,0(r19)
  806bc8:	38c00017 	ldw	r3,0(r7)
  806bcc:	9cc00104 	addi	r19,r19,4
  806bd0:	28bfffcc 	andi	r2,r5,65535
  806bd4:	2085883a 	add	r2,r4,r2
  806bd8:	11bfffcc 	andi	r6,r2,65535
  806bdc:	193fffcc 	andi	r4,r3,65535
  806be0:	1004d43a 	srli	r2,r2,16
  806be4:	280ad43a 	srli	r5,r5,16
  806be8:	2189c83a 	sub	r4,r4,r6
  806bec:	2209883a 	add	r4,r4,r8
  806bf0:	1806d43a 	srli	r3,r3,16
  806bf4:	288b883a 	add	r5,r5,r2
  806bf8:	200dd43a 	srai	r6,r4,16
  806bfc:	28bfffcc 	andi	r2,r5,65535
  806c00:	1887c83a 	sub	r3,r3,r2
  806c04:	1987883a 	add	r3,r3,r6
  806c08:	3900000d 	sth	r4,0(r7)
  806c0c:	38c0008d 	sth	r3,2(r7)
  806c10:	2808d43a 	srli	r4,r5,16
  806c14:	39c00104 	addi	r7,r7,4
  806c18:	1811d43a 	srai	r8,r3,16
  806c1c:	b4ffe92e 	bgeu	r22,r19,806bc4 <quorem+0xa4>
  806c20:	a505883a 	add	r2,r20,r20
  806c24:	1085883a 	add	r2,r2,r2
  806c28:	b885883a 	add	r2,r23,r2
  806c2c:	10c00017 	ldw	r3,0(r2)
  806c30:	18000c1e 	bne	r3,zero,806c64 <quorem+0x144>
  806c34:	113fff04 	addi	r4,r2,-4
  806c38:	b900082e 	bgeu	r23,r4,806c5c <quorem+0x13c>
  806c3c:	10bfff17 	ldw	r2,-4(r2)
  806c40:	10000326 	beq	r2,zero,806c50 <quorem+0x130>
  806c44:	00000506 	br	806c5c <quorem+0x13c>
  806c48:	20800017 	ldw	r2,0(r4)
  806c4c:	1000031e 	bne	r2,zero,806c5c <quorem+0x13c>
  806c50:	213fff04 	addi	r4,r4,-4
  806c54:	a53fffc4 	addi	r20,r20,-1
  806c58:	b93ffb36 	bltu	r23,r4,806c48 <quorem+0x128>
  806c5c:	d9000317 	ldw	r4,12(sp)
  806c60:	25000415 	stw	r20,16(r4)
  806c64:	e005883a 	mov	r2,fp
  806c68:	dfc00e17 	ldw	ra,56(sp)
  806c6c:	df000d17 	ldw	fp,52(sp)
  806c70:	ddc00c17 	ldw	r23,48(sp)
  806c74:	dd800b17 	ldw	r22,44(sp)
  806c78:	dd400a17 	ldw	r21,40(sp)
  806c7c:	dd000917 	ldw	r20,36(sp)
  806c80:	dcc00817 	ldw	r19,32(sp)
  806c84:	dc800717 	ldw	r18,28(sp)
  806c88:	dc400617 	ldw	r17,24(sp)
  806c8c:	dc000517 	ldw	r16,20(sp)
  806c90:	dec00f04 	addi	sp,sp,60
  806c94:	f800283a 	ret
  806c98:	b823883a 	mov	r17,r23
  806c9c:	9825883a 	mov	r18,r19
  806ca0:	d8000115 	stw	zero,4(sp)
  806ca4:	002b883a 	mov	r21,zero
  806ca8:	94000017 	ldw	r16,0(r18)
  806cac:	e009883a 	mov	r4,fp
  806cb0:	94800104 	addi	r18,r18,4
  806cb4:	817fffcc 	andi	r5,r16,65535
  806cb8:	0803fc00 	call	803fc0 <__mulsi3>
  806cbc:	800ad43a 	srli	r5,r16,16
  806cc0:	e009883a 	mov	r4,fp
  806cc4:	a8a1883a 	add	r16,r21,r2
  806cc8:	0803fc00 	call	803fc0 <__mulsi3>
  806ccc:	89000017 	ldw	r4,0(r17)
  806cd0:	80ffffcc 	andi	r3,r16,65535
  806cd4:	8020d43a 	srli	r16,r16,16
  806cd8:	217fffcc 	andi	r5,r4,65535
  806cdc:	28cbc83a 	sub	r5,r5,r3
  806ce0:	d8c00117 	ldw	r3,4(sp)
  806ce4:	2008d43a 	srli	r4,r4,16
  806ce8:	1405883a 	add	r2,r2,r16
  806cec:	28cb883a 	add	r5,r5,r3
  806cf0:	280dd43a 	srai	r6,r5,16
  806cf4:	10ffffcc 	andi	r3,r2,65535
  806cf8:	20c9c83a 	sub	r4,r4,r3
  806cfc:	2189883a 	add	r4,r4,r6
  806d00:	8900008d 	sth	r4,2(r17)
  806d04:	2009d43a 	srai	r4,r4,16
  806d08:	8940000d 	sth	r5,0(r17)
  806d0c:	102ad43a 	srli	r21,r2,16
  806d10:	8c400104 	addi	r17,r17,4
  806d14:	d9000115 	stw	r4,4(sp)
  806d18:	b4bfe32e 	bgeu	r22,r18,806ca8 <quorem+0x188>
  806d1c:	d9000217 	ldw	r4,8(sp)
  806d20:	203fa01e 	bne	r4,zero,806ba4 <quorem+0x84>
  806d24:	d8800017 	ldw	r2,0(sp)
  806d28:	10ffff04 	addi	r3,r2,-4
  806d2c:	b8c0082e 	bgeu	r23,r3,806d50 <quorem+0x230>
  806d30:	10bfff17 	ldw	r2,-4(r2)
  806d34:	10000326 	beq	r2,zero,806d44 <quorem+0x224>
  806d38:	00000506 	br	806d50 <quorem+0x230>
  806d3c:	18800017 	ldw	r2,0(r3)
  806d40:	1000031e 	bne	r2,zero,806d50 <quorem+0x230>
  806d44:	18ffff04 	addi	r3,r3,-4
  806d48:	a53fffc4 	addi	r20,r20,-1
  806d4c:	b8fffb36 	bltu	r23,r3,806d3c <quorem+0x21c>
  806d50:	d8c00317 	ldw	r3,12(sp)
  806d54:	1d000415 	stw	r20,16(r3)
  806d58:	003f9206 	br	806ba4 <quorem+0x84>
  806d5c:	0005883a 	mov	r2,zero
  806d60:	003fc106 	br	806c68 <quorem+0x148>

00806d64 <_dtoa_r>:
  806d64:	22001017 	ldw	r8,64(r4)
  806d68:	deffda04 	addi	sp,sp,-152
  806d6c:	dd402115 	stw	r21,132(sp)
  806d70:	dd002015 	stw	r20,128(sp)
  806d74:	dc801e15 	stw	r18,120(sp)
  806d78:	dc401d15 	stw	r17,116(sp)
  806d7c:	dfc02515 	stw	ra,148(sp)
  806d80:	df002415 	stw	fp,144(sp)
  806d84:	ddc02315 	stw	r23,140(sp)
  806d88:	dd802215 	stw	r22,136(sp)
  806d8c:	dcc01f15 	stw	r19,124(sp)
  806d90:	dc001c15 	stw	r16,112(sp)
  806d94:	d9001615 	stw	r4,88(sp)
  806d98:	3023883a 	mov	r17,r6
  806d9c:	2829883a 	mov	r20,r5
  806da0:	d9c01715 	stw	r7,92(sp)
  806da4:	dc802817 	ldw	r18,160(sp)
  806da8:	302b883a 	mov	r21,r6
  806dac:	40000a26 	beq	r8,zero,806dd8 <_dtoa_r+0x74>
  806db0:	20801117 	ldw	r2,68(r4)
  806db4:	400b883a 	mov	r5,r8
  806db8:	40800115 	stw	r2,4(r8)
  806dbc:	20c01117 	ldw	r3,68(r4)
  806dc0:	00800044 	movi	r2,1
  806dc4:	10c4983a 	sll	r2,r2,r3
  806dc8:	40800215 	stw	r2,8(r8)
  806dcc:	0809f2c0 	call	809f2c <_Bfree>
  806dd0:	d8c01617 	ldw	r3,88(sp)
  806dd4:	18001015 	stw	zero,64(r3)
  806dd8:	8800a316 	blt	r17,zero,807068 <_dtoa_r+0x304>
  806ddc:	90000015 	stw	zero,0(r18)
  806de0:	a8dffc2c 	andhi	r3,r21,32752
  806de4:	009ffc34 	movhi	r2,32752
  806de8:	18809126 	beq	r3,r2,807030 <_dtoa_r+0x2cc>
  806dec:	000d883a 	mov	r6,zero
  806df0:	000f883a 	mov	r7,zero
  806df4:	a009883a 	mov	r4,r20
  806df8:	a80b883a 	mov	r5,r21
  806dfc:	dd001215 	stw	r20,72(sp)
  806e00:	dd401315 	stw	r21,76(sp)
  806e04:	080cc600 	call	80cc60 <__nedf2>
  806e08:	1000171e 	bne	r2,zero,806e68 <_dtoa_r+0x104>
  806e0c:	d9802717 	ldw	r6,156(sp)
  806e10:	00800044 	movi	r2,1
  806e14:	30800015 	stw	r2,0(r6)
  806e18:	d8802917 	ldw	r2,164(sp)
  806e1c:	10029b26 	beq	r2,zero,80788c <_dtoa_r+0xb28>
  806e20:	d9002917 	ldw	r4,164(sp)
  806e24:	00802074 	movhi	r2,129
  806e28:	10bfa644 	addi	r2,r2,-359
  806e2c:	10ffffc4 	addi	r3,r2,-1
  806e30:	20800015 	stw	r2,0(r4)
  806e34:	1805883a 	mov	r2,r3
  806e38:	dfc02517 	ldw	ra,148(sp)
  806e3c:	df002417 	ldw	fp,144(sp)
  806e40:	ddc02317 	ldw	r23,140(sp)
  806e44:	dd802217 	ldw	r22,136(sp)
  806e48:	dd402117 	ldw	r21,132(sp)
  806e4c:	dd002017 	ldw	r20,128(sp)
  806e50:	dcc01f17 	ldw	r19,124(sp)
  806e54:	dc801e17 	ldw	r18,120(sp)
  806e58:	dc401d17 	ldw	r17,116(sp)
  806e5c:	dc001c17 	ldw	r16,112(sp)
  806e60:	dec02604 	addi	sp,sp,152
  806e64:	f800283a 	ret
  806e68:	d9001617 	ldw	r4,88(sp)
  806e6c:	d9401217 	ldw	r5,72(sp)
  806e70:	d8800104 	addi	r2,sp,4
  806e74:	a80d883a 	mov	r6,r21
  806e78:	d9c00204 	addi	r7,sp,8
  806e7c:	d8800015 	stw	r2,0(sp)
  806e80:	080a5680 	call	80a568 <__d2b>
  806e84:	d8800715 	stw	r2,28(sp)
  806e88:	a804d53a 	srli	r2,r21,20
  806e8c:	1101ffcc 	andi	r4,r2,2047
  806e90:	20008626 	beq	r4,zero,8070ac <_dtoa_r+0x348>
  806e94:	d8c01217 	ldw	r3,72(sp)
  806e98:	00800434 	movhi	r2,16
  806e9c:	10bfffc4 	addi	r2,r2,-1
  806ea0:	ddc00117 	ldw	r23,4(sp)
  806ea4:	a884703a 	and	r2,r21,r2
  806ea8:	1811883a 	mov	r8,r3
  806eac:	124ffc34 	orhi	r9,r2,16368
  806eb0:	25bf0044 	addi	r22,r4,-1023
  806eb4:	d8000815 	stw	zero,32(sp)
  806eb8:	0005883a 	mov	r2,zero
  806ebc:	00cffe34 	movhi	r3,16376
  806ec0:	480b883a 	mov	r5,r9
  806ec4:	4009883a 	mov	r4,r8
  806ec8:	180f883a 	mov	r7,r3
  806ecc:	100d883a 	mov	r6,r2
  806ed0:	08035a80 	call	8035a8 <__subdf3>
  806ed4:	0218dbf4 	movhi	r8,25455
  806ed8:	4210d844 	addi	r8,r8,17249
  806edc:	024ff4f4 	movhi	r9,16339
  806ee0:	4a61e9c4 	addi	r9,r9,-30809
  806ee4:	480f883a 	mov	r7,r9
  806ee8:	400d883a 	mov	r6,r8
  806eec:	180b883a 	mov	r5,r3
  806ef0:	1009883a 	mov	r4,r2
  806ef4:	080369c0 	call	80369c <__muldf3>
  806ef8:	0222d874 	movhi	r8,35681
  806efc:	42322cc4 	addi	r8,r8,-14157
  806f00:	024ff1f4 	movhi	r9,16327
  806f04:	4a628a04 	addi	r9,r9,-30168
  806f08:	480f883a 	mov	r7,r9
  806f0c:	400d883a 	mov	r6,r8
  806f10:	180b883a 	mov	r5,r3
  806f14:	1009883a 	mov	r4,r2
  806f18:	08036280 	call	803628 <__adddf3>
  806f1c:	b009883a 	mov	r4,r22
  806f20:	1021883a 	mov	r16,r2
  806f24:	1823883a 	mov	r17,r3
  806f28:	0803bf80 	call	803bf8 <__floatsidf>
  806f2c:	021427f4 	movhi	r8,20639
  806f30:	421e7ec4 	addi	r8,r8,31227
  806f34:	024ff4f4 	movhi	r9,16339
  806f38:	4a5104c4 	addi	r9,r9,17427
  806f3c:	480f883a 	mov	r7,r9
  806f40:	400d883a 	mov	r6,r8
  806f44:	180b883a 	mov	r5,r3
  806f48:	1009883a 	mov	r4,r2
  806f4c:	080369c0 	call	80369c <__muldf3>
  806f50:	180f883a 	mov	r7,r3
  806f54:	880b883a 	mov	r5,r17
  806f58:	100d883a 	mov	r6,r2
  806f5c:	8009883a 	mov	r4,r16
  806f60:	08036280 	call	803628 <__adddf3>
  806f64:	1009883a 	mov	r4,r2
  806f68:	180b883a 	mov	r5,r3
  806f6c:	1021883a 	mov	r16,r2
  806f70:	1823883a 	mov	r17,r3
  806f74:	0803cf00 	call	803cf0 <__fixdfsi>
  806f78:	000d883a 	mov	r6,zero
  806f7c:	000f883a 	mov	r7,zero
  806f80:	8009883a 	mov	r4,r16
  806f84:	880b883a 	mov	r5,r17
  806f88:	d8800d15 	stw	r2,52(sp)
  806f8c:	080cce80 	call	80cce8 <__ltdf2>
  806f90:	10031716 	blt	r2,zero,807bf0 <_dtoa_r+0xe8c>
  806f94:	d8c00d17 	ldw	r3,52(sp)
  806f98:	00800584 	movi	r2,22
  806f9c:	10c1482e 	bgeu	r2,r3,8074c0 <_dtoa_r+0x75c>
  806fa0:	01000044 	movi	r4,1
  806fa4:	d9000c15 	stw	r4,48(sp)
  806fa8:	bd85c83a 	sub	r2,r23,r22
  806fac:	11bfffc4 	addi	r6,r2,-1
  806fb0:	30030b16 	blt	r6,zero,807be0 <_dtoa_r+0xe7c>
  806fb4:	d9800a15 	stw	r6,40(sp)
  806fb8:	d8001115 	stw	zero,68(sp)
  806fbc:	d8c00d17 	ldw	r3,52(sp)
  806fc0:	1802ff16 	blt	r3,zero,807bc0 <_dtoa_r+0xe5c>
  806fc4:	d9000a17 	ldw	r4,40(sp)
  806fc8:	d8c00915 	stw	r3,36(sp)
  806fcc:	d8001015 	stw	zero,64(sp)
  806fd0:	20c9883a 	add	r4,r4,r3
  806fd4:	d9000a15 	stw	r4,40(sp)
  806fd8:	d9001717 	ldw	r4,92(sp)
  806fdc:	00800244 	movi	r2,9
  806fe0:	11004636 	bltu	r2,r4,8070fc <_dtoa_r+0x398>
  806fe4:	00800144 	movi	r2,5
  806fe8:	11020416 	blt	r2,r4,8077fc <_dtoa_r+0xa98>
  806fec:	04400044 	movi	r17,1
  806ff0:	d8c01717 	ldw	r3,92(sp)
  806ff4:	00800144 	movi	r2,5
  806ff8:	10c1ed36 	bltu	r2,r3,8077b0 <_dtoa_r+0xa4c>
  806ffc:	18c5883a 	add	r2,r3,r3
  807000:	1085883a 	add	r2,r2,r2
  807004:	00c02034 	movhi	r3,128
  807008:	18dc0604 	addi	r3,r3,28696
  80700c:	10c5883a 	add	r2,r2,r3
  807010:	11000017 	ldw	r4,0(r2)
  807014:	2000683a 	jmp	r4
  807018:	00807104 	movi	r2,452
  80701c:	00807104 	movi	r2,452
  807020:	00807b04 	movi	r2,492
  807024:	00807adc 	xori	r2,zero,491
  807028:	00807b20 	cmpeqi	r2,zero,492
  80702c:	00807b2c 	andhi	r2,zero,492
  807030:	d9002717 	ldw	r4,156(sp)
  807034:	0089c3c4 	movi	r2,9999
  807038:	20800015 	stw	r2,0(r4)
  80703c:	a0001026 	beq	r20,zero,807080 <_dtoa_r+0x31c>
  807040:	00c02074 	movhi	r3,129
  807044:	18ffb204 	addi	r3,r3,-312
  807048:	d9802917 	ldw	r6,164(sp)
  80704c:	303f7926 	beq	r6,zero,806e34 <_dtoa_r+0xd0>
  807050:	188000c7 	ldb	r2,3(r3)
  807054:	190000c4 	addi	r4,r3,3
  807058:	1000101e 	bne	r2,zero,80709c <_dtoa_r+0x338>
  80705c:	d8802917 	ldw	r2,164(sp)
  807060:	11000015 	stw	r4,0(r2)
  807064:	003f7306 	br	806e34 <_dtoa_r+0xd0>
  807068:	00a00034 	movhi	r2,32768
  80706c:	10bfffc4 	addi	r2,r2,-1
  807070:	00c00044 	movi	r3,1
  807074:	88aa703a 	and	r21,r17,r2
  807078:	90c00015 	stw	r3,0(r18)
  80707c:	003f5806 	br	806de0 <_dtoa_r+0x7c>
  807080:	00800434 	movhi	r2,16
  807084:	10bfffc4 	addi	r2,r2,-1
  807088:	a884703a 	and	r2,r21,r2
  80708c:	103fec1e 	bne	r2,zero,807040 <_dtoa_r+0x2dc>
  807090:	00c02074 	movhi	r3,129
  807094:	18ffaf04 	addi	r3,r3,-324
  807098:	003feb06 	br	807048 <_dtoa_r+0x2e4>
  80709c:	d8802917 	ldw	r2,164(sp)
  8070a0:	19000204 	addi	r4,r3,8
  8070a4:	11000015 	stw	r4,0(r2)
  8070a8:	003f6206 	br	806e34 <_dtoa_r+0xd0>
  8070ac:	ddc00117 	ldw	r23,4(sp)
  8070b0:	d8800217 	ldw	r2,8(sp)
  8070b4:	01000804 	movi	r4,32
  8070b8:	b8c10c84 	addi	r3,r23,1074
  8070bc:	18a3883a 	add	r17,r3,r2
  8070c0:	2441b80e 	bge	r4,r17,8077a4 <_dtoa_r+0xa40>
  8070c4:	00c01004 	movi	r3,64
  8070c8:	1c47c83a 	sub	r3,r3,r17
  8070cc:	88bff804 	addi	r2,r17,-32
  8070d0:	a8c6983a 	sll	r3,r21,r3
  8070d4:	a084d83a 	srl	r2,r20,r2
  8070d8:	1888b03a 	or	r4,r3,r2
  8070dc:	080cd700 	call	80cd70 <__floatunsidf>
  8070e0:	1011883a 	mov	r8,r2
  8070e4:	00bf8434 	movhi	r2,65040
  8070e8:	01000044 	movi	r4,1
  8070ec:	10d3883a 	add	r9,r2,r3
  8070f0:	8dbef344 	addi	r22,r17,-1075
  8070f4:	d9000815 	stw	r4,32(sp)
  8070f8:	003f6f06 	br	806eb8 <_dtoa_r+0x154>
  8070fc:	d8001715 	stw	zero,92(sp)
  807100:	04400044 	movi	r17,1
  807104:	00bfffc4 	movi	r2,-1
  807108:	00c00044 	movi	r3,1
  80710c:	d8800e15 	stw	r2,56(sp)
  807110:	d8002615 	stw	zero,152(sp)
  807114:	d8800f15 	stw	r2,60(sp)
  807118:	d8c00b15 	stw	r3,44(sp)
  80711c:	1021883a 	mov	r16,r2
  807120:	d8801617 	ldw	r2,88(sp)
  807124:	10001115 	stw	zero,68(r2)
  807128:	d8801617 	ldw	r2,88(sp)
  80712c:	11401117 	ldw	r5,68(r2)
  807130:	1009883a 	mov	r4,r2
  807134:	080a4ac0 	call	80a4ac <_Balloc>
  807138:	d8c01617 	ldw	r3,88(sp)
  80713c:	d8800515 	stw	r2,20(sp)
  807140:	18801015 	stw	r2,64(r3)
  807144:	00800384 	movi	r2,14
  807148:	14006836 	bltu	r2,r16,8072ec <_dtoa_r+0x588>
  80714c:	8805003a 	cmpeq	r2,r17,zero
  807150:	1000661e 	bne	r2,zero,8072ec <_dtoa_r+0x588>
  807154:	d9000d17 	ldw	r4,52(sp)
  807158:	0102300e 	bge	zero,r4,807a1c <_dtoa_r+0xcb8>
  80715c:	208003cc 	andi	r2,r4,15
  807160:	100490fa 	slli	r2,r2,3
  807164:	2025d13a 	srai	r18,r4,4
  807168:	00c02074 	movhi	r3,129
  80716c:	18ffc404 	addi	r3,r3,-240
  807170:	10c5883a 	add	r2,r2,r3
  807174:	90c0040c 	andi	r3,r18,16
  807178:	14000017 	ldw	r16,0(r2)
  80717c:	14400117 	ldw	r17,4(r2)
  807180:	18036a1e 	bne	r3,zero,807f2c <_dtoa_r+0x11c8>
  807184:	05800084 	movi	r22,2
  807188:	90001026 	beq	r18,zero,8071cc <_dtoa_r+0x468>
  80718c:	04c02074 	movhi	r19,129
  807190:	9cfff604 	addi	r19,r19,-40
  807194:	9080004c 	andi	r2,r18,1
  807198:	1005003a 	cmpeq	r2,r2,zero
  80719c:	1000081e 	bne	r2,zero,8071c0 <_dtoa_r+0x45c>
  8071a0:	99800017 	ldw	r6,0(r19)
  8071a4:	99c00117 	ldw	r7,4(r19)
  8071a8:	880b883a 	mov	r5,r17
  8071ac:	8009883a 	mov	r4,r16
  8071b0:	080369c0 	call	80369c <__muldf3>
  8071b4:	1021883a 	mov	r16,r2
  8071b8:	b5800044 	addi	r22,r22,1
  8071bc:	1823883a 	mov	r17,r3
  8071c0:	9025d07a 	srai	r18,r18,1
  8071c4:	9cc00204 	addi	r19,r19,8
  8071c8:	903ff21e 	bne	r18,zero,807194 <_dtoa_r+0x430>
  8071cc:	a80b883a 	mov	r5,r21
  8071d0:	a009883a 	mov	r4,r20
  8071d4:	880f883a 	mov	r7,r17
  8071d8:	800d883a 	mov	r6,r16
  8071dc:	080ca080 	call	80ca08 <__divdf3>
  8071e0:	1029883a 	mov	r20,r2
  8071e4:	182b883a 	mov	r21,r3
  8071e8:	d8c00c17 	ldw	r3,48(sp)
  8071ec:	1805003a 	cmpeq	r2,r3,zero
  8071f0:	1000081e 	bne	r2,zero,807214 <_dtoa_r+0x4b0>
  8071f4:	0005883a 	mov	r2,zero
  8071f8:	00cffc34 	movhi	r3,16368
  8071fc:	180f883a 	mov	r7,r3
  807200:	a009883a 	mov	r4,r20
  807204:	a80b883a 	mov	r5,r21
  807208:	100d883a 	mov	r6,r2
  80720c:	080cce80 	call	80cce8 <__ltdf2>
  807210:	1003fe16 	blt	r2,zero,80820c <_dtoa_r+0x14a8>
  807214:	b009883a 	mov	r4,r22
  807218:	0803bf80 	call	803bf8 <__floatsidf>
  80721c:	180b883a 	mov	r5,r3
  807220:	1009883a 	mov	r4,r2
  807224:	a00d883a 	mov	r6,r20
  807228:	a80f883a 	mov	r7,r21
  80722c:	080369c0 	call	80369c <__muldf3>
  807230:	0011883a 	mov	r8,zero
  807234:	02500734 	movhi	r9,16412
  807238:	1009883a 	mov	r4,r2
  80723c:	180b883a 	mov	r5,r3
  807240:	480f883a 	mov	r7,r9
  807244:	400d883a 	mov	r6,r8
  807248:	08036280 	call	803628 <__adddf3>
  80724c:	d9000f17 	ldw	r4,60(sp)
  807250:	102d883a 	mov	r22,r2
  807254:	00bf3034 	movhi	r2,64704
  807258:	18b9883a 	add	fp,r3,r2
  80725c:	e02f883a 	mov	r23,fp
  807260:	20028f1e 	bne	r4,zero,807ca0 <_dtoa_r+0xf3c>
  807264:	0005883a 	mov	r2,zero
  807268:	00d00534 	movhi	r3,16404
  80726c:	a009883a 	mov	r4,r20
  807270:	a80b883a 	mov	r5,r21
  807274:	180f883a 	mov	r7,r3
  807278:	100d883a 	mov	r6,r2
  80727c:	08035a80 	call	8035a8 <__subdf3>
  807280:	1009883a 	mov	r4,r2
  807284:	e00f883a 	mov	r7,fp
  807288:	180b883a 	mov	r5,r3
  80728c:	b00d883a 	mov	r6,r22
  807290:	1025883a 	mov	r18,r2
  807294:	1827883a 	mov	r19,r3
  807298:	0803ae80 	call	803ae8 <__gtdf2>
  80729c:	00834f16 	blt	zero,r2,807fdc <_dtoa_r+0x1278>
  8072a0:	e0e0003c 	xorhi	r3,fp,32768
  8072a4:	9009883a 	mov	r4,r18
  8072a8:	980b883a 	mov	r5,r19
  8072ac:	180f883a 	mov	r7,r3
  8072b0:	b00d883a 	mov	r6,r22
  8072b4:	080cce80 	call	80cce8 <__ltdf2>
  8072b8:	1000080e 	bge	r2,zero,8072dc <_dtoa_r+0x578>
  8072bc:	0027883a 	mov	r19,zero
  8072c0:	0025883a 	mov	r18,zero
  8072c4:	d8802617 	ldw	r2,152(sp)
  8072c8:	df000517 	ldw	fp,20(sp)
  8072cc:	d8000615 	stw	zero,24(sp)
  8072d0:	0084303a 	nor	r2,zero,r2
  8072d4:	d8800d15 	stw	r2,52(sp)
  8072d8:	00019b06 	br	807948 <_dtoa_r+0xbe4>
  8072dc:	d9801217 	ldw	r6,72(sp)
  8072e0:	d8801317 	ldw	r2,76(sp)
  8072e4:	3029883a 	mov	r20,r6
  8072e8:	102b883a 	mov	r21,r2
  8072ec:	d8c00217 	ldw	r3,8(sp)
  8072f0:	18008516 	blt	r3,zero,807508 <_dtoa_r+0x7a4>
  8072f4:	d9000d17 	ldw	r4,52(sp)
  8072f8:	00800384 	movi	r2,14
  8072fc:	11008216 	blt	r2,r4,807508 <_dtoa_r+0x7a4>
  807300:	200490fa 	slli	r2,r4,3
  807304:	d9802617 	ldw	r6,152(sp)
  807308:	00c02074 	movhi	r3,129
  80730c:	18ffc404 	addi	r3,r3,-240
  807310:	10c5883a 	add	r2,r2,r3
  807314:	14800017 	ldw	r18,0(r2)
  807318:	14c00117 	ldw	r19,4(r2)
  80731c:	30031e16 	blt	r6,zero,807f98 <_dtoa_r+0x1234>
  807320:	d9000517 	ldw	r4,20(sp)
  807324:	d8c00f17 	ldw	r3,60(sp)
  807328:	a823883a 	mov	r17,r21
  80732c:	a021883a 	mov	r16,r20
  807330:	192b883a 	add	r21,r3,r4
  807334:	2039883a 	mov	fp,r4
  807338:	00000f06 	br	807378 <_dtoa_r+0x614>
  80733c:	0005883a 	mov	r2,zero
  807340:	00d00934 	movhi	r3,16420
  807344:	5009883a 	mov	r4,r10
  807348:	580b883a 	mov	r5,r11
  80734c:	180f883a 	mov	r7,r3
  807350:	100d883a 	mov	r6,r2
  807354:	080369c0 	call	80369c <__muldf3>
  807358:	180b883a 	mov	r5,r3
  80735c:	000d883a 	mov	r6,zero
  807360:	000f883a 	mov	r7,zero
  807364:	1009883a 	mov	r4,r2
  807368:	1021883a 	mov	r16,r2
  80736c:	1823883a 	mov	r17,r3
  807370:	080cc600 	call	80cc60 <__nedf2>
  807374:	10004526 	beq	r2,zero,80748c <_dtoa_r+0x728>
  807378:	900d883a 	mov	r6,r18
  80737c:	980f883a 	mov	r7,r19
  807380:	8009883a 	mov	r4,r16
  807384:	880b883a 	mov	r5,r17
  807388:	080ca080 	call	80ca08 <__divdf3>
  80738c:	180b883a 	mov	r5,r3
  807390:	1009883a 	mov	r4,r2
  807394:	0803cf00 	call	803cf0 <__fixdfsi>
  807398:	1009883a 	mov	r4,r2
  80739c:	1029883a 	mov	r20,r2
  8073a0:	0803bf80 	call	803bf8 <__floatsidf>
  8073a4:	180f883a 	mov	r7,r3
  8073a8:	9009883a 	mov	r4,r18
  8073ac:	980b883a 	mov	r5,r19
  8073b0:	100d883a 	mov	r6,r2
  8073b4:	080369c0 	call	80369c <__muldf3>
  8073b8:	180f883a 	mov	r7,r3
  8073bc:	880b883a 	mov	r5,r17
  8073c0:	8009883a 	mov	r4,r16
  8073c4:	100d883a 	mov	r6,r2
  8073c8:	08035a80 	call	8035a8 <__subdf3>
  8073cc:	1015883a 	mov	r10,r2
  8073d0:	a0800c04 	addi	r2,r20,48
  8073d4:	e0800005 	stb	r2,0(fp)
  8073d8:	e7000044 	addi	fp,fp,1
  8073dc:	1817883a 	mov	r11,r3
  8073e0:	e57fd61e 	bne	fp,r21,80733c <_dtoa_r+0x5d8>
  8073e4:	500d883a 	mov	r6,r10
  8073e8:	180f883a 	mov	r7,r3
  8073ec:	5009883a 	mov	r4,r10
  8073f0:	180b883a 	mov	r5,r3
  8073f4:	08036280 	call	803628 <__adddf3>
  8073f8:	100d883a 	mov	r6,r2
  8073fc:	9009883a 	mov	r4,r18
  807400:	980b883a 	mov	r5,r19
  807404:	180f883a 	mov	r7,r3
  807408:	1021883a 	mov	r16,r2
  80740c:	1823883a 	mov	r17,r3
  807410:	080cce80 	call	80cce8 <__ltdf2>
  807414:	10000816 	blt	r2,zero,807438 <_dtoa_r+0x6d4>
  807418:	980b883a 	mov	r5,r19
  80741c:	800d883a 	mov	r6,r16
  807420:	880f883a 	mov	r7,r17
  807424:	9009883a 	mov	r4,r18
  807428:	0803a600 	call	803a60 <__eqdf2>
  80742c:	1000171e 	bne	r2,zero,80748c <_dtoa_r+0x728>
  807430:	a080004c 	andi	r2,r20,1
  807434:	10001526 	beq	r2,zero,80748c <_dtoa_r+0x728>
  807438:	d8800d17 	ldw	r2,52(sp)
  80743c:	d8800415 	stw	r2,16(sp)
  807440:	e009883a 	mov	r4,fp
  807444:	213fffc4 	addi	r4,r4,-1
  807448:	20c00007 	ldb	r3,0(r4)
  80744c:	00800e44 	movi	r2,57
  807450:	1880081e 	bne	r3,r2,807474 <_dtoa_r+0x710>
  807454:	d8800517 	ldw	r2,20(sp)
  807458:	113ffa1e 	bne	r2,r4,807444 <_dtoa_r+0x6e0>
  80745c:	d8c00417 	ldw	r3,16(sp)
  807460:	d9800517 	ldw	r6,20(sp)
  807464:	00800c04 	movi	r2,48
  807468:	18c00044 	addi	r3,r3,1
  80746c:	d8c00415 	stw	r3,16(sp)
  807470:	30800005 	stb	r2,0(r6)
  807474:	20800003 	ldbu	r2,0(r4)
  807478:	d8c00417 	ldw	r3,16(sp)
  80747c:	27000044 	addi	fp,r4,1
  807480:	10800044 	addi	r2,r2,1
  807484:	d8c00d15 	stw	r3,52(sp)
  807488:	20800005 	stb	r2,0(r4)
  80748c:	d9001617 	ldw	r4,88(sp)
  807490:	d9400717 	ldw	r5,28(sp)
  807494:	0809f2c0 	call	809f2c <_Bfree>
  807498:	e0000005 	stb	zero,0(fp)
  80749c:	d9800d17 	ldw	r6,52(sp)
  8074a0:	d8c02717 	ldw	r3,156(sp)
  8074a4:	d9002917 	ldw	r4,164(sp)
  8074a8:	30800044 	addi	r2,r6,1
  8074ac:	18800015 	stw	r2,0(r3)
  8074b0:	20029c26 	beq	r4,zero,807f24 <_dtoa_r+0x11c0>
  8074b4:	d8c00517 	ldw	r3,20(sp)
  8074b8:	27000015 	stw	fp,0(r4)
  8074bc:	003e5d06 	br	806e34 <_dtoa_r+0xd0>
  8074c0:	d9800d17 	ldw	r6,52(sp)
  8074c4:	00c02074 	movhi	r3,129
  8074c8:	18ffc404 	addi	r3,r3,-240
  8074cc:	d9001217 	ldw	r4,72(sp)
  8074d0:	300490fa 	slli	r2,r6,3
  8074d4:	d9401317 	ldw	r5,76(sp)
  8074d8:	10c5883a 	add	r2,r2,r3
  8074dc:	12000017 	ldw	r8,0(r2)
  8074e0:	12400117 	ldw	r9,4(r2)
  8074e4:	400d883a 	mov	r6,r8
  8074e8:	480f883a 	mov	r7,r9
  8074ec:	080cce80 	call	80cce8 <__ltdf2>
  8074f0:	1000030e 	bge	r2,zero,807500 <_dtoa_r+0x79c>
  8074f4:	d8800d17 	ldw	r2,52(sp)
  8074f8:	10bfffc4 	addi	r2,r2,-1
  8074fc:	d8800d15 	stw	r2,52(sp)
  807500:	d8000c15 	stw	zero,48(sp)
  807504:	003ea806 	br	806fa8 <_dtoa_r+0x244>
  807508:	d9000b17 	ldw	r4,44(sp)
  80750c:	202cc03a 	cmpne	r22,r4,zero
  807510:	b000c71e 	bne	r22,zero,807830 <_dtoa_r+0xacc>
  807514:	dc001117 	ldw	r16,68(sp)
  807518:	dc801017 	ldw	r18,64(sp)
  80751c:	0027883a 	mov	r19,zero
  807520:	04000b0e 	bge	zero,r16,807550 <_dtoa_r+0x7ec>
  807524:	d8c00a17 	ldw	r3,40(sp)
  807528:	00c0090e 	bge	zero,r3,807550 <_dtoa_r+0x7ec>
  80752c:	8005883a 	mov	r2,r16
  807530:	1c011316 	blt	r3,r16,807980 <_dtoa_r+0xc1c>
  807534:	d9000a17 	ldw	r4,40(sp)
  807538:	d9801117 	ldw	r6,68(sp)
  80753c:	80a1c83a 	sub	r16,r16,r2
  807540:	2089c83a 	sub	r4,r4,r2
  807544:	308dc83a 	sub	r6,r6,r2
  807548:	d9000a15 	stw	r4,40(sp)
  80754c:	d9801115 	stw	r6,68(sp)
  807550:	d8801017 	ldw	r2,64(sp)
  807554:	0080150e 	bge	zero,r2,8075ac <_dtoa_r+0x848>
  807558:	d8c00b17 	ldw	r3,44(sp)
  80755c:	1805003a 	cmpeq	r2,r3,zero
  807560:	1001c91e 	bne	r2,zero,807c88 <_dtoa_r+0xf24>
  807564:	04800e0e 	bge	zero,r18,8075a0 <_dtoa_r+0x83c>
  807568:	d9001617 	ldw	r4,88(sp)
  80756c:	980b883a 	mov	r5,r19
  807570:	900d883a 	mov	r6,r18
  807574:	080ad780 	call	80ad78 <__pow5mult>
  807578:	d9001617 	ldw	r4,88(sp)
  80757c:	d9800717 	ldw	r6,28(sp)
  807580:	100b883a 	mov	r5,r2
  807584:	1027883a 	mov	r19,r2
  807588:	080a9bc0 	call	80a9bc <__multiply>
  80758c:	d9001617 	ldw	r4,88(sp)
  807590:	d9400717 	ldw	r5,28(sp)
  807594:	1023883a 	mov	r17,r2
  807598:	0809f2c0 	call	809f2c <_Bfree>
  80759c:	dc400715 	stw	r17,28(sp)
  8075a0:	d9001017 	ldw	r4,64(sp)
  8075a4:	248dc83a 	sub	r6,r4,r18
  8075a8:	30010e1e 	bne	r6,zero,8079e4 <_dtoa_r+0xc80>
  8075ac:	d9001617 	ldw	r4,88(sp)
  8075b0:	04400044 	movi	r17,1
  8075b4:	880b883a 	mov	r5,r17
  8075b8:	080ac100 	call	80ac10 <__i2b>
  8075bc:	d9800917 	ldw	r6,36(sp)
  8075c0:	1025883a 	mov	r18,r2
  8075c4:	0180040e 	bge	zero,r6,8075d8 <_dtoa_r+0x874>
  8075c8:	d9001617 	ldw	r4,88(sp)
  8075cc:	100b883a 	mov	r5,r2
  8075d0:	080ad780 	call	80ad78 <__pow5mult>
  8075d4:	1025883a 	mov	r18,r2
  8075d8:	d8801717 	ldw	r2,92(sp)
  8075dc:	8880f30e 	bge	r17,r2,8079ac <_dtoa_r+0xc48>
  8075e0:	0023883a 	mov	r17,zero
  8075e4:	d9800917 	ldw	r6,36(sp)
  8075e8:	30019e1e 	bne	r6,zero,807c64 <_dtoa_r+0xf00>
  8075ec:	00c00044 	movi	r3,1
  8075f0:	d9000a17 	ldw	r4,40(sp)
  8075f4:	20c5883a 	add	r2,r4,r3
  8075f8:	10c007cc 	andi	r3,r2,31
  8075fc:	1800841e 	bne	r3,zero,807810 <_dtoa_r+0xaac>
  807600:	00800704 	movi	r2,28
  807604:	d9000a17 	ldw	r4,40(sp)
  807608:	d9801117 	ldw	r6,68(sp)
  80760c:	80a1883a 	add	r16,r16,r2
  807610:	2089883a 	add	r4,r4,r2
  807614:	308d883a 	add	r6,r6,r2
  807618:	d9000a15 	stw	r4,40(sp)
  80761c:	d9801115 	stw	r6,68(sp)
  807620:	d8801117 	ldw	r2,68(sp)
  807624:	0080050e 	bge	zero,r2,80763c <_dtoa_r+0x8d8>
  807628:	d9400717 	ldw	r5,28(sp)
  80762c:	d9001617 	ldw	r4,88(sp)
  807630:	100d883a 	mov	r6,r2
  807634:	080a8700 	call	80a870 <__lshift>
  807638:	d8800715 	stw	r2,28(sp)
  80763c:	d8c00a17 	ldw	r3,40(sp)
  807640:	00c0050e 	bge	zero,r3,807658 <_dtoa_r+0x8f4>
  807644:	d9001617 	ldw	r4,88(sp)
  807648:	900b883a 	mov	r5,r18
  80764c:	180d883a 	mov	r6,r3
  807650:	080a8700 	call	80a870 <__lshift>
  807654:	1025883a 	mov	r18,r2
  807658:	d9000c17 	ldw	r4,48(sp)
  80765c:	2005003a 	cmpeq	r2,r4,zero
  807660:	10016f26 	beq	r2,zero,807c20 <_dtoa_r+0xebc>
  807664:	d9000f17 	ldw	r4,60(sp)
  807668:	0102170e 	bge	zero,r4,807ec8 <_dtoa_r+0x1164>
  80766c:	d9800b17 	ldw	r6,44(sp)
  807670:	3005003a 	cmpeq	r2,r6,zero
  807674:	1000881e 	bne	r2,zero,807898 <_dtoa_r+0xb34>
  807678:	0400050e 	bge	zero,r16,807690 <_dtoa_r+0x92c>
  80767c:	d9001617 	ldw	r4,88(sp)
  807680:	980b883a 	mov	r5,r19
  807684:	800d883a 	mov	r6,r16
  807688:	080a8700 	call	80a870 <__lshift>
  80768c:	1027883a 	mov	r19,r2
  807690:	8804c03a 	cmpne	r2,r17,zero
  807694:	1002541e 	bne	r2,zero,807fe8 <_dtoa_r+0x1284>
  807698:	980b883a 	mov	r5,r19
  80769c:	dd800517 	ldw	r22,20(sp)
  8076a0:	dcc00615 	stw	r19,24(sp)
  8076a4:	a700004c 	andi	fp,r20,1
  8076a8:	2827883a 	mov	r19,r5
  8076ac:	d9000717 	ldw	r4,28(sp)
  8076b0:	900b883a 	mov	r5,r18
  8076b4:	0806b200 	call	806b20 <quorem>
  8076b8:	d9000717 	ldw	r4,28(sp)
  8076bc:	d9400617 	ldw	r5,24(sp)
  8076c0:	1023883a 	mov	r17,r2
  8076c4:	8dc00c04 	addi	r23,r17,48
  8076c8:	080a0880 	call	80a088 <__mcmp>
  8076cc:	d9001617 	ldw	r4,88(sp)
  8076d0:	900b883a 	mov	r5,r18
  8076d4:	980d883a 	mov	r6,r19
  8076d8:	1029883a 	mov	r20,r2
  8076dc:	080a6e40 	call	80a6e4 <__mdiff>
  8076e0:	102b883a 	mov	r21,r2
  8076e4:	10800317 	ldw	r2,12(r2)
  8076e8:	1001281e 	bne	r2,zero,807b8c <_dtoa_r+0xe28>
  8076ec:	d9000717 	ldw	r4,28(sp)
  8076f0:	a80b883a 	mov	r5,r21
  8076f4:	080a0880 	call	80a088 <__mcmp>
  8076f8:	d9001617 	ldw	r4,88(sp)
  8076fc:	1021883a 	mov	r16,r2
  807700:	a80b883a 	mov	r5,r21
  807704:	0809f2c0 	call	809f2c <_Bfree>
  807708:	8000041e 	bne	r16,zero,80771c <_dtoa_r+0x9b8>
  80770c:	d8801717 	ldw	r2,92(sp)
  807710:	1000021e 	bne	r2,zero,80771c <_dtoa_r+0x9b8>
  807714:	e004c03a 	cmpne	r2,fp,zero
  807718:	10011726 	beq	r2,zero,807b78 <_dtoa_r+0xe14>
  80771c:	a0010616 	blt	r20,zero,807b38 <_dtoa_r+0xdd4>
  807720:	a000041e 	bne	r20,zero,807734 <_dtoa_r+0x9d0>
  807724:	d8c01717 	ldw	r3,92(sp)
  807728:	1800021e 	bne	r3,zero,807734 <_dtoa_r+0x9d0>
  80772c:	e004c03a 	cmpne	r2,fp,zero
  807730:	10010126 	beq	r2,zero,807b38 <_dtoa_r+0xdd4>
  807734:	04023d16 	blt	zero,r16,80802c <_dtoa_r+0x12c8>
  807738:	b5c00005 	stb	r23,0(r22)
  80773c:	d9800517 	ldw	r6,20(sp)
  807740:	d9000f17 	ldw	r4,60(sp)
  807744:	b5800044 	addi	r22,r22,1
  807748:	3105883a 	add	r2,r6,r4
  80774c:	b0806526 	beq	r22,r2,8078e4 <_dtoa_r+0xb80>
  807750:	d9400717 	ldw	r5,28(sp)
  807754:	d9001617 	ldw	r4,88(sp)
  807758:	01800284 	movi	r6,10
  80775c:	000f883a 	mov	r7,zero
  807760:	080ac4c0 	call	80ac4c <__multadd>
  807764:	d8800715 	stw	r2,28(sp)
  807768:	d8800617 	ldw	r2,24(sp)
  80776c:	14c10c26 	beq	r2,r19,807ba0 <_dtoa_r+0xe3c>
  807770:	d9400617 	ldw	r5,24(sp)
  807774:	d9001617 	ldw	r4,88(sp)
  807778:	01800284 	movi	r6,10
  80777c:	000f883a 	mov	r7,zero
  807780:	080ac4c0 	call	80ac4c <__multadd>
  807784:	d9001617 	ldw	r4,88(sp)
  807788:	980b883a 	mov	r5,r19
  80778c:	01800284 	movi	r6,10
  807790:	000f883a 	mov	r7,zero
  807794:	d8800615 	stw	r2,24(sp)
  807798:	080ac4c0 	call	80ac4c <__multadd>
  80779c:	1027883a 	mov	r19,r2
  8077a0:	003fc206 	br	8076ac <_dtoa_r+0x948>
  8077a4:	2445c83a 	sub	r2,r4,r17
  8077a8:	a088983a 	sll	r4,r20,r2
  8077ac:	003e4b06 	br	8070dc <_dtoa_r+0x378>
  8077b0:	01bfffc4 	movi	r6,-1
  8077b4:	00800044 	movi	r2,1
  8077b8:	d9800e15 	stw	r6,56(sp)
  8077bc:	d9800f15 	stw	r6,60(sp)
  8077c0:	d8800b15 	stw	r2,44(sp)
  8077c4:	d8c01617 	ldw	r3,88(sp)
  8077c8:	008005c4 	movi	r2,23
  8077cc:	18001115 	stw	zero,68(r3)
  8077d0:	1580082e 	bgeu	r2,r22,8077f4 <_dtoa_r+0xa90>
  8077d4:	00c00104 	movi	r3,4
  8077d8:	0009883a 	mov	r4,zero
  8077dc:	18c7883a 	add	r3,r3,r3
  8077e0:	18800504 	addi	r2,r3,20
  8077e4:	21000044 	addi	r4,r4,1
  8077e8:	b0bffc2e 	bgeu	r22,r2,8077dc <_dtoa_r+0xa78>
  8077ec:	d9801617 	ldw	r6,88(sp)
  8077f0:	31001115 	stw	r4,68(r6)
  8077f4:	dc000f17 	ldw	r16,60(sp)
  8077f8:	003e4b06 	br	807128 <_dtoa_r+0x3c4>
  8077fc:	d9801717 	ldw	r6,92(sp)
  807800:	0023883a 	mov	r17,zero
  807804:	31bfff04 	addi	r6,r6,-4
  807808:	d9801715 	stw	r6,92(sp)
  80780c:	003df806 	br	806ff0 <_dtoa_r+0x28c>
  807810:	00800804 	movi	r2,32
  807814:	10c9c83a 	sub	r4,r2,r3
  807818:	00c00104 	movi	r3,4
  80781c:	19005a16 	blt	r3,r4,807988 <_dtoa_r+0xc24>
  807820:	008000c4 	movi	r2,3
  807824:	113f7e16 	blt	r2,r4,807620 <_dtoa_r+0x8bc>
  807828:	20800704 	addi	r2,r4,28
  80782c:	003f7506 	br	807604 <_dtoa_r+0x8a0>
  807830:	d9801717 	ldw	r6,92(sp)
  807834:	00800044 	movi	r2,1
  807838:	1180a10e 	bge	r2,r6,807ac0 <_dtoa_r+0xd5c>
  80783c:	d9800f17 	ldw	r6,60(sp)
  807840:	d8c01017 	ldw	r3,64(sp)
  807844:	30bfffc4 	addi	r2,r6,-1
  807848:	1881c616 	blt	r3,r2,807f64 <_dtoa_r+0x1200>
  80784c:	18a5c83a 	sub	r18,r3,r2
  807850:	d8800f17 	ldw	r2,60(sp)
  807854:	10026216 	blt	r2,zero,8081e0 <_dtoa_r+0x147c>
  807858:	dc001117 	ldw	r16,68(sp)
  80785c:	1007883a 	mov	r3,r2
  807860:	d9800a17 	ldw	r6,40(sp)
  807864:	d8801117 	ldw	r2,68(sp)
  807868:	d9001617 	ldw	r4,88(sp)
  80786c:	30cd883a 	add	r6,r6,r3
  807870:	10c5883a 	add	r2,r2,r3
  807874:	01400044 	movi	r5,1
  807878:	d9800a15 	stw	r6,40(sp)
  80787c:	d8801115 	stw	r2,68(sp)
  807880:	080ac100 	call	80ac10 <__i2b>
  807884:	1027883a 	mov	r19,r2
  807888:	003f2506 	br	807520 <_dtoa_r+0x7bc>
  80788c:	00c02074 	movhi	r3,129
  807890:	18ffa604 	addi	r3,r3,-360
  807894:	003d6706 	br	806e34 <_dtoa_r+0xd0>
  807898:	dd800517 	ldw	r22,20(sp)
  80789c:	04000044 	movi	r16,1
  8078a0:	00000706 	br	8078c0 <_dtoa_r+0xb5c>
  8078a4:	d9400717 	ldw	r5,28(sp)
  8078a8:	d9001617 	ldw	r4,88(sp)
  8078ac:	01800284 	movi	r6,10
  8078b0:	000f883a 	mov	r7,zero
  8078b4:	080ac4c0 	call	80ac4c <__multadd>
  8078b8:	d8800715 	stw	r2,28(sp)
  8078bc:	84000044 	addi	r16,r16,1
  8078c0:	d9000717 	ldw	r4,28(sp)
  8078c4:	900b883a 	mov	r5,r18
  8078c8:	0806b200 	call	806b20 <quorem>
  8078cc:	15c00c04 	addi	r23,r2,48
  8078d0:	b5c00005 	stb	r23,0(r22)
  8078d4:	d8c00f17 	ldw	r3,60(sp)
  8078d8:	b5800044 	addi	r22,r22,1
  8078dc:	80fff116 	blt	r16,r3,8078a4 <_dtoa_r+0xb40>
  8078e0:	d8000615 	stw	zero,24(sp)
  8078e4:	d9400717 	ldw	r5,28(sp)
  8078e8:	d9001617 	ldw	r4,88(sp)
  8078ec:	01800044 	movi	r6,1
  8078f0:	080a8700 	call	80a870 <__lshift>
  8078f4:	1009883a 	mov	r4,r2
  8078f8:	900b883a 	mov	r5,r18
  8078fc:	d8800715 	stw	r2,28(sp)
  807900:	080a0880 	call	80a088 <__mcmp>
  807904:	00803c0e 	bge	zero,r2,8079f8 <_dtoa_r+0xc94>
  807908:	b009883a 	mov	r4,r22
  80790c:	213fffc4 	addi	r4,r4,-1
  807910:	21400003 	ldbu	r5,0(r4)
  807914:	00800e44 	movi	r2,57
  807918:	28c03fcc 	andi	r3,r5,255
  80791c:	18c0201c 	xori	r3,r3,128
  807920:	18ffe004 	addi	r3,r3,-128
  807924:	1881981e 	bne	r3,r2,807f88 <_dtoa_r+0x1224>
  807928:	d9800517 	ldw	r6,20(sp)
  80792c:	21bff71e 	bne	r4,r6,80790c <_dtoa_r+0xba8>
  807930:	d8800d17 	ldw	r2,52(sp)
  807934:	37000044 	addi	fp,r6,1
  807938:	10800044 	addi	r2,r2,1
  80793c:	d8800d15 	stw	r2,52(sp)
  807940:	00800c44 	movi	r2,49
  807944:	30800005 	stb	r2,0(r6)
  807948:	d9001617 	ldw	r4,88(sp)
  80794c:	900b883a 	mov	r5,r18
  807950:	0809f2c0 	call	809f2c <_Bfree>
  807954:	983ecd26 	beq	r19,zero,80748c <_dtoa_r+0x728>
  807958:	d8c00617 	ldw	r3,24(sp)
  80795c:	18000426 	beq	r3,zero,807970 <_dtoa_r+0xc0c>
  807960:	1cc00326 	beq	r3,r19,807970 <_dtoa_r+0xc0c>
  807964:	d9001617 	ldw	r4,88(sp)
  807968:	180b883a 	mov	r5,r3
  80796c:	0809f2c0 	call	809f2c <_Bfree>
  807970:	d9001617 	ldw	r4,88(sp)
  807974:	980b883a 	mov	r5,r19
  807978:	0809f2c0 	call	809f2c <_Bfree>
  80797c:	003ec306 	br	80748c <_dtoa_r+0x728>
  807980:	1805883a 	mov	r2,r3
  807984:	003eeb06 	br	807534 <_dtoa_r+0x7d0>
  807988:	d9800a17 	ldw	r6,40(sp)
  80798c:	d8c01117 	ldw	r3,68(sp)
  807990:	20bfff04 	addi	r2,r4,-4
  807994:	308d883a 	add	r6,r6,r2
  807998:	1887883a 	add	r3,r3,r2
  80799c:	80a1883a 	add	r16,r16,r2
  8079a0:	d9800a15 	stw	r6,40(sp)
  8079a4:	d8c01115 	stw	r3,68(sp)
  8079a8:	003f1d06 	br	807620 <_dtoa_r+0x8bc>
  8079ac:	a03f0c1e 	bne	r20,zero,8075e0 <_dtoa_r+0x87c>
  8079b0:	00800434 	movhi	r2,16
  8079b4:	10bfffc4 	addi	r2,r2,-1
  8079b8:	a884703a 	and	r2,r21,r2
  8079bc:	103f081e 	bne	r2,zero,8075e0 <_dtoa_r+0x87c>
  8079c0:	a89ffc2c 	andhi	r2,r21,32752
  8079c4:	103f0626 	beq	r2,zero,8075e0 <_dtoa_r+0x87c>
  8079c8:	d8c01117 	ldw	r3,68(sp)
  8079cc:	d9000a17 	ldw	r4,40(sp)
  8079d0:	18c00044 	addi	r3,r3,1
  8079d4:	21000044 	addi	r4,r4,1
  8079d8:	d8c01115 	stw	r3,68(sp)
  8079dc:	d9000a15 	stw	r4,40(sp)
  8079e0:	003f0006 	br	8075e4 <_dtoa_r+0x880>
  8079e4:	d9400717 	ldw	r5,28(sp)
  8079e8:	d9001617 	ldw	r4,88(sp)
  8079ec:	080ad780 	call	80ad78 <__pow5mult>
  8079f0:	d8800715 	stw	r2,28(sp)
  8079f4:	003eed06 	br	8075ac <_dtoa_r+0x848>
  8079f8:	1000021e 	bne	r2,zero,807a04 <_dtoa_r+0xca0>
  8079fc:	b880004c 	andi	r2,r23,1
  807a00:	103fc11e 	bne	r2,zero,807908 <_dtoa_r+0xba4>
  807a04:	b5bfffc4 	addi	r22,r22,-1
  807a08:	b0c00007 	ldb	r3,0(r22)
  807a0c:	00800c04 	movi	r2,48
  807a10:	18bffc26 	beq	r3,r2,807a04 <_dtoa_r+0xca0>
  807a14:	b7000044 	addi	fp,r22,1
  807a18:	003fcb06 	br	807948 <_dtoa_r+0xbe4>
  807a1c:	d9800d17 	ldw	r6,52(sp)
  807a20:	018fc83a 	sub	r7,zero,r6
  807a24:	3801f726 	beq	r7,zero,808204 <_dtoa_r+0x14a0>
  807a28:	398003cc 	andi	r6,r7,15
  807a2c:	300c90fa 	slli	r6,r6,3
  807a30:	01402074 	movhi	r5,129
  807a34:	297fc404 	addi	r5,r5,-240
  807a38:	d9001217 	ldw	r4,72(sp)
  807a3c:	314d883a 	add	r6,r6,r5
  807a40:	30c00117 	ldw	r3,4(r6)
  807a44:	30800017 	ldw	r2,0(r6)
  807a48:	d9401317 	ldw	r5,76(sp)
  807a4c:	3821d13a 	srai	r16,r7,4
  807a50:	100d883a 	mov	r6,r2
  807a54:	180f883a 	mov	r7,r3
  807a58:	080369c0 	call	80369c <__muldf3>
  807a5c:	1011883a 	mov	r8,r2
  807a60:	1813883a 	mov	r9,r3
  807a64:	1029883a 	mov	r20,r2
  807a68:	182b883a 	mov	r21,r3
  807a6c:	8001e526 	beq	r16,zero,808204 <_dtoa_r+0x14a0>
  807a70:	05800084 	movi	r22,2
  807a74:	04402074 	movhi	r17,129
  807a78:	8c7ff604 	addi	r17,r17,-40
  807a7c:	8080004c 	andi	r2,r16,1
  807a80:	1005003a 	cmpeq	r2,r2,zero
  807a84:	1000081e 	bne	r2,zero,807aa8 <_dtoa_r+0xd44>
  807a88:	89800017 	ldw	r6,0(r17)
  807a8c:	89c00117 	ldw	r7,4(r17)
  807a90:	480b883a 	mov	r5,r9
  807a94:	4009883a 	mov	r4,r8
  807a98:	080369c0 	call	80369c <__muldf3>
  807a9c:	1011883a 	mov	r8,r2
  807aa0:	b5800044 	addi	r22,r22,1
  807aa4:	1813883a 	mov	r9,r3
  807aa8:	8021d07a 	srai	r16,r16,1
  807aac:	8c400204 	addi	r17,r17,8
  807ab0:	803ff21e 	bne	r16,zero,807a7c <_dtoa_r+0xd18>
  807ab4:	4029883a 	mov	r20,r8
  807ab8:	482b883a 	mov	r21,r9
  807abc:	003dca06 	br	8071e8 <_dtoa_r+0x484>
  807ac0:	d9000817 	ldw	r4,32(sp)
  807ac4:	2005003a 	cmpeq	r2,r4,zero
  807ac8:	1001f61e 	bne	r2,zero,8082a4 <_dtoa_r+0x1540>
  807acc:	dc001117 	ldw	r16,68(sp)
  807ad0:	dc801017 	ldw	r18,64(sp)
  807ad4:	18c10cc4 	addi	r3,r3,1075
  807ad8:	003f6106 	br	807860 <_dtoa_r+0xafc>
  807adc:	d8000b15 	stw	zero,44(sp)
  807ae0:	d9802617 	ldw	r6,152(sp)
  807ae4:	d8c00d17 	ldw	r3,52(sp)
  807ae8:	30800044 	addi	r2,r6,1
  807aec:	18ad883a 	add	r22,r3,r2
  807af0:	b13fffc4 	addi	r4,r22,-1
  807af4:	d9000e15 	stw	r4,56(sp)
  807af8:	0581f60e 	bge	zero,r22,8082d4 <_dtoa_r+0x1570>
  807afc:	dd800f15 	stw	r22,60(sp)
  807b00:	003f3006 	br	8077c4 <_dtoa_r+0xa60>
  807b04:	d8000b15 	stw	zero,44(sp)
  807b08:	d9002617 	ldw	r4,152(sp)
  807b0c:	0101eb0e 	bge	zero,r4,8082bc <_dtoa_r+0x1558>
  807b10:	202d883a 	mov	r22,r4
  807b14:	d9000e15 	stw	r4,56(sp)
  807b18:	d9000f15 	stw	r4,60(sp)
  807b1c:	003f2906 	br	8077c4 <_dtoa_r+0xa60>
  807b20:	01800044 	movi	r6,1
  807b24:	d9800b15 	stw	r6,44(sp)
  807b28:	003ff706 	br	807b08 <_dtoa_r+0xda4>
  807b2c:	01000044 	movi	r4,1
  807b30:	d9000b15 	stw	r4,44(sp)
  807b34:	003fea06 	br	807ae0 <_dtoa_r+0xd7c>
  807b38:	04000c0e 	bge	zero,r16,807b6c <_dtoa_r+0xe08>
  807b3c:	d9400717 	ldw	r5,28(sp)
  807b40:	d9001617 	ldw	r4,88(sp)
  807b44:	01800044 	movi	r6,1
  807b48:	080a8700 	call	80a870 <__lshift>
  807b4c:	1009883a 	mov	r4,r2
  807b50:	900b883a 	mov	r5,r18
  807b54:	d8800715 	stw	r2,28(sp)
  807b58:	080a0880 	call	80a088 <__mcmp>
  807b5c:	0081e00e 	bge	zero,r2,8082e0 <_dtoa_r+0x157c>
  807b60:	bdc00044 	addi	r23,r23,1
  807b64:	00800e84 	movi	r2,58
  807b68:	b881a226 	beq	r23,r2,8081f4 <_dtoa_r+0x1490>
  807b6c:	b7000044 	addi	fp,r22,1
  807b70:	b5c00005 	stb	r23,0(r22)
  807b74:	003f7406 	br	807948 <_dtoa_r+0xbe4>
  807b78:	00800e44 	movi	r2,57
  807b7c:	b8819d26 	beq	r23,r2,8081f4 <_dtoa_r+0x1490>
  807b80:	053ffa0e 	bge	zero,r20,807b6c <_dtoa_r+0xe08>
  807b84:	8dc00c44 	addi	r23,r17,49
  807b88:	003ff806 	br	807b6c <_dtoa_r+0xe08>
  807b8c:	d9001617 	ldw	r4,88(sp)
  807b90:	a80b883a 	mov	r5,r21
  807b94:	04000044 	movi	r16,1
  807b98:	0809f2c0 	call	809f2c <_Bfree>
  807b9c:	003edf06 	br	80771c <_dtoa_r+0x9b8>
  807ba0:	d9001617 	ldw	r4,88(sp)
  807ba4:	980b883a 	mov	r5,r19
  807ba8:	01800284 	movi	r6,10
  807bac:	000f883a 	mov	r7,zero
  807bb0:	080ac4c0 	call	80ac4c <__multadd>
  807bb4:	1027883a 	mov	r19,r2
  807bb8:	d8800615 	stw	r2,24(sp)
  807bbc:	003ebb06 	br	8076ac <_dtoa_r+0x948>
  807bc0:	d9801117 	ldw	r6,68(sp)
  807bc4:	d8800d17 	ldw	r2,52(sp)
  807bc8:	d8000915 	stw	zero,36(sp)
  807bcc:	308dc83a 	sub	r6,r6,r2
  807bd0:	0087c83a 	sub	r3,zero,r2
  807bd4:	d9801115 	stw	r6,68(sp)
  807bd8:	d8c01015 	stw	r3,64(sp)
  807bdc:	003cfe06 	br	806fd8 <_dtoa_r+0x274>
  807be0:	018dc83a 	sub	r6,zero,r6
  807be4:	d9801115 	stw	r6,68(sp)
  807be8:	d8000a15 	stw	zero,40(sp)
  807bec:	003cf306 	br	806fbc <_dtoa_r+0x258>
  807bf0:	d9000d17 	ldw	r4,52(sp)
  807bf4:	0803bf80 	call	803bf8 <__floatsidf>
  807bf8:	880b883a 	mov	r5,r17
  807bfc:	8009883a 	mov	r4,r16
  807c00:	180f883a 	mov	r7,r3
  807c04:	100d883a 	mov	r6,r2
  807c08:	080cc600 	call	80cc60 <__nedf2>
  807c0c:	103ce126 	beq	r2,zero,806f94 <_dtoa_r+0x230>
  807c10:	d9800d17 	ldw	r6,52(sp)
  807c14:	31bfffc4 	addi	r6,r6,-1
  807c18:	d9800d15 	stw	r6,52(sp)
  807c1c:	003cdd06 	br	806f94 <_dtoa_r+0x230>
  807c20:	d9000717 	ldw	r4,28(sp)
  807c24:	900b883a 	mov	r5,r18
  807c28:	080a0880 	call	80a088 <__mcmp>
  807c2c:	103e8d0e 	bge	r2,zero,807664 <_dtoa_r+0x900>
  807c30:	d9400717 	ldw	r5,28(sp)
  807c34:	d9001617 	ldw	r4,88(sp)
  807c38:	01800284 	movi	r6,10
  807c3c:	000f883a 	mov	r7,zero
  807c40:	080ac4c0 	call	80ac4c <__multadd>
  807c44:	d9800d17 	ldw	r6,52(sp)
  807c48:	d8800715 	stw	r2,28(sp)
  807c4c:	31bfffc4 	addi	r6,r6,-1
  807c50:	d9800d15 	stw	r6,52(sp)
  807c54:	b001a71e 	bne	r22,zero,8082f4 <_dtoa_r+0x1590>
  807c58:	d8800e17 	ldw	r2,56(sp)
  807c5c:	d8800f15 	stw	r2,60(sp)
  807c60:	003e8006 	br	807664 <_dtoa_r+0x900>
  807c64:	90800417 	ldw	r2,16(r18)
  807c68:	1085883a 	add	r2,r2,r2
  807c6c:	1085883a 	add	r2,r2,r2
  807c70:	1485883a 	add	r2,r2,r18
  807c74:	11000417 	ldw	r4,16(r2)
  807c78:	0809f540 	call	809f54 <__hi0bits>
  807c7c:	00c00804 	movi	r3,32
  807c80:	1887c83a 	sub	r3,r3,r2
  807c84:	003e5a06 	br	8075f0 <_dtoa_r+0x88c>
  807c88:	d9400717 	ldw	r5,28(sp)
  807c8c:	d9801017 	ldw	r6,64(sp)
  807c90:	d9001617 	ldw	r4,88(sp)
  807c94:	080ad780 	call	80ad78 <__pow5mult>
  807c98:	d8800715 	stw	r2,28(sp)
  807c9c:	003e4306 	br	8075ac <_dtoa_r+0x848>
  807ca0:	d9800f17 	ldw	r6,60(sp)
  807ca4:	d8800d17 	ldw	r2,52(sp)
  807ca8:	d9800315 	stw	r6,12(sp)
  807cac:	d8800415 	stw	r2,16(sp)
  807cb0:	d8c00b17 	ldw	r3,44(sp)
  807cb4:	1805003a 	cmpeq	r2,r3,zero
  807cb8:	1000e21e 	bne	r2,zero,808044 <_dtoa_r+0x12e0>
  807cbc:	d9000317 	ldw	r4,12(sp)
  807cc0:	0005883a 	mov	r2,zero
  807cc4:	00cff834 	movhi	r3,16352
  807cc8:	200c90fa 	slli	r6,r4,3
  807ccc:	01002074 	movhi	r4,129
  807cd0:	213fc404 	addi	r4,r4,-240
  807cd4:	180b883a 	mov	r5,r3
  807cd8:	310d883a 	add	r6,r6,r4
  807cdc:	327fff17 	ldw	r9,-4(r6)
  807ce0:	323ffe17 	ldw	r8,-8(r6)
  807ce4:	1009883a 	mov	r4,r2
  807ce8:	480f883a 	mov	r7,r9
  807cec:	400d883a 	mov	r6,r8
  807cf0:	080ca080 	call	80ca08 <__divdf3>
  807cf4:	180b883a 	mov	r5,r3
  807cf8:	b00d883a 	mov	r6,r22
  807cfc:	b80f883a 	mov	r7,r23
  807d00:	1009883a 	mov	r4,r2
  807d04:	08035a80 	call	8035a8 <__subdf3>
  807d08:	a80b883a 	mov	r5,r21
  807d0c:	a009883a 	mov	r4,r20
  807d10:	d8c01915 	stw	r3,100(sp)
  807d14:	d8801815 	stw	r2,96(sp)
  807d18:	0803cf00 	call	803cf0 <__fixdfsi>
  807d1c:	1009883a 	mov	r4,r2
  807d20:	1027883a 	mov	r19,r2
  807d24:	0803bf80 	call	803bf8 <__floatsidf>
  807d28:	a80b883a 	mov	r5,r21
  807d2c:	a009883a 	mov	r4,r20
  807d30:	180f883a 	mov	r7,r3
  807d34:	100d883a 	mov	r6,r2
  807d38:	08035a80 	call	8035a8 <__subdf3>
  807d3c:	d9801817 	ldw	r6,96(sp)
  807d40:	1823883a 	mov	r17,r3
  807d44:	d8801415 	stw	r2,80(sp)
  807d48:	302d883a 	mov	r22,r6
  807d4c:	d9800517 	ldw	r6,20(sp)
  807d50:	9cc00c04 	addi	r19,r19,48
  807d54:	dc401515 	stw	r17,84(sp)
  807d58:	d8c01917 	ldw	r3,100(sp)
  807d5c:	34c00005 	stb	r19,0(r6)
  807d60:	d8800517 	ldw	r2,20(sp)
  807d64:	d9401917 	ldw	r5,100(sp)
  807d68:	d9801417 	ldw	r6,80(sp)
  807d6c:	b009883a 	mov	r4,r22
  807d70:	880f883a 	mov	r7,r17
  807d74:	182f883a 	mov	r23,r3
  807d78:	17000044 	addi	fp,r2,1
  807d7c:	0803ae80 	call	803ae8 <__gtdf2>
  807d80:	00804e16 	blt	zero,r2,807ebc <_dtoa_r+0x1158>
  807d84:	d9801417 	ldw	r6,80(sp)
  807d88:	0005883a 	mov	r2,zero
  807d8c:	00cffc34 	movhi	r3,16368
  807d90:	180b883a 	mov	r5,r3
  807d94:	880f883a 	mov	r7,r17
  807d98:	1009883a 	mov	r4,r2
  807d9c:	08035a80 	call	8035a8 <__subdf3>
  807da0:	d9401917 	ldw	r5,100(sp)
  807da4:	180f883a 	mov	r7,r3
  807da8:	b009883a 	mov	r4,r22
  807dac:	100d883a 	mov	r6,r2
  807db0:	0803ae80 	call	803ae8 <__gtdf2>
  807db4:	00bda216 	blt	zero,r2,807440 <_dtoa_r+0x6dc>
  807db8:	d8c00317 	ldw	r3,12(sp)
  807dbc:	00800044 	movi	r2,1
  807dc0:	10c01216 	blt	r2,r3,807e0c <_dtoa_r+0x10a8>
  807dc4:	003d4506 	br	8072dc <_dtoa_r+0x578>
  807dc8:	d9801417 	ldw	r6,80(sp)
  807dcc:	0005883a 	mov	r2,zero
  807dd0:	00cffc34 	movhi	r3,16368
  807dd4:	180b883a 	mov	r5,r3
  807dd8:	880f883a 	mov	r7,r17
  807ddc:	1009883a 	mov	r4,r2
  807de0:	08035a80 	call	8035a8 <__subdf3>
  807de4:	d9c01b17 	ldw	r7,108(sp)
  807de8:	180b883a 	mov	r5,r3
  807dec:	1009883a 	mov	r4,r2
  807df0:	b00d883a 	mov	r6,r22
  807df4:	080cce80 	call	80cce8 <__ltdf2>
  807df8:	103d9116 	blt	r2,zero,807440 <_dtoa_r+0x6dc>
  807dfc:	d9800517 	ldw	r6,20(sp)
  807e00:	d9000317 	ldw	r4,12(sp)
  807e04:	3105883a 	add	r2,r6,r4
  807e08:	e0bd3426 	beq	fp,r2,8072dc <_dtoa_r+0x578>
  807e0c:	04500934 	movhi	r17,16420
  807e10:	0021883a 	mov	r16,zero
  807e14:	b80b883a 	mov	r5,r23
  807e18:	b009883a 	mov	r4,r22
  807e1c:	800d883a 	mov	r6,r16
  807e20:	880f883a 	mov	r7,r17
  807e24:	080369c0 	call	80369c <__muldf3>
  807e28:	d9401517 	ldw	r5,84(sp)
  807e2c:	d9001417 	ldw	r4,80(sp)
  807e30:	880f883a 	mov	r7,r17
  807e34:	000d883a 	mov	r6,zero
  807e38:	d8801a15 	stw	r2,104(sp)
  807e3c:	d8c01b15 	stw	r3,108(sp)
  807e40:	080369c0 	call	80369c <__muldf3>
  807e44:	180b883a 	mov	r5,r3
  807e48:	1009883a 	mov	r4,r2
  807e4c:	1823883a 	mov	r17,r3
  807e50:	1021883a 	mov	r16,r2
  807e54:	0803cf00 	call	803cf0 <__fixdfsi>
  807e58:	1009883a 	mov	r4,r2
  807e5c:	102b883a 	mov	r21,r2
  807e60:	0803bf80 	call	803bf8 <__floatsidf>
  807e64:	880b883a 	mov	r5,r17
  807e68:	8009883a 	mov	r4,r16
  807e6c:	180f883a 	mov	r7,r3
  807e70:	100d883a 	mov	r6,r2
  807e74:	08035a80 	call	8035a8 <__subdf3>
  807e78:	1021883a 	mov	r16,r2
  807e7c:	d9001b17 	ldw	r4,108(sp)
  807e80:	1823883a 	mov	r17,r3
  807e84:	dc001415 	stw	r16,80(sp)
  807e88:	ad400c04 	addi	r21,r21,48
  807e8c:	dc401515 	stw	r17,84(sp)
  807e90:	d8801a17 	ldw	r2,104(sp)
  807e94:	e5400005 	stb	r21,0(fp)
  807e98:	202f883a 	mov	r23,r4
  807e9c:	d9c01b17 	ldw	r7,108(sp)
  807ea0:	d9001417 	ldw	r4,80(sp)
  807ea4:	880b883a 	mov	r5,r17
  807ea8:	100d883a 	mov	r6,r2
  807eac:	102d883a 	mov	r22,r2
  807eb0:	e7000044 	addi	fp,fp,1
  807eb4:	080cce80 	call	80cce8 <__ltdf2>
  807eb8:	103fc30e 	bge	r2,zero,807dc8 <_dtoa_r+0x1064>
  807ebc:	d9000417 	ldw	r4,16(sp)
  807ec0:	d9000d15 	stw	r4,52(sp)
  807ec4:	003d7106 	br	80748c <_dtoa_r+0x728>
  807ec8:	d9801717 	ldw	r6,92(sp)
  807ecc:	00800084 	movi	r2,2
  807ed0:	11bde60e 	bge	r2,r6,80766c <_dtoa_r+0x908>
  807ed4:	203cfb1e 	bne	r4,zero,8072c4 <_dtoa_r+0x560>
  807ed8:	d9001617 	ldw	r4,88(sp)
  807edc:	900b883a 	mov	r5,r18
  807ee0:	01800144 	movi	r6,5
  807ee4:	000f883a 	mov	r7,zero
  807ee8:	080ac4c0 	call	80ac4c <__multadd>
  807eec:	d9000717 	ldw	r4,28(sp)
  807ef0:	100b883a 	mov	r5,r2
  807ef4:	1025883a 	mov	r18,r2
  807ef8:	080a0880 	call	80a088 <__mcmp>
  807efc:	00bcf10e 	bge	zero,r2,8072c4 <_dtoa_r+0x560>
  807f00:	d8c00d17 	ldw	r3,52(sp)
  807f04:	d9000517 	ldw	r4,20(sp)
  807f08:	d8000615 	stw	zero,24(sp)
  807f0c:	18c00044 	addi	r3,r3,1
  807f10:	d8c00d15 	stw	r3,52(sp)
  807f14:	00800c44 	movi	r2,49
  807f18:	27000044 	addi	fp,r4,1
  807f1c:	20800005 	stb	r2,0(r4)
  807f20:	003e8906 	br	807948 <_dtoa_r+0xbe4>
  807f24:	d8c00517 	ldw	r3,20(sp)
  807f28:	003bc206 	br	806e34 <_dtoa_r+0xd0>
  807f2c:	01802074 	movhi	r6,129
  807f30:	31bff604 	addi	r6,r6,-40
  807f34:	30c00917 	ldw	r3,36(r6)
  807f38:	30800817 	ldw	r2,32(r6)
  807f3c:	d9001217 	ldw	r4,72(sp)
  807f40:	d9401317 	ldw	r5,76(sp)
  807f44:	180f883a 	mov	r7,r3
  807f48:	100d883a 	mov	r6,r2
  807f4c:	080ca080 	call	80ca08 <__divdf3>
  807f50:	948003cc 	andi	r18,r18,15
  807f54:	058000c4 	movi	r22,3
  807f58:	1029883a 	mov	r20,r2
  807f5c:	182b883a 	mov	r21,r3
  807f60:	003c8906 	br	807188 <_dtoa_r+0x424>
  807f64:	d9001017 	ldw	r4,64(sp)
  807f68:	d9800917 	ldw	r6,36(sp)
  807f6c:	0025883a 	mov	r18,zero
  807f70:	1105c83a 	sub	r2,r2,r4
  807f74:	2089883a 	add	r4,r4,r2
  807f78:	308d883a 	add	r6,r6,r2
  807f7c:	d9001015 	stw	r4,64(sp)
  807f80:	d9800915 	stw	r6,36(sp)
  807f84:	003e3206 	br	807850 <_dtoa_r+0xaec>
  807f88:	28800044 	addi	r2,r5,1
  807f8c:	27000044 	addi	fp,r4,1
  807f90:	20800005 	stb	r2,0(r4)
  807f94:	003e6c06 	br	807948 <_dtoa_r+0xbe4>
  807f98:	d8800f17 	ldw	r2,60(sp)
  807f9c:	00bce016 	blt	zero,r2,807320 <_dtoa_r+0x5bc>
  807fa0:	d9800f17 	ldw	r6,60(sp)
  807fa4:	303cc51e 	bne	r6,zero,8072bc <_dtoa_r+0x558>
  807fa8:	0005883a 	mov	r2,zero
  807fac:	00d00534 	movhi	r3,16404
  807fb0:	980b883a 	mov	r5,r19
  807fb4:	180f883a 	mov	r7,r3
  807fb8:	9009883a 	mov	r4,r18
  807fbc:	100d883a 	mov	r6,r2
  807fc0:	080369c0 	call	80369c <__muldf3>
  807fc4:	180b883a 	mov	r5,r3
  807fc8:	a80f883a 	mov	r7,r21
  807fcc:	1009883a 	mov	r4,r2
  807fd0:	a00d883a 	mov	r6,r20
  807fd4:	0803b700 	call	803b70 <__gedf2>
  807fd8:	103cb80e 	bge	r2,zero,8072bc <_dtoa_r+0x558>
  807fdc:	0027883a 	mov	r19,zero
  807fe0:	0025883a 	mov	r18,zero
  807fe4:	003fc606 	br	807f00 <_dtoa_r+0x119c>
  807fe8:	99400117 	ldw	r5,4(r19)
  807fec:	d9001617 	ldw	r4,88(sp)
  807ff0:	080a4ac0 	call	80a4ac <_Balloc>
  807ff4:	99800417 	ldw	r6,16(r19)
  807ff8:	11000304 	addi	r4,r2,12
  807ffc:	99400304 	addi	r5,r19,12
  808000:	318d883a 	add	r6,r6,r6
  808004:	318d883a 	add	r6,r6,r6
  808008:	31800204 	addi	r6,r6,8
  80800c:	1023883a 	mov	r17,r2
  808010:	0809d140 	call	809d14 <memcpy>
  808014:	d9001617 	ldw	r4,88(sp)
  808018:	880b883a 	mov	r5,r17
  80801c:	01800044 	movi	r6,1
  808020:	080a8700 	call	80a870 <__lshift>
  808024:	100b883a 	mov	r5,r2
  808028:	003d9c06 	br	80769c <_dtoa_r+0x938>
  80802c:	00800e44 	movi	r2,57
  808030:	b8807026 	beq	r23,r2,8081f4 <_dtoa_r+0x1490>
  808034:	b8800044 	addi	r2,r23,1
  808038:	b7000044 	addi	fp,r22,1
  80803c:	b0800005 	stb	r2,0(r22)
  808040:	003e4106 	br	807948 <_dtoa_r+0xbe4>
  808044:	d8800317 	ldw	r2,12(sp)
  808048:	01802074 	movhi	r6,129
  80804c:	31bfc404 	addi	r6,r6,-240
  808050:	b009883a 	mov	r4,r22
  808054:	100e90fa 	slli	r7,r2,3
  808058:	b80b883a 	mov	r5,r23
  80805c:	398f883a 	add	r7,r7,r6
  808060:	38bffe17 	ldw	r2,-8(r7)
  808064:	d9800517 	ldw	r6,20(sp)
  808068:	38ffff17 	ldw	r3,-4(r7)
  80806c:	37000044 	addi	fp,r6,1
  808070:	180f883a 	mov	r7,r3
  808074:	100d883a 	mov	r6,r2
  808078:	080369c0 	call	80369c <__muldf3>
  80807c:	a80b883a 	mov	r5,r21
  808080:	a009883a 	mov	r4,r20
  808084:	182f883a 	mov	r23,r3
  808088:	102d883a 	mov	r22,r2
  80808c:	0803cf00 	call	803cf0 <__fixdfsi>
  808090:	1009883a 	mov	r4,r2
  808094:	1027883a 	mov	r19,r2
  808098:	0803bf80 	call	803bf8 <__floatsidf>
  80809c:	a80b883a 	mov	r5,r21
  8080a0:	a009883a 	mov	r4,r20
  8080a4:	180f883a 	mov	r7,r3
  8080a8:	100d883a 	mov	r6,r2
  8080ac:	08035a80 	call	8035a8 <__subdf3>
  8080b0:	180b883a 	mov	r5,r3
  8080b4:	d8c00517 	ldw	r3,20(sp)
  8080b8:	9cc00c04 	addi	r19,r19,48
  8080bc:	1009883a 	mov	r4,r2
  8080c0:	1cc00005 	stb	r19,0(r3)
  8080c4:	2021883a 	mov	r16,r4
  8080c8:	d9000317 	ldw	r4,12(sp)
  8080cc:	00800044 	movi	r2,1
  8080d0:	2823883a 	mov	r17,r5
  8080d4:	20802226 	beq	r4,r2,808160 <_dtoa_r+0x13fc>
  8080d8:	1029883a 	mov	r20,r2
  8080dc:	0005883a 	mov	r2,zero
  8080e0:	00d00934 	movhi	r3,16420
  8080e4:	180f883a 	mov	r7,r3
  8080e8:	100d883a 	mov	r6,r2
  8080ec:	880b883a 	mov	r5,r17
  8080f0:	8009883a 	mov	r4,r16
  8080f4:	080369c0 	call	80369c <__muldf3>
  8080f8:	180b883a 	mov	r5,r3
  8080fc:	1009883a 	mov	r4,r2
  808100:	1823883a 	mov	r17,r3
  808104:	1021883a 	mov	r16,r2
  808108:	0803cf00 	call	803cf0 <__fixdfsi>
  80810c:	1009883a 	mov	r4,r2
  808110:	102b883a 	mov	r21,r2
  808114:	0803bf80 	call	803bf8 <__floatsidf>
  808118:	880b883a 	mov	r5,r17
  80811c:	8009883a 	mov	r4,r16
  808120:	180f883a 	mov	r7,r3
  808124:	100d883a 	mov	r6,r2
  808128:	08035a80 	call	8035a8 <__subdf3>
  80812c:	180b883a 	mov	r5,r3
  808130:	d8c00517 	ldw	r3,20(sp)
  808134:	1009883a 	mov	r4,r2
  808138:	ad400c04 	addi	r21,r21,48
  80813c:	1d05883a 	add	r2,r3,r20
  808140:	15400005 	stb	r21,0(r2)
  808144:	2021883a 	mov	r16,r4
  808148:	d9000317 	ldw	r4,12(sp)
  80814c:	a5000044 	addi	r20,r20,1
  808150:	2823883a 	mov	r17,r5
  808154:	a13fe11e 	bne	r20,r4,8080dc <_dtoa_r+0x1378>
  808158:	e505883a 	add	r2,fp,r20
  80815c:	173fffc4 	addi	fp,r2,-1
  808160:	0025883a 	mov	r18,zero
  808164:	04cff834 	movhi	r19,16352
  808168:	b009883a 	mov	r4,r22
  80816c:	b80b883a 	mov	r5,r23
  808170:	900d883a 	mov	r6,r18
  808174:	980f883a 	mov	r7,r19
  808178:	08036280 	call	803628 <__adddf3>
  80817c:	180b883a 	mov	r5,r3
  808180:	1009883a 	mov	r4,r2
  808184:	800d883a 	mov	r6,r16
  808188:	880f883a 	mov	r7,r17
  80818c:	080cce80 	call	80cce8 <__ltdf2>
  808190:	103cab16 	blt	r2,zero,807440 <_dtoa_r+0x6dc>
  808194:	0009883a 	mov	r4,zero
  808198:	980b883a 	mov	r5,r19
  80819c:	b80f883a 	mov	r7,r23
  8081a0:	b00d883a 	mov	r6,r22
  8081a4:	08035a80 	call	8035a8 <__subdf3>
  8081a8:	180b883a 	mov	r5,r3
  8081ac:	880f883a 	mov	r7,r17
  8081b0:	1009883a 	mov	r4,r2
  8081b4:	800d883a 	mov	r6,r16
  8081b8:	0803ae80 	call	803ae8 <__gtdf2>
  8081bc:	00bc470e 	bge	zero,r2,8072dc <_dtoa_r+0x578>
  8081c0:	00c00c04 	movi	r3,48
  8081c4:	e73fffc4 	addi	fp,fp,-1
  8081c8:	e0800007 	ldb	r2,0(fp)
  8081cc:	10fffd26 	beq	r2,r3,8081c4 <_dtoa_r+0x1460>
  8081d0:	d9800417 	ldw	r6,16(sp)
  8081d4:	e7000044 	addi	fp,fp,1
  8081d8:	d9800d15 	stw	r6,52(sp)
  8081dc:	003cab06 	br	80748c <_dtoa_r+0x728>
  8081e0:	d8c00f17 	ldw	r3,60(sp)
  8081e4:	d9001117 	ldw	r4,68(sp)
  8081e8:	20e1c83a 	sub	r16,r4,r3
  8081ec:	0007883a 	mov	r3,zero
  8081f0:	003d9b06 	br	807860 <_dtoa_r+0xafc>
  8081f4:	00800e44 	movi	r2,57
  8081f8:	b0800005 	stb	r2,0(r22)
  8081fc:	b5800044 	addi	r22,r22,1
  808200:	003dc106 	br	807908 <_dtoa_r+0xba4>
  808204:	05800084 	movi	r22,2
  808208:	003bf706 	br	8071e8 <_dtoa_r+0x484>
  80820c:	d9000f17 	ldw	r4,60(sp)
  808210:	013c000e 	bge	zero,r4,807214 <_dtoa_r+0x4b0>
  808214:	d9800e17 	ldw	r6,56(sp)
  808218:	01bc300e 	bge	zero,r6,8072dc <_dtoa_r+0x578>
  80821c:	0005883a 	mov	r2,zero
  808220:	00d00934 	movhi	r3,16420
  808224:	a80b883a 	mov	r5,r21
  808228:	180f883a 	mov	r7,r3
  80822c:	a009883a 	mov	r4,r20
  808230:	100d883a 	mov	r6,r2
  808234:	080369c0 	call	80369c <__muldf3>
  808238:	b1000044 	addi	r4,r22,1
  80823c:	1021883a 	mov	r16,r2
  808240:	1823883a 	mov	r17,r3
  808244:	0803bf80 	call	803bf8 <__floatsidf>
  808248:	880b883a 	mov	r5,r17
  80824c:	8009883a 	mov	r4,r16
  808250:	180f883a 	mov	r7,r3
  808254:	100d883a 	mov	r6,r2
  808258:	080369c0 	call	80369c <__muldf3>
  80825c:	0011883a 	mov	r8,zero
  808260:	02500734 	movhi	r9,16412
  808264:	180b883a 	mov	r5,r3
  808268:	480f883a 	mov	r7,r9
  80826c:	1009883a 	mov	r4,r2
  808270:	400d883a 	mov	r6,r8
  808274:	08036280 	call	803628 <__adddf3>
  808278:	102d883a 	mov	r22,r2
  80827c:	00bf3034 	movhi	r2,64704
  808280:	10ef883a 	add	r23,r2,r3
  808284:	d8800d17 	ldw	r2,52(sp)
  808288:	d8c00e17 	ldw	r3,56(sp)
  80828c:	8029883a 	mov	r20,r16
  808290:	10bfffc4 	addi	r2,r2,-1
  808294:	882b883a 	mov	r21,r17
  808298:	d8800415 	stw	r2,16(sp)
  80829c:	d8c00315 	stw	r3,12(sp)
  8082a0:	003e8306 	br	807cb0 <_dtoa_r+0xf4c>
  8082a4:	d8800117 	ldw	r2,4(sp)
  8082a8:	dc001117 	ldw	r16,68(sp)
  8082ac:	dc801017 	ldw	r18,64(sp)
  8082b0:	00c00d84 	movi	r3,54
  8082b4:	1887c83a 	sub	r3,r3,r2
  8082b8:	003d6906 	br	807860 <_dtoa_r+0xafc>
  8082bc:	01800044 	movi	r6,1
  8082c0:	3021883a 	mov	r16,r6
  8082c4:	d9800f15 	stw	r6,60(sp)
  8082c8:	d9802615 	stw	r6,152(sp)
  8082cc:	d9800e15 	stw	r6,56(sp)
  8082d0:	003b9306 	br	807120 <_dtoa_r+0x3bc>
  8082d4:	b021883a 	mov	r16,r22
  8082d8:	dd800f15 	stw	r22,60(sp)
  8082dc:	003b9006 	br	807120 <_dtoa_r+0x3bc>
  8082e0:	103e221e 	bne	r2,zero,807b6c <_dtoa_r+0xe08>
  8082e4:	b880004c 	andi	r2,r23,1
  8082e8:	1005003a 	cmpeq	r2,r2,zero
  8082ec:	103e1f1e 	bne	r2,zero,807b6c <_dtoa_r+0xe08>
  8082f0:	003e1b06 	br	807b60 <_dtoa_r+0xdfc>
  8082f4:	d9001617 	ldw	r4,88(sp)
  8082f8:	980b883a 	mov	r5,r19
  8082fc:	01800284 	movi	r6,10
  808300:	000f883a 	mov	r7,zero
  808304:	080ac4c0 	call	80ac4c <__multadd>
  808308:	d8c00e17 	ldw	r3,56(sp)
  80830c:	1027883a 	mov	r19,r2
  808310:	d8c00f15 	stw	r3,60(sp)
  808314:	003cd306 	br	807664 <_dtoa_r+0x900>

00808318 <_fflush_r>:
  808318:	defffb04 	addi	sp,sp,-20
  80831c:	dcc00315 	stw	r19,12(sp)
  808320:	dc800215 	stw	r18,8(sp)
  808324:	dfc00415 	stw	ra,16(sp)
  808328:	dc400115 	stw	r17,4(sp)
  80832c:	dc000015 	stw	r16,0(sp)
  808330:	2027883a 	mov	r19,r4
  808334:	2825883a 	mov	r18,r5
  808338:	20000226 	beq	r4,zero,808344 <_fflush_r+0x2c>
  80833c:	20800e17 	ldw	r2,56(r4)
  808340:	10005626 	beq	r2,zero,80849c <_fflush_r+0x184>
  808344:	9100030b 	ldhu	r4,12(r18)
  808348:	20ffffcc 	andi	r3,r4,65535
  80834c:	18e0001c 	xori	r3,r3,32768
  808350:	18e00004 	addi	r3,r3,-32768
  808354:	1880020c 	andi	r2,r3,8
  808358:	1000261e 	bne	r2,zero,8083f4 <_fflush_r+0xdc>
  80835c:	90c00117 	ldw	r3,4(r18)
  808360:	20820014 	ori	r2,r4,2048
  808364:	9080030d 	sth	r2,12(r18)
  808368:	1009883a 	mov	r4,r2
  80836c:	00c0400e 	bge	zero,r3,808470 <_fflush_r+0x158>
  808370:	92000a17 	ldw	r8,40(r18)
  808374:	40004026 	beq	r8,zero,808478 <_fflush_r+0x160>
  808378:	2084000c 	andi	r2,r4,4096
  80837c:	10005326 	beq	r2,zero,8084cc <_fflush_r+0x1b4>
  808380:	94001417 	ldw	r16,80(r18)
  808384:	9080030b 	ldhu	r2,12(r18)
  808388:	1080010c 	andi	r2,r2,4
  80838c:	1000481e 	bne	r2,zero,8084b0 <_fflush_r+0x198>
  808390:	91400717 	ldw	r5,28(r18)
  808394:	9809883a 	mov	r4,r19
  808398:	800d883a 	mov	r6,r16
  80839c:	000f883a 	mov	r7,zero
  8083a0:	403ee83a 	callr	r8
  8083a4:	8080261e 	bne	r16,r2,808440 <_fflush_r+0x128>
  8083a8:	9080030b 	ldhu	r2,12(r18)
  8083ac:	91000417 	ldw	r4,16(r18)
  8083b0:	90000115 	stw	zero,4(r18)
  8083b4:	10bdffcc 	andi	r2,r2,63487
  8083b8:	10ffffcc 	andi	r3,r2,65535
  8083bc:	18c4000c 	andi	r3,r3,4096
  8083c0:	9080030d 	sth	r2,12(r18)
  8083c4:	91000015 	stw	r4,0(r18)
  8083c8:	18002b26 	beq	r3,zero,808478 <_fflush_r+0x160>
  8083cc:	0007883a 	mov	r3,zero
  8083d0:	1805883a 	mov	r2,r3
  8083d4:	94001415 	stw	r16,80(r18)
  8083d8:	dfc00417 	ldw	ra,16(sp)
  8083dc:	dcc00317 	ldw	r19,12(sp)
  8083e0:	dc800217 	ldw	r18,8(sp)
  8083e4:	dc400117 	ldw	r17,4(sp)
  8083e8:	dc000017 	ldw	r16,0(sp)
  8083ec:	dec00504 	addi	sp,sp,20
  8083f0:	f800283a 	ret
  8083f4:	94400417 	ldw	r17,16(r18)
  8083f8:	88001f26 	beq	r17,zero,808478 <_fflush_r+0x160>
  8083fc:	90800017 	ldw	r2,0(r18)
  808400:	18c000cc 	andi	r3,r3,3
  808404:	94400015 	stw	r17,0(r18)
  808408:	1461c83a 	sub	r16,r2,r17
  80840c:	18002526 	beq	r3,zero,8084a4 <_fflush_r+0x18c>
  808410:	0005883a 	mov	r2,zero
  808414:	90800215 	stw	r2,8(r18)
  808418:	0400170e 	bge	zero,r16,808478 <_fflush_r+0x160>
  80841c:	90c00917 	ldw	r3,36(r18)
  808420:	91400717 	ldw	r5,28(r18)
  808424:	880d883a 	mov	r6,r17
  808428:	800f883a 	mov	r7,r16
  80842c:	9809883a 	mov	r4,r19
  808430:	183ee83a 	callr	r3
  808434:	88a3883a 	add	r17,r17,r2
  808438:	80a1c83a 	sub	r16,r16,r2
  80843c:	00bff616 	blt	zero,r2,808418 <_fflush_r+0x100>
  808440:	9080030b 	ldhu	r2,12(r18)
  808444:	00ffffc4 	movi	r3,-1
  808448:	10801014 	ori	r2,r2,64
  80844c:	9080030d 	sth	r2,12(r18)
  808450:	1805883a 	mov	r2,r3
  808454:	dfc00417 	ldw	ra,16(sp)
  808458:	dcc00317 	ldw	r19,12(sp)
  80845c:	dc800217 	ldw	r18,8(sp)
  808460:	dc400117 	ldw	r17,4(sp)
  808464:	dc000017 	ldw	r16,0(sp)
  808468:	dec00504 	addi	sp,sp,20
  80846c:	f800283a 	ret
  808470:	90800f17 	ldw	r2,60(r18)
  808474:	00bfbe16 	blt	zero,r2,808370 <_fflush_r+0x58>
  808478:	0007883a 	mov	r3,zero
  80847c:	1805883a 	mov	r2,r3
  808480:	dfc00417 	ldw	ra,16(sp)
  808484:	dcc00317 	ldw	r19,12(sp)
  808488:	dc800217 	ldw	r18,8(sp)
  80848c:	dc400117 	ldw	r17,4(sp)
  808490:	dc000017 	ldw	r16,0(sp)
  808494:	dec00504 	addi	sp,sp,20
  808498:	f800283a 	ret
  80849c:	08085b00 	call	8085b0 <__sinit>
  8084a0:	003fa806 	br	808344 <_fflush_r+0x2c>
  8084a4:	90800517 	ldw	r2,20(r18)
  8084a8:	90800215 	stw	r2,8(r18)
  8084ac:	003fda06 	br	808418 <_fflush_r+0x100>
  8084b0:	90800117 	ldw	r2,4(r18)
  8084b4:	90c00c17 	ldw	r3,48(r18)
  8084b8:	80a1c83a 	sub	r16,r16,r2
  8084bc:	183fb426 	beq	r3,zero,808390 <_fflush_r+0x78>
  8084c0:	90800f17 	ldw	r2,60(r18)
  8084c4:	80a1c83a 	sub	r16,r16,r2
  8084c8:	003fb106 	br	808390 <_fflush_r+0x78>
  8084cc:	91400717 	ldw	r5,28(r18)
  8084d0:	9809883a 	mov	r4,r19
  8084d4:	000d883a 	mov	r6,zero
  8084d8:	01c00044 	movi	r7,1
  8084dc:	403ee83a 	callr	r8
  8084e0:	1021883a 	mov	r16,r2
  8084e4:	00bfffc4 	movi	r2,-1
  8084e8:	80800226 	beq	r16,r2,8084f4 <_fflush_r+0x1dc>
  8084ec:	92000a17 	ldw	r8,40(r18)
  8084f0:	003fa406 	br	808384 <_fflush_r+0x6c>
  8084f4:	98c00017 	ldw	r3,0(r19)
  8084f8:	00800744 	movi	r2,29
  8084fc:	18bfde26 	beq	r3,r2,808478 <_fflush_r+0x160>
  808500:	9080030b 	ldhu	r2,12(r18)
  808504:	8007883a 	mov	r3,r16
  808508:	10801014 	ori	r2,r2,64
  80850c:	9080030d 	sth	r2,12(r18)
  808510:	003fcf06 	br	808450 <_fflush_r+0x138>

00808514 <fflush>:
  808514:	01402074 	movhi	r5,129
  808518:	2960c604 	addi	r5,r5,-31976
  80851c:	2007883a 	mov	r3,r4
  808520:	20000526 	beq	r4,zero,808538 <fflush+0x24>
  808524:	00802074 	movhi	r2,129
  808528:	10869f04 	addi	r2,r2,6780
  80852c:	11000017 	ldw	r4,0(r2)
  808530:	180b883a 	mov	r5,r3
  808534:	08083181 	jmpi	808318 <_fflush_r>
  808538:	00802074 	movhi	r2,129
  80853c:	1086a004 	addi	r2,r2,6784
  808540:	11000017 	ldw	r4,0(r2)
  808544:	08091181 	jmpi	809118 <_fwalk_reent>

00808548 <std>:
  808548:	00802074 	movhi	r2,129
  80854c:	10ada304 	addi	r2,r2,-18804
  808550:	20800b15 	stw	r2,44(r4)
  808554:	00802074 	movhi	r2,129
  808558:	10adde04 	addi	r2,r2,-18568
  80855c:	20800815 	stw	r2,32(r4)
  808560:	00c02074 	movhi	r3,129
  808564:	18edbf04 	addi	r3,r3,-18692
  808568:	00802074 	movhi	r2,129
  80856c:	10ada504 	addi	r2,r2,-18796
  808570:	2140030d 	sth	r5,12(r4)
  808574:	2180038d 	sth	r6,14(r4)
  808578:	20c00915 	stw	r3,36(r4)
  80857c:	20800a15 	stw	r2,40(r4)
  808580:	20000015 	stw	zero,0(r4)
  808584:	20000115 	stw	zero,4(r4)
  808588:	20000215 	stw	zero,8(r4)
  80858c:	20000415 	stw	zero,16(r4)
  808590:	20000515 	stw	zero,20(r4)
  808594:	20000615 	stw	zero,24(r4)
  808598:	21000715 	stw	r4,28(r4)
  80859c:	f800283a 	ret

008085a0 <__sfp_lock_acquire>:
  8085a0:	f800283a 	ret

008085a4 <__sfp_lock_release>:
  8085a4:	f800283a 	ret

008085a8 <__sinit_lock_acquire>:
  8085a8:	f800283a 	ret

008085ac <__sinit_lock_release>:
  8085ac:	f800283a 	ret

008085b0 <__sinit>:
  8085b0:	20800e17 	ldw	r2,56(r4)
  8085b4:	defffd04 	addi	sp,sp,-12
  8085b8:	dc400115 	stw	r17,4(sp)
  8085bc:	dc000015 	stw	r16,0(sp)
  8085c0:	dfc00215 	stw	ra,8(sp)
  8085c4:	04400044 	movi	r17,1
  8085c8:	01400104 	movi	r5,4
  8085cc:	000d883a 	mov	r6,zero
  8085d0:	2021883a 	mov	r16,r4
  8085d4:	2200bb04 	addi	r8,r4,748
  8085d8:	200f883a 	mov	r7,r4
  8085dc:	10000526 	beq	r2,zero,8085f4 <__sinit+0x44>
  8085e0:	dfc00217 	ldw	ra,8(sp)
  8085e4:	dc400117 	ldw	r17,4(sp)
  8085e8:	dc000017 	ldw	r16,0(sp)
  8085ec:	dec00304 	addi	sp,sp,12
  8085f0:	f800283a 	ret
  8085f4:	21000117 	ldw	r4,4(r4)
  8085f8:	00802074 	movhi	r2,129
  8085fc:	10a1a504 	addi	r2,r2,-31084
  808600:	00c000c4 	movi	r3,3
  808604:	80800f15 	stw	r2,60(r16)
  808608:	80c0b915 	stw	r3,740(r16)
  80860c:	8200ba15 	stw	r8,744(r16)
  808610:	84400e15 	stw	r17,56(r16)
  808614:	8000b815 	stw	zero,736(r16)
  808618:	08085480 	call	808548 <std>
  80861c:	81000217 	ldw	r4,8(r16)
  808620:	880d883a 	mov	r6,r17
  808624:	800f883a 	mov	r7,r16
  808628:	01400284 	movi	r5,10
  80862c:	08085480 	call	808548 <std>
  808630:	81000317 	ldw	r4,12(r16)
  808634:	800f883a 	mov	r7,r16
  808638:	01400484 	movi	r5,18
  80863c:	01800084 	movi	r6,2
  808640:	dfc00217 	ldw	ra,8(sp)
  808644:	dc400117 	ldw	r17,4(sp)
  808648:	dc000017 	ldw	r16,0(sp)
  80864c:	dec00304 	addi	sp,sp,12
  808650:	08085481 	jmpi	808548 <std>

00808654 <__fp_lock>:
  808654:	0005883a 	mov	r2,zero
  808658:	f800283a 	ret

0080865c <__fp_unlock>:
  80865c:	0005883a 	mov	r2,zero
  808660:	f800283a 	ret

00808664 <__fp_unlock_all>:
  808664:	00802074 	movhi	r2,129
  808668:	10869f04 	addi	r2,r2,6780
  80866c:	11000017 	ldw	r4,0(r2)
  808670:	01402074 	movhi	r5,129
  808674:	29619704 	addi	r5,r5,-31140
  808678:	08091e01 	jmpi	8091e0 <_fwalk>

0080867c <__fp_lock_all>:
  80867c:	00802074 	movhi	r2,129
  808680:	10869f04 	addi	r2,r2,6780
  808684:	11000017 	ldw	r4,0(r2)
  808688:	01402074 	movhi	r5,129
  80868c:	29619504 	addi	r5,r5,-31148
  808690:	08091e01 	jmpi	8091e0 <_fwalk>

00808694 <_cleanup_r>:
  808694:	01402074 	movhi	r5,129
  808698:	296ed504 	addi	r5,r5,-17580
  80869c:	08091e01 	jmpi	8091e0 <_fwalk>

008086a0 <_cleanup>:
  8086a0:	00802074 	movhi	r2,129
  8086a4:	1086a004 	addi	r2,r2,6784
  8086a8:	11000017 	ldw	r4,0(r2)
  8086ac:	08086941 	jmpi	808694 <_cleanup_r>

008086b0 <__sfmoreglue>:
  8086b0:	defffc04 	addi	sp,sp,-16
  8086b4:	dc000015 	stw	r16,0(sp)
  8086b8:	2821883a 	mov	r16,r5
  8086bc:	dc400115 	stw	r17,4(sp)
  8086c0:	01401704 	movi	r5,92
  8086c4:	2023883a 	mov	r17,r4
  8086c8:	8009883a 	mov	r4,r16
  8086cc:	dfc00315 	stw	ra,12(sp)
  8086d0:	dcc00215 	stw	r19,8(sp)
  8086d4:	0803fc00 	call	803fc0 <__mulsi3>
  8086d8:	11400304 	addi	r5,r2,12
  8086dc:	8809883a 	mov	r4,r17
  8086e0:	1027883a 	mov	r19,r2
  8086e4:	08094f00 	call	8094f0 <_malloc_r>
  8086e8:	10c00304 	addi	r3,r2,12
  8086ec:	1023883a 	mov	r17,r2
  8086f0:	1809883a 	mov	r4,r3
  8086f4:	980d883a 	mov	r6,r19
  8086f8:	000b883a 	mov	r5,zero
  8086fc:	10000b26 	beq	r2,zero,80872c <__sfmoreglue+0x7c>
  808700:	14000115 	stw	r16,4(r2)
  808704:	10c00215 	stw	r3,8(r2)
  808708:	10000015 	stw	zero,0(r2)
  80870c:	0809e940 	call	809e94 <memset>
  808710:	8805883a 	mov	r2,r17
  808714:	dfc00317 	ldw	ra,12(sp)
  808718:	dcc00217 	ldw	r19,8(sp)
  80871c:	dc400117 	ldw	r17,4(sp)
  808720:	dc000017 	ldw	r16,0(sp)
  808724:	dec00404 	addi	sp,sp,16
  808728:	f800283a 	ret
  80872c:	0023883a 	mov	r17,zero
  808730:	8805883a 	mov	r2,r17
  808734:	dfc00317 	ldw	ra,12(sp)
  808738:	dcc00217 	ldw	r19,8(sp)
  80873c:	dc400117 	ldw	r17,4(sp)
  808740:	dc000017 	ldw	r16,0(sp)
  808744:	dec00404 	addi	sp,sp,16
  808748:	f800283a 	ret

0080874c <__sfp>:
  80874c:	defffd04 	addi	sp,sp,-12
  808750:	00802074 	movhi	r2,129
  808754:	1086a004 	addi	r2,r2,6784
  808758:	dc000015 	stw	r16,0(sp)
  80875c:	14000017 	ldw	r16,0(r2)
  808760:	dc400115 	stw	r17,4(sp)
  808764:	dfc00215 	stw	ra,8(sp)
  808768:	80800e17 	ldw	r2,56(r16)
  80876c:	2023883a 	mov	r17,r4
  808770:	10002626 	beq	r2,zero,80880c <__sfp+0xc0>
  808774:	8400b804 	addi	r16,r16,736
  808778:	80800117 	ldw	r2,4(r16)
  80877c:	81000217 	ldw	r4,8(r16)
  808780:	10ffffc4 	addi	r3,r2,-1
  808784:	18000916 	blt	r3,zero,8087ac <__sfp+0x60>
  808788:	2080030f 	ldh	r2,12(r4)
  80878c:	10000b26 	beq	r2,zero,8087bc <__sfp+0x70>
  808790:	017fffc4 	movi	r5,-1
  808794:	00000206 	br	8087a0 <__sfp+0x54>
  808798:	2080030f 	ldh	r2,12(r4)
  80879c:	10000726 	beq	r2,zero,8087bc <__sfp+0x70>
  8087a0:	18ffffc4 	addi	r3,r3,-1
  8087a4:	21001704 	addi	r4,r4,92
  8087a8:	197ffb1e 	bne	r3,r5,808798 <__sfp+0x4c>
  8087ac:	80800017 	ldw	r2,0(r16)
  8087b0:	10001926 	beq	r2,zero,808818 <__sfp+0xcc>
  8087b4:	1021883a 	mov	r16,r2
  8087b8:	003fef06 	br	808778 <__sfp+0x2c>
  8087bc:	00bfffc4 	movi	r2,-1
  8087c0:	00c00044 	movi	r3,1
  8087c4:	2080038d 	sth	r2,14(r4)
  8087c8:	20c0030d 	sth	r3,12(r4)
  8087cc:	20000015 	stw	zero,0(r4)
  8087d0:	20000215 	stw	zero,8(r4)
  8087d4:	20000115 	stw	zero,4(r4)
  8087d8:	20000415 	stw	zero,16(r4)
  8087dc:	20000515 	stw	zero,20(r4)
  8087e0:	20000615 	stw	zero,24(r4)
  8087e4:	20000c15 	stw	zero,48(r4)
  8087e8:	20000d15 	stw	zero,52(r4)
  8087ec:	20001115 	stw	zero,68(r4)
  8087f0:	20001215 	stw	zero,72(r4)
  8087f4:	2005883a 	mov	r2,r4
  8087f8:	dfc00217 	ldw	ra,8(sp)
  8087fc:	dc400117 	ldw	r17,4(sp)
  808800:	dc000017 	ldw	r16,0(sp)
  808804:	dec00304 	addi	sp,sp,12
  808808:	f800283a 	ret
  80880c:	8009883a 	mov	r4,r16
  808810:	08085b00 	call	8085b0 <__sinit>
  808814:	003fd706 	br	808774 <__sfp+0x28>
  808818:	8809883a 	mov	r4,r17
  80881c:	01400104 	movi	r5,4
  808820:	08086b00 	call	8086b0 <__sfmoreglue>
  808824:	80800015 	stw	r2,0(r16)
  808828:	103fe21e 	bne	r2,zero,8087b4 <__sfp+0x68>
  80882c:	00800304 	movi	r2,12
  808830:	0009883a 	mov	r4,zero
  808834:	88800015 	stw	r2,0(r17)
  808838:	003fee06 	br	8087f4 <__sfp+0xa8>

0080883c <_malloc_trim_r>:
  80883c:	defffb04 	addi	sp,sp,-20
  808840:	dcc00315 	stw	r19,12(sp)
  808844:	04c02074 	movhi	r19,129
  808848:	9cc11b04 	addi	r19,r19,1132
  80884c:	dc800215 	stw	r18,8(sp)
  808850:	dc400115 	stw	r17,4(sp)
  808854:	dc000015 	stw	r16,0(sp)
  808858:	2823883a 	mov	r17,r5
  80885c:	2025883a 	mov	r18,r4
  808860:	dfc00415 	stw	ra,16(sp)
  808864:	080d5980 	call	80d598 <__malloc_lock>
  808868:	98800217 	ldw	r2,8(r19)
  80886c:	9009883a 	mov	r4,r18
  808870:	000b883a 	mov	r5,zero
  808874:	10c00117 	ldw	r3,4(r2)
  808878:	00bfff04 	movi	r2,-4
  80887c:	18a0703a 	and	r16,r3,r2
  808880:	8463c83a 	sub	r17,r16,r17
  808884:	8c43fbc4 	addi	r17,r17,4079
  808888:	8822d33a 	srli	r17,r17,12
  80888c:	0083ffc4 	movi	r2,4095
  808890:	8c7fffc4 	addi	r17,r17,-1
  808894:	8822933a 	slli	r17,r17,12
  808898:	1440060e 	bge	r2,r17,8088b4 <_malloc_trim_r+0x78>
  80889c:	080b61c0 	call	80b61c <_sbrk_r>
  8088a0:	98c00217 	ldw	r3,8(r19)
  8088a4:	9009883a 	mov	r4,r18
  8088a8:	044bc83a 	sub	r5,zero,r17
  8088ac:	80c7883a 	add	r3,r16,r3
  8088b0:	10c00926 	beq	r2,r3,8088d8 <_malloc_trim_r+0x9c>
  8088b4:	080d5b80 	call	80d5b8 <__malloc_unlock>
  8088b8:	0005883a 	mov	r2,zero
  8088bc:	dfc00417 	ldw	ra,16(sp)
  8088c0:	dcc00317 	ldw	r19,12(sp)
  8088c4:	dc800217 	ldw	r18,8(sp)
  8088c8:	dc400117 	ldw	r17,4(sp)
  8088cc:	dc000017 	ldw	r16,0(sp)
  8088d0:	dec00504 	addi	sp,sp,20
  8088d4:	f800283a 	ret
  8088d8:	9009883a 	mov	r4,r18
  8088dc:	080b61c0 	call	80b61c <_sbrk_r>
  8088e0:	844dc83a 	sub	r6,r16,r17
  8088e4:	00ffffc4 	movi	r3,-1
  8088e8:	9009883a 	mov	r4,r18
  8088ec:	000b883a 	mov	r5,zero
  8088f0:	01c02074 	movhi	r7,129
  8088f4:	39cd5304 	addi	r7,r7,13644
  8088f8:	31800054 	ori	r6,r6,1
  8088fc:	10c00926 	beq	r2,r3,808924 <_malloc_trim_r+0xe8>
  808900:	38800017 	ldw	r2,0(r7)
  808904:	98c00217 	ldw	r3,8(r19)
  808908:	9009883a 	mov	r4,r18
  80890c:	1445c83a 	sub	r2,r2,r17
  808910:	38800015 	stw	r2,0(r7)
  808914:	19800115 	stw	r6,4(r3)
  808918:	080d5b80 	call	80d5b8 <__malloc_unlock>
  80891c:	00800044 	movi	r2,1
  808920:	003fe606 	br	8088bc <_malloc_trim_r+0x80>
  808924:	080b61c0 	call	80b61c <_sbrk_r>
  808928:	99800217 	ldw	r6,8(r19)
  80892c:	100f883a 	mov	r7,r2
  808930:	9009883a 	mov	r4,r18
  808934:	1187c83a 	sub	r3,r2,r6
  808938:	008003c4 	movi	r2,15
  80893c:	19400054 	ori	r5,r3,1
  808940:	10ffdc0e 	bge	r2,r3,8088b4 <_malloc_trim_r+0x78>
  808944:	00802074 	movhi	r2,129
  808948:	1086a404 	addi	r2,r2,6800
  80894c:	10c00017 	ldw	r3,0(r2)
  808950:	00802074 	movhi	r2,129
  808954:	108d5304 	addi	r2,r2,13644
  808958:	31400115 	stw	r5,4(r6)
  80895c:	38c7c83a 	sub	r3,r7,r3
  808960:	10c00015 	stw	r3,0(r2)
  808964:	003fd306 	br	8088b4 <_malloc_trim_r+0x78>

00808968 <_free_r>:
  808968:	defffd04 	addi	sp,sp,-12
  80896c:	dc400115 	stw	r17,4(sp)
  808970:	dc000015 	stw	r16,0(sp)
  808974:	dfc00215 	stw	ra,8(sp)
  808978:	2821883a 	mov	r16,r5
  80897c:	2023883a 	mov	r17,r4
  808980:	28005a26 	beq	r5,zero,808aec <_free_r+0x184>
  808984:	080d5980 	call	80d598 <__malloc_lock>
  808988:	823ffe04 	addi	r8,r16,-8
  80898c:	41400117 	ldw	r5,4(r8)
  808990:	00bfff84 	movi	r2,-2
  808994:	02802074 	movhi	r10,129
  808998:	52811b04 	addi	r10,r10,1132
  80899c:	288e703a 	and	r7,r5,r2
  8089a0:	41cd883a 	add	r6,r8,r7
  8089a4:	30c00117 	ldw	r3,4(r6)
  8089a8:	51000217 	ldw	r4,8(r10)
  8089ac:	00bfff04 	movi	r2,-4
  8089b0:	1892703a 	and	r9,r3,r2
  8089b4:	5017883a 	mov	r11,r10
  8089b8:	31006726 	beq	r6,r4,808b58 <_free_r+0x1f0>
  8089bc:	2880004c 	andi	r2,r5,1
  8089c0:	1005003a 	cmpeq	r2,r2,zero
  8089c4:	32400115 	stw	r9,4(r6)
  8089c8:	10001a1e 	bne	r2,zero,808a34 <_free_r+0xcc>
  8089cc:	000b883a 	mov	r5,zero
  8089d0:	3247883a 	add	r3,r6,r9
  8089d4:	18800117 	ldw	r2,4(r3)
  8089d8:	1080004c 	andi	r2,r2,1
  8089dc:	1000231e 	bne	r2,zero,808a6c <_free_r+0x104>
  8089e0:	280ac03a 	cmpne	r5,r5,zero
  8089e4:	3a4f883a 	add	r7,r7,r9
  8089e8:	2800451e 	bne	r5,zero,808b00 <_free_r+0x198>
  8089ec:	31000217 	ldw	r4,8(r6)
  8089f0:	00802074 	movhi	r2,129
  8089f4:	10811d04 	addi	r2,r2,1140
  8089f8:	20807b26 	beq	r4,r2,808be8 <_free_r+0x280>
  8089fc:	30800317 	ldw	r2,12(r6)
  808a00:	3a07883a 	add	r3,r7,r8
  808a04:	19c00015 	stw	r7,0(r3)
  808a08:	11000215 	stw	r4,8(r2)
  808a0c:	20800315 	stw	r2,12(r4)
  808a10:	38800054 	ori	r2,r7,1
  808a14:	40800115 	stw	r2,4(r8)
  808a18:	28001a26 	beq	r5,zero,808a84 <_free_r+0x11c>
  808a1c:	8809883a 	mov	r4,r17
  808a20:	dfc00217 	ldw	ra,8(sp)
  808a24:	dc400117 	ldw	r17,4(sp)
  808a28:	dc000017 	ldw	r16,0(sp)
  808a2c:	dec00304 	addi	sp,sp,12
  808a30:	080d5b81 	jmpi	80d5b8 <__malloc_unlock>
  808a34:	80bffe17 	ldw	r2,-8(r16)
  808a38:	50c00204 	addi	r3,r10,8
  808a3c:	4091c83a 	sub	r8,r8,r2
  808a40:	41000217 	ldw	r4,8(r8)
  808a44:	388f883a 	add	r7,r7,r2
  808a48:	20c06126 	beq	r4,r3,808bd0 <_free_r+0x268>
  808a4c:	40800317 	ldw	r2,12(r8)
  808a50:	3247883a 	add	r3,r6,r9
  808a54:	000b883a 	mov	r5,zero
  808a58:	11000215 	stw	r4,8(r2)
  808a5c:	20800315 	stw	r2,12(r4)
  808a60:	18800117 	ldw	r2,4(r3)
  808a64:	1080004c 	andi	r2,r2,1
  808a68:	103fdd26 	beq	r2,zero,8089e0 <_free_r+0x78>
  808a6c:	38800054 	ori	r2,r7,1
  808a70:	3a07883a 	add	r3,r7,r8
  808a74:	280ac03a 	cmpne	r5,r5,zero
  808a78:	40800115 	stw	r2,4(r8)
  808a7c:	19c00015 	stw	r7,0(r3)
  808a80:	283fe61e 	bne	r5,zero,808a1c <_free_r+0xb4>
  808a84:	00807fc4 	movi	r2,511
  808a88:	11c01f2e 	bgeu	r2,r7,808b08 <_free_r+0x1a0>
  808a8c:	3806d27a 	srli	r3,r7,9
  808a90:	1800481e 	bne	r3,zero,808bb4 <_free_r+0x24c>
  808a94:	3804d0fa 	srli	r2,r7,3
  808a98:	100690fa 	slli	r3,r2,3
  808a9c:	1acd883a 	add	r6,r3,r11
  808aa0:	31400217 	ldw	r5,8(r6)
  808aa4:	31405926 	beq	r6,r5,808c0c <_free_r+0x2a4>
  808aa8:	28800117 	ldw	r2,4(r5)
  808aac:	00ffff04 	movi	r3,-4
  808ab0:	10c4703a 	and	r2,r2,r3
  808ab4:	3880022e 	bgeu	r7,r2,808ac0 <_free_r+0x158>
  808ab8:	29400217 	ldw	r5,8(r5)
  808abc:	317ffa1e 	bne	r6,r5,808aa8 <_free_r+0x140>
  808ac0:	29800317 	ldw	r6,12(r5)
  808ac4:	41800315 	stw	r6,12(r8)
  808ac8:	41400215 	stw	r5,8(r8)
  808acc:	8809883a 	mov	r4,r17
  808ad0:	2a000315 	stw	r8,12(r5)
  808ad4:	32000215 	stw	r8,8(r6)
  808ad8:	dfc00217 	ldw	ra,8(sp)
  808adc:	dc400117 	ldw	r17,4(sp)
  808ae0:	dc000017 	ldw	r16,0(sp)
  808ae4:	dec00304 	addi	sp,sp,12
  808ae8:	080d5b81 	jmpi	80d5b8 <__malloc_unlock>
  808aec:	dfc00217 	ldw	ra,8(sp)
  808af0:	dc400117 	ldw	r17,4(sp)
  808af4:	dc000017 	ldw	r16,0(sp)
  808af8:	dec00304 	addi	sp,sp,12
  808afc:	f800283a 	ret
  808b00:	31000217 	ldw	r4,8(r6)
  808b04:	003fbd06 	br	8089fc <_free_r+0x94>
  808b08:	3806d0fa 	srli	r3,r7,3
  808b0c:	00800044 	movi	r2,1
  808b10:	51400117 	ldw	r5,4(r10)
  808b14:	180890fa 	slli	r4,r3,3
  808b18:	1807d0ba 	srai	r3,r3,2
  808b1c:	22c9883a 	add	r4,r4,r11
  808b20:	21800217 	ldw	r6,8(r4)
  808b24:	10c4983a 	sll	r2,r2,r3
  808b28:	41000315 	stw	r4,12(r8)
  808b2c:	41800215 	stw	r6,8(r8)
  808b30:	288ab03a 	or	r5,r5,r2
  808b34:	22000215 	stw	r8,8(r4)
  808b38:	8809883a 	mov	r4,r17
  808b3c:	51400115 	stw	r5,4(r10)
  808b40:	32000315 	stw	r8,12(r6)
  808b44:	dfc00217 	ldw	ra,8(sp)
  808b48:	dc400117 	ldw	r17,4(sp)
  808b4c:	dc000017 	ldw	r16,0(sp)
  808b50:	dec00304 	addi	sp,sp,12
  808b54:	080d5b81 	jmpi	80d5b8 <__malloc_unlock>
  808b58:	2880004c 	andi	r2,r5,1
  808b5c:	3a4d883a 	add	r6,r7,r9
  808b60:	1000071e 	bne	r2,zero,808b80 <_free_r+0x218>
  808b64:	80bffe17 	ldw	r2,-8(r16)
  808b68:	4091c83a 	sub	r8,r8,r2
  808b6c:	41000317 	ldw	r4,12(r8)
  808b70:	40c00217 	ldw	r3,8(r8)
  808b74:	308d883a 	add	r6,r6,r2
  808b78:	20c00215 	stw	r3,8(r4)
  808b7c:	19000315 	stw	r4,12(r3)
  808b80:	00802074 	movhi	r2,129
  808b84:	1086a304 	addi	r2,r2,6796
  808b88:	11000017 	ldw	r4,0(r2)
  808b8c:	30c00054 	ori	r3,r6,1
  808b90:	52000215 	stw	r8,8(r10)
  808b94:	40c00115 	stw	r3,4(r8)
  808b98:	313fa036 	bltu	r6,r4,808a1c <_free_r+0xb4>
  808b9c:	00802074 	movhi	r2,129
  808ba0:	108d4904 	addi	r2,r2,13604
  808ba4:	11400017 	ldw	r5,0(r2)
  808ba8:	8809883a 	mov	r4,r17
  808bac:	080883c0 	call	80883c <_malloc_trim_r>
  808bb0:	003f9a06 	br	808a1c <_free_r+0xb4>
  808bb4:	00800104 	movi	r2,4
  808bb8:	10c0072e 	bgeu	r2,r3,808bd8 <_free_r+0x270>
  808bbc:	00800504 	movi	r2,20
  808bc0:	10c01936 	bltu	r2,r3,808c28 <_free_r+0x2c0>
  808bc4:	188016c4 	addi	r2,r3,91
  808bc8:	100690fa 	slli	r3,r2,3
  808bcc:	003fb306 	br	808a9c <_free_r+0x134>
  808bd0:	01400044 	movi	r5,1
  808bd4:	003f7e06 	br	8089d0 <_free_r+0x68>
  808bd8:	3804d1ba 	srli	r2,r7,6
  808bdc:	10800e04 	addi	r2,r2,56
  808be0:	100690fa 	slli	r3,r2,3
  808be4:	003fad06 	br	808a9c <_free_r+0x134>
  808be8:	22000315 	stw	r8,12(r4)
  808bec:	22000215 	stw	r8,8(r4)
  808bf0:	3a05883a 	add	r2,r7,r8
  808bf4:	38c00054 	ori	r3,r7,1
  808bf8:	11c00015 	stw	r7,0(r2)
  808bfc:	41000215 	stw	r4,8(r8)
  808c00:	40c00115 	stw	r3,4(r8)
  808c04:	41000315 	stw	r4,12(r8)
  808c08:	003f8406 	br	808a1c <_free_r+0xb4>
  808c0c:	1005d0ba 	srai	r2,r2,2
  808c10:	00c00044 	movi	r3,1
  808c14:	51000117 	ldw	r4,4(r10)
  808c18:	1886983a 	sll	r3,r3,r2
  808c1c:	20c8b03a 	or	r4,r4,r3
  808c20:	51000115 	stw	r4,4(r10)
  808c24:	003fa706 	br	808ac4 <_free_r+0x15c>
  808c28:	00801504 	movi	r2,84
  808c2c:	10c00436 	bltu	r2,r3,808c40 <_free_r+0x2d8>
  808c30:	3804d33a 	srli	r2,r7,12
  808c34:	10801b84 	addi	r2,r2,110
  808c38:	100690fa 	slli	r3,r2,3
  808c3c:	003f9706 	br	808a9c <_free_r+0x134>
  808c40:	00805504 	movi	r2,340
  808c44:	10c00436 	bltu	r2,r3,808c58 <_free_r+0x2f0>
  808c48:	3804d3fa 	srli	r2,r7,15
  808c4c:	10801dc4 	addi	r2,r2,119
  808c50:	100690fa 	slli	r3,r2,3
  808c54:	003f9106 	br	808a9c <_free_r+0x134>
  808c58:	00815504 	movi	r2,1364
  808c5c:	10c0032e 	bgeu	r2,r3,808c6c <_free_r+0x304>
  808c60:	00801f84 	movi	r2,126
  808c64:	00c0fc04 	movi	r3,1008
  808c68:	003f8c06 	br	808a9c <_free_r+0x134>
  808c6c:	3804d4ba 	srli	r2,r7,18
  808c70:	10801f04 	addi	r2,r2,124
  808c74:	100690fa 	slli	r3,r2,3
  808c78:	003f8806 	br	808a9c <_free_r+0x134>

00808c7c <__sfvwrite_r>:
  808c7c:	30800217 	ldw	r2,8(r6)
  808c80:	defff504 	addi	sp,sp,-44
  808c84:	df000915 	stw	fp,36(sp)
  808c88:	dd800715 	stw	r22,28(sp)
  808c8c:	dc800315 	stw	r18,12(sp)
  808c90:	dfc00a15 	stw	ra,40(sp)
  808c94:	ddc00815 	stw	r23,32(sp)
  808c98:	dd400615 	stw	r21,24(sp)
  808c9c:	dd000515 	stw	r20,20(sp)
  808ca0:	dcc00415 	stw	r19,16(sp)
  808ca4:	dc400215 	stw	r17,8(sp)
  808ca8:	dc000115 	stw	r16,4(sp)
  808cac:	302d883a 	mov	r22,r6
  808cb0:	2039883a 	mov	fp,r4
  808cb4:	2825883a 	mov	r18,r5
  808cb8:	10001c26 	beq	r2,zero,808d2c <__sfvwrite_r+0xb0>
  808cbc:	29c0030b 	ldhu	r7,12(r5)
  808cc0:	3880020c 	andi	r2,r7,8
  808cc4:	10002726 	beq	r2,zero,808d64 <__sfvwrite_r+0xe8>
  808cc8:	28800417 	ldw	r2,16(r5)
  808ccc:	10002526 	beq	r2,zero,808d64 <__sfvwrite_r+0xe8>
  808cd0:	3880008c 	andi	r2,r7,2
  808cd4:	b5400017 	ldw	r21,0(r22)
  808cd8:	10002826 	beq	r2,zero,808d7c <__sfvwrite_r+0x100>
  808cdc:	0021883a 	mov	r16,zero
  808ce0:	0023883a 	mov	r17,zero
  808ce4:	880d883a 	mov	r6,r17
  808ce8:	e009883a 	mov	r4,fp
  808cec:	00810004 	movi	r2,1024
  808cf0:	80006e26 	beq	r16,zero,808eac <__sfvwrite_r+0x230>
  808cf4:	800f883a 	mov	r7,r16
  808cf8:	91400717 	ldw	r5,28(r18)
  808cfc:	1400012e 	bgeu	r2,r16,808d04 <__sfvwrite_r+0x88>
  808d00:	100f883a 	mov	r7,r2
  808d04:	90c00917 	ldw	r3,36(r18)
  808d08:	183ee83a 	callr	r3
  808d0c:	1007883a 	mov	r3,r2
  808d10:	80a1c83a 	sub	r16,r16,r2
  808d14:	88a3883a 	add	r17,r17,r2
  808d18:	00806d0e 	bge	zero,r2,808ed0 <__sfvwrite_r+0x254>
  808d1c:	b0800217 	ldw	r2,8(r22)
  808d20:	10c5c83a 	sub	r2,r2,r3
  808d24:	b0800215 	stw	r2,8(r22)
  808d28:	103fee1e 	bne	r2,zero,808ce4 <__sfvwrite_r+0x68>
  808d2c:	0009883a 	mov	r4,zero
  808d30:	2005883a 	mov	r2,r4
  808d34:	dfc00a17 	ldw	ra,40(sp)
  808d38:	df000917 	ldw	fp,36(sp)
  808d3c:	ddc00817 	ldw	r23,32(sp)
  808d40:	dd800717 	ldw	r22,28(sp)
  808d44:	dd400617 	ldw	r21,24(sp)
  808d48:	dd000517 	ldw	r20,20(sp)
  808d4c:	dcc00417 	ldw	r19,16(sp)
  808d50:	dc800317 	ldw	r18,12(sp)
  808d54:	dc400217 	ldw	r17,8(sp)
  808d58:	dc000117 	ldw	r16,4(sp)
  808d5c:	dec00b04 	addi	sp,sp,44
  808d60:	f800283a 	ret
  808d64:	08069e40 	call	8069e4 <__swsetup_r>
  808d68:	1000e41e 	bne	r2,zero,8090fc <__sfvwrite_r+0x480>
  808d6c:	91c0030b 	ldhu	r7,12(r18)
  808d70:	b5400017 	ldw	r21,0(r22)
  808d74:	3880008c 	andi	r2,r7,2
  808d78:	103fd81e 	bne	r2,zero,808cdc <__sfvwrite_r+0x60>
  808d7c:	3880004c 	andi	r2,r7,1
  808d80:	1005003a 	cmpeq	r2,r2,zero
  808d84:	10005726 	beq	r2,zero,808ee4 <__sfvwrite_r+0x268>
  808d88:	0029883a 	mov	r20,zero
  808d8c:	002f883a 	mov	r23,zero
  808d90:	a0004226 	beq	r20,zero,808e9c <__sfvwrite_r+0x220>
  808d94:	3880800c 	andi	r2,r7,512
  808d98:	94000217 	ldw	r16,8(r18)
  808d9c:	10008b26 	beq	r2,zero,808fcc <__sfvwrite_r+0x350>
  808da0:	800d883a 	mov	r6,r16
  808da4:	a400a536 	bltu	r20,r16,80903c <__sfvwrite_r+0x3c0>
  808da8:	3881200c 	andi	r2,r7,1152
  808dac:	10002726 	beq	r2,zero,808e4c <__sfvwrite_r+0x1d0>
  808db0:	90800517 	ldw	r2,20(r18)
  808db4:	92000417 	ldw	r8,16(r18)
  808db8:	91400017 	ldw	r5,0(r18)
  808dbc:	1087883a 	add	r3,r2,r2
  808dc0:	1887883a 	add	r3,r3,r2
  808dc4:	1808d7fa 	srli	r4,r3,31
  808dc8:	2a21c83a 	sub	r16,r5,r8
  808dcc:	80800044 	addi	r2,r16,1
  808dd0:	20c9883a 	add	r4,r4,r3
  808dd4:	2027d07a 	srai	r19,r4,1
  808dd8:	a085883a 	add	r2,r20,r2
  808ddc:	980d883a 	mov	r6,r19
  808de0:	9880022e 	bgeu	r19,r2,808dec <__sfvwrite_r+0x170>
  808de4:	1027883a 	mov	r19,r2
  808de8:	100d883a 	mov	r6,r2
  808dec:	3881000c 	andi	r2,r7,1024
  808df0:	1000b826 	beq	r2,zero,8090d4 <__sfvwrite_r+0x458>
  808df4:	300b883a 	mov	r5,r6
  808df8:	e009883a 	mov	r4,fp
  808dfc:	08094f00 	call	8094f0 <_malloc_r>
  808e00:	10003126 	beq	r2,zero,808ec8 <__sfvwrite_r+0x24c>
  808e04:	91400417 	ldw	r5,16(r18)
  808e08:	1009883a 	mov	r4,r2
  808e0c:	800d883a 	mov	r6,r16
  808e10:	1023883a 	mov	r17,r2
  808e14:	0809d140 	call	809d14 <memcpy>
  808e18:	90c0030b 	ldhu	r3,12(r18)
  808e1c:	00beffc4 	movi	r2,-1025
  808e20:	1886703a 	and	r3,r3,r2
  808e24:	18c02014 	ori	r3,r3,128
  808e28:	90c0030d 	sth	r3,12(r18)
  808e2c:	9c07c83a 	sub	r3,r19,r16
  808e30:	8c05883a 	add	r2,r17,r16
  808e34:	a00d883a 	mov	r6,r20
  808e38:	a021883a 	mov	r16,r20
  808e3c:	90800015 	stw	r2,0(r18)
  808e40:	90c00215 	stw	r3,8(r18)
  808e44:	94400415 	stw	r17,16(r18)
  808e48:	94c00515 	stw	r19,20(r18)
  808e4c:	91000017 	ldw	r4,0(r18)
  808e50:	b80b883a 	mov	r5,r23
  808e54:	a023883a 	mov	r17,r20
  808e58:	0809db40 	call	809db4 <memmove>
  808e5c:	90c00217 	ldw	r3,8(r18)
  808e60:	90800017 	ldw	r2,0(r18)
  808e64:	a027883a 	mov	r19,r20
  808e68:	1c07c83a 	sub	r3,r3,r16
  808e6c:	1405883a 	add	r2,r2,r16
  808e70:	90c00215 	stw	r3,8(r18)
  808e74:	a021883a 	mov	r16,r20
  808e78:	90800015 	stw	r2,0(r18)
  808e7c:	b0800217 	ldw	r2,8(r22)
  808e80:	1405c83a 	sub	r2,r2,r16
  808e84:	b0800215 	stw	r2,8(r22)
  808e88:	103fa826 	beq	r2,zero,808d2c <__sfvwrite_r+0xb0>
  808e8c:	a469c83a 	sub	r20,r20,r17
  808e90:	91c0030b 	ldhu	r7,12(r18)
  808e94:	bcef883a 	add	r23,r23,r19
  808e98:	a03fbe1e 	bne	r20,zero,808d94 <__sfvwrite_r+0x118>
  808e9c:	adc00017 	ldw	r23,0(r21)
  808ea0:	ad000117 	ldw	r20,4(r21)
  808ea4:	ad400204 	addi	r21,r21,8
  808ea8:	003fb906 	br	808d90 <__sfvwrite_r+0x114>
  808eac:	ac400017 	ldw	r17,0(r21)
  808eb0:	ac000117 	ldw	r16,4(r21)
  808eb4:	ad400204 	addi	r21,r21,8
  808eb8:	003f8a06 	br	808ce4 <__sfvwrite_r+0x68>
  808ebc:	91400417 	ldw	r5,16(r18)
  808ec0:	e009883a 	mov	r4,fp
  808ec4:	08089680 	call	808968 <_free_r>
  808ec8:	00800304 	movi	r2,12
  808ecc:	e0800015 	stw	r2,0(fp)
  808ed0:	9080030b 	ldhu	r2,12(r18)
  808ed4:	013fffc4 	movi	r4,-1
  808ed8:	10801014 	ori	r2,r2,64
  808edc:	9080030d 	sth	r2,12(r18)
  808ee0:	003f9306 	br	808d30 <__sfvwrite_r+0xb4>
  808ee4:	0027883a 	mov	r19,zero
  808ee8:	002f883a 	mov	r23,zero
  808eec:	d8000015 	stw	zero,0(sp)
  808ef0:	0029883a 	mov	r20,zero
  808ef4:	98001e26 	beq	r19,zero,808f70 <__sfvwrite_r+0x2f4>
  808ef8:	d8c00017 	ldw	r3,0(sp)
  808efc:	1804c03a 	cmpne	r2,r3,zero
  808f00:	10005e26 	beq	r2,zero,80907c <__sfvwrite_r+0x400>
  808f04:	9821883a 	mov	r16,r19
  808f08:	a4c0012e 	bgeu	r20,r19,808f10 <__sfvwrite_r+0x294>
  808f0c:	a021883a 	mov	r16,r20
  808f10:	91000017 	ldw	r4,0(r18)
  808f14:	90800417 	ldw	r2,16(r18)
  808f18:	91800217 	ldw	r6,8(r18)
  808f1c:	91c00517 	ldw	r7,20(r18)
  808f20:	1100022e 	bgeu	r2,r4,808f2c <__sfvwrite_r+0x2b0>
  808f24:	31e3883a 	add	r17,r6,r7
  808f28:	8c001616 	blt	r17,r16,808f84 <__sfvwrite_r+0x308>
  808f2c:	81c03816 	blt	r16,r7,809010 <__sfvwrite_r+0x394>
  808f30:	90c00917 	ldw	r3,36(r18)
  808f34:	91400717 	ldw	r5,28(r18)
  808f38:	e009883a 	mov	r4,fp
  808f3c:	b80d883a 	mov	r6,r23
  808f40:	183ee83a 	callr	r3
  808f44:	1023883a 	mov	r17,r2
  808f48:	00bfe10e 	bge	zero,r2,808ed0 <__sfvwrite_r+0x254>
  808f4c:	a469c83a 	sub	r20,r20,r17
  808f50:	a0001826 	beq	r20,zero,808fb4 <__sfvwrite_r+0x338>
  808f54:	b0800217 	ldw	r2,8(r22)
  808f58:	1445c83a 	sub	r2,r2,r17
  808f5c:	b0800215 	stw	r2,8(r22)
  808f60:	103f7226 	beq	r2,zero,808d2c <__sfvwrite_r+0xb0>
  808f64:	9c67c83a 	sub	r19,r19,r17
  808f68:	bc6f883a 	add	r23,r23,r17
  808f6c:	983fe21e 	bne	r19,zero,808ef8 <__sfvwrite_r+0x27c>
  808f70:	adc00017 	ldw	r23,0(r21)
  808f74:	acc00117 	ldw	r19,4(r21)
  808f78:	ad400204 	addi	r21,r21,8
  808f7c:	d8000015 	stw	zero,0(sp)
  808f80:	003fdc06 	br	808ef4 <__sfvwrite_r+0x278>
  808f84:	b80b883a 	mov	r5,r23
  808f88:	880d883a 	mov	r6,r17
  808f8c:	0809db40 	call	809db4 <memmove>
  808f90:	90c00017 	ldw	r3,0(r18)
  808f94:	e009883a 	mov	r4,fp
  808f98:	900b883a 	mov	r5,r18
  808f9c:	1c47883a 	add	r3,r3,r17
  808fa0:	90c00015 	stw	r3,0(r18)
  808fa4:	08083180 	call	808318 <_fflush_r>
  808fa8:	103fc91e 	bne	r2,zero,808ed0 <__sfvwrite_r+0x254>
  808fac:	a469c83a 	sub	r20,r20,r17
  808fb0:	a03fe81e 	bne	r20,zero,808f54 <__sfvwrite_r+0x2d8>
  808fb4:	e009883a 	mov	r4,fp
  808fb8:	900b883a 	mov	r5,r18
  808fbc:	08083180 	call	808318 <_fflush_r>
  808fc0:	103fc31e 	bne	r2,zero,808ed0 <__sfvwrite_r+0x254>
  808fc4:	d8000015 	stw	zero,0(sp)
  808fc8:	003fe206 	br	808f54 <__sfvwrite_r+0x2d8>
  808fcc:	91000017 	ldw	r4,0(r18)
  808fd0:	90800417 	ldw	r2,16(r18)
  808fd4:	1100022e 	bgeu	r2,r4,808fe0 <__sfvwrite_r+0x364>
  808fd8:	8023883a 	mov	r17,r16
  808fdc:	85003136 	bltu	r16,r20,8090a4 <__sfvwrite_r+0x428>
  808fe0:	91c00517 	ldw	r7,20(r18)
  808fe4:	a1c01836 	bltu	r20,r7,809048 <__sfvwrite_r+0x3cc>
  808fe8:	90c00917 	ldw	r3,36(r18)
  808fec:	91400717 	ldw	r5,28(r18)
  808ff0:	e009883a 	mov	r4,fp
  808ff4:	b80d883a 	mov	r6,r23
  808ff8:	183ee83a 	callr	r3
  808ffc:	1021883a 	mov	r16,r2
  809000:	00bfb30e 	bge	zero,r2,808ed0 <__sfvwrite_r+0x254>
  809004:	1023883a 	mov	r17,r2
  809008:	1027883a 	mov	r19,r2
  80900c:	003f9b06 	br	808e7c <__sfvwrite_r+0x200>
  809010:	b80b883a 	mov	r5,r23
  809014:	800d883a 	mov	r6,r16
  809018:	0809db40 	call	809db4 <memmove>
  80901c:	90c00217 	ldw	r3,8(r18)
  809020:	90800017 	ldw	r2,0(r18)
  809024:	8023883a 	mov	r17,r16
  809028:	1c07c83a 	sub	r3,r3,r16
  80902c:	1405883a 	add	r2,r2,r16
  809030:	90c00215 	stw	r3,8(r18)
  809034:	90800015 	stw	r2,0(r18)
  809038:	003fc406 	br	808f4c <__sfvwrite_r+0x2d0>
  80903c:	a00d883a 	mov	r6,r20
  809040:	a021883a 	mov	r16,r20
  809044:	003f8106 	br	808e4c <__sfvwrite_r+0x1d0>
  809048:	b80b883a 	mov	r5,r23
  80904c:	a00d883a 	mov	r6,r20
  809050:	0809db40 	call	809db4 <memmove>
  809054:	90c00217 	ldw	r3,8(r18)
  809058:	90800017 	ldw	r2,0(r18)
  80905c:	a021883a 	mov	r16,r20
  809060:	1d07c83a 	sub	r3,r3,r20
  809064:	1505883a 	add	r2,r2,r20
  809068:	a023883a 	mov	r17,r20
  80906c:	a027883a 	mov	r19,r20
  809070:	90c00215 	stw	r3,8(r18)
  809074:	90800015 	stw	r2,0(r18)
  809078:	003f8006 	br	808e7c <__sfvwrite_r+0x200>
  80907c:	b809883a 	mov	r4,r23
  809080:	01400284 	movi	r5,10
  809084:	980d883a 	mov	r6,r19
  809088:	0809c300 	call	809c30 <memchr>
  80908c:	10001726 	beq	r2,zero,8090ec <__sfvwrite_r+0x470>
  809090:	15c5c83a 	sub	r2,r2,r23
  809094:	15000044 	addi	r20,r2,1
  809098:	00800044 	movi	r2,1
  80909c:	d8800015 	stw	r2,0(sp)
  8090a0:	003f9806 	br	808f04 <__sfvwrite_r+0x288>
  8090a4:	b80b883a 	mov	r5,r23
  8090a8:	800d883a 	mov	r6,r16
  8090ac:	0809db40 	call	809db4 <memmove>
  8090b0:	90c00017 	ldw	r3,0(r18)
  8090b4:	e009883a 	mov	r4,fp
  8090b8:	900b883a 	mov	r5,r18
  8090bc:	1c07883a 	add	r3,r3,r16
  8090c0:	90c00015 	stw	r3,0(r18)
  8090c4:	8027883a 	mov	r19,r16
  8090c8:	08083180 	call	808318 <_fflush_r>
  8090cc:	103f6b26 	beq	r2,zero,808e7c <__sfvwrite_r+0x200>
  8090d0:	003f7f06 	br	808ed0 <__sfvwrite_r+0x254>
  8090d4:	400b883a 	mov	r5,r8
  8090d8:	e009883a 	mov	r4,fp
  8090dc:	080afb80 	call	80afb8 <_realloc_r>
  8090e0:	103f7626 	beq	r2,zero,808ebc <__sfvwrite_r+0x240>
  8090e4:	1023883a 	mov	r17,r2
  8090e8:	003f5006 	br	808e2c <__sfvwrite_r+0x1b0>
  8090ec:	00c00044 	movi	r3,1
  8090f0:	9d000044 	addi	r20,r19,1
  8090f4:	d8c00015 	stw	r3,0(sp)
  8090f8:	003f8206 	br	808f04 <__sfvwrite_r+0x288>
  8090fc:	9080030b 	ldhu	r2,12(r18)
  809100:	00c00244 	movi	r3,9
  809104:	013fffc4 	movi	r4,-1
  809108:	10801014 	ori	r2,r2,64
  80910c:	9080030d 	sth	r2,12(r18)
  809110:	e0c00015 	stw	r3,0(fp)
  809114:	003f0606 	br	808d30 <__sfvwrite_r+0xb4>

00809118 <_fwalk_reent>:
  809118:	defff704 	addi	sp,sp,-36
  80911c:	dcc00315 	stw	r19,12(sp)
  809120:	24c0b804 	addi	r19,r4,736
  809124:	dd800615 	stw	r22,24(sp)
  809128:	dd400515 	stw	r21,20(sp)
  80912c:	dfc00815 	stw	ra,32(sp)
  809130:	ddc00715 	stw	r23,28(sp)
  809134:	dd000415 	stw	r20,16(sp)
  809138:	dc800215 	stw	r18,8(sp)
  80913c:	dc400115 	stw	r17,4(sp)
  809140:	dc000015 	stw	r16,0(sp)
  809144:	202b883a 	mov	r21,r4
  809148:	282d883a 	mov	r22,r5
  80914c:	08085a00 	call	8085a0 <__sfp_lock_acquire>
  809150:	98002126 	beq	r19,zero,8091d8 <_fwalk_reent+0xc0>
  809154:	002f883a 	mov	r23,zero
  809158:	9c800117 	ldw	r18,4(r19)
  80915c:	9c000217 	ldw	r16,8(r19)
  809160:	90bfffc4 	addi	r2,r18,-1
  809164:	10000d16 	blt	r2,zero,80919c <_fwalk_reent+0x84>
  809168:	0023883a 	mov	r17,zero
  80916c:	053fffc4 	movi	r20,-1
  809170:	8080030f 	ldh	r2,12(r16)
  809174:	8c400044 	addi	r17,r17,1
  809178:	10000626 	beq	r2,zero,809194 <_fwalk_reent+0x7c>
  80917c:	8080038f 	ldh	r2,14(r16)
  809180:	800b883a 	mov	r5,r16
  809184:	a809883a 	mov	r4,r21
  809188:	15000226 	beq	r2,r20,809194 <_fwalk_reent+0x7c>
  80918c:	b03ee83a 	callr	r22
  809190:	b8aeb03a 	or	r23,r23,r2
  809194:	84001704 	addi	r16,r16,92
  809198:	947ff51e 	bne	r18,r17,809170 <_fwalk_reent+0x58>
  80919c:	9cc00017 	ldw	r19,0(r19)
  8091a0:	983fed1e 	bne	r19,zero,809158 <_fwalk_reent+0x40>
  8091a4:	08085a40 	call	8085a4 <__sfp_lock_release>
  8091a8:	b805883a 	mov	r2,r23
  8091ac:	dfc00817 	ldw	ra,32(sp)
  8091b0:	ddc00717 	ldw	r23,28(sp)
  8091b4:	dd800617 	ldw	r22,24(sp)
  8091b8:	dd400517 	ldw	r21,20(sp)
  8091bc:	dd000417 	ldw	r20,16(sp)
  8091c0:	dcc00317 	ldw	r19,12(sp)
  8091c4:	dc800217 	ldw	r18,8(sp)
  8091c8:	dc400117 	ldw	r17,4(sp)
  8091cc:	dc000017 	ldw	r16,0(sp)
  8091d0:	dec00904 	addi	sp,sp,36
  8091d4:	f800283a 	ret
  8091d8:	002f883a 	mov	r23,zero
  8091dc:	003ff106 	br	8091a4 <_fwalk_reent+0x8c>

008091e0 <_fwalk>:
  8091e0:	defff804 	addi	sp,sp,-32
  8091e4:	dcc00315 	stw	r19,12(sp)
  8091e8:	24c0b804 	addi	r19,r4,736
  8091ec:	dd400515 	stw	r21,20(sp)
  8091f0:	dfc00715 	stw	ra,28(sp)
  8091f4:	dd800615 	stw	r22,24(sp)
  8091f8:	dd000415 	stw	r20,16(sp)
  8091fc:	dc800215 	stw	r18,8(sp)
  809200:	dc400115 	stw	r17,4(sp)
  809204:	dc000015 	stw	r16,0(sp)
  809208:	282b883a 	mov	r21,r5
  80920c:	08085a00 	call	8085a0 <__sfp_lock_acquire>
  809210:	98001f26 	beq	r19,zero,809290 <_fwalk+0xb0>
  809214:	002d883a 	mov	r22,zero
  809218:	9c800117 	ldw	r18,4(r19)
  80921c:	9c000217 	ldw	r16,8(r19)
  809220:	90bfffc4 	addi	r2,r18,-1
  809224:	10000c16 	blt	r2,zero,809258 <_fwalk+0x78>
  809228:	0023883a 	mov	r17,zero
  80922c:	053fffc4 	movi	r20,-1
  809230:	8080030f 	ldh	r2,12(r16)
  809234:	8c400044 	addi	r17,r17,1
  809238:	10000526 	beq	r2,zero,809250 <_fwalk+0x70>
  80923c:	8080038f 	ldh	r2,14(r16)
  809240:	8009883a 	mov	r4,r16
  809244:	15000226 	beq	r2,r20,809250 <_fwalk+0x70>
  809248:	a83ee83a 	callr	r21
  80924c:	b0acb03a 	or	r22,r22,r2
  809250:	84001704 	addi	r16,r16,92
  809254:	947ff61e 	bne	r18,r17,809230 <_fwalk+0x50>
  809258:	9cc00017 	ldw	r19,0(r19)
  80925c:	983fee1e 	bne	r19,zero,809218 <_fwalk+0x38>
  809260:	08085a40 	call	8085a4 <__sfp_lock_release>
  809264:	b005883a 	mov	r2,r22
  809268:	dfc00717 	ldw	ra,28(sp)
  80926c:	dd800617 	ldw	r22,24(sp)
  809270:	dd400517 	ldw	r21,20(sp)
  809274:	dd000417 	ldw	r20,16(sp)
  809278:	dcc00317 	ldw	r19,12(sp)
  80927c:	dc800217 	ldw	r18,8(sp)
  809280:	dc400117 	ldw	r17,4(sp)
  809284:	dc000017 	ldw	r16,0(sp)
  809288:	dec00804 	addi	sp,sp,32
  80928c:	f800283a 	ret
  809290:	002d883a 	mov	r22,zero
  809294:	003ff206 	br	809260 <_fwalk+0x80>

00809298 <__locale_charset>:
  809298:	d0a00317 	ldw	r2,-32756(gp)
  80929c:	f800283a 	ret

008092a0 <_localeconv_r>:
  8092a0:	00802074 	movhi	r2,129
  8092a4:	10bfb804 	addi	r2,r2,-288
  8092a8:	f800283a 	ret

008092ac <localeconv>:
  8092ac:	00802074 	movhi	r2,129
  8092b0:	10869f04 	addi	r2,r2,6780
  8092b4:	11000017 	ldw	r4,0(r2)
  8092b8:	08092a01 	jmpi	8092a0 <_localeconv_r>

008092bc <_setlocale_r>:
  8092bc:	defffc04 	addi	sp,sp,-16
  8092c0:	00c02074 	movhi	r3,129
  8092c4:	18ffb304 	addi	r3,r3,-308
  8092c8:	dc800215 	stw	r18,8(sp)
  8092cc:	dc400115 	stw	r17,4(sp)
  8092d0:	dc000015 	stw	r16,0(sp)
  8092d4:	2023883a 	mov	r17,r4
  8092d8:	2825883a 	mov	r18,r5
  8092dc:	dfc00315 	stw	ra,12(sp)
  8092e0:	3021883a 	mov	r16,r6
  8092e4:	3009883a 	mov	r4,r6
  8092e8:	180b883a 	mov	r5,r3
  8092ec:	30000926 	beq	r6,zero,809314 <_setlocale_r+0x58>
  8092f0:	080b7d80 	call	80b7d8 <strcmp>
  8092f4:	8009883a 	mov	r4,r16
  8092f8:	01402074 	movhi	r5,129
  8092fc:	297f9e04 	addi	r5,r5,-392
  809300:	10000b1e 	bne	r2,zero,809330 <_setlocale_r+0x74>
  809304:	8c000d15 	stw	r16,52(r17)
  809308:	8c800c15 	stw	r18,48(r17)
  80930c:	00c02074 	movhi	r3,129
  809310:	18ffb304 	addi	r3,r3,-308
  809314:	1805883a 	mov	r2,r3
  809318:	dfc00317 	ldw	ra,12(sp)
  80931c:	dc800217 	ldw	r18,8(sp)
  809320:	dc400117 	ldw	r17,4(sp)
  809324:	dc000017 	ldw	r16,0(sp)
  809328:	dec00404 	addi	sp,sp,16
  80932c:	f800283a 	ret
  809330:	080b7d80 	call	80b7d8 <strcmp>
  809334:	0007883a 	mov	r3,zero
  809338:	103ff226 	beq	r2,zero,809304 <_setlocale_r+0x48>
  80933c:	003ff506 	br	809314 <_setlocale_r+0x58>

00809340 <setlocale>:
  809340:	01802074 	movhi	r6,129
  809344:	31869f04 	addi	r6,r6,6780
  809348:	2007883a 	mov	r3,r4
  80934c:	31000017 	ldw	r4,0(r6)
  809350:	280d883a 	mov	r6,r5
  809354:	180b883a 	mov	r5,r3
  809358:	08092bc1 	jmpi	8092bc <_setlocale_r>

0080935c <__smakebuf_r>:
  80935c:	2880030b 	ldhu	r2,12(r5)
  809360:	deffed04 	addi	sp,sp,-76
  809364:	dc401015 	stw	r17,64(sp)
  809368:	1080008c 	andi	r2,r2,2
  80936c:	dc000f15 	stw	r16,60(sp)
  809370:	dfc01215 	stw	ra,72(sp)
  809374:	dc801115 	stw	r18,68(sp)
  809378:	2821883a 	mov	r16,r5
  80937c:	2023883a 	mov	r17,r4
  809380:	10000b26 	beq	r2,zero,8093b0 <__smakebuf_r+0x54>
  809384:	28c010c4 	addi	r3,r5,67
  809388:	00800044 	movi	r2,1
  80938c:	28800515 	stw	r2,20(r5)
  809390:	28c00415 	stw	r3,16(r5)
  809394:	28c00015 	stw	r3,0(r5)
  809398:	dfc01217 	ldw	ra,72(sp)
  80939c:	dc801117 	ldw	r18,68(sp)
  8093a0:	dc401017 	ldw	r17,64(sp)
  8093a4:	dc000f17 	ldw	r16,60(sp)
  8093a8:	dec01304 	addi	sp,sp,76
  8093ac:	f800283a 	ret
  8093b0:	2940038f 	ldh	r5,14(r5)
  8093b4:	28002116 	blt	r5,zero,80943c <__smakebuf_r+0xe0>
  8093b8:	d80d883a 	mov	r6,sp
  8093bc:	080bb680 	call	80bb68 <_fstat_r>
  8093c0:	10001e16 	blt	r2,zero,80943c <__smakebuf_r+0xe0>
  8093c4:	d8800117 	ldw	r2,4(sp)
  8093c8:	00e00014 	movui	r3,32768
  8093cc:	113c000c 	andi	r4,r2,61440
  8093d0:	20c03126 	beq	r4,r3,809498 <__smakebuf_r+0x13c>
  8093d4:	8080030b 	ldhu	r2,12(r16)
  8093d8:	00c80004 	movi	r3,8192
  8093dc:	10820014 	ori	r2,r2,2048
  8093e0:	8080030d 	sth	r2,12(r16)
  8093e4:	20c01e26 	beq	r4,r3,809460 <__smakebuf_r+0x104>
  8093e8:	04810004 	movi	r18,1024
  8093ec:	8809883a 	mov	r4,r17
  8093f0:	900b883a 	mov	r5,r18
  8093f4:	08094f00 	call	8094f0 <_malloc_r>
  8093f8:	1009883a 	mov	r4,r2
  8093fc:	10003126 	beq	r2,zero,8094c4 <__smakebuf_r+0x168>
  809400:	80c0030b 	ldhu	r3,12(r16)
  809404:	00802074 	movhi	r2,129
  809408:	10a1a504 	addi	r2,r2,-31084
  80940c:	88800f15 	stw	r2,60(r17)
  809410:	18c02014 	ori	r3,r3,128
  809414:	84800515 	stw	r18,20(r16)
  809418:	80c0030d 	sth	r3,12(r16)
  80941c:	81000415 	stw	r4,16(r16)
  809420:	81000015 	stw	r4,0(r16)
  809424:	dfc01217 	ldw	ra,72(sp)
  809428:	dc801117 	ldw	r18,68(sp)
  80942c:	dc401017 	ldw	r17,64(sp)
  809430:	dc000f17 	ldw	r16,60(sp)
  809434:	dec01304 	addi	sp,sp,76
  809438:	f800283a 	ret
  80943c:	80c0030b 	ldhu	r3,12(r16)
  809440:	1880200c 	andi	r2,r3,128
  809444:	10000426 	beq	r2,zero,809458 <__smakebuf_r+0xfc>
  809448:	04801004 	movi	r18,64
  80944c:	18820014 	ori	r2,r3,2048
  809450:	8080030d 	sth	r2,12(r16)
  809454:	003fe506 	br	8093ec <__smakebuf_r+0x90>
  809458:	04810004 	movi	r18,1024
  80945c:	003ffb06 	br	80944c <__smakebuf_r+0xf0>
  809460:	8140038f 	ldh	r5,14(r16)
  809464:	8809883a 	mov	r4,r17
  809468:	080bbdc0 	call	80bbdc <_isatty_r>
  80946c:	103fde26 	beq	r2,zero,8093e8 <__smakebuf_r+0x8c>
  809470:	8080030b 	ldhu	r2,12(r16)
  809474:	80c010c4 	addi	r3,r16,67
  809478:	04810004 	movi	r18,1024
  80947c:	10800054 	ori	r2,r2,1
  809480:	8080030d 	sth	r2,12(r16)
  809484:	00800044 	movi	r2,1
  809488:	80c00415 	stw	r3,16(r16)
  80948c:	80800515 	stw	r2,20(r16)
  809490:	80c00015 	stw	r3,0(r16)
  809494:	003fd506 	br	8093ec <__smakebuf_r+0x90>
  809498:	80c00a17 	ldw	r3,40(r16)
  80949c:	00802074 	movhi	r2,129
  8094a0:	10ada504 	addi	r2,r2,-18796
  8094a4:	18bfcb1e 	bne	r3,r2,8093d4 <__smakebuf_r+0x78>
  8094a8:	8080030b 	ldhu	r2,12(r16)
  8094ac:	00c10004 	movi	r3,1024
  8094b0:	1825883a 	mov	r18,r3
  8094b4:	10c4b03a 	or	r2,r2,r3
  8094b8:	8080030d 	sth	r2,12(r16)
  8094bc:	80c01315 	stw	r3,76(r16)
  8094c0:	003fca06 	br	8093ec <__smakebuf_r+0x90>
  8094c4:	8100030b 	ldhu	r4,12(r16)
  8094c8:	2080800c 	andi	r2,r4,512
  8094cc:	103fb21e 	bne	r2,zero,809398 <__smakebuf_r+0x3c>
  8094d0:	80c010c4 	addi	r3,r16,67
  8094d4:	21000094 	ori	r4,r4,2
  8094d8:	00800044 	movi	r2,1
  8094dc:	80800515 	stw	r2,20(r16)
  8094e0:	8100030d 	sth	r4,12(r16)
  8094e4:	80c00415 	stw	r3,16(r16)
  8094e8:	80c00015 	stw	r3,0(r16)
  8094ec:	003faa06 	br	809398 <__smakebuf_r+0x3c>

008094f0 <_malloc_r>:
  8094f0:	defff604 	addi	sp,sp,-40
  8094f4:	28c002c4 	addi	r3,r5,11
  8094f8:	00800584 	movi	r2,22
  8094fc:	dc800215 	stw	r18,8(sp)
  809500:	dfc00915 	stw	ra,36(sp)
  809504:	df000815 	stw	fp,32(sp)
  809508:	ddc00715 	stw	r23,28(sp)
  80950c:	dd800615 	stw	r22,24(sp)
  809510:	dd400515 	stw	r21,20(sp)
  809514:	dd000415 	stw	r20,16(sp)
  809518:	dcc00315 	stw	r19,12(sp)
  80951c:	dc400115 	stw	r17,4(sp)
  809520:	dc000015 	stw	r16,0(sp)
  809524:	2025883a 	mov	r18,r4
  809528:	10c01236 	bltu	r2,r3,809574 <_malloc_r+0x84>
  80952c:	04400404 	movi	r17,16
  809530:	8940142e 	bgeu	r17,r5,809584 <_malloc_r+0x94>
  809534:	00800304 	movi	r2,12
  809538:	0007883a 	mov	r3,zero
  80953c:	90800015 	stw	r2,0(r18)
  809540:	1805883a 	mov	r2,r3
  809544:	dfc00917 	ldw	ra,36(sp)
  809548:	df000817 	ldw	fp,32(sp)
  80954c:	ddc00717 	ldw	r23,28(sp)
  809550:	dd800617 	ldw	r22,24(sp)
  809554:	dd400517 	ldw	r21,20(sp)
  809558:	dd000417 	ldw	r20,16(sp)
  80955c:	dcc00317 	ldw	r19,12(sp)
  809560:	dc800217 	ldw	r18,8(sp)
  809564:	dc400117 	ldw	r17,4(sp)
  809568:	dc000017 	ldw	r16,0(sp)
  80956c:	dec00a04 	addi	sp,sp,40
  809570:	f800283a 	ret
  809574:	00bffe04 	movi	r2,-8
  809578:	18a2703a 	and	r17,r3,r2
  80957c:	883fed16 	blt	r17,zero,809534 <_malloc_r+0x44>
  809580:	897fec36 	bltu	r17,r5,809534 <_malloc_r+0x44>
  809584:	9009883a 	mov	r4,r18
  809588:	080d5980 	call	80d598 <__malloc_lock>
  80958c:	00807dc4 	movi	r2,503
  809590:	14402b2e 	bgeu	r2,r17,809640 <_malloc_r+0x150>
  809594:	8806d27a 	srli	r3,r17,9
  809598:	18003f1e 	bne	r3,zero,809698 <_malloc_r+0x1a8>
  80959c:	880cd0fa 	srli	r6,r17,3
  8095a0:	300490fa 	slli	r2,r6,3
  8095a4:	02c02074 	movhi	r11,129
  8095a8:	5ac11b04 	addi	r11,r11,1132
  8095ac:	12cb883a 	add	r5,r2,r11
  8095b0:	2c000317 	ldw	r16,12(r5)
  8095b4:	580f883a 	mov	r7,r11
  8095b8:	2c00041e 	bne	r5,r16,8095cc <_malloc_r+0xdc>
  8095bc:	00000a06 	br	8095e8 <_malloc_r+0xf8>
  8095c0:	1800860e 	bge	r3,zero,8097dc <_malloc_r+0x2ec>
  8095c4:	84000317 	ldw	r16,12(r16)
  8095c8:	2c000726 	beq	r5,r16,8095e8 <_malloc_r+0xf8>
  8095cc:	80800117 	ldw	r2,4(r16)
  8095d0:	00ffff04 	movi	r3,-4
  8095d4:	10c8703a 	and	r4,r2,r3
  8095d8:	2447c83a 	sub	r3,r4,r17
  8095dc:	008003c4 	movi	r2,15
  8095e0:	10fff70e 	bge	r2,r3,8095c0 <_malloc_r+0xd0>
  8095e4:	31bfffc4 	addi	r6,r6,-1
  8095e8:	32400044 	addi	r9,r6,1
  8095ec:	02802074 	movhi	r10,129
  8095f0:	52811d04 	addi	r10,r10,1140
  8095f4:	54000217 	ldw	r16,8(r10)
  8095f8:	8280a026 	beq	r16,r10,80987c <_malloc_r+0x38c>
  8095fc:	80800117 	ldw	r2,4(r16)
  809600:	00ffff04 	movi	r3,-4
  809604:	10ca703a 	and	r5,r2,r3
  809608:	2c4dc83a 	sub	r6,r5,r17
  80960c:	008003c4 	movi	r2,15
  809610:	11808316 	blt	r2,r6,809820 <_malloc_r+0x330>
  809614:	52800315 	stw	r10,12(r10)
  809618:	52800215 	stw	r10,8(r10)
  80961c:	30002916 	blt	r6,zero,8096c4 <_malloc_r+0x1d4>
  809620:	8147883a 	add	r3,r16,r5
  809624:	18800117 	ldw	r2,4(r3)
  809628:	9009883a 	mov	r4,r18
  80962c:	10800054 	ori	r2,r2,1
  809630:	18800115 	stw	r2,4(r3)
  809634:	080d5b80 	call	80d5b8 <__malloc_unlock>
  809638:	80c00204 	addi	r3,r16,8
  80963c:	003fc006 	br	809540 <_malloc_r+0x50>
  809640:	02c02074 	movhi	r11,129
  809644:	5ac11b04 	addi	r11,r11,1132
  809648:	8ac5883a 	add	r2,r17,r11
  80964c:	14000317 	ldw	r16,12(r2)
  809650:	580f883a 	mov	r7,r11
  809654:	8806d0fa 	srli	r3,r17,3
  809658:	14006c26 	beq	r2,r16,80980c <_malloc_r+0x31c>
  80965c:	80c00117 	ldw	r3,4(r16)
  809660:	00bfff04 	movi	r2,-4
  809664:	81800317 	ldw	r6,12(r16)
  809668:	1886703a 	and	r3,r3,r2
  80966c:	80c7883a 	add	r3,r16,r3
  809670:	18800117 	ldw	r2,4(r3)
  809674:	81400217 	ldw	r5,8(r16)
  809678:	9009883a 	mov	r4,r18
  80967c:	10800054 	ori	r2,r2,1
  809680:	18800115 	stw	r2,4(r3)
  809684:	31400215 	stw	r5,8(r6)
  809688:	29800315 	stw	r6,12(r5)
  80968c:	080d5b80 	call	80d5b8 <__malloc_unlock>
  809690:	80c00204 	addi	r3,r16,8
  809694:	003faa06 	br	809540 <_malloc_r+0x50>
  809698:	00800104 	movi	r2,4
  80969c:	10c0052e 	bgeu	r2,r3,8096b4 <_malloc_r+0x1c4>
  8096a0:	00800504 	movi	r2,20
  8096a4:	10c07836 	bltu	r2,r3,809888 <_malloc_r+0x398>
  8096a8:	198016c4 	addi	r6,r3,91
  8096ac:	300490fa 	slli	r2,r6,3
  8096b0:	003fbc06 	br	8095a4 <_malloc_r+0xb4>
  8096b4:	8804d1ba 	srli	r2,r17,6
  8096b8:	11800e04 	addi	r6,r2,56
  8096bc:	300490fa 	slli	r2,r6,3
  8096c0:	003fb806 	br	8095a4 <_malloc_r+0xb4>
  8096c4:	00807fc4 	movi	r2,511
  8096c8:	1140bb36 	bltu	r2,r5,8099b8 <_malloc_r+0x4c8>
  8096cc:	2806d0fa 	srli	r3,r5,3
  8096d0:	573ffe04 	addi	fp,r10,-8
  8096d4:	00800044 	movi	r2,1
  8096d8:	180890fa 	slli	r4,r3,3
  8096dc:	1807d0ba 	srai	r3,r3,2
  8096e0:	e1c00117 	ldw	r7,4(fp)
  8096e4:	5909883a 	add	r4,r11,r4
  8096e8:	21400217 	ldw	r5,8(r4)
  8096ec:	10c4983a 	sll	r2,r2,r3
  8096f0:	81000315 	stw	r4,12(r16)
  8096f4:	81400215 	stw	r5,8(r16)
  8096f8:	388eb03a 	or	r7,r7,r2
  8096fc:	2c000315 	stw	r16,12(r5)
  809700:	24000215 	stw	r16,8(r4)
  809704:	e1c00115 	stw	r7,4(fp)
  809708:	4807883a 	mov	r3,r9
  80970c:	4800cd16 	blt	r9,zero,809a44 <_malloc_r+0x554>
  809710:	1807d0ba 	srai	r3,r3,2
  809714:	00800044 	movi	r2,1
  809718:	10c8983a 	sll	r4,r2,r3
  80971c:	39004436 	bltu	r7,r4,809830 <_malloc_r+0x340>
  809720:	21c4703a 	and	r2,r4,r7
  809724:	10000a1e 	bne	r2,zero,809750 <_malloc_r+0x260>
  809728:	2109883a 	add	r4,r4,r4
  80972c:	00bfff04 	movi	r2,-4
  809730:	4884703a 	and	r2,r9,r2
  809734:	3906703a 	and	r3,r7,r4
  809738:	12400104 	addi	r9,r2,4
  80973c:	1800041e 	bne	r3,zero,809750 <_malloc_r+0x260>
  809740:	2109883a 	add	r4,r4,r4
  809744:	3904703a 	and	r2,r7,r4
  809748:	4a400104 	addi	r9,r9,4
  80974c:	103ffc26 	beq	r2,zero,809740 <_malloc_r+0x250>
  809750:	480490fa 	slli	r2,r9,3
  809754:	4819883a 	mov	r12,r9
  809758:	023fff04 	movi	r8,-4
  80975c:	589b883a 	add	r13,r11,r2
  809760:	6807883a 	mov	r3,r13
  809764:	014003c4 	movi	r5,15
  809768:	1c000317 	ldw	r16,12(r3)
  80976c:	1c00041e 	bne	r3,r16,809780 <_malloc_r+0x290>
  809770:	0000a706 	br	809a10 <_malloc_r+0x520>
  809774:	3000ab0e 	bge	r6,zero,809a24 <_malloc_r+0x534>
  809778:	84000317 	ldw	r16,12(r16)
  80977c:	1c00a426 	beq	r3,r16,809a10 <_malloc_r+0x520>
  809780:	80800117 	ldw	r2,4(r16)
  809784:	1204703a 	and	r2,r2,r8
  809788:	144dc83a 	sub	r6,r2,r17
  80978c:	29bff90e 	bge	r5,r6,809774 <_malloc_r+0x284>
  809790:	81000317 	ldw	r4,12(r16)
  809794:	80c00217 	ldw	r3,8(r16)
  809798:	89400054 	ori	r5,r17,1
  80979c:	8445883a 	add	r2,r16,r17
  8097a0:	20c00215 	stw	r3,8(r4)
  8097a4:	19000315 	stw	r4,12(r3)
  8097a8:	81400115 	stw	r5,4(r16)
  8097ac:	1187883a 	add	r3,r2,r6
  8097b0:	31000054 	ori	r4,r6,1
  8097b4:	50800315 	stw	r2,12(r10)
  8097b8:	50800215 	stw	r2,8(r10)
  8097bc:	19800015 	stw	r6,0(r3)
  8097c0:	11000115 	stw	r4,4(r2)
  8097c4:	12800215 	stw	r10,8(r2)
  8097c8:	12800315 	stw	r10,12(r2)
  8097cc:	9009883a 	mov	r4,r18
  8097d0:	080d5b80 	call	80d5b8 <__malloc_unlock>
  8097d4:	80c00204 	addi	r3,r16,8
  8097d8:	003f5906 	br	809540 <_malloc_r+0x50>
  8097dc:	8109883a 	add	r4,r16,r4
  8097e0:	20800117 	ldw	r2,4(r4)
  8097e4:	80c00217 	ldw	r3,8(r16)
  8097e8:	81400317 	ldw	r5,12(r16)
  8097ec:	10800054 	ori	r2,r2,1
  8097f0:	20800115 	stw	r2,4(r4)
  8097f4:	28c00215 	stw	r3,8(r5)
  8097f8:	19400315 	stw	r5,12(r3)
  8097fc:	9009883a 	mov	r4,r18
  809800:	080d5b80 	call	80d5b8 <__malloc_unlock>
  809804:	80c00204 	addi	r3,r16,8
  809808:	003f4d06 	br	809540 <_malloc_r+0x50>
  80980c:	80800204 	addi	r2,r16,8
  809810:	14000317 	ldw	r16,12(r2)
  809814:	143f911e 	bne	r2,r16,80965c <_malloc_r+0x16c>
  809818:	1a400084 	addi	r9,r3,2
  80981c:	003f7306 	br	8095ec <_malloc_r+0xfc>
  809820:	88c00054 	ori	r3,r17,1
  809824:	8445883a 	add	r2,r16,r17
  809828:	80c00115 	stw	r3,4(r16)
  80982c:	003fdf06 	br	8097ac <_malloc_r+0x2bc>
  809830:	e4000217 	ldw	r16,8(fp)
  809834:	00bfff04 	movi	r2,-4
  809838:	80c00117 	ldw	r3,4(r16)
  80983c:	802d883a 	mov	r22,r16
  809840:	18aa703a 	and	r21,r3,r2
  809844:	ac401636 	bltu	r21,r17,8098a0 <_malloc_r+0x3b0>
  809848:	ac49c83a 	sub	r4,r21,r17
  80984c:	008003c4 	movi	r2,15
  809850:	1100130e 	bge	r2,r4,8098a0 <_malloc_r+0x3b0>
  809854:	88800054 	ori	r2,r17,1
  809858:	8447883a 	add	r3,r16,r17
  80985c:	80800115 	stw	r2,4(r16)
  809860:	20800054 	ori	r2,r4,1
  809864:	18800115 	stw	r2,4(r3)
  809868:	e0c00215 	stw	r3,8(fp)
  80986c:	9009883a 	mov	r4,r18
  809870:	080d5b80 	call	80d5b8 <__malloc_unlock>
  809874:	80c00204 	addi	r3,r16,8
  809878:	003f3106 	br	809540 <_malloc_r+0x50>
  80987c:	39c00117 	ldw	r7,4(r7)
  809880:	573ffe04 	addi	fp,r10,-8
  809884:	003fa006 	br	809708 <_malloc_r+0x218>
  809888:	00801504 	movi	r2,84
  80988c:	10c06736 	bltu	r2,r3,809a2c <_malloc_r+0x53c>
  809890:	8804d33a 	srli	r2,r17,12
  809894:	11801b84 	addi	r6,r2,110
  809898:	300490fa 	slli	r2,r6,3
  80989c:	003f4106 	br	8095a4 <_malloc_r+0xb4>
  8098a0:	d0a6aa17 	ldw	r2,-25944(gp)
  8098a4:	d0e00517 	ldw	r3,-32748(gp)
  8098a8:	053fffc4 	movi	r20,-1
  8098ac:	10800404 	addi	r2,r2,16
  8098b0:	88a7883a 	add	r19,r17,r2
  8098b4:	1d000326 	beq	r3,r20,8098c4 <_malloc_r+0x3d4>
  8098b8:	98c3ffc4 	addi	r3,r19,4095
  8098bc:	00bc0004 	movi	r2,-4096
  8098c0:	18a6703a 	and	r19,r3,r2
  8098c4:	9009883a 	mov	r4,r18
  8098c8:	980b883a 	mov	r5,r19
  8098cc:	080b61c0 	call	80b61c <_sbrk_r>
  8098d0:	1009883a 	mov	r4,r2
  8098d4:	15000426 	beq	r2,r20,8098e8 <_malloc_r+0x3f8>
  8098d8:	854b883a 	add	r5,r16,r21
  8098dc:	1029883a 	mov	r20,r2
  8098e0:	11405a2e 	bgeu	r2,r5,809a4c <_malloc_r+0x55c>
  8098e4:	87000c26 	beq	r16,fp,809918 <_malloc_r+0x428>
  8098e8:	e4000217 	ldw	r16,8(fp)
  8098ec:	80c00117 	ldw	r3,4(r16)
  8098f0:	00bfff04 	movi	r2,-4
  8098f4:	1884703a 	and	r2,r3,r2
  8098f8:	14400336 	bltu	r2,r17,809908 <_malloc_r+0x418>
  8098fc:	1449c83a 	sub	r4,r2,r17
  809900:	008003c4 	movi	r2,15
  809904:	113fd316 	blt	r2,r4,809854 <_malloc_r+0x364>
  809908:	9009883a 	mov	r4,r18
  80990c:	080d5b80 	call	80d5b8 <__malloc_unlock>
  809910:	0007883a 	mov	r3,zero
  809914:	003f0a06 	br	809540 <_malloc_r+0x50>
  809918:	05c02074 	movhi	r23,129
  80991c:	bdcd5304 	addi	r23,r23,13644
  809920:	b8800017 	ldw	r2,0(r23)
  809924:	988d883a 	add	r6,r19,r2
  809928:	b9800015 	stw	r6,0(r23)
  80992c:	d0e00517 	ldw	r3,-32748(gp)
  809930:	00bfffc4 	movi	r2,-1
  809934:	18808e26 	beq	r3,r2,809b70 <_malloc_r+0x680>
  809938:	2145c83a 	sub	r2,r4,r5
  80993c:	3085883a 	add	r2,r6,r2
  809940:	b8800015 	stw	r2,0(r23)
  809944:	20c001cc 	andi	r3,r4,7
  809948:	18005f1e 	bne	r3,zero,809ac8 <_malloc_r+0x5d8>
  80994c:	000b883a 	mov	r5,zero
  809950:	a4c5883a 	add	r2,r20,r19
  809954:	1083ffcc 	andi	r2,r2,4095
  809958:	00c40004 	movi	r3,4096
  80995c:	1887c83a 	sub	r3,r3,r2
  809960:	28e7883a 	add	r19,r5,r3
  809964:	9009883a 	mov	r4,r18
  809968:	980b883a 	mov	r5,r19
  80996c:	080b61c0 	call	80b61c <_sbrk_r>
  809970:	1007883a 	mov	r3,r2
  809974:	00bfffc4 	movi	r2,-1
  809978:	18807a26 	beq	r3,r2,809b64 <_malloc_r+0x674>
  80997c:	1d05c83a 	sub	r2,r3,r20
  809980:	9885883a 	add	r2,r19,r2
  809984:	10c00054 	ori	r3,r2,1
  809988:	b8800017 	ldw	r2,0(r23)
  80998c:	a021883a 	mov	r16,r20
  809990:	a0c00115 	stw	r3,4(r20)
  809994:	9885883a 	add	r2,r19,r2
  809998:	b8800015 	stw	r2,0(r23)
  80999c:	e5000215 	stw	r20,8(fp)
  8099a0:	b7003626 	beq	r22,fp,809a7c <_malloc_r+0x58c>
  8099a4:	018003c4 	movi	r6,15
  8099a8:	35404b36 	bltu	r6,r21,809ad8 <_malloc_r+0x5e8>
  8099ac:	00800044 	movi	r2,1
  8099b0:	a0800115 	stw	r2,4(r20)
  8099b4:	003fcd06 	br	8098ec <_malloc_r+0x3fc>
  8099b8:	2808d27a 	srli	r4,r5,9
  8099bc:	2000371e 	bne	r4,zero,809a9c <_malloc_r+0x5ac>
  8099c0:	2808d0fa 	srli	r4,r5,3
  8099c4:	200690fa 	slli	r3,r4,3
  8099c8:	1ad1883a 	add	r8,r3,r11
  8099cc:	41800217 	ldw	r6,8(r8)
  8099d0:	41805b26 	beq	r8,r6,809b40 <_malloc_r+0x650>
  8099d4:	30800117 	ldw	r2,4(r6)
  8099d8:	00ffff04 	movi	r3,-4
  8099dc:	10c4703a 	and	r2,r2,r3
  8099e0:	2880022e 	bgeu	r5,r2,8099ec <_malloc_r+0x4fc>
  8099e4:	31800217 	ldw	r6,8(r6)
  8099e8:	41bffa1e 	bne	r8,r6,8099d4 <_malloc_r+0x4e4>
  8099ec:	32000317 	ldw	r8,12(r6)
  8099f0:	39c00117 	ldw	r7,4(r7)
  8099f4:	82000315 	stw	r8,12(r16)
  8099f8:	81800215 	stw	r6,8(r16)
  8099fc:	07002074 	movhi	fp,129
  809a00:	e7011b04 	addi	fp,fp,1132
  809a04:	34000315 	stw	r16,12(r6)
  809a08:	44000215 	stw	r16,8(r8)
  809a0c:	003f3e06 	br	809708 <_malloc_r+0x218>
  809a10:	63000044 	addi	r12,r12,1
  809a14:	608000cc 	andi	r2,r12,3
  809a18:	10005d26 	beq	r2,zero,809b90 <_malloc_r+0x6a0>
  809a1c:	18c00204 	addi	r3,r3,8
  809a20:	003f5106 	br	809768 <_malloc_r+0x278>
  809a24:	8089883a 	add	r4,r16,r2
  809a28:	003f6d06 	br	8097e0 <_malloc_r+0x2f0>
  809a2c:	00805504 	movi	r2,340
  809a30:	10c02036 	bltu	r2,r3,809ab4 <_malloc_r+0x5c4>
  809a34:	8804d3fa 	srli	r2,r17,15
  809a38:	11801dc4 	addi	r6,r2,119
  809a3c:	300490fa 	slli	r2,r6,3
  809a40:	003ed806 	br	8095a4 <_malloc_r+0xb4>
  809a44:	48c000c4 	addi	r3,r9,3
  809a48:	003f3106 	br	809710 <_malloc_r+0x220>
  809a4c:	05c02074 	movhi	r23,129
  809a50:	bdcd5304 	addi	r23,r23,13644
  809a54:	b8800017 	ldw	r2,0(r23)
  809a58:	988d883a 	add	r6,r19,r2
  809a5c:	b9800015 	stw	r6,0(r23)
  809a60:	293fb21e 	bne	r5,r4,80992c <_malloc_r+0x43c>
  809a64:	2083ffcc 	andi	r2,r4,4095
  809a68:	103fb01e 	bne	r2,zero,80992c <_malloc_r+0x43c>
  809a6c:	e4000217 	ldw	r16,8(fp)
  809a70:	9d45883a 	add	r2,r19,r21
  809a74:	10800054 	ori	r2,r2,1
  809a78:	80800115 	stw	r2,4(r16)
  809a7c:	b8c00017 	ldw	r3,0(r23)
  809a80:	d0a6ab17 	ldw	r2,-25940(gp)
  809a84:	10c0012e 	bgeu	r2,r3,809a8c <_malloc_r+0x59c>
  809a88:	d0e6ab15 	stw	r3,-25940(gp)
  809a8c:	d0a6ac17 	ldw	r2,-25936(gp)
  809a90:	10ff962e 	bgeu	r2,r3,8098ec <_malloc_r+0x3fc>
  809a94:	d0e6ac15 	stw	r3,-25936(gp)
  809a98:	003f9406 	br	8098ec <_malloc_r+0x3fc>
  809a9c:	00800104 	movi	r2,4
  809aa0:	11001e36 	bltu	r2,r4,809b1c <_malloc_r+0x62c>
  809aa4:	2804d1ba 	srli	r2,r5,6
  809aa8:	11000e04 	addi	r4,r2,56
  809aac:	200690fa 	slli	r3,r4,3
  809ab0:	003fc506 	br	8099c8 <_malloc_r+0x4d8>
  809ab4:	00815504 	movi	r2,1364
  809ab8:	10c01d2e 	bgeu	r2,r3,809b30 <_malloc_r+0x640>
  809abc:	01801f84 	movi	r6,126
  809ac0:	0080fc04 	movi	r2,1008
  809ac4:	003eb706 	br	8095a4 <_malloc_r+0xb4>
  809ac8:	00800204 	movi	r2,8
  809acc:	10cbc83a 	sub	r5,r2,r3
  809ad0:	2169883a 	add	r20,r4,r5
  809ad4:	003f9e06 	br	809950 <_malloc_r+0x460>
  809ad8:	00bffe04 	movi	r2,-8
  809adc:	a93ffd04 	addi	r4,r21,-12
  809ae0:	2088703a 	and	r4,r4,r2
  809ae4:	b10b883a 	add	r5,r22,r4
  809ae8:	00c00144 	movi	r3,5
  809aec:	28c00215 	stw	r3,8(r5)
  809af0:	28c00115 	stw	r3,4(r5)
  809af4:	b0800117 	ldw	r2,4(r22)
  809af8:	1080004c 	andi	r2,r2,1
  809afc:	2084b03a 	or	r2,r4,r2
  809b00:	b0800115 	stw	r2,4(r22)
  809b04:	313fdd2e 	bgeu	r6,r4,809a7c <_malloc_r+0x58c>
  809b08:	b1400204 	addi	r5,r22,8
  809b0c:	9009883a 	mov	r4,r18
  809b10:	08089680 	call	808968 <_free_r>
  809b14:	e4000217 	ldw	r16,8(fp)
  809b18:	003fd806 	br	809a7c <_malloc_r+0x58c>
  809b1c:	00800504 	movi	r2,20
  809b20:	11001536 	bltu	r2,r4,809b78 <_malloc_r+0x688>
  809b24:	210016c4 	addi	r4,r4,91
  809b28:	200690fa 	slli	r3,r4,3
  809b2c:	003fa606 	br	8099c8 <_malloc_r+0x4d8>
  809b30:	8804d4ba 	srli	r2,r17,18
  809b34:	11801f04 	addi	r6,r2,124
  809b38:	300490fa 	slli	r2,r6,3
  809b3c:	003e9906 	br	8095a4 <_malloc_r+0xb4>
  809b40:	2009d0ba 	srai	r4,r4,2
  809b44:	01402074 	movhi	r5,129
  809b48:	29411b04 	addi	r5,r5,1132
  809b4c:	00c00044 	movi	r3,1
  809b50:	28800117 	ldw	r2,4(r5)
  809b54:	1906983a 	sll	r3,r3,r4
  809b58:	10c4b03a 	or	r2,r2,r3
  809b5c:	28800115 	stw	r2,4(r5)
  809b60:	003fa306 	br	8099f0 <_malloc_r+0x500>
  809b64:	0027883a 	mov	r19,zero
  809b68:	00c00044 	movi	r3,1
  809b6c:	003f8606 	br	809988 <_malloc_r+0x498>
  809b70:	d1200515 	stw	r4,-32748(gp)
  809b74:	003f7306 	br	809944 <_malloc_r+0x454>
  809b78:	00801504 	movi	r2,84
  809b7c:	11001936 	bltu	r2,r4,809be4 <_malloc_r+0x6f4>
  809b80:	2804d33a 	srli	r2,r5,12
  809b84:	11001b84 	addi	r4,r2,110
  809b88:	200690fa 	slli	r3,r4,3
  809b8c:	003f8e06 	br	8099c8 <_malloc_r+0x4d8>
  809b90:	480b883a 	mov	r5,r9
  809b94:	6807883a 	mov	r3,r13
  809b98:	288000cc 	andi	r2,r5,3
  809b9c:	18fffe04 	addi	r3,r3,-8
  809ba0:	297fffc4 	addi	r5,r5,-1
  809ba4:	10001526 	beq	r2,zero,809bfc <_malloc_r+0x70c>
  809ba8:	18800217 	ldw	r2,8(r3)
  809bac:	10fffa26 	beq	r2,r3,809b98 <_malloc_r+0x6a8>
  809bb0:	2109883a 	add	r4,r4,r4
  809bb4:	393f1e36 	bltu	r7,r4,809830 <_malloc_r+0x340>
  809bb8:	203f1d26 	beq	r4,zero,809830 <_malloc_r+0x340>
  809bbc:	21c4703a 	and	r2,r4,r7
  809bc0:	10000226 	beq	r2,zero,809bcc <_malloc_r+0x6dc>
  809bc4:	6013883a 	mov	r9,r12
  809bc8:	003ee106 	br	809750 <_malloc_r+0x260>
  809bcc:	2109883a 	add	r4,r4,r4
  809bd0:	3904703a 	and	r2,r7,r4
  809bd4:	63000104 	addi	r12,r12,4
  809bd8:	103ffc26 	beq	r2,zero,809bcc <_malloc_r+0x6dc>
  809bdc:	6013883a 	mov	r9,r12
  809be0:	003edb06 	br	809750 <_malloc_r+0x260>
  809be4:	00805504 	movi	r2,340
  809be8:	11000836 	bltu	r2,r4,809c0c <_malloc_r+0x71c>
  809bec:	2804d3fa 	srli	r2,r5,15
  809bf0:	11001dc4 	addi	r4,r2,119
  809bf4:	200690fa 	slli	r3,r4,3
  809bf8:	003f7306 	br	8099c8 <_malloc_r+0x4d8>
  809bfc:	0104303a 	nor	r2,zero,r4
  809c00:	388e703a 	and	r7,r7,r2
  809c04:	e1c00115 	stw	r7,4(fp)
  809c08:	003fe906 	br	809bb0 <_malloc_r+0x6c0>
  809c0c:	00815504 	movi	r2,1364
  809c10:	1100032e 	bgeu	r2,r4,809c20 <_malloc_r+0x730>
  809c14:	01001f84 	movi	r4,126
  809c18:	00c0fc04 	movi	r3,1008
  809c1c:	003f6a06 	br	8099c8 <_malloc_r+0x4d8>
  809c20:	2804d4ba 	srli	r2,r5,18
  809c24:	11001f04 	addi	r4,r2,124
  809c28:	200690fa 	slli	r3,r4,3
  809c2c:	003f6606 	br	8099c8 <_malloc_r+0x4d8>

00809c30 <memchr>:
  809c30:	008000c4 	movi	r2,3
  809c34:	29403fcc 	andi	r5,r5,255
  809c38:	2007883a 	mov	r3,r4
  809c3c:	1180022e 	bgeu	r2,r6,809c48 <memchr+0x18>
  809c40:	2084703a 	and	r2,r4,r2
  809c44:	10000b26 	beq	r2,zero,809c74 <memchr+0x44>
  809c48:	313fffc4 	addi	r4,r6,-1
  809c4c:	3000051e 	bne	r6,zero,809c64 <memchr+0x34>
  809c50:	00002c06 	br	809d04 <memchr+0xd4>
  809c54:	213fffc4 	addi	r4,r4,-1
  809c58:	00bfffc4 	movi	r2,-1
  809c5c:	18c00044 	addi	r3,r3,1
  809c60:	20802826 	beq	r4,r2,809d04 <memchr+0xd4>
  809c64:	18800003 	ldbu	r2,0(r3)
  809c68:	28bffa1e 	bne	r5,r2,809c54 <memchr+0x24>
  809c6c:	1805883a 	mov	r2,r3
  809c70:	f800283a 	ret
  809c74:	0011883a 	mov	r8,zero
  809c78:	0007883a 	mov	r3,zero
  809c7c:	01c00104 	movi	r7,4
  809c80:	4004923a 	slli	r2,r8,8
  809c84:	18c00044 	addi	r3,r3,1
  809c88:	1151883a 	add	r8,r2,r5
  809c8c:	19fffc1e 	bne	r3,r7,809c80 <memchr+0x50>
  809c90:	02bfbff4 	movhi	r10,65279
  809c94:	52bfbfc4 	addi	r10,r10,-257
  809c98:	02602074 	movhi	r9,32897
  809c9c:	4a602004 	addi	r9,r9,-32640
  809ca0:	02c000c4 	movi	r11,3
  809ca4:	20800017 	ldw	r2,0(r4)
  809ca8:	31bfff04 	addi	r6,r6,-4
  809cac:	200f883a 	mov	r7,r4
  809cb0:	1204f03a 	xor	r2,r2,r8
  809cb4:	1287883a 	add	r3,r2,r10
  809cb8:	1a46703a 	and	r3,r3,r9
  809cbc:	0084303a 	nor	r2,zero,r2
  809cc0:	10c4703a 	and	r2,r2,r3
  809cc4:	10000b26 	beq	r2,zero,809cf4 <memchr+0xc4>
  809cc8:	20800003 	ldbu	r2,0(r4)
  809ccc:	28800f26 	beq	r5,r2,809d0c <memchr+0xdc>
  809cd0:	20800043 	ldbu	r2,1(r4)
  809cd4:	21c00044 	addi	r7,r4,1
  809cd8:	28800c26 	beq	r5,r2,809d0c <memchr+0xdc>
  809cdc:	20800083 	ldbu	r2,2(r4)
  809ce0:	21c00084 	addi	r7,r4,2
  809ce4:	28800926 	beq	r5,r2,809d0c <memchr+0xdc>
  809ce8:	208000c3 	ldbu	r2,3(r4)
  809cec:	21c000c4 	addi	r7,r4,3
  809cf0:	28800626 	beq	r5,r2,809d0c <memchr+0xdc>
  809cf4:	21000104 	addi	r4,r4,4
  809cf8:	59bfea36 	bltu	r11,r6,809ca4 <memchr+0x74>
  809cfc:	2007883a 	mov	r3,r4
  809d00:	003fd106 	br	809c48 <memchr+0x18>
  809d04:	0005883a 	mov	r2,zero
  809d08:	f800283a 	ret
  809d0c:	3805883a 	mov	r2,r7
  809d10:	f800283a 	ret

00809d14 <memcpy>:
  809d14:	01c003c4 	movi	r7,15
  809d18:	2007883a 	mov	r3,r4
  809d1c:	3980032e 	bgeu	r7,r6,809d2c <memcpy+0x18>
  809d20:	2904b03a 	or	r2,r5,r4
  809d24:	108000cc 	andi	r2,r2,3
  809d28:	10000926 	beq	r2,zero,809d50 <memcpy+0x3c>
  809d2c:	30000626 	beq	r6,zero,809d48 <memcpy+0x34>
  809d30:	30cd883a 	add	r6,r6,r3
  809d34:	28800003 	ldbu	r2,0(r5)
  809d38:	29400044 	addi	r5,r5,1
  809d3c:	18800005 	stb	r2,0(r3)
  809d40:	18c00044 	addi	r3,r3,1
  809d44:	30fffb1e 	bne	r6,r3,809d34 <memcpy+0x20>
  809d48:	2005883a 	mov	r2,r4
  809d4c:	f800283a 	ret
  809d50:	3811883a 	mov	r8,r7
  809d54:	200f883a 	mov	r7,r4
  809d58:	28c00017 	ldw	r3,0(r5)
  809d5c:	31bffc04 	addi	r6,r6,-16
  809d60:	38c00015 	stw	r3,0(r7)
  809d64:	28800117 	ldw	r2,4(r5)
  809d68:	38800115 	stw	r2,4(r7)
  809d6c:	28c00217 	ldw	r3,8(r5)
  809d70:	38c00215 	stw	r3,8(r7)
  809d74:	28800317 	ldw	r2,12(r5)
  809d78:	29400404 	addi	r5,r5,16
  809d7c:	38800315 	stw	r2,12(r7)
  809d80:	39c00404 	addi	r7,r7,16
  809d84:	41bff436 	bltu	r8,r6,809d58 <memcpy+0x44>
  809d88:	008000c4 	movi	r2,3
  809d8c:	1180072e 	bgeu	r2,r6,809dac <memcpy+0x98>
  809d90:	1007883a 	mov	r3,r2
  809d94:	28800017 	ldw	r2,0(r5)
  809d98:	31bfff04 	addi	r6,r6,-4
  809d9c:	29400104 	addi	r5,r5,4
  809da0:	38800015 	stw	r2,0(r7)
  809da4:	39c00104 	addi	r7,r7,4
  809da8:	19bffa36 	bltu	r3,r6,809d94 <memcpy+0x80>
  809dac:	3807883a 	mov	r3,r7
  809db0:	003fde06 	br	809d2c <memcpy+0x18>

00809db4 <memmove>:
  809db4:	2807883a 	mov	r3,r5
  809db8:	2011883a 	mov	r8,r4
  809dbc:	29000c2e 	bgeu	r5,r4,809df0 <memmove+0x3c>
  809dc0:	298f883a 	add	r7,r5,r6
  809dc4:	21c00a2e 	bgeu	r4,r7,809df0 <memmove+0x3c>
  809dc8:	30000726 	beq	r6,zero,809de8 <memmove+0x34>
  809dcc:	2187883a 	add	r3,r4,r6
  809dd0:	198dc83a 	sub	r6,r3,r6
  809dd4:	39ffffc4 	addi	r7,r7,-1
  809dd8:	38800003 	ldbu	r2,0(r7)
  809ddc:	18ffffc4 	addi	r3,r3,-1
  809de0:	18800005 	stb	r2,0(r3)
  809de4:	19bffb1e 	bne	r3,r6,809dd4 <memmove+0x20>
  809de8:	2005883a 	mov	r2,r4
  809dec:	f800283a 	ret
  809df0:	01c003c4 	movi	r7,15
  809df4:	39800a36 	bltu	r7,r6,809e20 <memmove+0x6c>
  809df8:	303ffb26 	beq	r6,zero,809de8 <memmove+0x34>
  809dfc:	400f883a 	mov	r7,r8
  809e00:	320d883a 	add	r6,r6,r8
  809e04:	28800003 	ldbu	r2,0(r5)
  809e08:	29400044 	addi	r5,r5,1
  809e0c:	38800005 	stb	r2,0(r7)
  809e10:	39c00044 	addi	r7,r7,1
  809e14:	39bffb1e 	bne	r7,r6,809e04 <memmove+0x50>
  809e18:	2005883a 	mov	r2,r4
  809e1c:	f800283a 	ret
  809e20:	1904b03a 	or	r2,r3,r4
  809e24:	108000cc 	andi	r2,r2,3
  809e28:	103ff31e 	bne	r2,zero,809df8 <memmove+0x44>
  809e2c:	3811883a 	mov	r8,r7
  809e30:	180b883a 	mov	r5,r3
  809e34:	200f883a 	mov	r7,r4
  809e38:	28c00017 	ldw	r3,0(r5)
  809e3c:	31bffc04 	addi	r6,r6,-16
  809e40:	38c00015 	stw	r3,0(r7)
  809e44:	28800117 	ldw	r2,4(r5)
  809e48:	38800115 	stw	r2,4(r7)
  809e4c:	28c00217 	ldw	r3,8(r5)
  809e50:	38c00215 	stw	r3,8(r7)
  809e54:	28800317 	ldw	r2,12(r5)
  809e58:	29400404 	addi	r5,r5,16
  809e5c:	38800315 	stw	r2,12(r7)
  809e60:	39c00404 	addi	r7,r7,16
  809e64:	41bff436 	bltu	r8,r6,809e38 <memmove+0x84>
  809e68:	008000c4 	movi	r2,3
  809e6c:	1180072e 	bgeu	r2,r6,809e8c <memmove+0xd8>
  809e70:	1007883a 	mov	r3,r2
  809e74:	28800017 	ldw	r2,0(r5)
  809e78:	31bfff04 	addi	r6,r6,-4
  809e7c:	29400104 	addi	r5,r5,4
  809e80:	38800015 	stw	r2,0(r7)
  809e84:	39c00104 	addi	r7,r7,4
  809e88:	19bffa36 	bltu	r3,r6,809e74 <memmove+0xc0>
  809e8c:	3811883a 	mov	r8,r7
  809e90:	003fd906 	br	809df8 <memmove+0x44>

00809e94 <memset>:
  809e94:	008000c4 	movi	r2,3
  809e98:	29403fcc 	andi	r5,r5,255
  809e9c:	2007883a 	mov	r3,r4
  809ea0:	1180022e 	bgeu	r2,r6,809eac <memset+0x18>
  809ea4:	2084703a 	and	r2,r4,r2
  809ea8:	10000826 	beq	r2,zero,809ecc <memset+0x38>
  809eac:	30000526 	beq	r6,zero,809ec4 <memset+0x30>
  809eb0:	2805883a 	mov	r2,r5
  809eb4:	30cd883a 	add	r6,r6,r3
  809eb8:	18800005 	stb	r2,0(r3)
  809ebc:	18c00044 	addi	r3,r3,1
  809ec0:	19bffd1e 	bne	r3,r6,809eb8 <memset+0x24>
  809ec4:	2005883a 	mov	r2,r4
  809ec8:	f800283a 	ret
  809ecc:	2804923a 	slli	r2,r5,8
  809ed0:	020003c4 	movi	r8,15
  809ed4:	200f883a 	mov	r7,r4
  809ed8:	2884b03a 	or	r2,r5,r2
  809edc:	1006943a 	slli	r3,r2,16
  809ee0:	10c6b03a 	or	r3,r2,r3
  809ee4:	41800a2e 	bgeu	r8,r6,809f10 <memset+0x7c>
  809ee8:	4005883a 	mov	r2,r8
  809eec:	31bffc04 	addi	r6,r6,-16
  809ef0:	38c00015 	stw	r3,0(r7)
  809ef4:	38c00115 	stw	r3,4(r7)
  809ef8:	38c00215 	stw	r3,8(r7)
  809efc:	38c00315 	stw	r3,12(r7)
  809f00:	39c00404 	addi	r7,r7,16
  809f04:	11bff936 	bltu	r2,r6,809eec <memset+0x58>
  809f08:	008000c4 	movi	r2,3
  809f0c:	1180052e 	bgeu	r2,r6,809f24 <memset+0x90>
  809f10:	31bfff04 	addi	r6,r6,-4
  809f14:	008000c4 	movi	r2,3
  809f18:	38c00015 	stw	r3,0(r7)
  809f1c:	39c00104 	addi	r7,r7,4
  809f20:	11bffb36 	bltu	r2,r6,809f10 <memset+0x7c>
  809f24:	3807883a 	mov	r3,r7
  809f28:	003fe006 	br	809eac <memset+0x18>

00809f2c <_Bfree>:
  809f2c:	28000826 	beq	r5,zero,809f50 <_Bfree+0x24>
  809f30:	28800117 	ldw	r2,4(r5)
  809f34:	21001317 	ldw	r4,76(r4)
  809f38:	1085883a 	add	r2,r2,r2
  809f3c:	1085883a 	add	r2,r2,r2
  809f40:	1105883a 	add	r2,r2,r4
  809f44:	10c00017 	ldw	r3,0(r2)
  809f48:	28c00015 	stw	r3,0(r5)
  809f4c:	11400015 	stw	r5,0(r2)
  809f50:	f800283a 	ret

00809f54 <__hi0bits>:
  809f54:	20bfffec 	andhi	r2,r4,65535
  809f58:	10001426 	beq	r2,zero,809fac <__hi0bits+0x58>
  809f5c:	0007883a 	mov	r3,zero
  809f60:	20bfc02c 	andhi	r2,r4,65280
  809f64:	1000021e 	bne	r2,zero,809f70 <__hi0bits+0x1c>
  809f68:	2008923a 	slli	r4,r4,8
  809f6c:	18c00204 	addi	r3,r3,8
  809f70:	20bc002c 	andhi	r2,r4,61440
  809f74:	1000021e 	bne	r2,zero,809f80 <__hi0bits+0x2c>
  809f78:	2008913a 	slli	r4,r4,4
  809f7c:	18c00104 	addi	r3,r3,4
  809f80:	20b0002c 	andhi	r2,r4,49152
  809f84:	1000031e 	bne	r2,zero,809f94 <__hi0bits+0x40>
  809f88:	2105883a 	add	r2,r4,r4
  809f8c:	18c00084 	addi	r3,r3,2
  809f90:	1089883a 	add	r4,r2,r2
  809f94:	20000316 	blt	r4,zero,809fa4 <__hi0bits+0x50>
  809f98:	2090002c 	andhi	r2,r4,16384
  809f9c:	10000626 	beq	r2,zero,809fb8 <__hi0bits+0x64>
  809fa0:	18c00044 	addi	r3,r3,1
  809fa4:	1805883a 	mov	r2,r3
  809fa8:	f800283a 	ret
  809fac:	2008943a 	slli	r4,r4,16
  809fb0:	00c00404 	movi	r3,16
  809fb4:	003fea06 	br	809f60 <__hi0bits+0xc>
  809fb8:	00c00804 	movi	r3,32
  809fbc:	1805883a 	mov	r2,r3
  809fc0:	f800283a 	ret

00809fc4 <__lo0bits>:
  809fc4:	20c00017 	ldw	r3,0(r4)
  809fc8:	188001cc 	andi	r2,r3,7
  809fcc:	10000a26 	beq	r2,zero,809ff8 <__lo0bits+0x34>
  809fd0:	1880004c 	andi	r2,r3,1
  809fd4:	1005003a 	cmpeq	r2,r2,zero
  809fd8:	10002126 	beq	r2,zero,80a060 <__lo0bits+0x9c>
  809fdc:	1880008c 	andi	r2,r3,2
  809fe0:	1000251e 	bne	r2,zero,80a078 <__lo0bits+0xb4>
  809fe4:	1804d0ba 	srli	r2,r3,2
  809fe8:	01400084 	movi	r5,2
  809fec:	20800015 	stw	r2,0(r4)
  809ff0:	2805883a 	mov	r2,r5
  809ff4:	f800283a 	ret
  809ff8:	18bfffcc 	andi	r2,r3,65535
  809ffc:	10001526 	beq	r2,zero,80a054 <__lo0bits+0x90>
  80a000:	000b883a 	mov	r5,zero
  80a004:	18803fcc 	andi	r2,r3,255
  80a008:	1000021e 	bne	r2,zero,80a014 <__lo0bits+0x50>
  80a00c:	1806d23a 	srli	r3,r3,8
  80a010:	29400204 	addi	r5,r5,8
  80a014:	188003cc 	andi	r2,r3,15
  80a018:	1000021e 	bne	r2,zero,80a024 <__lo0bits+0x60>
  80a01c:	1806d13a 	srli	r3,r3,4
  80a020:	29400104 	addi	r5,r5,4
  80a024:	188000cc 	andi	r2,r3,3
  80a028:	1000021e 	bne	r2,zero,80a034 <__lo0bits+0x70>
  80a02c:	1806d0ba 	srli	r3,r3,2
  80a030:	29400084 	addi	r5,r5,2
  80a034:	1880004c 	andi	r2,r3,1
  80a038:	1000031e 	bne	r2,zero,80a048 <__lo0bits+0x84>
  80a03c:	1806d07a 	srli	r3,r3,1
  80a040:	18000a26 	beq	r3,zero,80a06c <__lo0bits+0xa8>
  80a044:	29400044 	addi	r5,r5,1
  80a048:	2805883a 	mov	r2,r5
  80a04c:	20c00015 	stw	r3,0(r4)
  80a050:	f800283a 	ret
  80a054:	1806d43a 	srli	r3,r3,16
  80a058:	01400404 	movi	r5,16
  80a05c:	003fe906 	br	80a004 <__lo0bits+0x40>
  80a060:	000b883a 	mov	r5,zero
  80a064:	2805883a 	mov	r2,r5
  80a068:	f800283a 	ret
  80a06c:	01400804 	movi	r5,32
  80a070:	2805883a 	mov	r2,r5
  80a074:	f800283a 	ret
  80a078:	1804d07a 	srli	r2,r3,1
  80a07c:	01400044 	movi	r5,1
  80a080:	20800015 	stw	r2,0(r4)
  80a084:	003fda06 	br	809ff0 <__lo0bits+0x2c>

0080a088 <__mcmp>:
  80a088:	20800417 	ldw	r2,16(r4)
  80a08c:	28c00417 	ldw	r3,16(r5)
  80a090:	10cfc83a 	sub	r7,r2,r3
  80a094:	38000c1e 	bne	r7,zero,80a0c8 <__mcmp+0x40>
  80a098:	18c5883a 	add	r2,r3,r3
  80a09c:	1085883a 	add	r2,r2,r2
  80a0a0:	10c00504 	addi	r3,r2,20
  80a0a4:	21000504 	addi	r4,r4,20
  80a0a8:	28cb883a 	add	r5,r5,r3
  80a0ac:	2085883a 	add	r2,r4,r2
  80a0b0:	10bfff04 	addi	r2,r2,-4
  80a0b4:	297fff04 	addi	r5,r5,-4
  80a0b8:	11800017 	ldw	r6,0(r2)
  80a0bc:	28c00017 	ldw	r3,0(r5)
  80a0c0:	30c0031e 	bne	r6,r3,80a0d0 <__mcmp+0x48>
  80a0c4:	20bffa36 	bltu	r4,r2,80a0b0 <__mcmp+0x28>
  80a0c8:	3805883a 	mov	r2,r7
  80a0cc:	f800283a 	ret
  80a0d0:	30c00336 	bltu	r6,r3,80a0e0 <__mcmp+0x58>
  80a0d4:	01c00044 	movi	r7,1
  80a0d8:	3805883a 	mov	r2,r7
  80a0dc:	f800283a 	ret
  80a0e0:	01ffffc4 	movi	r7,-1
  80a0e4:	003ff806 	br	80a0c8 <__mcmp+0x40>

0080a0e8 <__ulp>:
  80a0e8:	295ffc2c 	andhi	r5,r5,32752
  80a0ec:	013f3034 	movhi	r4,64704
  80a0f0:	290b883a 	add	r5,r5,r4
  80a0f4:	0145c83a 	sub	r2,zero,r5
  80a0f8:	1007d53a 	srai	r3,r2,20
  80a0fc:	000d883a 	mov	r6,zero
  80a100:	0140040e 	bge	zero,r5,80a114 <__ulp+0x2c>
  80a104:	280f883a 	mov	r7,r5
  80a108:	3807883a 	mov	r3,r7
  80a10c:	3005883a 	mov	r2,r6
  80a110:	f800283a 	ret
  80a114:	008004c4 	movi	r2,19
  80a118:	193ffb04 	addi	r4,r3,-20
  80a11c:	10c00c0e 	bge	r2,r3,80a150 <__ulp+0x68>
  80a120:	008007c4 	movi	r2,31
  80a124:	1107c83a 	sub	r3,r2,r4
  80a128:	00800784 	movi	r2,30
  80a12c:	01400044 	movi	r5,1
  80a130:	11000216 	blt	r2,r4,80a13c <__ulp+0x54>
  80a134:	00800044 	movi	r2,1
  80a138:	10ca983a 	sll	r5,r2,r3
  80a13c:	000f883a 	mov	r7,zero
  80a140:	280d883a 	mov	r6,r5
  80a144:	3807883a 	mov	r3,r7
  80a148:	3005883a 	mov	r2,r6
  80a14c:	f800283a 	ret
  80a150:	00800234 	movhi	r2,8
  80a154:	10cfd83a 	sra	r7,r2,r3
  80a158:	000d883a 	mov	r6,zero
  80a15c:	3005883a 	mov	r2,r6
  80a160:	3807883a 	mov	r3,r7
  80a164:	f800283a 	ret

0080a168 <__b2d>:
  80a168:	20800417 	ldw	r2,16(r4)
  80a16c:	defff904 	addi	sp,sp,-28
  80a170:	dd000415 	stw	r20,16(sp)
  80a174:	1085883a 	add	r2,r2,r2
  80a178:	25000504 	addi	r20,r4,20
  80a17c:	1085883a 	add	r2,r2,r2
  80a180:	dc000015 	stw	r16,0(sp)
  80a184:	a0a1883a 	add	r16,r20,r2
  80a188:	dd400515 	stw	r21,20(sp)
  80a18c:	857fff17 	ldw	r21,-4(r16)
  80a190:	dc400115 	stw	r17,4(sp)
  80a194:	dfc00615 	stw	ra,24(sp)
  80a198:	a809883a 	mov	r4,r21
  80a19c:	2823883a 	mov	r17,r5
  80a1a0:	dcc00315 	stw	r19,12(sp)
  80a1a4:	dc800215 	stw	r18,8(sp)
  80a1a8:	0809f540 	call	809f54 <__hi0bits>
  80a1ac:	100b883a 	mov	r5,r2
  80a1b0:	00800804 	movi	r2,32
  80a1b4:	1145c83a 	sub	r2,r2,r5
  80a1b8:	88800015 	stw	r2,0(r17)
  80a1bc:	00800284 	movi	r2,10
  80a1c0:	80ffff04 	addi	r3,r16,-4
  80a1c4:	11401416 	blt	r2,r5,80a218 <__b2d+0xb0>
  80a1c8:	008002c4 	movi	r2,11
  80a1cc:	1149c83a 	sub	r4,r2,r5
  80a1d0:	a0c02736 	bltu	r20,r3,80a270 <__b2d+0x108>
  80a1d4:	000d883a 	mov	r6,zero
  80a1d8:	28800544 	addi	r2,r5,21
  80a1dc:	a906d83a 	srl	r3,r21,r4
  80a1e0:	a884983a 	sll	r2,r21,r2
  80a1e4:	1ccffc34 	orhi	r19,r3,16368
  80a1e8:	11a4b03a 	or	r18,r2,r6
  80a1ec:	9005883a 	mov	r2,r18
  80a1f0:	9807883a 	mov	r3,r19
  80a1f4:	dfc00617 	ldw	ra,24(sp)
  80a1f8:	dd400517 	ldw	r21,20(sp)
  80a1fc:	dd000417 	ldw	r20,16(sp)
  80a200:	dcc00317 	ldw	r19,12(sp)
  80a204:	dc800217 	ldw	r18,8(sp)
  80a208:	dc400117 	ldw	r17,4(sp)
  80a20c:	dc000017 	ldw	r16,0(sp)
  80a210:	dec00704 	addi	sp,sp,28
  80a214:	f800283a 	ret
  80a218:	a0c00e36 	bltu	r20,r3,80a254 <__b2d+0xec>
  80a21c:	293ffd44 	addi	r4,r5,-11
  80a220:	000d883a 	mov	r6,zero
  80a224:	20000f26 	beq	r4,zero,80a264 <__b2d+0xfc>
  80a228:	00800804 	movi	r2,32
  80a22c:	110bc83a 	sub	r5,r2,r4
  80a230:	a0c01236 	bltu	r20,r3,80a27c <__b2d+0x114>
  80a234:	000f883a 	mov	r7,zero
  80a238:	a904983a 	sll	r2,r21,r4
  80a23c:	3146d83a 	srl	r3,r6,r5
  80a240:	3108983a 	sll	r4,r6,r4
  80a244:	108ffc34 	orhi	r2,r2,16368
  80a248:	18a6b03a 	or	r19,r3,r2
  80a24c:	3924b03a 	or	r18,r7,r4
  80a250:	003fe606 	br	80a1ec <__b2d+0x84>
  80a254:	293ffd44 	addi	r4,r5,-11
  80a258:	81bffe17 	ldw	r6,-8(r16)
  80a25c:	80fffe04 	addi	r3,r16,-8
  80a260:	203ff11e 	bne	r4,zero,80a228 <__b2d+0xc0>
  80a264:	accffc34 	orhi	r19,r21,16368
  80a268:	3025883a 	mov	r18,r6
  80a26c:	003fdf06 	br	80a1ec <__b2d+0x84>
  80a270:	18bfff17 	ldw	r2,-4(r3)
  80a274:	110cd83a 	srl	r6,r2,r4
  80a278:	003fd706 	br	80a1d8 <__b2d+0x70>
  80a27c:	18bfff17 	ldw	r2,-4(r3)
  80a280:	114ed83a 	srl	r7,r2,r5
  80a284:	003fec06 	br	80a238 <__b2d+0xd0>

0080a288 <__ratio>:
  80a288:	defff904 	addi	sp,sp,-28
  80a28c:	dc400215 	stw	r17,8(sp)
  80a290:	2823883a 	mov	r17,r5
  80a294:	d80b883a 	mov	r5,sp
  80a298:	dfc00615 	stw	ra,24(sp)
  80a29c:	dd000515 	stw	r20,20(sp)
  80a2a0:	dcc00415 	stw	r19,16(sp)
  80a2a4:	dc800315 	stw	r18,12(sp)
  80a2a8:	2025883a 	mov	r18,r4
  80a2ac:	080a1680 	call	80a168 <__b2d>
  80a2b0:	8809883a 	mov	r4,r17
  80a2b4:	d9400104 	addi	r5,sp,4
  80a2b8:	1027883a 	mov	r19,r2
  80a2bc:	1829883a 	mov	r20,r3
  80a2c0:	080a1680 	call	80a168 <__b2d>
  80a2c4:	89000417 	ldw	r4,16(r17)
  80a2c8:	91c00417 	ldw	r7,16(r18)
  80a2cc:	d9800117 	ldw	r6,4(sp)
  80a2d0:	180b883a 	mov	r5,r3
  80a2d4:	390fc83a 	sub	r7,r7,r4
  80a2d8:	1009883a 	mov	r4,r2
  80a2dc:	d8800017 	ldw	r2,0(sp)
  80a2e0:	380e917a 	slli	r7,r7,5
  80a2e4:	2011883a 	mov	r8,r4
  80a2e8:	1185c83a 	sub	r2,r2,r6
  80a2ec:	11c5883a 	add	r2,r2,r7
  80a2f0:	1006953a 	slli	r3,r2,20
  80a2f4:	2813883a 	mov	r9,r5
  80a2f8:	00800d0e 	bge	zero,r2,80a330 <__ratio+0xa8>
  80a2fc:	1d29883a 	add	r20,r3,r20
  80a300:	a00b883a 	mov	r5,r20
  80a304:	480f883a 	mov	r7,r9
  80a308:	9809883a 	mov	r4,r19
  80a30c:	400d883a 	mov	r6,r8
  80a310:	080ca080 	call	80ca08 <__divdf3>
  80a314:	dfc00617 	ldw	ra,24(sp)
  80a318:	dd000517 	ldw	r20,20(sp)
  80a31c:	dcc00417 	ldw	r19,16(sp)
  80a320:	dc800317 	ldw	r18,12(sp)
  80a324:	dc400217 	ldw	r17,8(sp)
  80a328:	dec00704 	addi	sp,sp,28
  80a32c:	f800283a 	ret
  80a330:	28d3c83a 	sub	r9,r5,r3
  80a334:	003ff206 	br	80a300 <__ratio+0x78>

0080a338 <_mprec_log10>:
  80a338:	defffe04 	addi	sp,sp,-8
  80a33c:	008005c4 	movi	r2,23
  80a340:	dc000015 	stw	r16,0(sp)
  80a344:	dfc00115 	stw	ra,4(sp)
  80a348:	2021883a 	mov	r16,r4
  80a34c:	11000c16 	blt	r2,r4,80a380 <_mprec_log10+0x48>
  80a350:	200490fa 	slli	r2,r4,3
  80a354:	00c02074 	movhi	r3,129
  80a358:	18ffc404 	addi	r3,r3,-240
  80a35c:	10c5883a 	add	r2,r2,r3
  80a360:	12400117 	ldw	r9,4(r2)
  80a364:	12000017 	ldw	r8,0(r2)
  80a368:	4807883a 	mov	r3,r9
  80a36c:	4005883a 	mov	r2,r8
  80a370:	dfc00117 	ldw	ra,4(sp)
  80a374:	dc000017 	ldw	r16,0(sp)
  80a378:	dec00204 	addi	sp,sp,8
  80a37c:	f800283a 	ret
  80a380:	0011883a 	mov	r8,zero
  80a384:	024ffc34 	movhi	r9,16368
  80a388:	0005883a 	mov	r2,zero
  80a38c:	00d00934 	movhi	r3,16420
  80a390:	480b883a 	mov	r5,r9
  80a394:	4009883a 	mov	r4,r8
  80a398:	180f883a 	mov	r7,r3
  80a39c:	100d883a 	mov	r6,r2
  80a3a0:	080369c0 	call	80369c <__muldf3>
  80a3a4:	843fffc4 	addi	r16,r16,-1
  80a3a8:	1011883a 	mov	r8,r2
  80a3ac:	1813883a 	mov	r9,r3
  80a3b0:	803ff51e 	bne	r16,zero,80a388 <_mprec_log10+0x50>
  80a3b4:	4005883a 	mov	r2,r8
  80a3b8:	4807883a 	mov	r3,r9
  80a3bc:	dfc00117 	ldw	ra,4(sp)
  80a3c0:	dc000017 	ldw	r16,0(sp)
  80a3c4:	dec00204 	addi	sp,sp,8
  80a3c8:	f800283a 	ret

0080a3cc <__copybits>:
  80a3cc:	297fffc4 	addi	r5,r5,-1
  80a3d0:	30800417 	ldw	r2,16(r6)
  80a3d4:	280bd17a 	srai	r5,r5,5
  80a3d8:	31800504 	addi	r6,r6,20
  80a3dc:	1085883a 	add	r2,r2,r2
  80a3e0:	294b883a 	add	r5,r5,r5
  80a3e4:	294b883a 	add	r5,r5,r5
  80a3e8:	1085883a 	add	r2,r2,r2
  80a3ec:	290b883a 	add	r5,r5,r4
  80a3f0:	3087883a 	add	r3,r6,r2
  80a3f4:	29400104 	addi	r5,r5,4
  80a3f8:	30c0052e 	bgeu	r6,r3,80a410 <__copybits+0x44>
  80a3fc:	30800017 	ldw	r2,0(r6)
  80a400:	31800104 	addi	r6,r6,4
  80a404:	20800015 	stw	r2,0(r4)
  80a408:	21000104 	addi	r4,r4,4
  80a40c:	30fffb36 	bltu	r6,r3,80a3fc <__copybits+0x30>
  80a410:	2140032e 	bgeu	r4,r5,80a420 <__copybits+0x54>
  80a414:	20000015 	stw	zero,0(r4)
  80a418:	21000104 	addi	r4,r4,4
  80a41c:	217ffd36 	bltu	r4,r5,80a414 <__copybits+0x48>
  80a420:	f800283a 	ret

0080a424 <__any_on>:
  80a424:	20800417 	ldw	r2,16(r4)
  80a428:	2807d17a 	srai	r3,r5,5
  80a42c:	21000504 	addi	r4,r4,20
  80a430:	10c00d0e 	bge	r2,r3,80a468 <__any_on+0x44>
  80a434:	1085883a 	add	r2,r2,r2
  80a438:	1085883a 	add	r2,r2,r2
  80a43c:	208d883a 	add	r6,r4,r2
  80a440:	2180182e 	bgeu	r4,r6,80a4a4 <__any_on+0x80>
  80a444:	30bfff17 	ldw	r2,-4(r6)
  80a448:	30ffff04 	addi	r3,r6,-4
  80a44c:	1000041e 	bne	r2,zero,80a460 <__any_on+0x3c>
  80a450:	20c0142e 	bgeu	r4,r3,80a4a4 <__any_on+0x80>
  80a454:	18ffff04 	addi	r3,r3,-4
  80a458:	18800017 	ldw	r2,0(r3)
  80a45c:	103ffc26 	beq	r2,zero,80a450 <__any_on+0x2c>
  80a460:	00800044 	movi	r2,1
  80a464:	f800283a 	ret
  80a468:	18800a0e 	bge	r3,r2,80a494 <__any_on+0x70>
  80a46c:	294007cc 	andi	r5,r5,31
  80a470:	28000826 	beq	r5,zero,80a494 <__any_on+0x70>
  80a474:	18c5883a 	add	r2,r3,r3
  80a478:	1085883a 	add	r2,r2,r2
  80a47c:	208d883a 	add	r6,r4,r2
  80a480:	30c00017 	ldw	r3,0(r6)
  80a484:	1944d83a 	srl	r2,r3,r5
  80a488:	1144983a 	sll	r2,r2,r5
  80a48c:	18bff41e 	bne	r3,r2,80a460 <__any_on+0x3c>
  80a490:	003feb06 	br	80a440 <__any_on+0x1c>
  80a494:	18c5883a 	add	r2,r3,r3
  80a498:	1085883a 	add	r2,r2,r2
  80a49c:	208d883a 	add	r6,r4,r2
  80a4a0:	003fe706 	br	80a440 <__any_on+0x1c>
  80a4a4:	0005883a 	mov	r2,zero
  80a4a8:	f800283a 	ret

0080a4ac <_Balloc>:
  80a4ac:	20c01317 	ldw	r3,76(r4)
  80a4b0:	defffb04 	addi	sp,sp,-20
  80a4b4:	dcc00315 	stw	r19,12(sp)
  80a4b8:	dc800215 	stw	r18,8(sp)
  80a4bc:	dfc00415 	stw	ra,16(sp)
  80a4c0:	2825883a 	mov	r18,r5
  80a4c4:	dc400115 	stw	r17,4(sp)
  80a4c8:	dc000015 	stw	r16,0(sp)
  80a4cc:	2027883a 	mov	r19,r4
  80a4d0:	01800404 	movi	r6,16
  80a4d4:	01400104 	movi	r5,4
  80a4d8:	18001726 	beq	r3,zero,80a538 <_Balloc+0x8c>
  80a4dc:	01400044 	movi	r5,1
  80a4e0:	9485883a 	add	r2,r18,r18
  80a4e4:	2ca2983a 	sll	r17,r5,r18
  80a4e8:	1085883a 	add	r2,r2,r2
  80a4ec:	10c7883a 	add	r3,r2,r3
  80a4f0:	1c000017 	ldw	r16,0(r3)
  80a4f4:	8c4d883a 	add	r6,r17,r17
  80a4f8:	318d883a 	add	r6,r6,r6
  80a4fc:	9809883a 	mov	r4,r19
  80a500:	31800504 	addi	r6,r6,20
  80a504:	80001226 	beq	r16,zero,80a550 <_Balloc+0xa4>
  80a508:	80800017 	ldw	r2,0(r16)
  80a50c:	18800015 	stw	r2,0(r3)
  80a510:	80000415 	stw	zero,16(r16)
  80a514:	80000315 	stw	zero,12(r16)
  80a518:	8005883a 	mov	r2,r16
  80a51c:	dfc00417 	ldw	ra,16(sp)
  80a520:	dcc00317 	ldw	r19,12(sp)
  80a524:	dc800217 	ldw	r18,8(sp)
  80a528:	dc400117 	ldw	r17,4(sp)
  80a52c:	dc000017 	ldw	r16,0(sp)
  80a530:	dec00504 	addi	sp,sp,20
  80a534:	f800283a 	ret
  80a538:	080b90c0 	call	80b90c <_calloc_r>
  80a53c:	1007883a 	mov	r3,r2
  80a540:	0021883a 	mov	r16,zero
  80a544:	98801315 	stw	r2,76(r19)
  80a548:	103fe41e 	bne	r2,zero,80a4dc <_Balloc+0x30>
  80a54c:	003ff206 	br	80a518 <_Balloc+0x6c>
  80a550:	080b90c0 	call	80b90c <_calloc_r>
  80a554:	103ff026 	beq	r2,zero,80a518 <_Balloc+0x6c>
  80a558:	1021883a 	mov	r16,r2
  80a55c:	14800115 	stw	r18,4(r2)
  80a560:	14400215 	stw	r17,8(r2)
  80a564:	003fea06 	br	80a510 <_Balloc+0x64>

0080a568 <__d2b>:
  80a568:	defff504 	addi	sp,sp,-44
  80a56c:	dcc00515 	stw	r19,20(sp)
  80a570:	04c00044 	movi	r19,1
  80a574:	dc000215 	stw	r16,8(sp)
  80a578:	2821883a 	mov	r16,r5
  80a57c:	980b883a 	mov	r5,r19
  80a580:	ddc00915 	stw	r23,36(sp)
  80a584:	dd800815 	stw	r22,32(sp)
  80a588:	dd400715 	stw	r21,28(sp)
  80a58c:	dd000615 	stw	r20,24(sp)
  80a590:	dc800415 	stw	r18,16(sp)
  80a594:	dc400315 	stw	r17,12(sp)
  80a598:	dfc00a15 	stw	ra,40(sp)
  80a59c:	3023883a 	mov	r17,r6
  80a5a0:	382d883a 	mov	r22,r7
  80a5a4:	ddc00b17 	ldw	r23,44(sp)
  80a5a8:	080a4ac0 	call	80a4ac <_Balloc>
  80a5ac:	1025883a 	mov	r18,r2
  80a5b0:	00a00034 	movhi	r2,32768
  80a5b4:	10bfffc4 	addi	r2,r2,-1
  80a5b8:	8888703a 	and	r4,r17,r2
  80a5bc:	202ad53a 	srli	r21,r4,20
  80a5c0:	00800434 	movhi	r2,16
  80a5c4:	10bfffc4 	addi	r2,r2,-1
  80a5c8:	8886703a 	and	r3,r17,r2
  80a5cc:	a829003a 	cmpeq	r20,r21,zero
  80a5d0:	800b883a 	mov	r5,r16
  80a5d4:	d8c00115 	stw	r3,4(sp)
  80a5d8:	94000504 	addi	r16,r18,20
  80a5dc:	a000021e 	bne	r20,zero,80a5e8 <__d2b+0x80>
  80a5e0:	18c00434 	orhi	r3,r3,16
  80a5e4:	d8c00115 	stw	r3,4(sp)
  80a5e8:	28002726 	beq	r5,zero,80a688 <__d2b+0x120>
  80a5ec:	d809883a 	mov	r4,sp
  80a5f0:	d9400015 	stw	r5,0(sp)
  80a5f4:	0809fc40 	call	809fc4 <__lo0bits>
  80a5f8:	100d883a 	mov	r6,r2
  80a5fc:	10003526 	beq	r2,zero,80a6d4 <__d2b+0x16c>
  80a600:	d8c00117 	ldw	r3,4(sp)
  80a604:	00800804 	movi	r2,32
  80a608:	1185c83a 	sub	r2,r2,r6
  80a60c:	d9000017 	ldw	r4,0(sp)
  80a610:	1886983a 	sll	r3,r3,r2
  80a614:	1906b03a 	or	r3,r3,r4
  80a618:	90c00515 	stw	r3,20(r18)
  80a61c:	d8c00117 	ldw	r3,4(sp)
  80a620:	1986d83a 	srl	r3,r3,r6
  80a624:	d8c00115 	stw	r3,4(sp)
  80a628:	180b003a 	cmpeq	r5,r3,zero
  80a62c:	00800084 	movi	r2,2
  80a630:	114bc83a 	sub	r5,r2,r5
  80a634:	80c00115 	stw	r3,4(r16)
  80a638:	91400415 	stw	r5,16(r18)
  80a63c:	a0001a1e 	bne	r20,zero,80a6a8 <__d2b+0x140>
  80a640:	3545883a 	add	r2,r6,r21
  80a644:	10bef344 	addi	r2,r2,-1075
  80a648:	00c00d44 	movi	r3,53
  80a64c:	b0800015 	stw	r2,0(r22)
  80a650:	1987c83a 	sub	r3,r3,r6
  80a654:	b8c00015 	stw	r3,0(r23)
  80a658:	9005883a 	mov	r2,r18
  80a65c:	dfc00a17 	ldw	ra,40(sp)
  80a660:	ddc00917 	ldw	r23,36(sp)
  80a664:	dd800817 	ldw	r22,32(sp)
  80a668:	dd400717 	ldw	r21,28(sp)
  80a66c:	dd000617 	ldw	r20,24(sp)
  80a670:	dcc00517 	ldw	r19,20(sp)
  80a674:	dc800417 	ldw	r18,16(sp)
  80a678:	dc400317 	ldw	r17,12(sp)
  80a67c:	dc000217 	ldw	r16,8(sp)
  80a680:	dec00b04 	addi	sp,sp,44
  80a684:	f800283a 	ret
  80a688:	d9000104 	addi	r4,sp,4
  80a68c:	0809fc40 	call	809fc4 <__lo0bits>
  80a690:	11800804 	addi	r6,r2,32
  80a694:	d8800117 	ldw	r2,4(sp)
  80a698:	94c00415 	stw	r19,16(r18)
  80a69c:	980b883a 	mov	r5,r19
  80a6a0:	90800515 	stw	r2,20(r18)
  80a6a4:	a03fe626 	beq	r20,zero,80a640 <__d2b+0xd8>
  80a6a8:	2945883a 	add	r2,r5,r5
  80a6ac:	1085883a 	add	r2,r2,r2
  80a6b0:	1405883a 	add	r2,r2,r16
  80a6b4:	113fff17 	ldw	r4,-4(r2)
  80a6b8:	30fef384 	addi	r3,r6,-1074
  80a6bc:	2820917a 	slli	r16,r5,5
  80a6c0:	b0c00015 	stw	r3,0(r22)
  80a6c4:	0809f540 	call	809f54 <__hi0bits>
  80a6c8:	80a1c83a 	sub	r16,r16,r2
  80a6cc:	bc000015 	stw	r16,0(r23)
  80a6d0:	003fe106 	br	80a658 <__d2b+0xf0>
  80a6d4:	d8800017 	ldw	r2,0(sp)
  80a6d8:	90800515 	stw	r2,20(r18)
  80a6dc:	d8c00117 	ldw	r3,4(sp)
  80a6e0:	003fd106 	br	80a628 <__d2b+0xc0>

0080a6e4 <__mdiff>:
  80a6e4:	defffb04 	addi	sp,sp,-20
  80a6e8:	dc000015 	stw	r16,0(sp)
  80a6ec:	2821883a 	mov	r16,r5
  80a6f0:	dc800215 	stw	r18,8(sp)
  80a6f4:	300b883a 	mov	r5,r6
  80a6f8:	2025883a 	mov	r18,r4
  80a6fc:	8009883a 	mov	r4,r16
  80a700:	dc400115 	stw	r17,4(sp)
  80a704:	dfc00415 	stw	ra,16(sp)
  80a708:	dcc00315 	stw	r19,12(sp)
  80a70c:	3023883a 	mov	r17,r6
  80a710:	080a0880 	call	80a088 <__mcmp>
  80a714:	10004226 	beq	r2,zero,80a820 <__mdiff+0x13c>
  80a718:	10005016 	blt	r2,zero,80a85c <__mdiff+0x178>
  80a71c:	0027883a 	mov	r19,zero
  80a720:	81400117 	ldw	r5,4(r16)
  80a724:	9009883a 	mov	r4,r18
  80a728:	080a4ac0 	call	80a4ac <_Balloc>
  80a72c:	1019883a 	mov	r12,r2
  80a730:	82800417 	ldw	r10,16(r16)
  80a734:	88800417 	ldw	r2,16(r17)
  80a738:	81800504 	addi	r6,r16,20
  80a73c:	5287883a 	add	r3,r10,r10
  80a740:	1085883a 	add	r2,r2,r2
  80a744:	18c7883a 	add	r3,r3,r3
  80a748:	1085883a 	add	r2,r2,r2
  80a74c:	8a000504 	addi	r8,r17,20
  80a750:	64c00315 	stw	r19,12(r12)
  80a754:	30db883a 	add	r13,r6,r3
  80a758:	4097883a 	add	r11,r8,r2
  80a75c:	61c00504 	addi	r7,r12,20
  80a760:	0013883a 	mov	r9,zero
  80a764:	31000017 	ldw	r4,0(r6)
  80a768:	41400017 	ldw	r5,0(r8)
  80a76c:	42000104 	addi	r8,r8,4
  80a770:	20bfffcc 	andi	r2,r4,65535
  80a774:	28ffffcc 	andi	r3,r5,65535
  80a778:	10c5c83a 	sub	r2,r2,r3
  80a77c:	1245883a 	add	r2,r2,r9
  80a780:	2008d43a 	srli	r4,r4,16
  80a784:	280ad43a 	srli	r5,r5,16
  80a788:	1007d43a 	srai	r3,r2,16
  80a78c:	3880000d 	sth	r2,0(r7)
  80a790:	2149c83a 	sub	r4,r4,r5
  80a794:	20c9883a 	add	r4,r4,r3
  80a798:	3900008d 	sth	r4,2(r7)
  80a79c:	31800104 	addi	r6,r6,4
  80a7a0:	39c00104 	addi	r7,r7,4
  80a7a4:	2013d43a 	srai	r9,r4,16
  80a7a8:	42ffee36 	bltu	r8,r11,80a764 <__mdiff+0x80>
  80a7ac:	33400c2e 	bgeu	r6,r13,80a7e0 <__mdiff+0xfc>
  80a7b0:	30800017 	ldw	r2,0(r6)
  80a7b4:	31800104 	addi	r6,r6,4
  80a7b8:	10ffffcc 	andi	r3,r2,65535
  80a7bc:	1a47883a 	add	r3,r3,r9
  80a7c0:	1004d43a 	srli	r2,r2,16
  80a7c4:	1809d43a 	srai	r4,r3,16
  80a7c8:	38c0000d 	sth	r3,0(r7)
  80a7cc:	1105883a 	add	r2,r2,r4
  80a7d0:	3880008d 	sth	r2,2(r7)
  80a7d4:	1013d43a 	srai	r9,r2,16
  80a7d8:	39c00104 	addi	r7,r7,4
  80a7dc:	337ff436 	bltu	r6,r13,80a7b0 <__mdiff+0xcc>
  80a7e0:	38bfff17 	ldw	r2,-4(r7)
  80a7e4:	38ffff04 	addi	r3,r7,-4
  80a7e8:	1000041e 	bne	r2,zero,80a7fc <__mdiff+0x118>
  80a7ec:	18ffff04 	addi	r3,r3,-4
  80a7f0:	18800017 	ldw	r2,0(r3)
  80a7f4:	52bfffc4 	addi	r10,r10,-1
  80a7f8:	103ffc26 	beq	r2,zero,80a7ec <__mdiff+0x108>
  80a7fc:	6005883a 	mov	r2,r12
  80a800:	62800415 	stw	r10,16(r12)
  80a804:	dfc00417 	ldw	ra,16(sp)
  80a808:	dcc00317 	ldw	r19,12(sp)
  80a80c:	dc800217 	ldw	r18,8(sp)
  80a810:	dc400117 	ldw	r17,4(sp)
  80a814:	dc000017 	ldw	r16,0(sp)
  80a818:	dec00504 	addi	sp,sp,20
  80a81c:	f800283a 	ret
  80a820:	9009883a 	mov	r4,r18
  80a824:	000b883a 	mov	r5,zero
  80a828:	080a4ac0 	call	80a4ac <_Balloc>
  80a82c:	1019883a 	mov	r12,r2
  80a830:	00800044 	movi	r2,1
  80a834:	60800415 	stw	r2,16(r12)
  80a838:	6005883a 	mov	r2,r12
  80a83c:	60000515 	stw	zero,20(r12)
  80a840:	dfc00417 	ldw	ra,16(sp)
  80a844:	dcc00317 	ldw	r19,12(sp)
  80a848:	dc800217 	ldw	r18,8(sp)
  80a84c:	dc400117 	ldw	r17,4(sp)
  80a850:	dc000017 	ldw	r16,0(sp)
  80a854:	dec00504 	addi	sp,sp,20
  80a858:	f800283a 	ret
  80a85c:	880d883a 	mov	r6,r17
  80a860:	04c00044 	movi	r19,1
  80a864:	8023883a 	mov	r17,r16
  80a868:	3021883a 	mov	r16,r6
  80a86c:	003fac06 	br	80a720 <__mdiff+0x3c>

0080a870 <__lshift>:
  80a870:	defff904 	addi	sp,sp,-28
  80a874:	28800417 	ldw	r2,16(r5)
  80a878:	dc000015 	stw	r16,0(sp)
  80a87c:	3021d17a 	srai	r16,r6,5
  80a880:	28c00217 	ldw	r3,8(r5)
  80a884:	10800044 	addi	r2,r2,1
  80a888:	dc400115 	stw	r17,4(sp)
  80a88c:	80a3883a 	add	r17,r16,r2
  80a890:	dd400515 	stw	r21,20(sp)
  80a894:	dd000415 	stw	r20,16(sp)
  80a898:	dc800215 	stw	r18,8(sp)
  80a89c:	dfc00615 	stw	ra,24(sp)
  80a8a0:	2825883a 	mov	r18,r5
  80a8a4:	dcc00315 	stw	r19,12(sp)
  80a8a8:	3029883a 	mov	r20,r6
  80a8ac:	202b883a 	mov	r21,r4
  80a8b0:	29400117 	ldw	r5,4(r5)
  80a8b4:	1c40030e 	bge	r3,r17,80a8c4 <__lshift+0x54>
  80a8b8:	18c7883a 	add	r3,r3,r3
  80a8bc:	29400044 	addi	r5,r5,1
  80a8c0:	1c7ffd16 	blt	r3,r17,80a8b8 <__lshift+0x48>
  80a8c4:	a809883a 	mov	r4,r21
  80a8c8:	080a4ac0 	call	80a4ac <_Balloc>
  80a8cc:	1027883a 	mov	r19,r2
  80a8d0:	11400504 	addi	r5,r2,20
  80a8d4:	0400090e 	bge	zero,r16,80a8fc <__lshift+0x8c>
  80a8d8:	2805883a 	mov	r2,r5
  80a8dc:	0007883a 	mov	r3,zero
  80a8e0:	18c00044 	addi	r3,r3,1
  80a8e4:	10000015 	stw	zero,0(r2)
  80a8e8:	10800104 	addi	r2,r2,4
  80a8ec:	80fffc1e 	bne	r16,r3,80a8e0 <__lshift+0x70>
  80a8f0:	8405883a 	add	r2,r16,r16
  80a8f4:	1085883a 	add	r2,r2,r2
  80a8f8:	288b883a 	add	r5,r5,r2
  80a8fc:	90800417 	ldw	r2,16(r18)
  80a900:	91000504 	addi	r4,r18,20
  80a904:	a18007cc 	andi	r6,r20,31
  80a908:	1085883a 	add	r2,r2,r2
  80a90c:	1085883a 	add	r2,r2,r2
  80a910:	208f883a 	add	r7,r4,r2
  80a914:	30001e26 	beq	r6,zero,80a990 <__lshift+0x120>
  80a918:	00800804 	movi	r2,32
  80a91c:	1191c83a 	sub	r8,r2,r6
  80a920:	0007883a 	mov	r3,zero
  80a924:	20800017 	ldw	r2,0(r4)
  80a928:	1184983a 	sll	r2,r2,r6
  80a92c:	1884b03a 	or	r2,r3,r2
  80a930:	28800015 	stw	r2,0(r5)
  80a934:	20c00017 	ldw	r3,0(r4)
  80a938:	21000104 	addi	r4,r4,4
  80a93c:	29400104 	addi	r5,r5,4
  80a940:	1a06d83a 	srl	r3,r3,r8
  80a944:	21fff736 	bltu	r4,r7,80a924 <__lshift+0xb4>
  80a948:	28c00015 	stw	r3,0(r5)
  80a94c:	18000126 	beq	r3,zero,80a954 <__lshift+0xe4>
  80a950:	8c400044 	addi	r17,r17,1
  80a954:	88bfffc4 	addi	r2,r17,-1
  80a958:	98800415 	stw	r2,16(r19)
  80a95c:	a809883a 	mov	r4,r21
  80a960:	900b883a 	mov	r5,r18
  80a964:	0809f2c0 	call	809f2c <_Bfree>
  80a968:	9805883a 	mov	r2,r19
  80a96c:	dfc00617 	ldw	ra,24(sp)
  80a970:	dd400517 	ldw	r21,20(sp)
  80a974:	dd000417 	ldw	r20,16(sp)
  80a978:	dcc00317 	ldw	r19,12(sp)
  80a97c:	dc800217 	ldw	r18,8(sp)
  80a980:	dc400117 	ldw	r17,4(sp)
  80a984:	dc000017 	ldw	r16,0(sp)
  80a988:	dec00704 	addi	sp,sp,28
  80a98c:	f800283a 	ret
  80a990:	20800017 	ldw	r2,0(r4)
  80a994:	21000104 	addi	r4,r4,4
  80a998:	28800015 	stw	r2,0(r5)
  80a99c:	29400104 	addi	r5,r5,4
  80a9a0:	21ffec2e 	bgeu	r4,r7,80a954 <__lshift+0xe4>
  80a9a4:	20800017 	ldw	r2,0(r4)
  80a9a8:	21000104 	addi	r4,r4,4
  80a9ac:	28800015 	stw	r2,0(r5)
  80a9b0:	29400104 	addi	r5,r5,4
  80a9b4:	21fff636 	bltu	r4,r7,80a990 <__lshift+0x120>
  80a9b8:	003fe606 	br	80a954 <__lshift+0xe4>

0080a9bc <__multiply>:
  80a9bc:	defff004 	addi	sp,sp,-64
  80a9c0:	dc800815 	stw	r18,32(sp)
  80a9c4:	dc400715 	stw	r17,28(sp)
  80a9c8:	2c800417 	ldw	r18,16(r5)
  80a9cc:	34400417 	ldw	r17,16(r6)
  80a9d0:	dcc00915 	stw	r19,36(sp)
  80a9d4:	dc000615 	stw	r16,24(sp)
  80a9d8:	dfc00f15 	stw	ra,60(sp)
  80a9dc:	df000e15 	stw	fp,56(sp)
  80a9e0:	ddc00d15 	stw	r23,52(sp)
  80a9e4:	dd800c15 	stw	r22,48(sp)
  80a9e8:	dd400b15 	stw	r21,44(sp)
  80a9ec:	dd000a15 	stw	r20,40(sp)
  80a9f0:	2821883a 	mov	r16,r5
  80a9f4:	3027883a 	mov	r19,r6
  80a9f8:	9440040e 	bge	r18,r17,80aa0c <__multiply+0x50>
  80a9fc:	8825883a 	mov	r18,r17
  80aa00:	2c400417 	ldw	r17,16(r5)
  80aa04:	2827883a 	mov	r19,r5
  80aa08:	3021883a 	mov	r16,r6
  80aa0c:	80800217 	ldw	r2,8(r16)
  80aa10:	9447883a 	add	r3,r18,r17
  80aa14:	d8c00415 	stw	r3,16(sp)
  80aa18:	81400117 	ldw	r5,4(r16)
  80aa1c:	10c0010e 	bge	r2,r3,80aa24 <__multiply+0x68>
  80aa20:	29400044 	addi	r5,r5,1
  80aa24:	080a4ac0 	call	80a4ac <_Balloc>
  80aa28:	d8800515 	stw	r2,20(sp)
  80aa2c:	d9000417 	ldw	r4,16(sp)
  80aa30:	d8c00517 	ldw	r3,20(sp)
  80aa34:	2105883a 	add	r2,r4,r4
  80aa38:	1085883a 	add	r2,r2,r2
  80aa3c:	19000504 	addi	r4,r3,20
  80aa40:	2085883a 	add	r2,r4,r2
  80aa44:	d8800315 	stw	r2,12(sp)
  80aa48:	2080052e 	bgeu	r4,r2,80aa60 <__multiply+0xa4>
  80aa4c:	2005883a 	mov	r2,r4
  80aa50:	d8c00317 	ldw	r3,12(sp)
  80aa54:	10000015 	stw	zero,0(r2)
  80aa58:	10800104 	addi	r2,r2,4
  80aa5c:	10fffc36 	bltu	r2,r3,80aa50 <__multiply+0x94>
  80aa60:	8c45883a 	add	r2,r17,r17
  80aa64:	9487883a 	add	r3,r18,r18
  80aa68:	9dc00504 	addi	r23,r19,20
  80aa6c:	1085883a 	add	r2,r2,r2
  80aa70:	84000504 	addi	r16,r16,20
  80aa74:	18c7883a 	add	r3,r3,r3
  80aa78:	b885883a 	add	r2,r23,r2
  80aa7c:	dc000015 	stw	r16,0(sp)
  80aa80:	d8800215 	stw	r2,8(sp)
  80aa84:	80f9883a 	add	fp,r16,r3
  80aa88:	b880432e 	bgeu	r23,r2,80ab98 <__multiply+0x1dc>
  80aa8c:	d9000115 	stw	r4,4(sp)
  80aa90:	b9000017 	ldw	r4,0(r23)
  80aa94:	253fffcc 	andi	r20,r4,65535
  80aa98:	a0001a26 	beq	r20,zero,80ab04 <__multiply+0x148>
  80aa9c:	dcc00017 	ldw	r19,0(sp)
  80aaa0:	dc800117 	ldw	r18,4(sp)
  80aaa4:	002b883a 	mov	r21,zero
  80aaa8:	9c400017 	ldw	r17,0(r19)
  80aaac:	94000017 	ldw	r16,0(r18)
  80aab0:	a009883a 	mov	r4,r20
  80aab4:	897fffcc 	andi	r5,r17,65535
  80aab8:	0803fc00 	call	803fc0 <__mulsi3>
  80aabc:	880ad43a 	srli	r5,r17,16
  80aac0:	80ffffcc 	andi	r3,r16,65535
  80aac4:	a8c7883a 	add	r3,r21,r3
  80aac8:	a009883a 	mov	r4,r20
  80aacc:	10e3883a 	add	r17,r2,r3
  80aad0:	8020d43a 	srli	r16,r16,16
  80aad4:	0803fc00 	call	803fc0 <__mulsi3>
  80aad8:	8806d43a 	srli	r3,r17,16
  80aadc:	1405883a 	add	r2,r2,r16
  80aae0:	9cc00104 	addi	r19,r19,4
  80aae4:	1887883a 	add	r3,r3,r2
  80aae8:	90c0008d 	sth	r3,2(r18)
  80aaec:	9440000d 	sth	r17,0(r18)
  80aaf0:	182ad43a 	srli	r21,r3,16
  80aaf4:	94800104 	addi	r18,r18,4
  80aaf8:	9f3feb36 	bltu	r19,fp,80aaa8 <__multiply+0xec>
  80aafc:	95400015 	stw	r21,0(r18)
  80ab00:	b9000017 	ldw	r4,0(r23)
  80ab04:	202ad43a 	srli	r21,r4,16
  80ab08:	a8001c26 	beq	r21,zero,80ab7c <__multiply+0x1c0>
  80ab0c:	d9000117 	ldw	r4,4(sp)
  80ab10:	dd000017 	ldw	r20,0(sp)
  80ab14:	002d883a 	mov	r22,zero
  80ab18:	24c00017 	ldw	r19,0(r4)
  80ab1c:	2025883a 	mov	r18,r4
  80ab20:	9823883a 	mov	r17,r19
  80ab24:	a4000017 	ldw	r16,0(r20)
  80ab28:	a809883a 	mov	r4,r21
  80ab2c:	a5000104 	addi	r20,r20,4
  80ab30:	817fffcc 	andi	r5,r16,65535
  80ab34:	0803fc00 	call	803fc0 <__mulsi3>
  80ab38:	8806d43a 	srli	r3,r17,16
  80ab3c:	800ad43a 	srli	r5,r16,16
  80ab40:	94c0000d 	sth	r19,0(r18)
  80ab44:	b0c7883a 	add	r3,r22,r3
  80ab48:	10e1883a 	add	r16,r2,r3
  80ab4c:	9400008d 	sth	r16,2(r18)
  80ab50:	a809883a 	mov	r4,r21
  80ab54:	94800104 	addi	r18,r18,4
  80ab58:	0803fc00 	call	803fc0 <__mulsi3>
  80ab5c:	94400017 	ldw	r17,0(r18)
  80ab60:	8020d43a 	srli	r16,r16,16
  80ab64:	88ffffcc 	andi	r3,r17,65535
  80ab68:	10c5883a 	add	r2,r2,r3
  80ab6c:	80a7883a 	add	r19,r16,r2
  80ab70:	982cd43a 	srli	r22,r19,16
  80ab74:	a73feb36 	bltu	r20,fp,80ab24 <__multiply+0x168>
  80ab78:	94c00015 	stw	r19,0(r18)
  80ab7c:	d8800217 	ldw	r2,8(sp)
  80ab80:	bdc00104 	addi	r23,r23,4
  80ab84:	b880042e 	bgeu	r23,r2,80ab98 <__multiply+0x1dc>
  80ab88:	d8c00117 	ldw	r3,4(sp)
  80ab8c:	18c00104 	addi	r3,r3,4
  80ab90:	d8c00115 	stw	r3,4(sp)
  80ab94:	003fbe06 	br	80aa90 <__multiply+0xd4>
  80ab98:	d9000417 	ldw	r4,16(sp)
  80ab9c:	01000c0e 	bge	zero,r4,80abd0 <__multiply+0x214>
  80aba0:	d8c00317 	ldw	r3,12(sp)
  80aba4:	18bfff17 	ldw	r2,-4(r3)
  80aba8:	18ffff04 	addi	r3,r3,-4
  80abac:	10000326 	beq	r2,zero,80abbc <__multiply+0x200>
  80abb0:	00000706 	br	80abd0 <__multiply+0x214>
  80abb4:	18800017 	ldw	r2,0(r3)
  80abb8:	1000051e 	bne	r2,zero,80abd0 <__multiply+0x214>
  80abbc:	d9000417 	ldw	r4,16(sp)
  80abc0:	18ffff04 	addi	r3,r3,-4
  80abc4:	213fffc4 	addi	r4,r4,-1
  80abc8:	d9000415 	stw	r4,16(sp)
  80abcc:	203ff91e 	bne	r4,zero,80abb4 <__multiply+0x1f8>
  80abd0:	d8800417 	ldw	r2,16(sp)
  80abd4:	d8c00517 	ldw	r3,20(sp)
  80abd8:	18800415 	stw	r2,16(r3)
  80abdc:	1805883a 	mov	r2,r3
  80abe0:	dfc00f17 	ldw	ra,60(sp)
  80abe4:	df000e17 	ldw	fp,56(sp)
  80abe8:	ddc00d17 	ldw	r23,52(sp)
  80abec:	dd800c17 	ldw	r22,48(sp)
  80abf0:	dd400b17 	ldw	r21,44(sp)
  80abf4:	dd000a17 	ldw	r20,40(sp)
  80abf8:	dcc00917 	ldw	r19,36(sp)
  80abfc:	dc800817 	ldw	r18,32(sp)
  80ac00:	dc400717 	ldw	r17,28(sp)
  80ac04:	dc000617 	ldw	r16,24(sp)
  80ac08:	dec01004 	addi	sp,sp,64
  80ac0c:	f800283a 	ret

0080ac10 <__i2b>:
  80ac10:	defffd04 	addi	sp,sp,-12
  80ac14:	dc000015 	stw	r16,0(sp)
  80ac18:	04000044 	movi	r16,1
  80ac1c:	dc800115 	stw	r18,4(sp)
  80ac20:	2825883a 	mov	r18,r5
  80ac24:	800b883a 	mov	r5,r16
  80ac28:	dfc00215 	stw	ra,8(sp)
  80ac2c:	080a4ac0 	call	80a4ac <_Balloc>
  80ac30:	14000415 	stw	r16,16(r2)
  80ac34:	14800515 	stw	r18,20(r2)
  80ac38:	dfc00217 	ldw	ra,8(sp)
  80ac3c:	dc800117 	ldw	r18,4(sp)
  80ac40:	dc000017 	ldw	r16,0(sp)
  80ac44:	dec00304 	addi	sp,sp,12
  80ac48:	f800283a 	ret

0080ac4c <__multadd>:
  80ac4c:	defff604 	addi	sp,sp,-40
  80ac50:	dd800615 	stw	r22,24(sp)
  80ac54:	2d800417 	ldw	r22,16(r5)
  80ac58:	df000815 	stw	fp,32(sp)
  80ac5c:	ddc00715 	stw	r23,28(sp)
  80ac60:	dd400515 	stw	r21,20(sp)
  80ac64:	dd000415 	stw	r20,16(sp)
  80ac68:	dcc00315 	stw	r19,12(sp)
  80ac6c:	dc800215 	stw	r18,8(sp)
  80ac70:	dfc00915 	stw	ra,36(sp)
  80ac74:	dc400115 	stw	r17,4(sp)
  80ac78:	dc000015 	stw	r16,0(sp)
  80ac7c:	282f883a 	mov	r23,r5
  80ac80:	2039883a 	mov	fp,r4
  80ac84:	302b883a 	mov	r21,r6
  80ac88:	3829883a 	mov	r20,r7
  80ac8c:	2c800504 	addi	r18,r5,20
  80ac90:	0027883a 	mov	r19,zero
  80ac94:	94400017 	ldw	r17,0(r18)
  80ac98:	a80b883a 	mov	r5,r21
  80ac9c:	9cc00044 	addi	r19,r19,1
  80aca0:	893fffcc 	andi	r4,r17,65535
  80aca4:	0803fc00 	call	803fc0 <__mulsi3>
  80aca8:	8808d43a 	srli	r4,r17,16
  80acac:	1521883a 	add	r16,r2,r20
  80acb0:	a80b883a 	mov	r5,r21
  80acb4:	0803fc00 	call	803fc0 <__mulsi3>
  80acb8:	8008d43a 	srli	r4,r16,16
  80acbc:	843fffcc 	andi	r16,r16,65535
  80acc0:	1105883a 	add	r2,r2,r4
  80acc4:	1006943a 	slli	r3,r2,16
  80acc8:	1028d43a 	srli	r20,r2,16
  80accc:	1c07883a 	add	r3,r3,r16
  80acd0:	90c00015 	stw	r3,0(r18)
  80acd4:	94800104 	addi	r18,r18,4
  80acd8:	9dbfee16 	blt	r19,r22,80ac94 <__multadd+0x48>
  80acdc:	a0000826 	beq	r20,zero,80ad00 <__multadd+0xb4>
  80ace0:	b8800217 	ldw	r2,8(r23)
  80ace4:	b080130e 	bge	r22,r2,80ad34 <__multadd+0xe8>
  80ace8:	b585883a 	add	r2,r22,r22
  80acec:	1085883a 	add	r2,r2,r2
  80acf0:	15c5883a 	add	r2,r2,r23
  80acf4:	b0c00044 	addi	r3,r22,1
  80acf8:	15000515 	stw	r20,20(r2)
  80acfc:	b8c00415 	stw	r3,16(r23)
  80ad00:	b805883a 	mov	r2,r23
  80ad04:	dfc00917 	ldw	ra,36(sp)
  80ad08:	df000817 	ldw	fp,32(sp)
  80ad0c:	ddc00717 	ldw	r23,28(sp)
  80ad10:	dd800617 	ldw	r22,24(sp)
  80ad14:	dd400517 	ldw	r21,20(sp)
  80ad18:	dd000417 	ldw	r20,16(sp)
  80ad1c:	dcc00317 	ldw	r19,12(sp)
  80ad20:	dc800217 	ldw	r18,8(sp)
  80ad24:	dc400117 	ldw	r17,4(sp)
  80ad28:	dc000017 	ldw	r16,0(sp)
  80ad2c:	dec00a04 	addi	sp,sp,40
  80ad30:	f800283a 	ret
  80ad34:	b9400117 	ldw	r5,4(r23)
  80ad38:	e009883a 	mov	r4,fp
  80ad3c:	29400044 	addi	r5,r5,1
  80ad40:	080a4ac0 	call	80a4ac <_Balloc>
  80ad44:	b9800417 	ldw	r6,16(r23)
  80ad48:	b9400304 	addi	r5,r23,12
  80ad4c:	11000304 	addi	r4,r2,12
  80ad50:	318d883a 	add	r6,r6,r6
  80ad54:	318d883a 	add	r6,r6,r6
  80ad58:	31800204 	addi	r6,r6,8
  80ad5c:	1023883a 	mov	r17,r2
  80ad60:	0809d140 	call	809d14 <memcpy>
  80ad64:	b80b883a 	mov	r5,r23
  80ad68:	e009883a 	mov	r4,fp
  80ad6c:	0809f2c0 	call	809f2c <_Bfree>
  80ad70:	882f883a 	mov	r23,r17
  80ad74:	003fdc06 	br	80ace8 <__multadd+0x9c>

0080ad78 <__pow5mult>:
  80ad78:	defffa04 	addi	sp,sp,-24
  80ad7c:	308000cc 	andi	r2,r6,3
  80ad80:	dd000415 	stw	r20,16(sp)
  80ad84:	dcc00315 	stw	r19,12(sp)
  80ad88:	dc000015 	stw	r16,0(sp)
  80ad8c:	dfc00515 	stw	ra,20(sp)
  80ad90:	dc800215 	stw	r18,8(sp)
  80ad94:	dc400115 	stw	r17,4(sp)
  80ad98:	3021883a 	mov	r16,r6
  80ad9c:	2027883a 	mov	r19,r4
  80ada0:	2829883a 	mov	r20,r5
  80ada4:	10002b1e 	bne	r2,zero,80ae54 <__pow5mult+0xdc>
  80ada8:	8025d0ba 	srai	r18,r16,2
  80adac:	90001b26 	beq	r18,zero,80ae1c <__pow5mult+0xa4>
  80adb0:	9c001217 	ldw	r16,72(r19)
  80adb4:	8000081e 	bne	r16,zero,80add8 <__pow5mult+0x60>
  80adb8:	00003006 	br	80ae7c <__pow5mult+0x104>
  80adbc:	800b883a 	mov	r5,r16
  80adc0:	800d883a 	mov	r6,r16
  80adc4:	9809883a 	mov	r4,r19
  80adc8:	90001426 	beq	r18,zero,80ae1c <__pow5mult+0xa4>
  80adcc:	80800017 	ldw	r2,0(r16)
  80add0:	10001b26 	beq	r2,zero,80ae40 <__pow5mult+0xc8>
  80add4:	1021883a 	mov	r16,r2
  80add8:	9080004c 	andi	r2,r18,1
  80addc:	1005003a 	cmpeq	r2,r2,zero
  80ade0:	9025d07a 	srai	r18,r18,1
  80ade4:	800d883a 	mov	r6,r16
  80ade8:	9809883a 	mov	r4,r19
  80adec:	a00b883a 	mov	r5,r20
  80adf0:	103ff21e 	bne	r2,zero,80adbc <__pow5mult+0x44>
  80adf4:	080a9bc0 	call	80a9bc <__multiply>
  80adf8:	a00b883a 	mov	r5,r20
  80adfc:	9809883a 	mov	r4,r19
  80ae00:	1023883a 	mov	r17,r2
  80ae04:	0809f2c0 	call	809f2c <_Bfree>
  80ae08:	8829883a 	mov	r20,r17
  80ae0c:	800b883a 	mov	r5,r16
  80ae10:	800d883a 	mov	r6,r16
  80ae14:	9809883a 	mov	r4,r19
  80ae18:	903fec1e 	bne	r18,zero,80adcc <__pow5mult+0x54>
  80ae1c:	a005883a 	mov	r2,r20
  80ae20:	dfc00517 	ldw	ra,20(sp)
  80ae24:	dd000417 	ldw	r20,16(sp)
  80ae28:	dcc00317 	ldw	r19,12(sp)
  80ae2c:	dc800217 	ldw	r18,8(sp)
  80ae30:	dc400117 	ldw	r17,4(sp)
  80ae34:	dc000017 	ldw	r16,0(sp)
  80ae38:	dec00604 	addi	sp,sp,24
  80ae3c:	f800283a 	ret
  80ae40:	080a9bc0 	call	80a9bc <__multiply>
  80ae44:	80800015 	stw	r2,0(r16)
  80ae48:	1021883a 	mov	r16,r2
  80ae4c:	10000015 	stw	zero,0(r2)
  80ae50:	003fe106 	br	80add8 <__pow5mult+0x60>
  80ae54:	1085883a 	add	r2,r2,r2
  80ae58:	00c02074 	movhi	r3,129
  80ae5c:	18c00a04 	addi	r3,r3,40
  80ae60:	1085883a 	add	r2,r2,r2
  80ae64:	10c5883a 	add	r2,r2,r3
  80ae68:	11bfff17 	ldw	r6,-4(r2)
  80ae6c:	000f883a 	mov	r7,zero
  80ae70:	080ac4c0 	call	80ac4c <__multadd>
  80ae74:	1029883a 	mov	r20,r2
  80ae78:	003fcb06 	br	80ada8 <__pow5mult+0x30>
  80ae7c:	9809883a 	mov	r4,r19
  80ae80:	01409c44 	movi	r5,625
  80ae84:	080ac100 	call	80ac10 <__i2b>
  80ae88:	98801215 	stw	r2,72(r19)
  80ae8c:	1021883a 	mov	r16,r2
  80ae90:	10000015 	stw	zero,0(r2)
  80ae94:	003fd006 	br	80add8 <__pow5mult+0x60>

0080ae98 <__s2b>:
  80ae98:	defff904 	addi	sp,sp,-28
  80ae9c:	dcc00315 	stw	r19,12(sp)
  80aea0:	dc800215 	stw	r18,8(sp)
  80aea4:	2827883a 	mov	r19,r5
  80aea8:	2025883a 	mov	r18,r4
  80aeac:	01400244 	movi	r5,9
  80aeb0:	39000204 	addi	r4,r7,8
  80aeb4:	dd000415 	stw	r20,16(sp)
  80aeb8:	dc400115 	stw	r17,4(sp)
  80aebc:	dfc00615 	stw	ra,24(sp)
  80aec0:	dd400515 	stw	r21,20(sp)
  80aec4:	dc000015 	stw	r16,0(sp)
  80aec8:	3829883a 	mov	r20,r7
  80aecc:	3023883a 	mov	r17,r6
  80aed0:	0803ef00 	call	803ef0 <__divsi3>
  80aed4:	00c00044 	movi	r3,1
  80aed8:	1880350e 	bge	r3,r2,80afb0 <__s2b+0x118>
  80aedc:	000b883a 	mov	r5,zero
  80aee0:	18c7883a 	add	r3,r3,r3
  80aee4:	29400044 	addi	r5,r5,1
  80aee8:	18bffd16 	blt	r3,r2,80aee0 <__s2b+0x48>
  80aeec:	9009883a 	mov	r4,r18
  80aef0:	080a4ac0 	call	80a4ac <_Balloc>
  80aef4:	1011883a 	mov	r8,r2
  80aef8:	d8800717 	ldw	r2,28(sp)
  80aefc:	00c00044 	movi	r3,1
  80af00:	01800244 	movi	r6,9
  80af04:	40800515 	stw	r2,20(r8)
  80af08:	40c00415 	stw	r3,16(r8)
  80af0c:	3440260e 	bge	r6,r17,80afa8 <__s2b+0x110>
  80af10:	3021883a 	mov	r16,r6
  80af14:	99ab883a 	add	r21,r19,r6
  80af18:	9c05883a 	add	r2,r19,r16
  80af1c:	11c00007 	ldb	r7,0(r2)
  80af20:	400b883a 	mov	r5,r8
  80af24:	9009883a 	mov	r4,r18
  80af28:	39fff404 	addi	r7,r7,-48
  80af2c:	01800284 	movi	r6,10
  80af30:	080ac4c0 	call	80ac4c <__multadd>
  80af34:	84000044 	addi	r16,r16,1
  80af38:	1011883a 	mov	r8,r2
  80af3c:	8c3ff61e 	bne	r17,r16,80af18 <__s2b+0x80>
  80af40:	ac45883a 	add	r2,r21,r17
  80af44:	117ffe04 	addi	r5,r2,-8
  80af48:	880d883a 	mov	r6,r17
  80af4c:	35000c0e 	bge	r6,r20,80af80 <__s2b+0xe8>
  80af50:	a185c83a 	sub	r2,r20,r6
  80af54:	2821883a 	mov	r16,r5
  80af58:	28a3883a 	add	r17,r5,r2
  80af5c:	81c00007 	ldb	r7,0(r16)
  80af60:	400b883a 	mov	r5,r8
  80af64:	9009883a 	mov	r4,r18
  80af68:	39fff404 	addi	r7,r7,-48
  80af6c:	01800284 	movi	r6,10
  80af70:	080ac4c0 	call	80ac4c <__multadd>
  80af74:	84000044 	addi	r16,r16,1
  80af78:	1011883a 	mov	r8,r2
  80af7c:	847ff71e 	bne	r16,r17,80af5c <__s2b+0xc4>
  80af80:	4005883a 	mov	r2,r8
  80af84:	dfc00617 	ldw	ra,24(sp)
  80af88:	dd400517 	ldw	r21,20(sp)
  80af8c:	dd000417 	ldw	r20,16(sp)
  80af90:	dcc00317 	ldw	r19,12(sp)
  80af94:	dc800217 	ldw	r18,8(sp)
  80af98:	dc400117 	ldw	r17,4(sp)
  80af9c:	dc000017 	ldw	r16,0(sp)
  80afa0:	dec00704 	addi	sp,sp,28
  80afa4:	f800283a 	ret
  80afa8:	99400284 	addi	r5,r19,10
  80afac:	003fe706 	br	80af4c <__s2b+0xb4>
  80afb0:	000b883a 	mov	r5,zero
  80afb4:	003fcd06 	br	80aeec <__s2b+0x54>

0080afb8 <_realloc_r>:
  80afb8:	defff404 	addi	sp,sp,-48
  80afbc:	dd800815 	stw	r22,32(sp)
  80afc0:	dc800415 	stw	r18,16(sp)
  80afc4:	dc400315 	stw	r17,12(sp)
  80afc8:	dfc00b15 	stw	ra,44(sp)
  80afcc:	df000a15 	stw	fp,40(sp)
  80afd0:	ddc00915 	stw	r23,36(sp)
  80afd4:	dd400715 	stw	r21,28(sp)
  80afd8:	dd000615 	stw	r20,24(sp)
  80afdc:	dcc00515 	stw	r19,20(sp)
  80afe0:	dc000215 	stw	r16,8(sp)
  80afe4:	2825883a 	mov	r18,r5
  80afe8:	3023883a 	mov	r17,r6
  80afec:	202d883a 	mov	r22,r4
  80aff0:	2800c926 	beq	r5,zero,80b318 <_realloc_r+0x360>
  80aff4:	080d5980 	call	80d598 <__malloc_lock>
  80aff8:	943ffe04 	addi	r16,r18,-8
  80affc:	88c002c4 	addi	r3,r17,11
  80b000:	00800584 	movi	r2,22
  80b004:	82000117 	ldw	r8,4(r16)
  80b008:	10c01b2e 	bgeu	r2,r3,80b078 <_realloc_r+0xc0>
  80b00c:	00bffe04 	movi	r2,-8
  80b010:	188e703a 	and	r7,r3,r2
  80b014:	3839883a 	mov	fp,r7
  80b018:	38001a16 	blt	r7,zero,80b084 <_realloc_r+0xcc>
  80b01c:	e4401936 	bltu	fp,r17,80b084 <_realloc_r+0xcc>
  80b020:	013fff04 	movi	r4,-4
  80b024:	4126703a 	and	r19,r8,r4
  80b028:	99c02616 	blt	r19,r7,80b0c4 <_realloc_r+0x10c>
  80b02c:	802b883a 	mov	r21,r16
  80b030:	9829883a 	mov	r20,r19
  80b034:	84000204 	addi	r16,r16,8
  80b038:	a80f883a 	mov	r7,r21
  80b03c:	a70dc83a 	sub	r6,r20,fp
  80b040:	008003c4 	movi	r2,15
  80b044:	1180c136 	bltu	r2,r6,80b34c <_realloc_r+0x394>
  80b048:	38800117 	ldw	r2,4(r7)
  80b04c:	a549883a 	add	r4,r20,r21
  80b050:	1080004c 	andi	r2,r2,1
  80b054:	a084b03a 	or	r2,r20,r2
  80b058:	38800115 	stw	r2,4(r7)
  80b05c:	20c00117 	ldw	r3,4(r4)
  80b060:	18c00054 	ori	r3,r3,1
  80b064:	20c00115 	stw	r3,4(r4)
  80b068:	b009883a 	mov	r4,r22
  80b06c:	080d5b80 	call	80d5b8 <__malloc_unlock>
  80b070:	8023883a 	mov	r17,r16
  80b074:	00000606 	br	80b090 <_realloc_r+0xd8>
  80b078:	01c00404 	movi	r7,16
  80b07c:	3839883a 	mov	fp,r7
  80b080:	e47fe72e 	bgeu	fp,r17,80b020 <_realloc_r+0x68>
  80b084:	00800304 	movi	r2,12
  80b088:	0023883a 	mov	r17,zero
  80b08c:	b0800015 	stw	r2,0(r22)
  80b090:	8805883a 	mov	r2,r17
  80b094:	dfc00b17 	ldw	ra,44(sp)
  80b098:	df000a17 	ldw	fp,40(sp)
  80b09c:	ddc00917 	ldw	r23,36(sp)
  80b0a0:	dd800817 	ldw	r22,32(sp)
  80b0a4:	dd400717 	ldw	r21,28(sp)
  80b0a8:	dd000617 	ldw	r20,24(sp)
  80b0ac:	dcc00517 	ldw	r19,20(sp)
  80b0b0:	dc800417 	ldw	r18,16(sp)
  80b0b4:	dc400317 	ldw	r17,12(sp)
  80b0b8:	dc000217 	ldw	r16,8(sp)
  80b0bc:	dec00c04 	addi	sp,sp,48
  80b0c0:	f800283a 	ret
  80b0c4:	00802074 	movhi	r2,129
  80b0c8:	10811b04 	addi	r2,r2,1132
  80b0cc:	12400217 	ldw	r9,8(r2)
  80b0d0:	84cd883a 	add	r6,r16,r19
  80b0d4:	802b883a 	mov	r21,r16
  80b0d8:	3240b926 	beq	r6,r9,80b3c0 <_realloc_r+0x408>
  80b0dc:	31400117 	ldw	r5,4(r6)
  80b0e0:	00bfff84 	movi	r2,-2
  80b0e4:	2884703a 	and	r2,r5,r2
  80b0e8:	1185883a 	add	r2,r2,r6
  80b0ec:	10c00117 	ldw	r3,4(r2)
  80b0f0:	18c0004c 	andi	r3,r3,1
  80b0f4:	1807003a 	cmpeq	r3,r3,zero
  80b0f8:	1800a326 	beq	r3,zero,80b388 <_realloc_r+0x3d0>
  80b0fc:	2908703a 	and	r4,r5,r4
  80b100:	9929883a 	add	r20,r19,r4
  80b104:	a1c0a30e 	bge	r20,r7,80b394 <_realloc_r+0x3dc>
  80b108:	4080004c 	andi	r2,r8,1
  80b10c:	1000551e 	bne	r2,zero,80b264 <_realloc_r+0x2ac>
  80b110:	80800017 	ldw	r2,0(r16)
  80b114:	80afc83a 	sub	r23,r16,r2
  80b118:	b8c00117 	ldw	r3,4(r23)
  80b11c:	00bfff04 	movi	r2,-4
  80b120:	1884703a 	and	r2,r3,r2
  80b124:	30002e26 	beq	r6,zero,80b1e0 <_realloc_r+0x228>
  80b128:	3240b926 	beq	r6,r9,80b410 <_realloc_r+0x458>
  80b12c:	98a9883a 	add	r20,r19,r2
  80b130:	2509883a 	add	r4,r4,r20
  80b134:	d9000015 	stw	r4,0(sp)
  80b138:	21c02a16 	blt	r4,r7,80b1e4 <_realloc_r+0x22c>
  80b13c:	30800317 	ldw	r2,12(r6)
  80b140:	30c00217 	ldw	r3,8(r6)
  80b144:	01400904 	movi	r5,36
  80b148:	99bfff04 	addi	r6,r19,-4
  80b14c:	18800315 	stw	r2,12(r3)
  80b150:	10c00215 	stw	r3,8(r2)
  80b154:	b9000317 	ldw	r4,12(r23)
  80b158:	b8800217 	ldw	r2,8(r23)
  80b15c:	b82b883a 	mov	r21,r23
  80b160:	bc000204 	addi	r16,r23,8
  80b164:	20800215 	stw	r2,8(r4)
  80b168:	11000315 	stw	r4,12(r2)
  80b16c:	2980e436 	bltu	r5,r6,80b500 <_realloc_r+0x548>
  80b170:	008004c4 	movi	r2,19
  80b174:	9009883a 	mov	r4,r18
  80b178:	8011883a 	mov	r8,r16
  80b17c:	11800f2e 	bgeu	r2,r6,80b1bc <_realloc_r+0x204>
  80b180:	90800017 	ldw	r2,0(r18)
  80b184:	ba000404 	addi	r8,r23,16
  80b188:	91000204 	addi	r4,r18,8
  80b18c:	b8800215 	stw	r2,8(r23)
  80b190:	90c00117 	ldw	r3,4(r18)
  80b194:	008006c4 	movi	r2,27
  80b198:	b8c00315 	stw	r3,12(r23)
  80b19c:	1180072e 	bgeu	r2,r6,80b1bc <_realloc_r+0x204>
  80b1a0:	90c00217 	ldw	r3,8(r18)
  80b1a4:	ba000604 	addi	r8,r23,24
  80b1a8:	91000404 	addi	r4,r18,16
  80b1ac:	b8c00415 	stw	r3,16(r23)
  80b1b0:	90800317 	ldw	r2,12(r18)
  80b1b4:	b8800515 	stw	r2,20(r23)
  80b1b8:	3140e726 	beq	r6,r5,80b558 <_realloc_r+0x5a0>
  80b1bc:	20800017 	ldw	r2,0(r4)
  80b1c0:	dd000017 	ldw	r20,0(sp)
  80b1c4:	b80f883a 	mov	r7,r23
  80b1c8:	40800015 	stw	r2,0(r8)
  80b1cc:	20c00117 	ldw	r3,4(r4)
  80b1d0:	40c00115 	stw	r3,4(r8)
  80b1d4:	20800217 	ldw	r2,8(r4)
  80b1d8:	40800215 	stw	r2,8(r8)
  80b1dc:	003f9706 	br	80b03c <_realloc_r+0x84>
  80b1e0:	98a9883a 	add	r20,r19,r2
  80b1e4:	a1c01f16 	blt	r20,r7,80b264 <_realloc_r+0x2ac>
  80b1e8:	b8c00317 	ldw	r3,12(r23)
  80b1ec:	b8800217 	ldw	r2,8(r23)
  80b1f0:	99bfff04 	addi	r6,r19,-4
  80b1f4:	01400904 	movi	r5,36
  80b1f8:	b82b883a 	mov	r21,r23
  80b1fc:	18800215 	stw	r2,8(r3)
  80b200:	10c00315 	stw	r3,12(r2)
  80b204:	bc000204 	addi	r16,r23,8
  80b208:	2980c336 	bltu	r5,r6,80b518 <_realloc_r+0x560>
  80b20c:	008004c4 	movi	r2,19
  80b210:	9009883a 	mov	r4,r18
  80b214:	8011883a 	mov	r8,r16
  80b218:	11800f2e 	bgeu	r2,r6,80b258 <_realloc_r+0x2a0>
  80b21c:	90800017 	ldw	r2,0(r18)
  80b220:	ba000404 	addi	r8,r23,16
  80b224:	91000204 	addi	r4,r18,8
  80b228:	b8800215 	stw	r2,8(r23)
  80b22c:	90c00117 	ldw	r3,4(r18)
  80b230:	008006c4 	movi	r2,27
  80b234:	b8c00315 	stw	r3,12(r23)
  80b238:	1180072e 	bgeu	r2,r6,80b258 <_realloc_r+0x2a0>
  80b23c:	90c00217 	ldw	r3,8(r18)
  80b240:	ba000604 	addi	r8,r23,24
  80b244:	91000404 	addi	r4,r18,16
  80b248:	b8c00415 	stw	r3,16(r23)
  80b24c:	90800317 	ldw	r2,12(r18)
  80b250:	b8800515 	stw	r2,20(r23)
  80b254:	3140c726 	beq	r6,r5,80b574 <_realloc_r+0x5bc>
  80b258:	20800017 	ldw	r2,0(r4)
  80b25c:	b80f883a 	mov	r7,r23
  80b260:	003fd906 	br	80b1c8 <_realloc_r+0x210>
  80b264:	880b883a 	mov	r5,r17
  80b268:	b009883a 	mov	r4,r22
  80b26c:	08094f00 	call	8094f0 <_malloc_r>
  80b270:	1023883a 	mov	r17,r2
  80b274:	10002526 	beq	r2,zero,80b30c <_realloc_r+0x354>
  80b278:	80800117 	ldw	r2,4(r16)
  80b27c:	00ffff84 	movi	r3,-2
  80b280:	893ffe04 	addi	r4,r17,-8
  80b284:	10c4703a 	and	r2,r2,r3
  80b288:	8085883a 	add	r2,r16,r2
  80b28c:	20809526 	beq	r4,r2,80b4e4 <_realloc_r+0x52c>
  80b290:	99bfff04 	addi	r6,r19,-4
  80b294:	01c00904 	movi	r7,36
  80b298:	39804536 	bltu	r7,r6,80b3b0 <_realloc_r+0x3f8>
  80b29c:	008004c4 	movi	r2,19
  80b2a0:	9009883a 	mov	r4,r18
  80b2a4:	880b883a 	mov	r5,r17
  80b2a8:	11800f2e 	bgeu	r2,r6,80b2e8 <_realloc_r+0x330>
  80b2ac:	90800017 	ldw	r2,0(r18)
  80b2b0:	89400204 	addi	r5,r17,8
  80b2b4:	91000204 	addi	r4,r18,8
  80b2b8:	88800015 	stw	r2,0(r17)
  80b2bc:	90c00117 	ldw	r3,4(r18)
  80b2c0:	008006c4 	movi	r2,27
  80b2c4:	88c00115 	stw	r3,4(r17)
  80b2c8:	1180072e 	bgeu	r2,r6,80b2e8 <_realloc_r+0x330>
  80b2cc:	90c00217 	ldw	r3,8(r18)
  80b2d0:	89400404 	addi	r5,r17,16
  80b2d4:	91000404 	addi	r4,r18,16
  80b2d8:	88c00215 	stw	r3,8(r17)
  80b2dc:	90800317 	ldw	r2,12(r18)
  80b2e0:	88800315 	stw	r2,12(r17)
  80b2e4:	31c09126 	beq	r6,r7,80b52c <_realloc_r+0x574>
  80b2e8:	20800017 	ldw	r2,0(r4)
  80b2ec:	28800015 	stw	r2,0(r5)
  80b2f0:	20c00117 	ldw	r3,4(r4)
  80b2f4:	28c00115 	stw	r3,4(r5)
  80b2f8:	20800217 	ldw	r2,8(r4)
  80b2fc:	28800215 	stw	r2,8(r5)
  80b300:	900b883a 	mov	r5,r18
  80b304:	b009883a 	mov	r4,r22
  80b308:	08089680 	call	808968 <_free_r>
  80b30c:	b009883a 	mov	r4,r22
  80b310:	080d5b80 	call	80d5b8 <__malloc_unlock>
  80b314:	003f5e06 	br	80b090 <_realloc_r+0xd8>
  80b318:	300b883a 	mov	r5,r6
  80b31c:	dfc00b17 	ldw	ra,44(sp)
  80b320:	df000a17 	ldw	fp,40(sp)
  80b324:	ddc00917 	ldw	r23,36(sp)
  80b328:	dd800817 	ldw	r22,32(sp)
  80b32c:	dd400717 	ldw	r21,28(sp)
  80b330:	dd000617 	ldw	r20,24(sp)
  80b334:	dcc00517 	ldw	r19,20(sp)
  80b338:	dc800417 	ldw	r18,16(sp)
  80b33c:	dc400317 	ldw	r17,12(sp)
  80b340:	dc000217 	ldw	r16,8(sp)
  80b344:	dec00c04 	addi	sp,sp,48
  80b348:	08094f01 	jmpi	8094f0 <_malloc_r>
  80b34c:	38800117 	ldw	r2,4(r7)
  80b350:	e54b883a 	add	r5,fp,r21
  80b354:	31000054 	ori	r4,r6,1
  80b358:	1080004c 	andi	r2,r2,1
  80b35c:	1704b03a 	or	r2,r2,fp
  80b360:	38800115 	stw	r2,4(r7)
  80b364:	29000115 	stw	r4,4(r5)
  80b368:	2987883a 	add	r3,r5,r6
  80b36c:	18800117 	ldw	r2,4(r3)
  80b370:	29400204 	addi	r5,r5,8
  80b374:	b009883a 	mov	r4,r22
  80b378:	10800054 	ori	r2,r2,1
  80b37c:	18800115 	stw	r2,4(r3)
  80b380:	08089680 	call	808968 <_free_r>
  80b384:	003f3806 	br	80b068 <_realloc_r+0xb0>
  80b388:	000d883a 	mov	r6,zero
  80b38c:	0009883a 	mov	r4,zero
  80b390:	003f5d06 	br	80b108 <_realloc_r+0x150>
  80b394:	30c00217 	ldw	r3,8(r6)
  80b398:	30800317 	ldw	r2,12(r6)
  80b39c:	800f883a 	mov	r7,r16
  80b3a0:	84000204 	addi	r16,r16,8
  80b3a4:	10c00215 	stw	r3,8(r2)
  80b3a8:	18800315 	stw	r2,12(r3)
  80b3ac:	003f2306 	br	80b03c <_realloc_r+0x84>
  80b3b0:	8809883a 	mov	r4,r17
  80b3b4:	900b883a 	mov	r5,r18
  80b3b8:	0809db40 	call	809db4 <memmove>
  80b3bc:	003fd006 	br	80b300 <_realloc_r+0x348>
  80b3c0:	30800117 	ldw	r2,4(r6)
  80b3c4:	e0c00404 	addi	r3,fp,16
  80b3c8:	1108703a 	and	r4,r2,r4
  80b3cc:	9905883a 	add	r2,r19,r4
  80b3d0:	10ff4d16 	blt	r2,r3,80b108 <_realloc_r+0x150>
  80b3d4:	1705c83a 	sub	r2,r2,fp
  80b3d8:	870b883a 	add	r5,r16,fp
  80b3dc:	10800054 	ori	r2,r2,1
  80b3e0:	28800115 	stw	r2,4(r5)
  80b3e4:	80c00117 	ldw	r3,4(r16)
  80b3e8:	00802074 	movhi	r2,129
  80b3ec:	10811b04 	addi	r2,r2,1132
  80b3f0:	b009883a 	mov	r4,r22
  80b3f4:	18c0004c 	andi	r3,r3,1
  80b3f8:	e0c6b03a 	or	r3,fp,r3
  80b3fc:	11400215 	stw	r5,8(r2)
  80b400:	80c00115 	stw	r3,4(r16)
  80b404:	080d5b80 	call	80d5b8 <__malloc_unlock>
  80b408:	84400204 	addi	r17,r16,8
  80b40c:	003f2006 	br	80b090 <_realloc_r+0xd8>
  80b410:	98a9883a 	add	r20,r19,r2
  80b414:	2509883a 	add	r4,r4,r20
  80b418:	e0800404 	addi	r2,fp,16
  80b41c:	d9000115 	stw	r4,4(sp)
  80b420:	20bf7016 	blt	r4,r2,80b1e4 <_realloc_r+0x22c>
  80b424:	b8c00317 	ldw	r3,12(r23)
  80b428:	b8800217 	ldw	r2,8(r23)
  80b42c:	99bfff04 	addi	r6,r19,-4
  80b430:	01400904 	movi	r5,36
  80b434:	18800215 	stw	r2,8(r3)
  80b438:	10c00315 	stw	r3,12(r2)
  80b43c:	bc400204 	addi	r17,r23,8
  80b440:	29804136 	bltu	r5,r6,80b548 <_realloc_r+0x590>
  80b444:	008004c4 	movi	r2,19
  80b448:	9009883a 	mov	r4,r18
  80b44c:	880f883a 	mov	r7,r17
  80b450:	11800f2e 	bgeu	r2,r6,80b490 <_realloc_r+0x4d8>
  80b454:	90800017 	ldw	r2,0(r18)
  80b458:	b9c00404 	addi	r7,r23,16
  80b45c:	91000204 	addi	r4,r18,8
  80b460:	b8800215 	stw	r2,8(r23)
  80b464:	90c00117 	ldw	r3,4(r18)
  80b468:	008006c4 	movi	r2,27
  80b46c:	b8c00315 	stw	r3,12(r23)
  80b470:	1180072e 	bgeu	r2,r6,80b490 <_realloc_r+0x4d8>
  80b474:	90c00217 	ldw	r3,8(r18)
  80b478:	b9c00604 	addi	r7,r23,24
  80b47c:	91000404 	addi	r4,r18,16
  80b480:	b8c00415 	stw	r3,16(r23)
  80b484:	90800317 	ldw	r2,12(r18)
  80b488:	b8800515 	stw	r2,20(r23)
  80b48c:	31404026 	beq	r6,r5,80b590 <_realloc_r+0x5d8>
  80b490:	20800017 	ldw	r2,0(r4)
  80b494:	38800015 	stw	r2,0(r7)
  80b498:	20c00117 	ldw	r3,4(r4)
  80b49c:	38c00115 	stw	r3,4(r7)
  80b4a0:	20800217 	ldw	r2,8(r4)
  80b4a4:	38800215 	stw	r2,8(r7)
  80b4a8:	d8c00117 	ldw	r3,4(sp)
  80b4ac:	bf0b883a 	add	r5,r23,fp
  80b4b0:	b009883a 	mov	r4,r22
  80b4b4:	1f05c83a 	sub	r2,r3,fp
  80b4b8:	10800054 	ori	r2,r2,1
  80b4bc:	28800115 	stw	r2,4(r5)
  80b4c0:	b8c00117 	ldw	r3,4(r23)
  80b4c4:	00802074 	movhi	r2,129
  80b4c8:	10811b04 	addi	r2,r2,1132
  80b4cc:	11400215 	stw	r5,8(r2)
  80b4d0:	18c0004c 	andi	r3,r3,1
  80b4d4:	e0c6b03a 	or	r3,fp,r3
  80b4d8:	b8c00115 	stw	r3,4(r23)
  80b4dc:	080d5b80 	call	80d5b8 <__malloc_unlock>
  80b4e0:	003eeb06 	br	80b090 <_realloc_r+0xd8>
  80b4e4:	20800117 	ldw	r2,4(r4)
  80b4e8:	00ffff04 	movi	r3,-4
  80b4ec:	800f883a 	mov	r7,r16
  80b4f0:	10c4703a 	and	r2,r2,r3
  80b4f4:	98a9883a 	add	r20,r19,r2
  80b4f8:	84000204 	addi	r16,r16,8
  80b4fc:	003ecf06 	br	80b03c <_realloc_r+0x84>
  80b500:	900b883a 	mov	r5,r18
  80b504:	8009883a 	mov	r4,r16
  80b508:	0809db40 	call	809db4 <memmove>
  80b50c:	dd000017 	ldw	r20,0(sp)
  80b510:	b80f883a 	mov	r7,r23
  80b514:	003ec906 	br	80b03c <_realloc_r+0x84>
  80b518:	900b883a 	mov	r5,r18
  80b51c:	8009883a 	mov	r4,r16
  80b520:	0809db40 	call	809db4 <memmove>
  80b524:	b80f883a 	mov	r7,r23
  80b528:	003ec406 	br	80b03c <_realloc_r+0x84>
  80b52c:	90c00417 	ldw	r3,16(r18)
  80b530:	89400604 	addi	r5,r17,24
  80b534:	91000604 	addi	r4,r18,24
  80b538:	88c00415 	stw	r3,16(r17)
  80b53c:	90800517 	ldw	r2,20(r18)
  80b540:	88800515 	stw	r2,20(r17)
  80b544:	003f6806 	br	80b2e8 <_realloc_r+0x330>
  80b548:	900b883a 	mov	r5,r18
  80b54c:	8809883a 	mov	r4,r17
  80b550:	0809db40 	call	809db4 <memmove>
  80b554:	003fd406 	br	80b4a8 <_realloc_r+0x4f0>
  80b558:	90c00417 	ldw	r3,16(r18)
  80b55c:	91000604 	addi	r4,r18,24
  80b560:	ba000804 	addi	r8,r23,32
  80b564:	b8c00615 	stw	r3,24(r23)
  80b568:	90800517 	ldw	r2,20(r18)
  80b56c:	b8800715 	stw	r2,28(r23)
  80b570:	003f1206 	br	80b1bc <_realloc_r+0x204>
  80b574:	90c00417 	ldw	r3,16(r18)
  80b578:	91000604 	addi	r4,r18,24
  80b57c:	ba000804 	addi	r8,r23,32
  80b580:	b8c00615 	stw	r3,24(r23)
  80b584:	90800517 	ldw	r2,20(r18)
  80b588:	b8800715 	stw	r2,28(r23)
  80b58c:	003f3206 	br	80b258 <_realloc_r+0x2a0>
  80b590:	90c00417 	ldw	r3,16(r18)
  80b594:	91000604 	addi	r4,r18,24
  80b598:	b9c00804 	addi	r7,r23,32
  80b59c:	b8c00615 	stw	r3,24(r23)
  80b5a0:	90800517 	ldw	r2,20(r18)
  80b5a4:	b8800715 	stw	r2,28(r23)
  80b5a8:	003fb906 	br	80b490 <_realloc_r+0x4d8>

0080b5ac <__isinfd>:
  80b5ac:	200d883a 	mov	r6,r4
  80b5b0:	0109c83a 	sub	r4,zero,r4
  80b5b4:	2188b03a 	or	r4,r4,r6
  80b5b8:	2008d7fa 	srli	r4,r4,31
  80b5bc:	00a00034 	movhi	r2,32768
  80b5c0:	10bfffc4 	addi	r2,r2,-1
  80b5c4:	1144703a 	and	r2,r2,r5
  80b5c8:	2088b03a 	or	r4,r4,r2
  80b5cc:	009ffc34 	movhi	r2,32752
  80b5d0:	1105c83a 	sub	r2,r2,r4
  80b5d4:	0087c83a 	sub	r3,zero,r2
  80b5d8:	10c4b03a 	or	r2,r2,r3
  80b5dc:	1004d7fa 	srli	r2,r2,31
  80b5e0:	00c00044 	movi	r3,1
  80b5e4:	1885c83a 	sub	r2,r3,r2
  80b5e8:	f800283a 	ret

0080b5ec <__isnand>:
  80b5ec:	200d883a 	mov	r6,r4
  80b5f0:	0109c83a 	sub	r4,zero,r4
  80b5f4:	2188b03a 	or	r4,r4,r6
  80b5f8:	2008d7fa 	srli	r4,r4,31
  80b5fc:	00a00034 	movhi	r2,32768
  80b600:	10bfffc4 	addi	r2,r2,-1
  80b604:	1144703a 	and	r2,r2,r5
  80b608:	2088b03a 	or	r4,r4,r2
  80b60c:	009ffc34 	movhi	r2,32752
  80b610:	1105c83a 	sub	r2,r2,r4
  80b614:	1004d7fa 	srli	r2,r2,31
  80b618:	f800283a 	ret

0080b61c <_sbrk_r>:
  80b61c:	defffd04 	addi	sp,sp,-12
  80b620:	dc000015 	stw	r16,0(sp)
  80b624:	04002074 	movhi	r16,129
  80b628:	840d4c04 	addi	r16,r16,13616
  80b62c:	dc400115 	stw	r17,4(sp)
  80b630:	80000015 	stw	zero,0(r16)
  80b634:	2023883a 	mov	r17,r4
  80b638:	2809883a 	mov	r4,r5
  80b63c:	dfc00215 	stw	ra,8(sp)
  80b640:	080d7d40 	call	80d7d4 <sbrk>
  80b644:	1007883a 	mov	r3,r2
  80b648:	00bfffc4 	movi	r2,-1
  80b64c:	18800626 	beq	r3,r2,80b668 <_sbrk_r+0x4c>
  80b650:	1805883a 	mov	r2,r3
  80b654:	dfc00217 	ldw	ra,8(sp)
  80b658:	dc400117 	ldw	r17,4(sp)
  80b65c:	dc000017 	ldw	r16,0(sp)
  80b660:	dec00304 	addi	sp,sp,12
  80b664:	f800283a 	ret
  80b668:	80800017 	ldw	r2,0(r16)
  80b66c:	103ff826 	beq	r2,zero,80b650 <_sbrk_r+0x34>
  80b670:	88800015 	stw	r2,0(r17)
  80b674:	1805883a 	mov	r2,r3
  80b678:	dfc00217 	ldw	ra,8(sp)
  80b67c:	dc400117 	ldw	r17,4(sp)
  80b680:	dc000017 	ldw	r16,0(sp)
  80b684:	dec00304 	addi	sp,sp,12
  80b688:	f800283a 	ret

0080b68c <__sclose>:
  80b68c:	2940038f 	ldh	r5,14(r5)
  80b690:	080b9d41 	jmpi	80b9d4 <_close_r>

0080b694 <__sseek>:
  80b694:	defffe04 	addi	sp,sp,-8
  80b698:	dc000015 	stw	r16,0(sp)
  80b69c:	2821883a 	mov	r16,r5
  80b6a0:	2940038f 	ldh	r5,14(r5)
  80b6a4:	dfc00115 	stw	ra,4(sp)
  80b6a8:	080bc4c0 	call	80bc4c <_lseek_r>
  80b6ac:	1007883a 	mov	r3,r2
  80b6b0:	00bfffc4 	movi	r2,-1
  80b6b4:	18800926 	beq	r3,r2,80b6dc <__sseek+0x48>
  80b6b8:	8080030b 	ldhu	r2,12(r16)
  80b6bc:	80c01415 	stw	r3,80(r16)
  80b6c0:	10840014 	ori	r2,r2,4096
  80b6c4:	8080030d 	sth	r2,12(r16)
  80b6c8:	1805883a 	mov	r2,r3
  80b6cc:	dfc00117 	ldw	ra,4(sp)
  80b6d0:	dc000017 	ldw	r16,0(sp)
  80b6d4:	dec00204 	addi	sp,sp,8
  80b6d8:	f800283a 	ret
  80b6dc:	8080030b 	ldhu	r2,12(r16)
  80b6e0:	10bbffcc 	andi	r2,r2,61439
  80b6e4:	8080030d 	sth	r2,12(r16)
  80b6e8:	1805883a 	mov	r2,r3
  80b6ec:	dfc00117 	ldw	ra,4(sp)
  80b6f0:	dc000017 	ldw	r16,0(sp)
  80b6f4:	dec00204 	addi	sp,sp,8
  80b6f8:	f800283a 	ret

0080b6fc <__swrite>:
  80b6fc:	2880030b 	ldhu	r2,12(r5)
  80b700:	defffb04 	addi	sp,sp,-20
  80b704:	dcc00315 	stw	r19,12(sp)
  80b708:	1080400c 	andi	r2,r2,256
  80b70c:	dc800215 	stw	r18,8(sp)
  80b710:	dc400115 	stw	r17,4(sp)
  80b714:	dc000015 	stw	r16,0(sp)
  80b718:	3027883a 	mov	r19,r6
  80b71c:	3825883a 	mov	r18,r7
  80b720:	dfc00415 	stw	ra,16(sp)
  80b724:	2821883a 	mov	r16,r5
  80b728:	000d883a 	mov	r6,zero
  80b72c:	01c00084 	movi	r7,2
  80b730:	2023883a 	mov	r17,r4
  80b734:	10000226 	beq	r2,zero,80b740 <__swrite+0x44>
  80b738:	2940038f 	ldh	r5,14(r5)
  80b73c:	080bc4c0 	call	80bc4c <_lseek_r>
  80b740:	8080030b 	ldhu	r2,12(r16)
  80b744:	8140038f 	ldh	r5,14(r16)
  80b748:	8809883a 	mov	r4,r17
  80b74c:	10bbffcc 	andi	r2,r2,61439
  80b750:	980d883a 	mov	r6,r19
  80b754:	900f883a 	mov	r7,r18
  80b758:	8080030d 	sth	r2,12(r16)
  80b75c:	dfc00417 	ldw	ra,16(sp)
  80b760:	dcc00317 	ldw	r19,12(sp)
  80b764:	dc800217 	ldw	r18,8(sp)
  80b768:	dc400117 	ldw	r17,4(sp)
  80b76c:	dc000017 	ldw	r16,0(sp)
  80b770:	dec00504 	addi	sp,sp,20
  80b774:	080b8941 	jmpi	80b894 <_write_r>

0080b778 <__sread>:
  80b778:	defffe04 	addi	sp,sp,-8
  80b77c:	dc000015 	stw	r16,0(sp)
  80b780:	2821883a 	mov	r16,r5
  80b784:	2940038f 	ldh	r5,14(r5)
  80b788:	dfc00115 	stw	ra,4(sp)
  80b78c:	080bcc40 	call	80bcc4 <_read_r>
  80b790:	1007883a 	mov	r3,r2
  80b794:	10000816 	blt	r2,zero,80b7b8 <__sread+0x40>
  80b798:	80801417 	ldw	r2,80(r16)
  80b79c:	10c5883a 	add	r2,r2,r3
  80b7a0:	80801415 	stw	r2,80(r16)
  80b7a4:	1805883a 	mov	r2,r3
  80b7a8:	dfc00117 	ldw	ra,4(sp)
  80b7ac:	dc000017 	ldw	r16,0(sp)
  80b7b0:	dec00204 	addi	sp,sp,8
  80b7b4:	f800283a 	ret
  80b7b8:	8080030b 	ldhu	r2,12(r16)
  80b7bc:	10bbffcc 	andi	r2,r2,61439
  80b7c0:	8080030d 	sth	r2,12(r16)
  80b7c4:	1805883a 	mov	r2,r3
  80b7c8:	dfc00117 	ldw	ra,4(sp)
  80b7cc:	dc000017 	ldw	r16,0(sp)
  80b7d0:	dec00204 	addi	sp,sp,8
  80b7d4:	f800283a 	ret

0080b7d8 <strcmp>:
  80b7d8:	2144b03a 	or	r2,r4,r5
  80b7dc:	108000cc 	andi	r2,r2,3
  80b7e0:	10001d1e 	bne	r2,zero,80b858 <strcmp+0x80>
  80b7e4:	200f883a 	mov	r7,r4
  80b7e8:	28800017 	ldw	r2,0(r5)
  80b7ec:	21000017 	ldw	r4,0(r4)
  80b7f0:	280d883a 	mov	r6,r5
  80b7f4:	2080161e 	bne	r4,r2,80b850 <strcmp+0x78>
  80b7f8:	023fbff4 	movhi	r8,65279
  80b7fc:	423fbfc4 	addi	r8,r8,-257
  80b800:	2207883a 	add	r3,r4,r8
  80b804:	01602074 	movhi	r5,32897
  80b808:	29602004 	addi	r5,r5,-32640
  80b80c:	1946703a 	and	r3,r3,r5
  80b810:	0104303a 	nor	r2,zero,r4
  80b814:	10c4703a 	and	r2,r2,r3
  80b818:	10001c1e 	bne	r2,zero,80b88c <strcmp+0xb4>
  80b81c:	4013883a 	mov	r9,r8
  80b820:	2811883a 	mov	r8,r5
  80b824:	00000106 	br	80b82c <strcmp+0x54>
  80b828:	1800181e 	bne	r3,zero,80b88c <strcmp+0xb4>
  80b82c:	39c00104 	addi	r7,r7,4
  80b830:	39000017 	ldw	r4,0(r7)
  80b834:	31800104 	addi	r6,r6,4
  80b838:	31400017 	ldw	r5,0(r6)
  80b83c:	2245883a 	add	r2,r4,r9
  80b840:	1204703a 	and	r2,r2,r8
  80b844:	0106303a 	nor	r3,zero,r4
  80b848:	1886703a 	and	r3,r3,r2
  80b84c:	217ff626 	beq	r4,r5,80b828 <strcmp+0x50>
  80b850:	3809883a 	mov	r4,r7
  80b854:	300b883a 	mov	r5,r6
  80b858:	20c00007 	ldb	r3,0(r4)
  80b85c:	1800051e 	bne	r3,zero,80b874 <strcmp+0x9c>
  80b860:	00000606 	br	80b87c <strcmp+0xa4>
  80b864:	21000044 	addi	r4,r4,1
  80b868:	20c00007 	ldb	r3,0(r4)
  80b86c:	29400044 	addi	r5,r5,1
  80b870:	18000226 	beq	r3,zero,80b87c <strcmp+0xa4>
  80b874:	28800007 	ldb	r2,0(r5)
  80b878:	18bffa26 	beq	r3,r2,80b864 <strcmp+0x8c>
  80b87c:	20c00003 	ldbu	r3,0(r4)
  80b880:	28800003 	ldbu	r2,0(r5)
  80b884:	1885c83a 	sub	r2,r3,r2
  80b888:	f800283a 	ret
  80b88c:	0005883a 	mov	r2,zero
  80b890:	f800283a 	ret

0080b894 <_write_r>:
  80b894:	defffd04 	addi	sp,sp,-12
  80b898:	dc000015 	stw	r16,0(sp)
  80b89c:	04002074 	movhi	r16,129
  80b8a0:	840d4c04 	addi	r16,r16,13616
  80b8a4:	dc400115 	stw	r17,4(sp)
  80b8a8:	80000015 	stw	zero,0(r16)
  80b8ac:	2023883a 	mov	r17,r4
  80b8b0:	2809883a 	mov	r4,r5
  80b8b4:	300b883a 	mov	r5,r6
  80b8b8:	380d883a 	mov	r6,r7
  80b8bc:	dfc00215 	stw	ra,8(sp)
  80b8c0:	080d9840 	call	80d984 <write>
  80b8c4:	1007883a 	mov	r3,r2
  80b8c8:	00bfffc4 	movi	r2,-1
  80b8cc:	18800626 	beq	r3,r2,80b8e8 <_write_r+0x54>
  80b8d0:	1805883a 	mov	r2,r3
  80b8d4:	dfc00217 	ldw	ra,8(sp)
  80b8d8:	dc400117 	ldw	r17,4(sp)
  80b8dc:	dc000017 	ldw	r16,0(sp)
  80b8e0:	dec00304 	addi	sp,sp,12
  80b8e4:	f800283a 	ret
  80b8e8:	80800017 	ldw	r2,0(r16)
  80b8ec:	103ff826 	beq	r2,zero,80b8d0 <_write_r+0x3c>
  80b8f0:	88800015 	stw	r2,0(r17)
  80b8f4:	1805883a 	mov	r2,r3
  80b8f8:	dfc00217 	ldw	ra,8(sp)
  80b8fc:	dc400117 	ldw	r17,4(sp)
  80b900:	dc000017 	ldw	r16,0(sp)
  80b904:	dec00304 	addi	sp,sp,12
  80b908:	f800283a 	ret

0080b90c <_calloc_r>:
  80b90c:	defffe04 	addi	sp,sp,-8
  80b910:	dc400015 	stw	r17,0(sp)
  80b914:	2023883a 	mov	r17,r4
  80b918:	2809883a 	mov	r4,r5
  80b91c:	300b883a 	mov	r5,r6
  80b920:	dfc00115 	stw	ra,4(sp)
  80b924:	0803fc00 	call	803fc0 <__mulsi3>
  80b928:	100b883a 	mov	r5,r2
  80b92c:	8809883a 	mov	r4,r17
  80b930:	08094f00 	call	8094f0 <_malloc_r>
  80b934:	1023883a 	mov	r17,r2
  80b938:	01c00904 	movi	r7,36
  80b93c:	10000d26 	beq	r2,zero,80b974 <_calloc_r+0x68>
  80b940:	10ffff17 	ldw	r3,-4(r2)
  80b944:	1009883a 	mov	r4,r2
  80b948:	00bfff04 	movi	r2,-4
  80b94c:	1886703a 	and	r3,r3,r2
  80b950:	1887883a 	add	r3,r3,r2
  80b954:	180d883a 	mov	r6,r3
  80b958:	000b883a 	mov	r5,zero
  80b95c:	38c01736 	bltu	r7,r3,80b9bc <_calloc_r+0xb0>
  80b960:	008004c4 	movi	r2,19
  80b964:	10c00836 	bltu	r2,r3,80b988 <_calloc_r+0x7c>
  80b968:	20000215 	stw	zero,8(r4)
  80b96c:	20000015 	stw	zero,0(r4)
  80b970:	20000115 	stw	zero,4(r4)
  80b974:	8805883a 	mov	r2,r17
  80b978:	dfc00117 	ldw	ra,4(sp)
  80b97c:	dc400017 	ldw	r17,0(sp)
  80b980:	dec00204 	addi	sp,sp,8
  80b984:	f800283a 	ret
  80b988:	008006c4 	movi	r2,27
  80b98c:	88000015 	stw	zero,0(r17)
  80b990:	88000115 	stw	zero,4(r17)
  80b994:	89000204 	addi	r4,r17,8
  80b998:	10fff32e 	bgeu	r2,r3,80b968 <_calloc_r+0x5c>
  80b99c:	88000215 	stw	zero,8(r17)
  80b9a0:	88000315 	stw	zero,12(r17)
  80b9a4:	89000404 	addi	r4,r17,16
  80b9a8:	19ffef1e 	bne	r3,r7,80b968 <_calloc_r+0x5c>
  80b9ac:	89000604 	addi	r4,r17,24
  80b9b0:	88000415 	stw	zero,16(r17)
  80b9b4:	88000515 	stw	zero,20(r17)
  80b9b8:	003feb06 	br	80b968 <_calloc_r+0x5c>
  80b9bc:	0809e940 	call	809e94 <memset>
  80b9c0:	8805883a 	mov	r2,r17
  80b9c4:	dfc00117 	ldw	ra,4(sp)
  80b9c8:	dc400017 	ldw	r17,0(sp)
  80b9cc:	dec00204 	addi	sp,sp,8
  80b9d0:	f800283a 	ret

0080b9d4 <_close_r>:
  80b9d4:	defffd04 	addi	sp,sp,-12
  80b9d8:	dc000015 	stw	r16,0(sp)
  80b9dc:	04002074 	movhi	r16,129
  80b9e0:	840d4c04 	addi	r16,r16,13616
  80b9e4:	dc400115 	stw	r17,4(sp)
  80b9e8:	80000015 	stw	zero,0(r16)
  80b9ec:	2023883a 	mov	r17,r4
  80b9f0:	2809883a 	mov	r4,r5
  80b9f4:	dfc00215 	stw	ra,8(sp)
  80b9f8:	080cf040 	call	80cf04 <close>
  80b9fc:	1007883a 	mov	r3,r2
  80ba00:	00bfffc4 	movi	r2,-1
  80ba04:	18800626 	beq	r3,r2,80ba20 <_close_r+0x4c>
  80ba08:	1805883a 	mov	r2,r3
  80ba0c:	dfc00217 	ldw	ra,8(sp)
  80ba10:	dc400117 	ldw	r17,4(sp)
  80ba14:	dc000017 	ldw	r16,0(sp)
  80ba18:	dec00304 	addi	sp,sp,12
  80ba1c:	f800283a 	ret
  80ba20:	80800017 	ldw	r2,0(r16)
  80ba24:	103ff826 	beq	r2,zero,80ba08 <_close_r+0x34>
  80ba28:	88800015 	stw	r2,0(r17)
  80ba2c:	1805883a 	mov	r2,r3
  80ba30:	dfc00217 	ldw	ra,8(sp)
  80ba34:	dc400117 	ldw	r17,4(sp)
  80ba38:	dc000017 	ldw	r16,0(sp)
  80ba3c:	dec00304 	addi	sp,sp,12
  80ba40:	f800283a 	ret

0080ba44 <_fclose_r>:
  80ba44:	defffc04 	addi	sp,sp,-16
  80ba48:	dc400115 	stw	r17,4(sp)
  80ba4c:	dc000015 	stw	r16,0(sp)
  80ba50:	dfc00315 	stw	ra,12(sp)
  80ba54:	dc800215 	stw	r18,8(sp)
  80ba58:	2821883a 	mov	r16,r5
  80ba5c:	2023883a 	mov	r17,r4
  80ba60:	28002926 	beq	r5,zero,80bb08 <_fclose_r+0xc4>
  80ba64:	08085a00 	call	8085a0 <__sfp_lock_acquire>
  80ba68:	88000226 	beq	r17,zero,80ba74 <_fclose_r+0x30>
  80ba6c:	88800e17 	ldw	r2,56(r17)
  80ba70:	10002d26 	beq	r2,zero,80bb28 <_fclose_r+0xe4>
  80ba74:	8080030f 	ldh	r2,12(r16)
  80ba78:	10002226 	beq	r2,zero,80bb04 <_fclose_r+0xc0>
  80ba7c:	8809883a 	mov	r4,r17
  80ba80:	800b883a 	mov	r5,r16
  80ba84:	08083180 	call	808318 <_fflush_r>
  80ba88:	1025883a 	mov	r18,r2
  80ba8c:	80800b17 	ldw	r2,44(r16)
  80ba90:	10000426 	beq	r2,zero,80baa4 <_fclose_r+0x60>
  80ba94:	81400717 	ldw	r5,28(r16)
  80ba98:	8809883a 	mov	r4,r17
  80ba9c:	103ee83a 	callr	r2
  80baa0:	10002a16 	blt	r2,zero,80bb4c <_fclose_r+0x108>
  80baa4:	8080030b 	ldhu	r2,12(r16)
  80baa8:	1080200c 	andi	r2,r2,128
  80baac:	1000231e 	bne	r2,zero,80bb3c <_fclose_r+0xf8>
  80bab0:	81400c17 	ldw	r5,48(r16)
  80bab4:	28000526 	beq	r5,zero,80bacc <_fclose_r+0x88>
  80bab8:	80801004 	addi	r2,r16,64
  80babc:	28800226 	beq	r5,r2,80bac8 <_fclose_r+0x84>
  80bac0:	8809883a 	mov	r4,r17
  80bac4:	08089680 	call	808968 <_free_r>
  80bac8:	80000c15 	stw	zero,48(r16)
  80bacc:	81401117 	ldw	r5,68(r16)
  80bad0:	28000326 	beq	r5,zero,80bae0 <_fclose_r+0x9c>
  80bad4:	8809883a 	mov	r4,r17
  80bad8:	08089680 	call	808968 <_free_r>
  80badc:	80001115 	stw	zero,68(r16)
  80bae0:	8000030d 	sth	zero,12(r16)
  80bae4:	08085a40 	call	8085a4 <__sfp_lock_release>
  80bae8:	9005883a 	mov	r2,r18
  80baec:	dfc00317 	ldw	ra,12(sp)
  80baf0:	dc800217 	ldw	r18,8(sp)
  80baf4:	dc400117 	ldw	r17,4(sp)
  80baf8:	dc000017 	ldw	r16,0(sp)
  80bafc:	dec00404 	addi	sp,sp,16
  80bb00:	f800283a 	ret
  80bb04:	08085a40 	call	8085a4 <__sfp_lock_release>
  80bb08:	0025883a 	mov	r18,zero
  80bb0c:	9005883a 	mov	r2,r18
  80bb10:	dfc00317 	ldw	ra,12(sp)
  80bb14:	dc800217 	ldw	r18,8(sp)
  80bb18:	dc400117 	ldw	r17,4(sp)
  80bb1c:	dc000017 	ldw	r16,0(sp)
  80bb20:	dec00404 	addi	sp,sp,16
  80bb24:	f800283a 	ret
  80bb28:	8809883a 	mov	r4,r17
  80bb2c:	08085b00 	call	8085b0 <__sinit>
  80bb30:	8080030f 	ldh	r2,12(r16)
  80bb34:	103fd11e 	bne	r2,zero,80ba7c <_fclose_r+0x38>
  80bb38:	003ff206 	br	80bb04 <_fclose_r+0xc0>
  80bb3c:	81400417 	ldw	r5,16(r16)
  80bb40:	8809883a 	mov	r4,r17
  80bb44:	08089680 	call	808968 <_free_r>
  80bb48:	003fd906 	br	80bab0 <_fclose_r+0x6c>
  80bb4c:	04bfffc4 	movi	r18,-1
  80bb50:	003fd406 	br	80baa4 <_fclose_r+0x60>

0080bb54 <fclose>:
  80bb54:	00802074 	movhi	r2,129
  80bb58:	10869f04 	addi	r2,r2,6780
  80bb5c:	200b883a 	mov	r5,r4
  80bb60:	11000017 	ldw	r4,0(r2)
  80bb64:	080ba441 	jmpi	80ba44 <_fclose_r>

0080bb68 <_fstat_r>:
  80bb68:	defffd04 	addi	sp,sp,-12
  80bb6c:	dc000015 	stw	r16,0(sp)
  80bb70:	04002074 	movhi	r16,129
  80bb74:	840d4c04 	addi	r16,r16,13616
  80bb78:	dc400115 	stw	r17,4(sp)
  80bb7c:	80000015 	stw	zero,0(r16)
  80bb80:	2023883a 	mov	r17,r4
  80bb84:	2809883a 	mov	r4,r5
  80bb88:	300b883a 	mov	r5,r6
  80bb8c:	dfc00215 	stw	ra,8(sp)
  80bb90:	080d0900 	call	80d090 <fstat>
  80bb94:	1007883a 	mov	r3,r2
  80bb98:	00bfffc4 	movi	r2,-1
  80bb9c:	18800626 	beq	r3,r2,80bbb8 <_fstat_r+0x50>
  80bba0:	1805883a 	mov	r2,r3
  80bba4:	dfc00217 	ldw	ra,8(sp)
  80bba8:	dc400117 	ldw	r17,4(sp)
  80bbac:	dc000017 	ldw	r16,0(sp)
  80bbb0:	dec00304 	addi	sp,sp,12
  80bbb4:	f800283a 	ret
  80bbb8:	80800017 	ldw	r2,0(r16)
  80bbbc:	103ff826 	beq	r2,zero,80bba0 <_fstat_r+0x38>
  80bbc0:	88800015 	stw	r2,0(r17)
  80bbc4:	1805883a 	mov	r2,r3
  80bbc8:	dfc00217 	ldw	ra,8(sp)
  80bbcc:	dc400117 	ldw	r17,4(sp)
  80bbd0:	dc000017 	ldw	r16,0(sp)
  80bbd4:	dec00304 	addi	sp,sp,12
  80bbd8:	f800283a 	ret

0080bbdc <_isatty_r>:
  80bbdc:	defffd04 	addi	sp,sp,-12
  80bbe0:	dc000015 	stw	r16,0(sp)
  80bbe4:	04002074 	movhi	r16,129
  80bbe8:	840d4c04 	addi	r16,r16,13616
  80bbec:	dc400115 	stw	r17,4(sp)
  80bbf0:	80000015 	stw	zero,0(r16)
  80bbf4:	2023883a 	mov	r17,r4
  80bbf8:	2809883a 	mov	r4,r5
  80bbfc:	dfc00215 	stw	ra,8(sp)
  80bc00:	080d1c80 	call	80d1c8 <isatty>
  80bc04:	1007883a 	mov	r3,r2
  80bc08:	00bfffc4 	movi	r2,-1
  80bc0c:	18800626 	beq	r3,r2,80bc28 <_isatty_r+0x4c>
  80bc10:	1805883a 	mov	r2,r3
  80bc14:	dfc00217 	ldw	ra,8(sp)
  80bc18:	dc400117 	ldw	r17,4(sp)
  80bc1c:	dc000017 	ldw	r16,0(sp)
  80bc20:	dec00304 	addi	sp,sp,12
  80bc24:	f800283a 	ret
  80bc28:	80800017 	ldw	r2,0(r16)
  80bc2c:	103ff826 	beq	r2,zero,80bc10 <_isatty_r+0x34>
  80bc30:	88800015 	stw	r2,0(r17)
  80bc34:	1805883a 	mov	r2,r3
  80bc38:	dfc00217 	ldw	ra,8(sp)
  80bc3c:	dc400117 	ldw	r17,4(sp)
  80bc40:	dc000017 	ldw	r16,0(sp)
  80bc44:	dec00304 	addi	sp,sp,12
  80bc48:	f800283a 	ret

0080bc4c <_lseek_r>:
  80bc4c:	defffd04 	addi	sp,sp,-12
  80bc50:	dc000015 	stw	r16,0(sp)
  80bc54:	04002074 	movhi	r16,129
  80bc58:	840d4c04 	addi	r16,r16,13616
  80bc5c:	dc400115 	stw	r17,4(sp)
  80bc60:	80000015 	stw	zero,0(r16)
  80bc64:	2023883a 	mov	r17,r4
  80bc68:	2809883a 	mov	r4,r5
  80bc6c:	300b883a 	mov	r5,r6
  80bc70:	380d883a 	mov	r6,r7
  80bc74:	dfc00215 	stw	ra,8(sp)
  80bc78:	080d3d80 	call	80d3d8 <lseek>
  80bc7c:	1007883a 	mov	r3,r2
  80bc80:	00bfffc4 	movi	r2,-1
  80bc84:	18800626 	beq	r3,r2,80bca0 <_lseek_r+0x54>
  80bc88:	1805883a 	mov	r2,r3
  80bc8c:	dfc00217 	ldw	ra,8(sp)
  80bc90:	dc400117 	ldw	r17,4(sp)
  80bc94:	dc000017 	ldw	r16,0(sp)
  80bc98:	dec00304 	addi	sp,sp,12
  80bc9c:	f800283a 	ret
  80bca0:	80800017 	ldw	r2,0(r16)
  80bca4:	103ff826 	beq	r2,zero,80bc88 <_lseek_r+0x3c>
  80bca8:	88800015 	stw	r2,0(r17)
  80bcac:	1805883a 	mov	r2,r3
  80bcb0:	dfc00217 	ldw	ra,8(sp)
  80bcb4:	dc400117 	ldw	r17,4(sp)
  80bcb8:	dc000017 	ldw	r16,0(sp)
  80bcbc:	dec00304 	addi	sp,sp,12
  80bcc0:	f800283a 	ret

0080bcc4 <_read_r>:
  80bcc4:	defffd04 	addi	sp,sp,-12
  80bcc8:	dc000015 	stw	r16,0(sp)
  80bccc:	04002074 	movhi	r16,129
  80bcd0:	840d4c04 	addi	r16,r16,13616
  80bcd4:	dc400115 	stw	r17,4(sp)
  80bcd8:	80000015 	stw	zero,0(r16)
  80bcdc:	2023883a 	mov	r17,r4
  80bce0:	2809883a 	mov	r4,r5
  80bce4:	300b883a 	mov	r5,r6
  80bce8:	380d883a 	mov	r6,r7
  80bcec:	dfc00215 	stw	ra,8(sp)
  80bcf0:	080d5d80 	call	80d5d8 <read>
  80bcf4:	1007883a 	mov	r3,r2
  80bcf8:	00bfffc4 	movi	r2,-1
  80bcfc:	18800626 	beq	r3,r2,80bd18 <_read_r+0x54>
  80bd00:	1805883a 	mov	r2,r3
  80bd04:	dfc00217 	ldw	ra,8(sp)
  80bd08:	dc400117 	ldw	r17,4(sp)
  80bd0c:	dc000017 	ldw	r16,0(sp)
  80bd10:	dec00304 	addi	sp,sp,12
  80bd14:	f800283a 	ret
  80bd18:	80800017 	ldw	r2,0(r16)
  80bd1c:	103ff826 	beq	r2,zero,80bd00 <_read_r+0x3c>
  80bd20:	88800015 	stw	r2,0(r17)
  80bd24:	1805883a 	mov	r2,r3
  80bd28:	dfc00217 	ldw	ra,8(sp)
  80bd2c:	dc400117 	ldw	r17,4(sp)
  80bd30:	dc000017 	ldw	r16,0(sp)
  80bd34:	dec00304 	addi	sp,sp,12
  80bd38:	f800283a 	ret

0080bd3c <__udivdi3>:
  80bd3c:	defff104 	addi	sp,sp,-60
  80bd40:	0015883a 	mov	r10,zero
  80bd44:	2005883a 	mov	r2,r4
  80bd48:	3011883a 	mov	r8,r6
  80bd4c:	df000d15 	stw	fp,52(sp)
  80bd50:	dd400a15 	stw	r21,40(sp)
  80bd54:	dcc00815 	stw	r19,32(sp)
  80bd58:	dfc00e15 	stw	ra,56(sp)
  80bd5c:	ddc00c15 	stw	r23,48(sp)
  80bd60:	dd800b15 	stw	r22,44(sp)
  80bd64:	dd000915 	stw	r20,36(sp)
  80bd68:	dc800715 	stw	r18,28(sp)
  80bd6c:	dc400615 	stw	r17,24(sp)
  80bd70:	dc000515 	stw	r16,20(sp)
  80bd74:	da800315 	stw	r10,12(sp)
  80bd78:	4027883a 	mov	r19,r8
  80bd7c:	1039883a 	mov	fp,r2
  80bd80:	282b883a 	mov	r21,r5
  80bd84:	da800415 	stw	r10,16(sp)
  80bd88:	3800401e 	bne	r7,zero,80be8c <__udivdi3+0x150>
  80bd8c:	2a006536 	bltu	r5,r8,80bf24 <__udivdi3+0x1e8>
  80bd90:	4000b526 	beq	r8,zero,80c068 <__udivdi3+0x32c>
  80bd94:	00bfffd4 	movui	r2,65535
  80bd98:	14c0ad36 	bltu	r2,r19,80c050 <__udivdi3+0x314>
  80bd9c:	00803fc4 	movi	r2,255
  80bda0:	14c15e36 	bltu	r2,r19,80c31c <__udivdi3+0x5e0>
  80bda4:	000b883a 	mov	r5,zero
  80bda8:	0005883a 	mov	r2,zero
  80bdac:	9884d83a 	srl	r2,r19,r2
  80bdb0:	01002074 	movhi	r4,129
  80bdb4:	213f4e04 	addi	r4,r4,-712
  80bdb8:	01800804 	movi	r6,32
  80bdbc:	1105883a 	add	r2,r2,r4
  80bdc0:	10c00003 	ldbu	r3,0(r2)
  80bdc4:	28c7883a 	add	r3,r5,r3
  80bdc8:	30e9c83a 	sub	r20,r6,r3
  80bdcc:	a0010a1e 	bne	r20,zero,80c1f8 <__udivdi3+0x4bc>
  80bdd0:	982ed43a 	srli	r23,r19,16
  80bdd4:	acebc83a 	sub	r21,r21,r19
  80bdd8:	9dbfffcc 	andi	r22,r19,65535
  80bddc:	05000044 	movi	r20,1
  80bde0:	a809883a 	mov	r4,r21
  80bde4:	b80b883a 	mov	r5,r23
  80bde8:	0803fb00 	call	803fb0 <__udivsi3>
  80bdec:	100b883a 	mov	r5,r2
  80bdf0:	b009883a 	mov	r4,r22
  80bdf4:	1021883a 	mov	r16,r2
  80bdf8:	0803fc00 	call	803fc0 <__mulsi3>
  80bdfc:	a809883a 	mov	r4,r21
  80be00:	b80b883a 	mov	r5,r23
  80be04:	1023883a 	mov	r17,r2
  80be08:	0803fb80 	call	803fb8 <__umodsi3>
  80be0c:	1004943a 	slli	r2,r2,16
  80be10:	e006d43a 	srli	r3,fp,16
  80be14:	10c4b03a 	or	r2,r2,r3
  80be18:	1440042e 	bgeu	r2,r17,80be2c <__udivdi3+0xf0>
  80be1c:	14c5883a 	add	r2,r2,r19
  80be20:	843fffc4 	addi	r16,r16,-1
  80be24:	14c00136 	bltu	r2,r19,80be2c <__udivdi3+0xf0>
  80be28:	14415c36 	bltu	r2,r17,80c39c <__udivdi3+0x660>
  80be2c:	1463c83a 	sub	r17,r2,r17
  80be30:	8809883a 	mov	r4,r17
  80be34:	b80b883a 	mov	r5,r23
  80be38:	0803fb00 	call	803fb0 <__udivsi3>
  80be3c:	100b883a 	mov	r5,r2
  80be40:	b009883a 	mov	r4,r22
  80be44:	102b883a 	mov	r21,r2
  80be48:	0803fc00 	call	803fc0 <__mulsi3>
  80be4c:	8809883a 	mov	r4,r17
  80be50:	b80b883a 	mov	r5,r23
  80be54:	1025883a 	mov	r18,r2
  80be58:	0803fb80 	call	803fb8 <__umodsi3>
  80be5c:	1004943a 	slli	r2,r2,16
  80be60:	e0ffffcc 	andi	r3,fp,65535
  80be64:	10c4b03a 	or	r2,r2,r3
  80be68:	1480042e 	bgeu	r2,r18,80be7c <__udivdi3+0x140>
  80be6c:	9885883a 	add	r2,r19,r2
  80be70:	ad7fffc4 	addi	r21,r21,-1
  80be74:	14c00136 	bltu	r2,r19,80be7c <__udivdi3+0x140>
  80be78:	14813c36 	bltu	r2,r18,80c36c <__udivdi3+0x630>
  80be7c:	8004943a 	slli	r2,r16,16
  80be80:	a009883a 	mov	r4,r20
  80be84:	a884b03a 	or	r2,r21,r2
  80be88:	00001506 	br	80bee0 <__udivdi3+0x1a4>
  80be8c:	380d883a 	mov	r6,r7
  80be90:	29c06c36 	bltu	r5,r7,80c044 <__udivdi3+0x308>
  80be94:	00bfffd4 	movui	r2,65535
  80be98:	11c06436 	bltu	r2,r7,80c02c <__udivdi3+0x2f0>
  80be9c:	00803fc4 	movi	r2,255
  80bea0:	11c11836 	bltu	r2,r7,80c304 <__udivdi3+0x5c8>
  80bea4:	000b883a 	mov	r5,zero
  80bea8:	0005883a 	mov	r2,zero
  80beac:	3084d83a 	srl	r2,r6,r2
  80beb0:	01002074 	movhi	r4,129
  80beb4:	213f4e04 	addi	r4,r4,-712
  80beb8:	01c00804 	movi	r7,32
  80bebc:	1105883a 	add	r2,r2,r4
  80bec0:	10c00003 	ldbu	r3,0(r2)
  80bec4:	28c7883a 	add	r3,r5,r3
  80bec8:	38edc83a 	sub	r22,r7,r3
  80becc:	b000731e 	bne	r22,zero,80c09c <__udivdi3+0x360>
  80bed0:	35400136 	bltu	r6,r21,80bed8 <__udivdi3+0x19c>
  80bed4:	e4c05b36 	bltu	fp,r19,80c044 <__udivdi3+0x308>
  80bed8:	00800044 	movi	r2,1
  80bedc:	0009883a 	mov	r4,zero
  80bee0:	d8800315 	stw	r2,12(sp)
  80bee4:	d9400317 	ldw	r5,12(sp)
  80bee8:	2007883a 	mov	r3,r4
  80beec:	d9000415 	stw	r4,16(sp)
  80bef0:	2805883a 	mov	r2,r5
  80bef4:	dfc00e17 	ldw	ra,56(sp)
  80bef8:	df000d17 	ldw	fp,52(sp)
  80befc:	ddc00c17 	ldw	r23,48(sp)
  80bf00:	dd800b17 	ldw	r22,44(sp)
  80bf04:	dd400a17 	ldw	r21,40(sp)
  80bf08:	dd000917 	ldw	r20,36(sp)
  80bf0c:	dcc00817 	ldw	r19,32(sp)
  80bf10:	dc800717 	ldw	r18,28(sp)
  80bf14:	dc400617 	ldw	r17,24(sp)
  80bf18:	dc000517 	ldw	r16,20(sp)
  80bf1c:	dec00f04 	addi	sp,sp,60
  80bf20:	f800283a 	ret
  80bf24:	00bfffd4 	movui	r2,65535
  80bf28:	12005636 	bltu	r2,r8,80c084 <__udivdi3+0x348>
  80bf2c:	00803fc4 	movi	r2,255
  80bf30:	12010036 	bltu	r2,r8,80c334 <__udivdi3+0x5f8>
  80bf34:	000b883a 	mov	r5,zero
  80bf38:	0005883a 	mov	r2,zero
  80bf3c:	9884d83a 	srl	r2,r19,r2
  80bf40:	01002074 	movhi	r4,129
  80bf44:	213f4e04 	addi	r4,r4,-712
  80bf48:	01800804 	movi	r6,32
  80bf4c:	1105883a 	add	r2,r2,r4
  80bf50:	10c00003 	ldbu	r3,0(r2)
  80bf54:	28c7883a 	add	r3,r5,r3
  80bf58:	30cbc83a 	sub	r5,r6,r3
  80bf5c:	28000626 	beq	r5,zero,80bf78 <__udivdi3+0x23c>
  80bf60:	3145c83a 	sub	r2,r6,r5
  80bf64:	e084d83a 	srl	r2,fp,r2
  80bf68:	a946983a 	sll	r3,r21,r5
  80bf6c:	e178983a 	sll	fp,fp,r5
  80bf70:	9966983a 	sll	r19,r19,r5
  80bf74:	18aab03a 	or	r21,r3,r2
  80bf78:	982ed43a 	srli	r23,r19,16
  80bf7c:	a809883a 	mov	r4,r21
  80bf80:	9cbfffcc 	andi	r18,r19,65535
  80bf84:	b80b883a 	mov	r5,r23
  80bf88:	0803fb00 	call	803fb0 <__udivsi3>
  80bf8c:	100b883a 	mov	r5,r2
  80bf90:	9009883a 	mov	r4,r18
  80bf94:	1021883a 	mov	r16,r2
  80bf98:	0803fc00 	call	803fc0 <__mulsi3>
  80bf9c:	a809883a 	mov	r4,r21
  80bfa0:	b80b883a 	mov	r5,r23
  80bfa4:	1023883a 	mov	r17,r2
  80bfa8:	0803fb80 	call	803fb8 <__umodsi3>
  80bfac:	1004943a 	slli	r2,r2,16
  80bfb0:	e006d43a 	srli	r3,fp,16
  80bfb4:	10c4b03a 	or	r2,r2,r3
  80bfb8:	1440042e 	bgeu	r2,r17,80bfcc <__udivdi3+0x290>
  80bfbc:	14c5883a 	add	r2,r2,r19
  80bfc0:	843fffc4 	addi	r16,r16,-1
  80bfc4:	14c00136 	bltu	r2,r19,80bfcc <__udivdi3+0x290>
  80bfc8:	1440ea36 	bltu	r2,r17,80c374 <__udivdi3+0x638>
  80bfcc:	1463c83a 	sub	r17,r2,r17
  80bfd0:	8809883a 	mov	r4,r17
  80bfd4:	b80b883a 	mov	r5,r23
  80bfd8:	0803fb00 	call	803fb0 <__udivsi3>
  80bfdc:	100b883a 	mov	r5,r2
  80bfe0:	9009883a 	mov	r4,r18
  80bfe4:	102b883a 	mov	r21,r2
  80bfe8:	0803fc00 	call	803fc0 <__mulsi3>
  80bfec:	8809883a 	mov	r4,r17
  80bff0:	b80b883a 	mov	r5,r23
  80bff4:	1025883a 	mov	r18,r2
  80bff8:	0803fb80 	call	803fb8 <__umodsi3>
  80bffc:	1004943a 	slli	r2,r2,16
  80c000:	e0ffffcc 	andi	r3,fp,65535
  80c004:	10c4b03a 	or	r2,r2,r3
  80c008:	1480042e 	bgeu	r2,r18,80c01c <__udivdi3+0x2e0>
  80c00c:	9885883a 	add	r2,r19,r2
  80c010:	ad7fffc4 	addi	r21,r21,-1
  80c014:	14c00136 	bltu	r2,r19,80c01c <__udivdi3+0x2e0>
  80c018:	1480d936 	bltu	r2,r18,80c380 <__udivdi3+0x644>
  80c01c:	8004943a 	slli	r2,r16,16
  80c020:	0009883a 	mov	r4,zero
  80c024:	a884b03a 	or	r2,r21,r2
  80c028:	003fad06 	br	80bee0 <__udivdi3+0x1a4>
  80c02c:	00804034 	movhi	r2,256
  80c030:	10bfffc4 	addi	r2,r2,-1
  80c034:	11c0b636 	bltu	r2,r7,80c310 <__udivdi3+0x5d4>
  80c038:	01400404 	movi	r5,16
  80c03c:	2805883a 	mov	r2,r5
  80c040:	003f9a06 	br	80beac <__udivdi3+0x170>
  80c044:	0005883a 	mov	r2,zero
  80c048:	0009883a 	mov	r4,zero
  80c04c:	003fa406 	br	80bee0 <__udivdi3+0x1a4>
  80c050:	00804034 	movhi	r2,256
  80c054:	10bfffc4 	addi	r2,r2,-1
  80c058:	14c0b336 	bltu	r2,r19,80c328 <__udivdi3+0x5ec>
  80c05c:	01400404 	movi	r5,16
  80c060:	2805883a 	mov	r2,r5
  80c064:	003f5106 	br	80bdac <__udivdi3+0x70>
  80c068:	01000044 	movi	r4,1
  80c06c:	000b883a 	mov	r5,zero
  80c070:	0803fb00 	call	803fb0 <__udivsi3>
  80c074:	1027883a 	mov	r19,r2
  80c078:	00bfffd4 	movui	r2,65535
  80c07c:	14fff436 	bltu	r2,r19,80c050 <__udivdi3+0x314>
  80c080:	003f4606 	br	80bd9c <__udivdi3+0x60>
  80c084:	00804034 	movhi	r2,256
  80c088:	10bfffc4 	addi	r2,r2,-1
  80c08c:	1200ac36 	bltu	r2,r8,80c340 <__udivdi3+0x604>
  80c090:	01400404 	movi	r5,16
  80c094:	2805883a 	mov	r2,r5
  80c098:	003fa806 	br	80bf3c <__udivdi3+0x200>
  80c09c:	3d85c83a 	sub	r2,r7,r22
  80c0a0:	3588983a 	sll	r4,r6,r22
  80c0a4:	9886d83a 	srl	r3,r19,r2
  80c0a8:	a8a2d83a 	srl	r17,r21,r2
  80c0ac:	e084d83a 	srl	r2,fp,r2
  80c0b0:	20eeb03a 	or	r23,r4,r3
  80c0b4:	b824d43a 	srli	r18,r23,16
  80c0b8:	ad86983a 	sll	r3,r21,r22
  80c0bc:	8809883a 	mov	r4,r17
  80c0c0:	900b883a 	mov	r5,r18
  80c0c4:	1886b03a 	or	r3,r3,r2
  80c0c8:	d8c00115 	stw	r3,4(sp)
  80c0cc:	bc3fffcc 	andi	r16,r23,65535
  80c0d0:	0803fb00 	call	803fb0 <__udivsi3>
  80c0d4:	100b883a 	mov	r5,r2
  80c0d8:	8009883a 	mov	r4,r16
  80c0dc:	1029883a 	mov	r20,r2
  80c0e0:	0803fc00 	call	803fc0 <__mulsi3>
  80c0e4:	900b883a 	mov	r5,r18
  80c0e8:	8809883a 	mov	r4,r17
  80c0ec:	102b883a 	mov	r21,r2
  80c0f0:	0803fb80 	call	803fb8 <__umodsi3>
  80c0f4:	d9400117 	ldw	r5,4(sp)
  80c0f8:	1004943a 	slli	r2,r2,16
  80c0fc:	9da6983a 	sll	r19,r19,r22
  80c100:	2806d43a 	srli	r3,r5,16
  80c104:	10c4b03a 	or	r2,r2,r3
  80c108:	1540032e 	bgeu	r2,r21,80c118 <__udivdi3+0x3dc>
  80c10c:	15c5883a 	add	r2,r2,r23
  80c110:	a53fffc4 	addi	r20,r20,-1
  80c114:	15c0912e 	bgeu	r2,r23,80c35c <__udivdi3+0x620>
  80c118:	1563c83a 	sub	r17,r2,r21
  80c11c:	8809883a 	mov	r4,r17
  80c120:	900b883a 	mov	r5,r18
  80c124:	0803fb00 	call	803fb0 <__udivsi3>
  80c128:	100b883a 	mov	r5,r2
  80c12c:	8009883a 	mov	r4,r16
  80c130:	102b883a 	mov	r21,r2
  80c134:	0803fc00 	call	803fc0 <__mulsi3>
  80c138:	8809883a 	mov	r4,r17
  80c13c:	900b883a 	mov	r5,r18
  80c140:	1021883a 	mov	r16,r2
  80c144:	0803fb80 	call	803fb8 <__umodsi3>
  80c148:	da800117 	ldw	r10,4(sp)
  80c14c:	1004943a 	slli	r2,r2,16
  80c150:	50ffffcc 	andi	r3,r10,65535
  80c154:	10c6b03a 	or	r3,r2,r3
  80c158:	1c00032e 	bgeu	r3,r16,80c168 <__udivdi3+0x42c>
  80c15c:	1dc7883a 	add	r3,r3,r23
  80c160:	ad7fffc4 	addi	r21,r21,-1
  80c164:	1dc0792e 	bgeu	r3,r23,80c34c <__udivdi3+0x610>
  80c168:	a004943a 	slli	r2,r20,16
  80c16c:	982ed43a 	srli	r23,r19,16
  80c170:	9cffffcc 	andi	r19,r19,65535
  80c174:	a8a4b03a 	or	r18,r21,r2
  80c178:	947fffcc 	andi	r17,r18,65535
  80c17c:	902ad43a 	srli	r21,r18,16
  80c180:	8809883a 	mov	r4,r17
  80c184:	980b883a 	mov	r5,r19
  80c188:	1c21c83a 	sub	r16,r3,r16
  80c18c:	0803fc00 	call	803fc0 <__mulsi3>
  80c190:	8809883a 	mov	r4,r17
  80c194:	b80b883a 	mov	r5,r23
  80c198:	1029883a 	mov	r20,r2
  80c19c:	0803fc00 	call	803fc0 <__mulsi3>
  80c1a0:	980b883a 	mov	r5,r19
  80c1a4:	a809883a 	mov	r4,r21
  80c1a8:	1023883a 	mov	r17,r2
  80c1ac:	0803fc00 	call	803fc0 <__mulsi3>
  80c1b0:	a809883a 	mov	r4,r21
  80c1b4:	b80b883a 	mov	r5,r23
  80c1b8:	1027883a 	mov	r19,r2
  80c1bc:	0803fc00 	call	803fc0 <__mulsi3>
  80c1c0:	1009883a 	mov	r4,r2
  80c1c4:	a004d43a 	srli	r2,r20,16
  80c1c8:	8ce3883a 	add	r17,r17,r19
  80c1cc:	1447883a 	add	r3,r2,r17
  80c1d0:	1cc0022e 	bgeu	r3,r19,80c1dc <__udivdi3+0x4a0>
  80c1d4:	00800074 	movhi	r2,1
  80c1d8:	2089883a 	add	r4,r4,r2
  80c1dc:	1804d43a 	srli	r2,r3,16
  80c1e0:	2085883a 	add	r2,r4,r2
  80c1e4:	80804436 	bltu	r16,r2,80c2f8 <__udivdi3+0x5bc>
  80c1e8:	80803e26 	beq	r16,r2,80c2e4 <__udivdi3+0x5a8>
  80c1ec:	9005883a 	mov	r2,r18
  80c1f0:	0009883a 	mov	r4,zero
  80c1f4:	003f3a06 	br	80bee0 <__udivdi3+0x1a4>
  80c1f8:	9d26983a 	sll	r19,r19,r20
  80c1fc:	3505c83a 	sub	r2,r6,r20
  80c200:	a8a2d83a 	srl	r17,r21,r2
  80c204:	982ed43a 	srli	r23,r19,16
  80c208:	e084d83a 	srl	r2,fp,r2
  80c20c:	ad06983a 	sll	r3,r21,r20
  80c210:	8809883a 	mov	r4,r17
  80c214:	b80b883a 	mov	r5,r23
  80c218:	1886b03a 	or	r3,r3,r2
  80c21c:	d8c00015 	stw	r3,0(sp)
  80c220:	9dbfffcc 	andi	r22,r19,65535
  80c224:	0803fb00 	call	803fb0 <__udivsi3>
  80c228:	100b883a 	mov	r5,r2
  80c22c:	b009883a 	mov	r4,r22
  80c230:	d8800215 	stw	r2,8(sp)
  80c234:	0803fc00 	call	803fc0 <__mulsi3>
  80c238:	8809883a 	mov	r4,r17
  80c23c:	b80b883a 	mov	r5,r23
  80c240:	102b883a 	mov	r21,r2
  80c244:	0803fb80 	call	803fb8 <__umodsi3>
  80c248:	d9000017 	ldw	r4,0(sp)
  80c24c:	1004943a 	slli	r2,r2,16
  80c250:	2006d43a 	srli	r3,r4,16
  80c254:	10c4b03a 	or	r2,r2,r3
  80c258:	1540052e 	bgeu	r2,r21,80c270 <__udivdi3+0x534>
  80c25c:	d9400217 	ldw	r5,8(sp)
  80c260:	14c5883a 	add	r2,r2,r19
  80c264:	297fffc4 	addi	r5,r5,-1
  80c268:	d9400215 	stw	r5,8(sp)
  80c26c:	14c0462e 	bgeu	r2,r19,80c388 <__udivdi3+0x64c>
  80c270:	1563c83a 	sub	r17,r2,r21
  80c274:	8809883a 	mov	r4,r17
  80c278:	b80b883a 	mov	r5,r23
  80c27c:	0803fb00 	call	803fb0 <__udivsi3>
  80c280:	100b883a 	mov	r5,r2
  80c284:	b009883a 	mov	r4,r22
  80c288:	1025883a 	mov	r18,r2
  80c28c:	0803fc00 	call	803fc0 <__mulsi3>
  80c290:	8809883a 	mov	r4,r17
  80c294:	b80b883a 	mov	r5,r23
  80c298:	1021883a 	mov	r16,r2
  80c29c:	0803fb80 	call	803fb8 <__umodsi3>
  80c2a0:	da800017 	ldw	r10,0(sp)
  80c2a4:	1004943a 	slli	r2,r2,16
  80c2a8:	50ffffcc 	andi	r3,r10,65535
  80c2ac:	10c6b03a 	or	r3,r2,r3
  80c2b0:	1c00062e 	bgeu	r3,r16,80c2cc <__udivdi3+0x590>
  80c2b4:	1cc7883a 	add	r3,r3,r19
  80c2b8:	94bfffc4 	addi	r18,r18,-1
  80c2bc:	1cc00336 	bltu	r3,r19,80c2cc <__udivdi3+0x590>
  80c2c0:	1c00022e 	bgeu	r3,r16,80c2cc <__udivdi3+0x590>
  80c2c4:	94bfffc4 	addi	r18,r18,-1
  80c2c8:	1cc7883a 	add	r3,r3,r19
  80c2cc:	d9000217 	ldw	r4,8(sp)
  80c2d0:	e538983a 	sll	fp,fp,r20
  80c2d4:	1c2bc83a 	sub	r21,r3,r16
  80c2d8:	2004943a 	slli	r2,r4,16
  80c2dc:	90a8b03a 	or	r20,r18,r2
  80c2e0:	003ebf06 	br	80bde0 <__udivdi3+0xa4>
  80c2e4:	1804943a 	slli	r2,r3,16
  80c2e8:	e588983a 	sll	r4,fp,r22
  80c2ec:	a0ffffcc 	andi	r3,r20,65535
  80c2f0:	10c5883a 	add	r2,r2,r3
  80c2f4:	20bfbd2e 	bgeu	r4,r2,80c1ec <__udivdi3+0x4b0>
  80c2f8:	90bfffc4 	addi	r2,r18,-1
  80c2fc:	0009883a 	mov	r4,zero
  80c300:	003ef706 	br	80bee0 <__udivdi3+0x1a4>
  80c304:	01400204 	movi	r5,8
  80c308:	2805883a 	mov	r2,r5
  80c30c:	003ee706 	br	80beac <__udivdi3+0x170>
  80c310:	01400604 	movi	r5,24
  80c314:	2805883a 	mov	r2,r5
  80c318:	003ee406 	br	80beac <__udivdi3+0x170>
  80c31c:	01400204 	movi	r5,8
  80c320:	2805883a 	mov	r2,r5
  80c324:	003ea106 	br	80bdac <__udivdi3+0x70>
  80c328:	01400604 	movi	r5,24
  80c32c:	2805883a 	mov	r2,r5
  80c330:	003e9e06 	br	80bdac <__udivdi3+0x70>
  80c334:	01400204 	movi	r5,8
  80c338:	2805883a 	mov	r2,r5
  80c33c:	003eff06 	br	80bf3c <__udivdi3+0x200>
  80c340:	01400604 	movi	r5,24
  80c344:	2805883a 	mov	r2,r5
  80c348:	003efc06 	br	80bf3c <__udivdi3+0x200>
  80c34c:	1c3f862e 	bgeu	r3,r16,80c168 <__udivdi3+0x42c>
  80c350:	1dc7883a 	add	r3,r3,r23
  80c354:	ad7fffc4 	addi	r21,r21,-1
  80c358:	003f8306 	br	80c168 <__udivdi3+0x42c>
  80c35c:	157f6e2e 	bgeu	r2,r21,80c118 <__udivdi3+0x3dc>
  80c360:	a53fffc4 	addi	r20,r20,-1
  80c364:	15c5883a 	add	r2,r2,r23
  80c368:	003f6b06 	br	80c118 <__udivdi3+0x3dc>
  80c36c:	ad7fffc4 	addi	r21,r21,-1
  80c370:	003ec206 	br	80be7c <__udivdi3+0x140>
  80c374:	843fffc4 	addi	r16,r16,-1
  80c378:	14c5883a 	add	r2,r2,r19
  80c37c:	003f1306 	br	80bfcc <__udivdi3+0x290>
  80c380:	ad7fffc4 	addi	r21,r21,-1
  80c384:	003f2506 	br	80c01c <__udivdi3+0x2e0>
  80c388:	157fb92e 	bgeu	r2,r21,80c270 <__udivdi3+0x534>
  80c38c:	297fffc4 	addi	r5,r5,-1
  80c390:	14c5883a 	add	r2,r2,r19
  80c394:	d9400215 	stw	r5,8(sp)
  80c398:	003fb506 	br	80c270 <__udivdi3+0x534>
  80c39c:	843fffc4 	addi	r16,r16,-1
  80c3a0:	14c5883a 	add	r2,r2,r19
  80c3a4:	003ea106 	br	80be2c <__udivdi3+0xf0>

0080c3a8 <__umoddi3>:
  80c3a8:	defff004 	addi	sp,sp,-64
  80c3ac:	3011883a 	mov	r8,r6
  80c3b0:	000d883a 	mov	r6,zero
  80c3b4:	dd400b15 	stw	r21,44(sp)
  80c3b8:	dcc00915 	stw	r19,36(sp)
  80c3bc:	dc000615 	stw	r16,24(sp)
  80c3c0:	dfc00f15 	stw	ra,60(sp)
  80c3c4:	df000e15 	stw	fp,56(sp)
  80c3c8:	ddc00d15 	stw	r23,52(sp)
  80c3cc:	dd800c15 	stw	r22,48(sp)
  80c3d0:	dd000a15 	stw	r20,40(sp)
  80c3d4:	dc800815 	stw	r18,32(sp)
  80c3d8:	dc400715 	stw	r17,28(sp)
  80c3dc:	2817883a 	mov	r11,r5
  80c3e0:	d9800415 	stw	r6,16(sp)
  80c3e4:	4027883a 	mov	r19,r8
  80c3e8:	d9800515 	stw	r6,20(sp)
  80c3ec:	2021883a 	mov	r16,r4
  80c3f0:	282b883a 	mov	r21,r5
  80c3f4:	38002c1e 	bne	r7,zero,80c4a8 <__umoddi3+0x100>
  80c3f8:	2a005636 	bltu	r5,r8,80c554 <__umoddi3+0x1ac>
  80c3fc:	40009a26 	beq	r8,zero,80c668 <__umoddi3+0x2c0>
  80c400:	00bfffd4 	movui	r2,65535
  80c404:	14c09236 	bltu	r2,r19,80c650 <__umoddi3+0x2a8>
  80c408:	00803fc4 	movi	r2,255
  80c40c:	14c15c36 	bltu	r2,r19,80c980 <__umoddi3+0x5d8>
  80c410:	000b883a 	mov	r5,zero
  80c414:	0005883a 	mov	r2,zero
  80c418:	9884d83a 	srl	r2,r19,r2
  80c41c:	01002074 	movhi	r4,129
  80c420:	213f4e04 	addi	r4,r4,-712
  80c424:	01800804 	movi	r6,32
  80c428:	1105883a 	add	r2,r2,r4
  80c42c:	10c00003 	ldbu	r3,0(r2)
  80c430:	28c7883a 	add	r3,r5,r3
  80c434:	30e5c83a 	sub	r18,r6,r3
  80c438:	9000a41e 	bne	r18,zero,80c6cc <__umoddi3+0x324>
  80c43c:	982ed43a 	srli	r23,r19,16
  80c440:	acebc83a 	sub	r21,r21,r19
  80c444:	9d3fffcc 	andi	r20,r19,65535
  80c448:	002d883a 	mov	r22,zero
  80c44c:	a809883a 	mov	r4,r21
  80c450:	b80b883a 	mov	r5,r23
  80c454:	0803fb00 	call	803fb0 <__udivsi3>
  80c458:	100b883a 	mov	r5,r2
  80c45c:	a009883a 	mov	r4,r20
  80c460:	0803fc00 	call	803fc0 <__mulsi3>
  80c464:	a809883a 	mov	r4,r21
  80c468:	b80b883a 	mov	r5,r23
  80c46c:	1023883a 	mov	r17,r2
  80c470:	0803fb80 	call	803fb8 <__umodsi3>
  80c474:	1004943a 	slli	r2,r2,16
  80c478:	8006d43a 	srli	r3,r16,16
  80c47c:	10c4b03a 	or	r2,r2,r3
  80c480:	1440032e 	bgeu	r2,r17,80c490 <__umoddi3+0xe8>
  80c484:	14c5883a 	add	r2,r2,r19
  80c488:	14c00136 	bltu	r2,r19,80c490 <__umoddi3+0xe8>
  80c48c:	14415836 	bltu	r2,r17,80c9f0 <__umoddi3+0x648>
  80c490:	1463c83a 	sub	r17,r2,r17
  80c494:	8809883a 	mov	r4,r17
  80c498:	b80b883a 	mov	r5,r23
  80c49c:	0803fb00 	call	803fb0 <__udivsi3>
  80c4a0:	a009883a 	mov	r4,r20
  80c4a4:	00005306 	br	80c5f4 <__umoddi3+0x24c>
  80c4a8:	380d883a 	mov	r6,r7
  80c4ac:	29c0132e 	bgeu	r5,r7,80c4fc <__umoddi3+0x154>
  80c4b0:	d9000415 	stw	r4,16(sp)
  80c4b4:	d9400515 	stw	r5,20(sp)
  80c4b8:	d9400417 	ldw	r5,16(sp)
  80c4bc:	5813883a 	mov	r9,r11
  80c4c0:	2811883a 	mov	r8,r5
  80c4c4:	4005883a 	mov	r2,r8
  80c4c8:	4807883a 	mov	r3,r9
  80c4cc:	dfc00f17 	ldw	ra,60(sp)
  80c4d0:	df000e17 	ldw	fp,56(sp)
  80c4d4:	ddc00d17 	ldw	r23,52(sp)
  80c4d8:	dd800c17 	ldw	r22,48(sp)
  80c4dc:	dd400b17 	ldw	r21,44(sp)
  80c4e0:	dd000a17 	ldw	r20,40(sp)
  80c4e4:	dcc00917 	ldw	r19,36(sp)
  80c4e8:	dc800817 	ldw	r18,32(sp)
  80c4ec:	dc400717 	ldw	r17,28(sp)
  80c4f0:	dc000617 	ldw	r16,24(sp)
  80c4f4:	dec01004 	addi	sp,sp,64
  80c4f8:	f800283a 	ret
  80c4fc:	00bfffd4 	movui	r2,65535
  80c500:	11c06636 	bltu	r2,r7,80c69c <__umoddi3+0x2f4>
  80c504:	00803fc4 	movi	r2,255
  80c508:	11c12036 	bltu	r2,r7,80c98c <__umoddi3+0x5e4>
  80c50c:	000b883a 	mov	r5,zero
  80c510:	0005883a 	mov	r2,zero
  80c514:	3084d83a 	srl	r2,r6,r2
  80c518:	01002074 	movhi	r4,129
  80c51c:	213f4e04 	addi	r4,r4,-712
  80c520:	01c00804 	movi	r7,32
  80c524:	1105883a 	add	r2,r2,r4
  80c528:	10c00003 	ldbu	r3,0(r2)
  80c52c:	28c7883a 	add	r3,r5,r3
  80c530:	38e5c83a 	sub	r18,r7,r3
  80c534:	9000941e 	bne	r18,zero,80c788 <__umoddi3+0x3e0>
  80c538:	35405e36 	bltu	r6,r21,80c6b4 <__umoddi3+0x30c>
  80c53c:	84c05d2e 	bgeu	r16,r19,80c6b4 <__umoddi3+0x30c>
  80c540:	8011883a 	mov	r8,r16
  80c544:	a813883a 	mov	r9,r21
  80c548:	dc000415 	stw	r16,16(sp)
  80c54c:	dd400515 	stw	r21,20(sp)
  80c550:	003fdc06 	br	80c4c4 <__umoddi3+0x11c>
  80c554:	00bfffd4 	movui	r2,65535
  80c558:	12004a36 	bltu	r2,r8,80c684 <__umoddi3+0x2dc>
  80c55c:	00803fc4 	movi	r2,255
  80c560:	12010d36 	bltu	r2,r8,80c998 <__umoddi3+0x5f0>
  80c564:	000b883a 	mov	r5,zero
  80c568:	0005883a 	mov	r2,zero
  80c56c:	9884d83a 	srl	r2,r19,r2
  80c570:	01002074 	movhi	r4,129
  80c574:	213f4e04 	addi	r4,r4,-712
  80c578:	01800804 	movi	r6,32
  80c57c:	1105883a 	add	r2,r2,r4
  80c580:	10c00003 	ldbu	r3,0(r2)
  80c584:	28c7883a 	add	r3,r5,r3
  80c588:	30c7c83a 	sub	r3,r6,r3
  80c58c:	1800dc1e 	bne	r3,zero,80c900 <__umoddi3+0x558>
  80c590:	002d883a 	mov	r22,zero
  80c594:	982ed43a 	srli	r23,r19,16
  80c598:	a809883a 	mov	r4,r21
  80c59c:	9cbfffcc 	andi	r18,r19,65535
  80c5a0:	b80b883a 	mov	r5,r23
  80c5a4:	0803fb00 	call	803fb0 <__udivsi3>
  80c5a8:	100b883a 	mov	r5,r2
  80c5ac:	9009883a 	mov	r4,r18
  80c5b0:	0803fc00 	call	803fc0 <__mulsi3>
  80c5b4:	a809883a 	mov	r4,r21
  80c5b8:	b80b883a 	mov	r5,r23
  80c5bc:	1023883a 	mov	r17,r2
  80c5c0:	0803fb80 	call	803fb8 <__umodsi3>
  80c5c4:	1004943a 	slli	r2,r2,16
  80c5c8:	8006d43a 	srli	r3,r16,16
  80c5cc:	10c4b03a 	or	r2,r2,r3
  80c5d0:	1440032e 	bgeu	r2,r17,80c5e0 <__umoddi3+0x238>
  80c5d4:	14c5883a 	add	r2,r2,r19
  80c5d8:	14c00136 	bltu	r2,r19,80c5e0 <__umoddi3+0x238>
  80c5dc:	14410236 	bltu	r2,r17,80c9e8 <__umoddi3+0x640>
  80c5e0:	1463c83a 	sub	r17,r2,r17
  80c5e4:	8809883a 	mov	r4,r17
  80c5e8:	b80b883a 	mov	r5,r23
  80c5ec:	0803fb00 	call	803fb0 <__udivsi3>
  80c5f0:	9009883a 	mov	r4,r18
  80c5f4:	100b883a 	mov	r5,r2
  80c5f8:	0803fc00 	call	803fc0 <__mulsi3>
  80c5fc:	8809883a 	mov	r4,r17
  80c600:	b80b883a 	mov	r5,r23
  80c604:	102b883a 	mov	r21,r2
  80c608:	0803fb80 	call	803fb8 <__umodsi3>
  80c60c:	1004943a 	slli	r2,r2,16
  80c610:	80ffffcc 	andi	r3,r16,65535
  80c614:	10c4b03a 	or	r2,r2,r3
  80c618:	1540042e 	bgeu	r2,r21,80c62c <__umoddi3+0x284>
  80c61c:	14c5883a 	add	r2,r2,r19
  80c620:	14c00236 	bltu	r2,r19,80c62c <__umoddi3+0x284>
  80c624:	1540012e 	bgeu	r2,r21,80c62c <__umoddi3+0x284>
  80c628:	14c5883a 	add	r2,r2,r19
  80c62c:	1545c83a 	sub	r2,r2,r21
  80c630:	1584d83a 	srl	r2,r2,r22
  80c634:	0013883a 	mov	r9,zero
  80c638:	d8800415 	stw	r2,16(sp)
  80c63c:	d8c00417 	ldw	r3,16(sp)
  80c640:	0005883a 	mov	r2,zero
  80c644:	d8800515 	stw	r2,20(sp)
  80c648:	1811883a 	mov	r8,r3
  80c64c:	003f9d06 	br	80c4c4 <__umoddi3+0x11c>
  80c650:	00804034 	movhi	r2,256
  80c654:	10bfffc4 	addi	r2,r2,-1
  80c658:	14c0c636 	bltu	r2,r19,80c974 <__umoddi3+0x5cc>
  80c65c:	01400404 	movi	r5,16
  80c660:	2805883a 	mov	r2,r5
  80c664:	003f6c06 	br	80c418 <__umoddi3+0x70>
  80c668:	01000044 	movi	r4,1
  80c66c:	000b883a 	mov	r5,zero
  80c670:	0803fb00 	call	803fb0 <__udivsi3>
  80c674:	1027883a 	mov	r19,r2
  80c678:	00bfffd4 	movui	r2,65535
  80c67c:	14fff436 	bltu	r2,r19,80c650 <__umoddi3+0x2a8>
  80c680:	003f6106 	br	80c408 <__umoddi3+0x60>
  80c684:	00804034 	movhi	r2,256
  80c688:	10bfffc4 	addi	r2,r2,-1
  80c68c:	1200c536 	bltu	r2,r8,80c9a4 <__umoddi3+0x5fc>
  80c690:	01400404 	movi	r5,16
  80c694:	2805883a 	mov	r2,r5
  80c698:	003fb406 	br	80c56c <__umoddi3+0x1c4>
  80c69c:	00804034 	movhi	r2,256
  80c6a0:	10bfffc4 	addi	r2,r2,-1
  80c6a4:	11c0c236 	bltu	r2,r7,80c9b0 <__umoddi3+0x608>
  80c6a8:	01400404 	movi	r5,16
  80c6ac:	2805883a 	mov	r2,r5
  80c6b0:	003f9806 	br	80c514 <__umoddi3+0x16c>
  80c6b4:	84c9c83a 	sub	r4,r16,r19
  80c6b8:	8105803a 	cmpltu	r2,r16,r4
  80c6bc:	a987c83a 	sub	r3,r21,r6
  80c6c0:	18abc83a 	sub	r21,r3,r2
  80c6c4:	2021883a 	mov	r16,r4
  80c6c8:	003f9d06 	br	80c540 <__umoddi3+0x198>
  80c6cc:	9ca6983a 	sll	r19,r19,r18
  80c6d0:	3485c83a 	sub	r2,r6,r18
  80c6d4:	a8a2d83a 	srl	r17,r21,r2
  80c6d8:	982ed43a 	srli	r23,r19,16
  80c6dc:	ac86983a 	sll	r3,r21,r18
  80c6e0:	8084d83a 	srl	r2,r16,r2
  80c6e4:	8809883a 	mov	r4,r17
  80c6e8:	b80b883a 	mov	r5,r23
  80c6ec:	18b8b03a 	or	fp,r3,r2
  80c6f0:	9d3fffcc 	andi	r20,r19,65535
  80c6f4:	0803fb00 	call	803fb0 <__udivsi3>
  80c6f8:	100b883a 	mov	r5,r2
  80c6fc:	a009883a 	mov	r4,r20
  80c700:	0803fc00 	call	803fc0 <__mulsi3>
  80c704:	8809883a 	mov	r4,r17
  80c708:	b80b883a 	mov	r5,r23
  80c70c:	102b883a 	mov	r21,r2
  80c710:	0803fb80 	call	803fb8 <__umodsi3>
  80c714:	1004943a 	slli	r2,r2,16
  80c718:	e006d43a 	srli	r3,fp,16
  80c71c:	902d883a 	mov	r22,r18
  80c720:	10c4b03a 	or	r2,r2,r3
  80c724:	1540022e 	bgeu	r2,r21,80c730 <__umoddi3+0x388>
  80c728:	14c5883a 	add	r2,r2,r19
  80c72c:	14c0ab2e 	bgeu	r2,r19,80c9dc <__umoddi3+0x634>
  80c730:	1563c83a 	sub	r17,r2,r21
  80c734:	8809883a 	mov	r4,r17
  80c738:	b80b883a 	mov	r5,r23
  80c73c:	0803fb00 	call	803fb0 <__udivsi3>
  80c740:	100b883a 	mov	r5,r2
  80c744:	a009883a 	mov	r4,r20
  80c748:	0803fc00 	call	803fc0 <__mulsi3>
  80c74c:	8809883a 	mov	r4,r17
  80c750:	b80b883a 	mov	r5,r23
  80c754:	102b883a 	mov	r21,r2
  80c758:	0803fb80 	call	803fb8 <__umodsi3>
  80c75c:	1004943a 	slli	r2,r2,16
  80c760:	e0ffffcc 	andi	r3,fp,65535
  80c764:	10c4b03a 	or	r2,r2,r3
  80c768:	1540042e 	bgeu	r2,r21,80c77c <__umoddi3+0x3d4>
  80c76c:	14c5883a 	add	r2,r2,r19
  80c770:	14c00236 	bltu	r2,r19,80c77c <__umoddi3+0x3d4>
  80c774:	1540012e 	bgeu	r2,r21,80c77c <__umoddi3+0x3d4>
  80c778:	14c5883a 	add	r2,r2,r19
  80c77c:	84a0983a 	sll	r16,r16,r18
  80c780:	156bc83a 	sub	r21,r2,r21
  80c784:	003f3106 	br	80c44c <__umoddi3+0xa4>
  80c788:	3c8fc83a 	sub	r7,r7,r18
  80c78c:	3486983a 	sll	r3,r6,r18
  80c790:	99c4d83a 	srl	r2,r19,r7
  80c794:	a9e2d83a 	srl	r17,r21,r7
  80c798:	ac8c983a 	sll	r6,r21,r18
  80c79c:	18acb03a 	or	r22,r3,r2
  80c7a0:	b02ed43a 	srli	r23,r22,16
  80c7a4:	81c4d83a 	srl	r2,r16,r7
  80c7a8:	8809883a 	mov	r4,r17
  80c7ac:	b80b883a 	mov	r5,r23
  80c7b0:	308cb03a 	or	r6,r6,r2
  80c7b4:	d9c00315 	stw	r7,12(sp)
  80c7b8:	d9800215 	stw	r6,8(sp)
  80c7bc:	b53fffcc 	andi	r20,r22,65535
  80c7c0:	0803fb00 	call	803fb0 <__udivsi3>
  80c7c4:	100b883a 	mov	r5,r2
  80c7c8:	a009883a 	mov	r4,r20
  80c7cc:	1039883a 	mov	fp,r2
  80c7d0:	0803fc00 	call	803fc0 <__mulsi3>
  80c7d4:	8809883a 	mov	r4,r17
  80c7d8:	b80b883a 	mov	r5,r23
  80c7dc:	102b883a 	mov	r21,r2
  80c7e0:	0803fb80 	call	803fb8 <__umodsi3>
  80c7e4:	d9000217 	ldw	r4,8(sp)
  80c7e8:	1004943a 	slli	r2,r2,16
  80c7ec:	9ca6983a 	sll	r19,r19,r18
  80c7f0:	2006d43a 	srli	r3,r4,16
  80c7f4:	84a0983a 	sll	r16,r16,r18
  80c7f8:	dcc00015 	stw	r19,0(sp)
  80c7fc:	10c4b03a 	or	r2,r2,r3
  80c800:	dc000115 	stw	r16,4(sp)
  80c804:	1540032e 	bgeu	r2,r21,80c814 <__umoddi3+0x46c>
  80c808:	1585883a 	add	r2,r2,r22
  80c80c:	e73fffc4 	addi	fp,fp,-1
  80c810:	15806e2e 	bgeu	r2,r22,80c9cc <__umoddi3+0x624>
  80c814:	1563c83a 	sub	r17,r2,r21
  80c818:	8809883a 	mov	r4,r17
  80c81c:	b80b883a 	mov	r5,r23
  80c820:	0803fb00 	call	803fb0 <__udivsi3>
  80c824:	100b883a 	mov	r5,r2
  80c828:	a009883a 	mov	r4,r20
  80c82c:	1021883a 	mov	r16,r2
  80c830:	0803fc00 	call	803fc0 <__mulsi3>
  80c834:	b80b883a 	mov	r5,r23
  80c838:	8809883a 	mov	r4,r17
  80c83c:	1029883a 	mov	r20,r2
  80c840:	0803fb80 	call	803fb8 <__umodsi3>
  80c844:	d9400217 	ldw	r5,8(sp)
  80c848:	1004943a 	slli	r2,r2,16
  80c84c:	28ffffcc 	andi	r3,r5,65535
  80c850:	10c4b03a 	or	r2,r2,r3
  80c854:	1500032e 	bgeu	r2,r20,80c864 <__umoddi3+0x4bc>
  80c858:	1585883a 	add	r2,r2,r22
  80c85c:	843fffc4 	addi	r16,r16,-1
  80c860:	1580562e 	bgeu	r2,r22,80c9bc <__umoddi3+0x614>
  80c864:	d9800017 	ldw	r6,0(sp)
  80c868:	e022943a 	slli	r17,fp,16
  80c86c:	302ed43a 	srli	r23,r6,16
  80c870:	8462b03a 	or	r17,r16,r17
  80c874:	34ffffcc 	andi	r19,r6,65535
  80c878:	882ad43a 	srli	r21,r17,16
  80c87c:	8c7fffcc 	andi	r17,r17,65535
  80c880:	8809883a 	mov	r4,r17
  80c884:	980b883a 	mov	r5,r19
  80c888:	1521c83a 	sub	r16,r2,r20
  80c88c:	0803fc00 	call	803fc0 <__mulsi3>
  80c890:	8809883a 	mov	r4,r17
  80c894:	b80b883a 	mov	r5,r23
  80c898:	1029883a 	mov	r20,r2
  80c89c:	0803fc00 	call	803fc0 <__mulsi3>
  80c8a0:	980b883a 	mov	r5,r19
  80c8a4:	a809883a 	mov	r4,r21
  80c8a8:	1023883a 	mov	r17,r2
  80c8ac:	0803fc00 	call	803fc0 <__mulsi3>
  80c8b0:	a809883a 	mov	r4,r21
  80c8b4:	b80b883a 	mov	r5,r23
  80c8b8:	1027883a 	mov	r19,r2
  80c8bc:	0803fc00 	call	803fc0 <__mulsi3>
  80c8c0:	100b883a 	mov	r5,r2
  80c8c4:	a004d43a 	srli	r2,r20,16
  80c8c8:	8ce3883a 	add	r17,r17,r19
  80c8cc:	1449883a 	add	r4,r2,r17
  80c8d0:	24c0022e 	bgeu	r4,r19,80c8dc <__umoddi3+0x534>
  80c8d4:	00800074 	movhi	r2,1
  80c8d8:	288b883a 	add	r5,r5,r2
  80c8dc:	2004d43a 	srli	r2,r4,16
  80c8e0:	2008943a 	slli	r4,r4,16
  80c8e4:	a0ffffcc 	andi	r3,r20,65535
  80c8e8:	288d883a 	add	r6,r5,r2
  80c8ec:	20c9883a 	add	r4,r4,r3
  80c8f0:	81800b36 	bltu	r16,r6,80c920 <__umoddi3+0x578>
  80c8f4:	81804026 	beq	r16,r6,80c9f8 <__umoddi3+0x650>
  80c8f8:	818dc83a 	sub	r6,r16,r6
  80c8fc:	00000f06 	br	80c93c <__umoddi3+0x594>
  80c900:	30c5c83a 	sub	r2,r6,r3
  80c904:	182d883a 	mov	r22,r3
  80c908:	8084d83a 	srl	r2,r16,r2
  80c90c:	a8c6983a 	sll	r3,r21,r3
  80c910:	9da6983a 	sll	r19,r19,r22
  80c914:	85a0983a 	sll	r16,r16,r22
  80c918:	18aab03a 	or	r21,r3,r2
  80c91c:	003f1d06 	br	80c594 <__umoddi3+0x1ec>
  80c920:	d8c00017 	ldw	r3,0(sp)
  80c924:	20c5c83a 	sub	r2,r4,r3
  80c928:	2089803a 	cmpltu	r4,r4,r2
  80c92c:	3587c83a 	sub	r3,r6,r22
  80c930:	1907c83a 	sub	r3,r3,r4
  80c934:	80cdc83a 	sub	r6,r16,r3
  80c938:	1009883a 	mov	r4,r2
  80c93c:	d9400117 	ldw	r5,4(sp)
  80c940:	2905c83a 	sub	r2,r5,r4
  80c944:	2887803a 	cmpltu	r3,r5,r2
  80c948:	30c7c83a 	sub	r3,r6,r3
  80c94c:	d9800317 	ldw	r6,12(sp)
  80c950:	1484d83a 	srl	r2,r2,r18
  80c954:	1988983a 	sll	r4,r3,r6
  80c958:	1c86d83a 	srl	r3,r3,r18
  80c95c:	2088b03a 	or	r4,r4,r2
  80c960:	2011883a 	mov	r8,r4
  80c964:	1813883a 	mov	r9,r3
  80c968:	d9000415 	stw	r4,16(sp)
  80c96c:	d8c00515 	stw	r3,20(sp)
  80c970:	003ed406 	br	80c4c4 <__umoddi3+0x11c>
  80c974:	01400604 	movi	r5,24
  80c978:	2805883a 	mov	r2,r5
  80c97c:	003ea606 	br	80c418 <__umoddi3+0x70>
  80c980:	01400204 	movi	r5,8
  80c984:	2805883a 	mov	r2,r5
  80c988:	003ea306 	br	80c418 <__umoddi3+0x70>
  80c98c:	01400204 	movi	r5,8
  80c990:	2805883a 	mov	r2,r5
  80c994:	003edf06 	br	80c514 <__umoddi3+0x16c>
  80c998:	01400204 	movi	r5,8
  80c99c:	2805883a 	mov	r2,r5
  80c9a0:	003ef206 	br	80c56c <__umoddi3+0x1c4>
  80c9a4:	01400604 	movi	r5,24
  80c9a8:	2805883a 	mov	r2,r5
  80c9ac:	003eef06 	br	80c56c <__umoddi3+0x1c4>
  80c9b0:	01400604 	movi	r5,24
  80c9b4:	2805883a 	mov	r2,r5
  80c9b8:	003ed606 	br	80c514 <__umoddi3+0x16c>
  80c9bc:	153fa92e 	bgeu	r2,r20,80c864 <__umoddi3+0x4bc>
  80c9c0:	843fffc4 	addi	r16,r16,-1
  80c9c4:	1585883a 	add	r2,r2,r22
  80c9c8:	003fa606 	br	80c864 <__umoddi3+0x4bc>
  80c9cc:	157f912e 	bgeu	r2,r21,80c814 <__umoddi3+0x46c>
  80c9d0:	e73fffc4 	addi	fp,fp,-1
  80c9d4:	1585883a 	add	r2,r2,r22
  80c9d8:	003f8e06 	br	80c814 <__umoddi3+0x46c>
  80c9dc:	157f542e 	bgeu	r2,r21,80c730 <__umoddi3+0x388>
  80c9e0:	14c5883a 	add	r2,r2,r19
  80c9e4:	003f5206 	br	80c730 <__umoddi3+0x388>
  80c9e8:	14c5883a 	add	r2,r2,r19
  80c9ec:	003efc06 	br	80c5e0 <__umoddi3+0x238>
  80c9f0:	14c5883a 	add	r2,r2,r19
  80c9f4:	003ea606 	br	80c490 <__umoddi3+0xe8>
  80c9f8:	d8800117 	ldw	r2,4(sp)
  80c9fc:	113fc836 	bltu	r2,r4,80c920 <__umoddi3+0x578>
  80ca00:	000d883a 	mov	r6,zero
  80ca04:	003fcd06 	br	80c93c <__umoddi3+0x594>

0080ca08 <__divdf3>:
  80ca08:	deffed04 	addi	sp,sp,-76
  80ca0c:	dcc01115 	stw	r19,68(sp)
  80ca10:	dcc00404 	addi	r19,sp,16
  80ca14:	2011883a 	mov	r8,r4
  80ca18:	2813883a 	mov	r9,r5
  80ca1c:	dc000e15 	stw	r16,56(sp)
  80ca20:	d809883a 	mov	r4,sp
  80ca24:	980b883a 	mov	r5,r19
  80ca28:	dc000904 	addi	r16,sp,36
  80ca2c:	dfc01215 	stw	ra,72(sp)
  80ca30:	da400115 	stw	r9,4(sp)
  80ca34:	d9c00315 	stw	r7,12(sp)
  80ca38:	da000015 	stw	r8,0(sp)
  80ca3c:	d9800215 	stw	r6,8(sp)
  80ca40:	dc801015 	stw	r18,64(sp)
  80ca44:	dc400f15 	stw	r17,60(sp)
  80ca48:	08047040 	call	804704 <__unpack_d>
  80ca4c:	d9000204 	addi	r4,sp,8
  80ca50:	800b883a 	mov	r5,r16
  80ca54:	08047040 	call	804704 <__unpack_d>
  80ca58:	d9000417 	ldw	r4,16(sp)
  80ca5c:	00800044 	movi	r2,1
  80ca60:	11000b2e 	bgeu	r2,r4,80ca90 <__divdf3+0x88>
  80ca64:	d9400917 	ldw	r5,36(sp)
  80ca68:	1140762e 	bgeu	r2,r5,80cc44 <__divdf3+0x23c>
  80ca6c:	d8800517 	ldw	r2,20(sp)
  80ca70:	d8c00a17 	ldw	r3,40(sp)
  80ca74:	01800104 	movi	r6,4
  80ca78:	10c4f03a 	xor	r2,r2,r3
  80ca7c:	d8800515 	stw	r2,20(sp)
  80ca80:	21800226 	beq	r4,r6,80ca8c <__divdf3+0x84>
  80ca84:	00800084 	movi	r2,2
  80ca88:	2080141e 	bne	r4,r2,80cadc <__divdf3+0xd4>
  80ca8c:	29000926 	beq	r5,r4,80cab4 <__divdf3+0xac>
  80ca90:	9809883a 	mov	r4,r19
  80ca94:	08043f00 	call	8043f0 <__pack_d>
  80ca98:	dfc01217 	ldw	ra,72(sp)
  80ca9c:	dcc01117 	ldw	r19,68(sp)
  80caa0:	dc801017 	ldw	r18,64(sp)
  80caa4:	dc400f17 	ldw	r17,60(sp)
  80caa8:	dc000e17 	ldw	r16,56(sp)
  80caac:	dec01304 	addi	sp,sp,76
  80cab0:	f800283a 	ret
  80cab4:	01002074 	movhi	r4,129
  80cab8:	213f4904 	addi	r4,r4,-732
  80cabc:	08043f00 	call	8043f0 <__pack_d>
  80cac0:	dfc01217 	ldw	ra,72(sp)
  80cac4:	dcc01117 	ldw	r19,68(sp)
  80cac8:	dc801017 	ldw	r18,64(sp)
  80cacc:	dc400f17 	ldw	r17,60(sp)
  80cad0:	dc000e17 	ldw	r16,56(sp)
  80cad4:	dec01304 	addi	sp,sp,76
  80cad8:	f800283a 	ret
  80cadc:	29805b26 	beq	r5,r6,80cc4c <__divdf3+0x244>
  80cae0:	28802d26 	beq	r5,r2,80cb98 <__divdf3+0x190>
  80cae4:	d8c00617 	ldw	r3,24(sp)
  80cae8:	d8800b17 	ldw	r2,44(sp)
  80caec:	d9c00817 	ldw	r7,32(sp)
  80caf0:	dc400d17 	ldw	r17,52(sp)
  80caf4:	188bc83a 	sub	r5,r3,r2
  80caf8:	d9800717 	ldw	r6,28(sp)
  80cafc:	dc000c17 	ldw	r16,48(sp)
  80cb00:	d9400615 	stw	r5,24(sp)
  80cb04:	3c403836 	bltu	r7,r17,80cbe8 <__divdf3+0x1e0>
  80cb08:	89c03626 	beq	r17,r7,80cbe4 <__divdf3+0x1dc>
  80cb0c:	0015883a 	mov	r10,zero
  80cb10:	001d883a 	mov	r14,zero
  80cb14:	02c40034 	movhi	r11,4096
  80cb18:	001f883a 	mov	r15,zero
  80cb1c:	003f883a 	mov	ra,zero
  80cb20:	04800f44 	movi	r18,61
  80cb24:	00000f06 	br	80cb64 <__divdf3+0x15c>
  80cb28:	601d883a 	mov	r14,r12
  80cb2c:	681f883a 	mov	r15,r13
  80cb30:	400d883a 	mov	r6,r8
  80cb34:	100f883a 	mov	r7,r2
  80cb38:	3191883a 	add	r8,r6,r6
  80cb3c:	5808d07a 	srli	r4,r11,1
  80cb40:	4185803a 	cmpltu	r2,r8,r6
  80cb44:	39d3883a 	add	r9,r7,r7
  80cb48:	28c6b03a 	or	r3,r5,r3
  80cb4c:	1245883a 	add	r2,r2,r9
  80cb50:	1815883a 	mov	r10,r3
  80cb54:	2017883a 	mov	r11,r4
  80cb58:	400d883a 	mov	r6,r8
  80cb5c:	100f883a 	mov	r7,r2
  80cb60:	fc801726 	beq	ra,r18,80cbc0 <__divdf3+0x1b8>
  80cb64:	580a97fa 	slli	r5,r11,31
  80cb68:	5006d07a 	srli	r3,r10,1
  80cb6c:	ffc00044 	addi	ra,ra,1
  80cb70:	3c7ff136 	bltu	r7,r17,80cb38 <__divdf3+0x130>
  80cb74:	3411c83a 	sub	r8,r6,r16
  80cb78:	3205803a 	cmpltu	r2,r6,r8
  80cb7c:	3c53c83a 	sub	r9,r7,r17
  80cb80:	7298b03a 	or	r12,r14,r10
  80cb84:	7adab03a 	or	r13,r15,r11
  80cb88:	4885c83a 	sub	r2,r9,r2
  80cb8c:	89ffe61e 	bne	r17,r7,80cb28 <__divdf3+0x120>
  80cb90:	343fe936 	bltu	r6,r16,80cb38 <__divdf3+0x130>
  80cb94:	003fe406 	br	80cb28 <__divdf3+0x120>
  80cb98:	9809883a 	mov	r4,r19
  80cb9c:	d9800415 	stw	r6,16(sp)
  80cba0:	08043f00 	call	8043f0 <__pack_d>
  80cba4:	dfc01217 	ldw	ra,72(sp)
  80cba8:	dcc01117 	ldw	r19,68(sp)
  80cbac:	dc801017 	ldw	r18,64(sp)
  80cbb0:	dc400f17 	ldw	r17,60(sp)
  80cbb4:	dc000e17 	ldw	r16,56(sp)
  80cbb8:	dec01304 	addi	sp,sp,76
  80cbbc:	f800283a 	ret
  80cbc0:	00803fc4 	movi	r2,255
  80cbc4:	7090703a 	and	r8,r14,r2
  80cbc8:	00802004 	movi	r2,128
  80cbcc:	0007883a 	mov	r3,zero
  80cbd0:	0013883a 	mov	r9,zero
  80cbd4:	40800d26 	beq	r8,r2,80cc0c <__divdf3+0x204>
  80cbd8:	dbc00815 	stw	r15,32(sp)
  80cbdc:	db800715 	stw	r14,28(sp)
  80cbe0:	003fab06 	br	80ca90 <__divdf3+0x88>
  80cbe4:	343fc92e 	bgeu	r6,r16,80cb0c <__divdf3+0x104>
  80cbe8:	3185883a 	add	r2,r6,r6
  80cbec:	1189803a 	cmpltu	r4,r2,r6
  80cbf0:	39c7883a 	add	r3,r7,r7
  80cbf4:	20c9883a 	add	r4,r4,r3
  80cbf8:	297fffc4 	addi	r5,r5,-1
  80cbfc:	100d883a 	mov	r6,r2
  80cc00:	200f883a 	mov	r7,r4
  80cc04:	d9400615 	stw	r5,24(sp)
  80cc08:	003fc006 	br	80cb0c <__divdf3+0x104>
  80cc0c:	483ff21e 	bne	r9,zero,80cbd8 <__divdf3+0x1d0>
  80cc10:	01004004 	movi	r4,256
  80cc14:	7104703a 	and	r2,r14,r4
  80cc18:	10c4b03a 	or	r2,r2,r3
  80cc1c:	103fee1e 	bne	r2,zero,80cbd8 <__divdf3+0x1d0>
  80cc20:	31c4b03a 	or	r2,r6,r7
  80cc24:	103fec26 	beq	r2,zero,80cbd8 <__divdf3+0x1d0>
  80cc28:	7205883a 	add	r2,r14,r8
  80cc2c:	1391803a 	cmpltu	r8,r2,r14
  80cc30:	43d1883a 	add	r8,r8,r15
  80cc34:	013fc004 	movi	r4,-256
  80cc38:	111c703a 	and	r14,r2,r4
  80cc3c:	401f883a 	mov	r15,r8
  80cc40:	003fe506 	br	80cbd8 <__divdf3+0x1d0>
  80cc44:	8009883a 	mov	r4,r16
  80cc48:	003f9206 	br	80ca94 <__divdf3+0x8c>
  80cc4c:	9809883a 	mov	r4,r19
  80cc50:	d8000715 	stw	zero,28(sp)
  80cc54:	d8000815 	stw	zero,32(sp)
  80cc58:	d8000615 	stw	zero,24(sp)
  80cc5c:	003f8d06 	br	80ca94 <__divdf3+0x8c>

0080cc60 <__nedf2>:
  80cc60:	deffef04 	addi	sp,sp,-68
  80cc64:	dc400f15 	stw	r17,60(sp)
  80cc68:	dc400404 	addi	r17,sp,16
  80cc6c:	2005883a 	mov	r2,r4
  80cc70:	2807883a 	mov	r3,r5
  80cc74:	dc000e15 	stw	r16,56(sp)
  80cc78:	d809883a 	mov	r4,sp
  80cc7c:	880b883a 	mov	r5,r17
  80cc80:	dc000904 	addi	r16,sp,36
  80cc84:	d8c00115 	stw	r3,4(sp)
  80cc88:	d8800015 	stw	r2,0(sp)
  80cc8c:	d9800215 	stw	r6,8(sp)
  80cc90:	dfc01015 	stw	ra,64(sp)
  80cc94:	d9c00315 	stw	r7,12(sp)
  80cc98:	08047040 	call	804704 <__unpack_d>
  80cc9c:	d9000204 	addi	r4,sp,8
  80cca0:	800b883a 	mov	r5,r16
  80cca4:	08047040 	call	804704 <__unpack_d>
  80cca8:	d8800417 	ldw	r2,16(sp)
  80ccac:	00c00044 	movi	r3,1
  80ccb0:	180d883a 	mov	r6,r3
  80ccb4:	1880062e 	bgeu	r3,r2,80ccd0 <__nedf2+0x70>
  80ccb8:	d8800917 	ldw	r2,36(sp)
  80ccbc:	8809883a 	mov	r4,r17
  80ccc0:	800b883a 	mov	r5,r16
  80ccc4:	1880022e 	bgeu	r3,r2,80ccd0 <__nedf2+0x70>
  80ccc8:	080483c0 	call	80483c <__fpcmp_parts_d>
  80cccc:	100d883a 	mov	r6,r2
  80ccd0:	3005883a 	mov	r2,r6
  80ccd4:	dfc01017 	ldw	ra,64(sp)
  80ccd8:	dc400f17 	ldw	r17,60(sp)
  80ccdc:	dc000e17 	ldw	r16,56(sp)
  80cce0:	dec01104 	addi	sp,sp,68
  80cce4:	f800283a 	ret

0080cce8 <__ltdf2>:
  80cce8:	deffef04 	addi	sp,sp,-68
  80ccec:	dc400f15 	stw	r17,60(sp)
  80ccf0:	dc400404 	addi	r17,sp,16
  80ccf4:	2005883a 	mov	r2,r4
  80ccf8:	2807883a 	mov	r3,r5
  80ccfc:	dc000e15 	stw	r16,56(sp)
  80cd00:	d809883a 	mov	r4,sp
  80cd04:	880b883a 	mov	r5,r17
  80cd08:	dc000904 	addi	r16,sp,36
  80cd0c:	d8c00115 	stw	r3,4(sp)
  80cd10:	d8800015 	stw	r2,0(sp)
  80cd14:	d9800215 	stw	r6,8(sp)
  80cd18:	dfc01015 	stw	ra,64(sp)
  80cd1c:	d9c00315 	stw	r7,12(sp)
  80cd20:	08047040 	call	804704 <__unpack_d>
  80cd24:	d9000204 	addi	r4,sp,8
  80cd28:	800b883a 	mov	r5,r16
  80cd2c:	08047040 	call	804704 <__unpack_d>
  80cd30:	d8800417 	ldw	r2,16(sp)
  80cd34:	00c00044 	movi	r3,1
  80cd38:	180d883a 	mov	r6,r3
  80cd3c:	1880062e 	bgeu	r3,r2,80cd58 <__ltdf2+0x70>
  80cd40:	d8800917 	ldw	r2,36(sp)
  80cd44:	8809883a 	mov	r4,r17
  80cd48:	800b883a 	mov	r5,r16
  80cd4c:	1880022e 	bgeu	r3,r2,80cd58 <__ltdf2+0x70>
  80cd50:	080483c0 	call	80483c <__fpcmp_parts_d>
  80cd54:	100d883a 	mov	r6,r2
  80cd58:	3005883a 	mov	r2,r6
  80cd5c:	dfc01017 	ldw	ra,64(sp)
  80cd60:	dc400f17 	ldw	r17,60(sp)
  80cd64:	dc000e17 	ldw	r16,56(sp)
  80cd68:	dec01104 	addi	sp,sp,68
  80cd6c:	f800283a 	ret

0080cd70 <__floatunsidf>:
  80cd70:	defff204 	addi	sp,sp,-56
  80cd74:	dfc00d15 	stw	ra,52(sp)
  80cd78:	ddc00c15 	stw	r23,48(sp)
  80cd7c:	dd800b15 	stw	r22,44(sp)
  80cd80:	dd400a15 	stw	r21,40(sp)
  80cd84:	dd000915 	stw	r20,36(sp)
  80cd88:	dcc00815 	stw	r19,32(sp)
  80cd8c:	dc800715 	stw	r18,28(sp)
  80cd90:	dc400615 	stw	r17,24(sp)
  80cd94:	dc000515 	stw	r16,20(sp)
  80cd98:	d8000115 	stw	zero,4(sp)
  80cd9c:	20000f1e 	bne	r4,zero,80cddc <__floatunsidf+0x6c>
  80cda0:	00800084 	movi	r2,2
  80cda4:	d8800015 	stw	r2,0(sp)
  80cda8:	d809883a 	mov	r4,sp
  80cdac:	08043f00 	call	8043f0 <__pack_d>
  80cdb0:	dfc00d17 	ldw	ra,52(sp)
  80cdb4:	ddc00c17 	ldw	r23,48(sp)
  80cdb8:	dd800b17 	ldw	r22,44(sp)
  80cdbc:	dd400a17 	ldw	r21,40(sp)
  80cdc0:	dd000917 	ldw	r20,36(sp)
  80cdc4:	dcc00817 	ldw	r19,32(sp)
  80cdc8:	dc800717 	ldw	r18,28(sp)
  80cdcc:	dc400617 	ldw	r17,24(sp)
  80cdd0:	dc000517 	ldw	r16,20(sp)
  80cdd4:	dec00e04 	addi	sp,sp,56
  80cdd8:	f800283a 	ret
  80cddc:	008000c4 	movi	r2,3
  80cde0:	00c00f04 	movi	r3,60
  80cde4:	002f883a 	mov	r23,zero
  80cde8:	202d883a 	mov	r22,r4
  80cdec:	d8800015 	stw	r2,0(sp)
  80cdf0:	d8c00215 	stw	r3,8(sp)
  80cdf4:	d9000315 	stw	r4,12(sp)
  80cdf8:	ddc00415 	stw	r23,16(sp)
  80cdfc:	080411c0 	call	80411c <__clzsi2>
  80ce00:	12400744 	addi	r9,r2,29
  80ce04:	48000b16 	blt	r9,zero,80ce34 <__floatunsidf+0xc4>
  80ce08:	483fe726 	beq	r9,zero,80cda8 <__floatunsidf+0x38>
  80ce0c:	10bfff44 	addi	r2,r2,-3
  80ce10:	10002e16 	blt	r2,zero,80cecc <__floatunsidf+0x15c>
  80ce14:	b0a2983a 	sll	r17,r22,r2
  80ce18:	0021883a 	mov	r16,zero
  80ce1c:	d8800217 	ldw	r2,8(sp)
  80ce20:	dc400415 	stw	r17,16(sp)
  80ce24:	dc000315 	stw	r16,12(sp)
  80ce28:	1245c83a 	sub	r2,r2,r9
  80ce2c:	d8800215 	stw	r2,8(sp)
  80ce30:	003fdd06 	br	80cda8 <__floatunsidf+0x38>
  80ce34:	0255c83a 	sub	r10,zero,r9
  80ce38:	51bff804 	addi	r6,r10,-32
  80ce3c:	30001b16 	blt	r6,zero,80ceac <__floatunsidf+0x13c>
  80ce40:	b9a8d83a 	srl	r20,r23,r6
  80ce44:	002b883a 	mov	r21,zero
  80ce48:	000f883a 	mov	r7,zero
  80ce4c:	01000044 	movi	r4,1
  80ce50:	0011883a 	mov	r8,zero
  80ce54:	30002516 	blt	r6,zero,80ceec <__floatunsidf+0x17c>
  80ce58:	21a6983a 	sll	r19,r4,r6
  80ce5c:	0025883a 	mov	r18,zero
  80ce60:	00bfffc4 	movi	r2,-1
  80ce64:	9089883a 	add	r4,r18,r2
  80ce68:	988b883a 	add	r5,r19,r2
  80ce6c:	248d803a 	cmpltu	r6,r4,r18
  80ce70:	314b883a 	add	r5,r6,r5
  80ce74:	b104703a 	and	r2,r22,r4
  80ce78:	b946703a 	and	r3,r23,r5
  80ce7c:	10c4b03a 	or	r2,r2,r3
  80ce80:	10000226 	beq	r2,zero,80ce8c <__floatunsidf+0x11c>
  80ce84:	01c00044 	movi	r7,1
  80ce88:	0011883a 	mov	r8,zero
  80ce8c:	d9000217 	ldw	r4,8(sp)
  80ce90:	a1c4b03a 	or	r2,r20,r7
  80ce94:	aa06b03a 	or	r3,r21,r8
  80ce98:	2249c83a 	sub	r4,r4,r9
  80ce9c:	d8c00415 	stw	r3,16(sp)
  80cea0:	d9000215 	stw	r4,8(sp)
  80cea4:	d8800315 	stw	r2,12(sp)
  80cea8:	003fbf06 	br	80cda8 <__floatunsidf+0x38>
  80ceac:	bdc7883a 	add	r3,r23,r23
  80ceb0:	008007c4 	movi	r2,31
  80ceb4:	1285c83a 	sub	r2,r2,r10
  80ceb8:	1886983a 	sll	r3,r3,r2
  80cebc:	b2a8d83a 	srl	r20,r22,r10
  80cec0:	baaad83a 	srl	r21,r23,r10
  80cec4:	1d28b03a 	or	r20,r3,r20
  80cec8:	003fdf06 	br	80ce48 <__floatunsidf+0xd8>
  80cecc:	b006d07a 	srli	r3,r22,1
  80ced0:	008007c4 	movi	r2,31
  80ced4:	1245c83a 	sub	r2,r2,r9
  80ced8:	1886d83a 	srl	r3,r3,r2
  80cedc:	ba62983a 	sll	r17,r23,r9
  80cee0:	b260983a 	sll	r16,r22,r9
  80cee4:	1c62b03a 	or	r17,r3,r17
  80cee8:	003fcc06 	br	80ce1c <__floatunsidf+0xac>
  80ceec:	2006d07a 	srli	r3,r4,1
  80cef0:	008007c4 	movi	r2,31
  80cef4:	1285c83a 	sub	r2,r2,r10
  80cef8:	18a6d83a 	srl	r19,r3,r2
  80cefc:	22a4983a 	sll	r18,r4,r10
  80cf00:	003fd706 	br	80ce60 <__floatunsidf+0xf0>

0080cf04 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80cf04:	defff804 	addi	sp,sp,-32
  80cf08:	dfc00715 	stw	ra,28(sp)
  80cf0c:	df000615 	stw	fp,24(sp)
  80cf10:	df000604 	addi	fp,sp,24
  80cf14:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80cf18:	e0bffc17 	ldw	r2,-16(fp)
  80cf1c:	1004803a 	cmplt	r2,r2,zero
  80cf20:	1000091e 	bne	r2,zero,80cf48 <close+0x44>
  80cf24:	e13ffc17 	ldw	r4,-16(fp)
  80cf28:	01400304 	movi	r5,12
  80cf2c:	0803fc00 	call	803fc0 <__mulsi3>
  80cf30:	1007883a 	mov	r3,r2
  80cf34:	00802074 	movhi	r2,129
  80cf38:	10822704 	addi	r2,r2,2204
  80cf3c:	1887883a 	add	r3,r3,r2
  80cf40:	e0ffff15 	stw	r3,-4(fp)
  80cf44:	00000106 	br	80cf4c <close+0x48>
  80cf48:	e03fff15 	stw	zero,-4(fp)
  80cf4c:	e0bfff17 	ldw	r2,-4(fp)
  80cf50:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
  80cf54:	e0bffb17 	ldw	r2,-20(fp)
  80cf58:	1005003a 	cmpeq	r2,r2,zero
  80cf5c:	10001d1e 	bne	r2,zero,80cfd4 <close+0xd0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80cf60:	e0bffb17 	ldw	r2,-20(fp)
  80cf64:	10800017 	ldw	r2,0(r2)
  80cf68:	10800417 	ldw	r2,16(r2)
  80cf6c:	1005003a 	cmpeq	r2,r2,zero
  80cf70:	1000071e 	bne	r2,zero,80cf90 <close+0x8c>
  80cf74:	e0bffb17 	ldw	r2,-20(fp)
  80cf78:	10800017 	ldw	r2,0(r2)
  80cf7c:	10800417 	ldw	r2,16(r2)
  80cf80:	e13ffb17 	ldw	r4,-20(fp)
  80cf84:	103ee83a 	callr	r2
  80cf88:	e0bffe15 	stw	r2,-8(fp)
  80cf8c:	00000106 	br	80cf94 <close+0x90>
  80cf90:	e03ffe15 	stw	zero,-8(fp)
  80cf94:	e0bffe17 	ldw	r2,-8(fp)
  80cf98:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80cf9c:	e13ffc17 	ldw	r4,-16(fp)
  80cfa0:	080d75c0 	call	80d75c <alt_release_fd>
    if (rval < 0)
  80cfa4:	e0bffa17 	ldw	r2,-24(fp)
  80cfa8:	1004403a 	cmpge	r2,r2,zero
  80cfac:	1000071e 	bne	r2,zero,80cfcc <close+0xc8>
    {
      ALT_ERRNO = -rval;
  80cfb0:	080d0040 	call	80d004 <alt_get_errno>
  80cfb4:	e0fffa17 	ldw	r3,-24(fp)
  80cfb8:	00c7c83a 	sub	r3,zero,r3
  80cfbc:	10c00015 	stw	r3,0(r2)
      return -1;
  80cfc0:	00bfffc4 	movi	r2,-1
  80cfc4:	e0bffd15 	stw	r2,-12(fp)
  80cfc8:	00000806 	br	80cfec <close+0xe8>
    }
    return 0;
  80cfcc:	e03ffd15 	stw	zero,-12(fp)
  80cfd0:	00000606 	br	80cfec <close+0xe8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80cfd4:	080d0040 	call	80d004 <alt_get_errno>
  80cfd8:	1007883a 	mov	r3,r2
  80cfdc:	00801444 	movi	r2,81
  80cfe0:	18800015 	stw	r2,0(r3)
    return -1;
  80cfe4:	00bfffc4 	movi	r2,-1
  80cfe8:	e0bffd15 	stw	r2,-12(fp)
  80cfec:	e0bffd17 	ldw	r2,-12(fp)
  }
}
  80cff0:	e037883a 	mov	sp,fp
  80cff4:	dfc00117 	ldw	ra,4(sp)
  80cff8:	df000017 	ldw	fp,0(sp)
  80cffc:	dec00204 	addi	sp,sp,8
  80d000:	f800283a 	ret

0080d004 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d004:	defffd04 	addi	sp,sp,-12
  80d008:	dfc00215 	stw	ra,8(sp)
  80d00c:	df000115 	stw	fp,4(sp)
  80d010:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80d014:	00802074 	movhi	r2,129
  80d018:	1086aa04 	addi	r2,r2,6824
  80d01c:	10800017 	ldw	r2,0(r2)
  80d020:	1005003a 	cmpeq	r2,r2,zero
  80d024:	1000061e 	bne	r2,zero,80d040 <alt_get_errno+0x3c>
  80d028:	00802074 	movhi	r2,129
  80d02c:	1086aa04 	addi	r2,r2,6824
  80d030:	10800017 	ldw	r2,0(r2)
  80d034:	103ee83a 	callr	r2
  80d038:	e0bfff15 	stw	r2,-4(fp)
  80d03c:	00000306 	br	80d04c <alt_get_errno+0x48>
  80d040:	00802074 	movhi	r2,129
  80d044:	108d4c04 	addi	r2,r2,13616
  80d048:	e0bfff15 	stw	r2,-4(fp)
  80d04c:	e0bfff17 	ldw	r2,-4(fp)
}
  80d050:	e037883a 	mov	sp,fp
  80d054:	dfc00117 	ldw	ra,4(sp)
  80d058:	df000017 	ldw	fp,0(sp)
  80d05c:	dec00204 	addi	sp,sp,8
  80d060:	f800283a 	ret

0080d064 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80d064:	defffc04 	addi	sp,sp,-16
  80d068:	df000315 	stw	fp,12(sp)
  80d06c:	df000304 	addi	fp,sp,12
  80d070:	e13ffd15 	stw	r4,-12(fp)
  80d074:	e17ffe15 	stw	r5,-8(fp)
  80d078:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80d07c:	e0bfff17 	ldw	r2,-4(fp)
}
  80d080:	e037883a 	mov	sp,fp
  80d084:	df000017 	ldw	fp,0(sp)
  80d088:	dec00104 	addi	sp,sp,4
  80d08c:	f800283a 	ret

0080d090 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80d090:	defff904 	addi	sp,sp,-28
  80d094:	dfc00615 	stw	ra,24(sp)
  80d098:	df000515 	stw	fp,20(sp)
  80d09c:	df000504 	addi	fp,sp,20
  80d0a0:	e13ffc15 	stw	r4,-16(fp)
  80d0a4:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d0a8:	e0bffc17 	ldw	r2,-16(fp)
  80d0ac:	1004803a 	cmplt	r2,r2,zero
  80d0b0:	1000091e 	bne	r2,zero,80d0d8 <fstat+0x48>
  80d0b4:	e13ffc17 	ldw	r4,-16(fp)
  80d0b8:	01400304 	movi	r5,12
  80d0bc:	0803fc00 	call	803fc0 <__mulsi3>
  80d0c0:	1007883a 	mov	r3,r2
  80d0c4:	00802074 	movhi	r2,129
  80d0c8:	10822704 	addi	r2,r2,2204
  80d0cc:	1887883a 	add	r3,r3,r2
  80d0d0:	e0ffff15 	stw	r3,-4(fp)
  80d0d4:	00000106 	br	80d0dc <fstat+0x4c>
  80d0d8:	e03fff15 	stw	zero,-4(fp)
  80d0dc:	e0bfff17 	ldw	r2,-4(fp)
  80d0e0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80d0e4:	e0bffb17 	ldw	r2,-20(fp)
  80d0e8:	1005003a 	cmpeq	r2,r2,zero
  80d0ec:	1000121e 	bne	r2,zero,80d138 <fstat+0xa8>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80d0f0:	e0bffb17 	ldw	r2,-20(fp)
  80d0f4:	10800017 	ldw	r2,0(r2)
  80d0f8:	10800817 	ldw	r2,32(r2)
  80d0fc:	1005003a 	cmpeq	r2,r2,zero
  80d100:	1000081e 	bne	r2,zero,80d124 <fstat+0x94>
    {
      return fd->dev->fstat(fd, st);
  80d104:	e0bffb17 	ldw	r2,-20(fp)
  80d108:	10800017 	ldw	r2,0(r2)
  80d10c:	10800817 	ldw	r2,32(r2)
  80d110:	e13ffb17 	ldw	r4,-20(fp)
  80d114:	e17ffd17 	ldw	r5,-12(fp)
  80d118:	103ee83a 	callr	r2
  80d11c:	e0bffe15 	stw	r2,-8(fp)
  80d120:	00000b06 	br	80d150 <fstat+0xc0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80d124:	e0fffd17 	ldw	r3,-12(fp)
  80d128:	00880004 	movi	r2,8192
  80d12c:	18800115 	stw	r2,4(r3)
      return 0;
  80d130:	e03ffe15 	stw	zero,-8(fp)
  80d134:	00000606 	br	80d150 <fstat+0xc0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d138:	080d1680 	call	80d168 <alt_get_errno>
  80d13c:	1007883a 	mov	r3,r2
  80d140:	00801444 	movi	r2,81
  80d144:	18800015 	stw	r2,0(r3)
    return -1;
  80d148:	00bfffc4 	movi	r2,-1
  80d14c:	e0bffe15 	stw	r2,-8(fp)
  80d150:	e0bffe17 	ldw	r2,-8(fp)
  }
}
  80d154:	e037883a 	mov	sp,fp
  80d158:	dfc00117 	ldw	ra,4(sp)
  80d15c:	df000017 	ldw	fp,0(sp)
  80d160:	dec00204 	addi	sp,sp,8
  80d164:	f800283a 	ret

0080d168 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d168:	defffd04 	addi	sp,sp,-12
  80d16c:	dfc00215 	stw	ra,8(sp)
  80d170:	df000115 	stw	fp,4(sp)
  80d174:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80d178:	00802074 	movhi	r2,129
  80d17c:	1086aa04 	addi	r2,r2,6824
  80d180:	10800017 	ldw	r2,0(r2)
  80d184:	1005003a 	cmpeq	r2,r2,zero
  80d188:	1000061e 	bne	r2,zero,80d1a4 <alt_get_errno+0x3c>
  80d18c:	00802074 	movhi	r2,129
  80d190:	1086aa04 	addi	r2,r2,6824
  80d194:	10800017 	ldw	r2,0(r2)
  80d198:	103ee83a 	callr	r2
  80d19c:	e0bfff15 	stw	r2,-4(fp)
  80d1a0:	00000306 	br	80d1b0 <alt_get_errno+0x48>
  80d1a4:	00802074 	movhi	r2,129
  80d1a8:	108d4c04 	addi	r2,r2,13616
  80d1ac:	e0bfff15 	stw	r2,-4(fp)
  80d1b0:	e0bfff17 	ldw	r2,-4(fp)
}
  80d1b4:	e037883a 	mov	sp,fp
  80d1b8:	dfc00117 	ldw	ra,4(sp)
  80d1bc:	df000017 	ldw	fp,0(sp)
  80d1c0:	dec00204 	addi	sp,sp,8
  80d1c4:	f800283a 	ret

0080d1c8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80d1c8:	deffeb04 	addi	sp,sp,-84
  80d1cc:	dfc01415 	stw	ra,80(sp)
  80d1d0:	df001315 	stw	fp,76(sp)
  80d1d4:	df001304 	addi	fp,sp,76
  80d1d8:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d1dc:	e0bffd17 	ldw	r2,-12(fp)
  80d1e0:	1004803a 	cmplt	r2,r2,zero
  80d1e4:	1000091e 	bne	r2,zero,80d20c <isatty+0x44>
  80d1e8:	e13ffd17 	ldw	r4,-12(fp)
  80d1ec:	01400304 	movi	r5,12
  80d1f0:	0803fc00 	call	803fc0 <__mulsi3>
  80d1f4:	1007883a 	mov	r3,r2
  80d1f8:	00802074 	movhi	r2,129
  80d1fc:	10822704 	addi	r2,r2,2204
  80d200:	1887883a 	add	r3,r3,r2
  80d204:	e0ffff15 	stw	r3,-4(fp)
  80d208:	00000106 	br	80d210 <isatty+0x48>
  80d20c:	e03fff15 	stw	zero,-4(fp)
  80d210:	e0bfff17 	ldw	r2,-4(fp)
  80d214:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
  80d218:	e0bfed17 	ldw	r2,-76(fp)
  80d21c:	1005003a 	cmpeq	r2,r2,zero
  80d220:	10000f1e 	bne	r2,zero,80d260 <isatty+0x98>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80d224:	e0bfed17 	ldw	r2,-76(fp)
  80d228:	10800017 	ldw	r2,0(r2)
  80d22c:	10800817 	ldw	r2,32(r2)
  80d230:	1004c03a 	cmpne	r2,r2,zero
  80d234:	1000031e 	bne	r2,zero,80d244 <isatty+0x7c>
    {
      return 1;
  80d238:	00800044 	movi	r2,1
  80d23c:	e0bffe15 	stw	r2,-8(fp)
  80d240:	00000c06 	br	80d274 <isatty+0xac>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80d244:	e17fee04 	addi	r5,fp,-72
  80d248:	e13ffd17 	ldw	r4,-12(fp)
  80d24c:	080d0900 	call	80d090 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80d250:	e0bfef17 	ldw	r2,-68(fp)
  80d254:	10880020 	cmpeqi	r2,r2,8192
  80d258:	e0bffe15 	stw	r2,-8(fp)
  80d25c:	00000506 	br	80d274 <isatty+0xac>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d260:	080d28c0 	call	80d28c <alt_get_errno>
  80d264:	1007883a 	mov	r3,r2
  80d268:	00801444 	movi	r2,81
  80d26c:	18800015 	stw	r2,0(r3)
    return 0;
  80d270:	e03ffe15 	stw	zero,-8(fp)
  80d274:	e0bffe17 	ldw	r2,-8(fp)
  }
}
  80d278:	e037883a 	mov	sp,fp
  80d27c:	dfc00117 	ldw	ra,4(sp)
  80d280:	df000017 	ldw	fp,0(sp)
  80d284:	dec00204 	addi	sp,sp,8
  80d288:	f800283a 	ret

0080d28c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d28c:	defffd04 	addi	sp,sp,-12
  80d290:	dfc00215 	stw	ra,8(sp)
  80d294:	df000115 	stw	fp,4(sp)
  80d298:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80d29c:	00802074 	movhi	r2,129
  80d2a0:	1086aa04 	addi	r2,r2,6824
  80d2a4:	10800017 	ldw	r2,0(r2)
  80d2a8:	1005003a 	cmpeq	r2,r2,zero
  80d2ac:	1000061e 	bne	r2,zero,80d2c8 <alt_get_errno+0x3c>
  80d2b0:	00802074 	movhi	r2,129
  80d2b4:	1086aa04 	addi	r2,r2,6824
  80d2b8:	10800017 	ldw	r2,0(r2)
  80d2bc:	103ee83a 	callr	r2
  80d2c0:	e0bfff15 	stw	r2,-4(fp)
  80d2c4:	00000306 	br	80d2d4 <alt_get_errno+0x48>
  80d2c8:	00802074 	movhi	r2,129
  80d2cc:	108d4c04 	addi	r2,r2,13616
  80d2d0:	e0bfff15 	stw	r2,-4(fp)
  80d2d4:	e0bfff17 	ldw	r2,-4(fp)
}
  80d2d8:	e037883a 	mov	sp,fp
  80d2dc:	dfc00117 	ldw	ra,4(sp)
  80d2e0:	df000017 	ldw	fp,0(sp)
  80d2e4:	dec00204 	addi	sp,sp,8
  80d2e8:	f800283a 	ret

0080d2ec <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80d2ec:	defffe04 	addi	sp,sp,-8
  80d2f0:	dfc00115 	stw	ra,4(sp)
  80d2f4:	df000015 	stw	fp,0(sp)
  80d2f8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80d2fc:	01002074 	movhi	r4,129
  80d300:	2106af04 	addi	r4,r4,6844
  80d304:	01402074 	movhi	r5,129
  80d308:	29401804 	addi	r5,r5,96
  80d30c:	01802074 	movhi	r6,129
  80d310:	3186af04 	addi	r6,r6,6844
  80d314:	080d36c0 	call	80d36c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80d318:	01002034 	movhi	r4,128
  80d31c:	21000804 	addi	r4,r4,32
  80d320:	01402034 	movhi	r5,128
  80d324:	29400804 	addi	r5,r5,32
  80d328:	01802034 	movhi	r6,128
  80d32c:	31806d04 	addi	r6,r6,436
  80d330:	080d36c0 	call	80d36c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80d334:	01002074 	movhi	r4,129
  80d338:	213eb704 	addi	r4,r4,-1316
  80d33c:	01402074 	movhi	r5,129
  80d340:	297eb704 	addi	r5,r5,-1316
  80d344:	01802074 	movhi	r6,129
  80d348:	31801804 	addi	r6,r6,96
  80d34c:	080d36c0 	call	80d36c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80d350:	080e8d00 	call	80e8d0 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80d354:	080eac80 	call	80eac8 <alt_icache_flush_all>
}
  80d358:	e037883a 	mov	sp,fp
  80d35c:	dfc00117 	ldw	ra,4(sp)
  80d360:	df000017 	ldw	fp,0(sp)
  80d364:	dec00204 	addi	sp,sp,8
  80d368:	f800283a 	ret

0080d36c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80d36c:	defffc04 	addi	sp,sp,-16
  80d370:	df000315 	stw	fp,12(sp)
  80d374:	df000304 	addi	fp,sp,12
  80d378:	e13ffd15 	stw	r4,-12(fp)
  80d37c:	e17ffe15 	stw	r5,-8(fp)
  80d380:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80d384:	e0fffe17 	ldw	r3,-8(fp)
  80d388:	e0bffd17 	ldw	r2,-12(fp)
  80d38c:	18800e26 	beq	r3,r2,80d3c8 <alt_load_section+0x5c>
  {
    while( to != end )
  80d390:	00000a06 	br	80d3bc <alt_load_section+0x50>
    {
      *to++ = *from++;
  80d394:	e0bffd17 	ldw	r2,-12(fp)
  80d398:	10c00017 	ldw	r3,0(r2)
  80d39c:	e0bffe17 	ldw	r2,-8(fp)
  80d3a0:	10c00015 	stw	r3,0(r2)
  80d3a4:	e0bffe17 	ldw	r2,-8(fp)
  80d3a8:	10800104 	addi	r2,r2,4
  80d3ac:	e0bffe15 	stw	r2,-8(fp)
  80d3b0:	e0bffd17 	ldw	r2,-12(fp)
  80d3b4:	10800104 	addi	r2,r2,4
  80d3b8:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80d3bc:	e0fffe17 	ldw	r3,-8(fp)
  80d3c0:	e0bfff17 	ldw	r2,-4(fp)
  80d3c4:	18bff31e 	bne	r3,r2,80d394 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
  80d3c8:	e037883a 	mov	sp,fp
  80d3cc:	df000017 	ldw	fp,0(sp)
  80d3d0:	dec00104 	addi	sp,sp,4
  80d3d4:	f800283a 	ret

0080d3d8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80d3d8:	defff804 	addi	sp,sp,-32
  80d3dc:	dfc00715 	stw	ra,28(sp)
  80d3e0:	df000615 	stw	fp,24(sp)
  80d3e4:	df000604 	addi	fp,sp,24
  80d3e8:	e13ffc15 	stw	r4,-16(fp)
  80d3ec:	e17ffd15 	stw	r5,-12(fp)
  80d3f0:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80d3f4:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d3f8:	e0bffc17 	ldw	r2,-16(fp)
  80d3fc:	1004803a 	cmplt	r2,r2,zero
  80d400:	1000091e 	bne	r2,zero,80d428 <lseek+0x50>
  80d404:	e13ffc17 	ldw	r4,-16(fp)
  80d408:	01400304 	movi	r5,12
  80d40c:	0803fc00 	call	803fc0 <__mulsi3>
  80d410:	1007883a 	mov	r3,r2
  80d414:	00802074 	movhi	r2,129
  80d418:	10822704 	addi	r2,r2,2204
  80d41c:	1887883a 	add	r3,r3,r2
  80d420:	e0ffff15 	stw	r3,-4(fp)
  80d424:	00000106 	br	80d42c <lseek+0x54>
  80d428:	e03fff15 	stw	zero,-4(fp)
  80d42c:	e0bfff17 	ldw	r2,-4(fp)
  80d430:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
  80d434:	e0bffb17 	ldw	r2,-20(fp)
  80d438:	1005003a 	cmpeq	r2,r2,zero
  80d43c:	1000111e 	bne	r2,zero,80d484 <lseek+0xac>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80d440:	e0bffb17 	ldw	r2,-20(fp)
  80d444:	10800017 	ldw	r2,0(r2)
  80d448:	10800717 	ldw	r2,28(r2)
  80d44c:	1005003a 	cmpeq	r2,r2,zero
  80d450:	1000091e 	bne	r2,zero,80d478 <lseek+0xa0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80d454:	e0bffb17 	ldw	r2,-20(fp)
  80d458:	10800017 	ldw	r2,0(r2)
  80d45c:	10800717 	ldw	r2,28(r2)
  80d460:	e13ffb17 	ldw	r4,-20(fp)
  80d464:	e17ffd17 	ldw	r5,-12(fp)
  80d468:	e1bffe17 	ldw	r6,-8(fp)
  80d46c:	103ee83a 	callr	r2
  80d470:	e0bffa15 	stw	r2,-24(fp)
  80d474:	00000506 	br	80d48c <lseek+0xb4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80d478:	00bfde84 	movi	r2,-134
  80d47c:	e0bffa15 	stw	r2,-24(fp)
  80d480:	00000206 	br	80d48c <lseek+0xb4>
    }
  }
  else  
  {
    rc = -EBADFD;
  80d484:	00bfebc4 	movi	r2,-81
  80d488:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
  80d48c:	e0bffa17 	ldw	r2,-24(fp)
  80d490:	1004403a 	cmpge	r2,r2,zero
  80d494:	1000071e 	bne	r2,zero,80d4b4 <lseek+0xdc>
  {
    ALT_ERRNO = -rc;
  80d498:	080d4cc0 	call	80d4cc <alt_get_errno>
  80d49c:	1007883a 	mov	r3,r2
  80d4a0:	e0bffa17 	ldw	r2,-24(fp)
  80d4a4:	0085c83a 	sub	r2,zero,r2
  80d4a8:	18800015 	stw	r2,0(r3)
    rc = -1;
  80d4ac:	00bfffc4 	movi	r2,-1
  80d4b0:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
  80d4b4:	e0bffa17 	ldw	r2,-24(fp)
}
  80d4b8:	e037883a 	mov	sp,fp
  80d4bc:	dfc00117 	ldw	ra,4(sp)
  80d4c0:	df000017 	ldw	fp,0(sp)
  80d4c4:	dec00204 	addi	sp,sp,8
  80d4c8:	f800283a 	ret

0080d4cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d4cc:	defffd04 	addi	sp,sp,-12
  80d4d0:	dfc00215 	stw	ra,8(sp)
  80d4d4:	df000115 	stw	fp,4(sp)
  80d4d8:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80d4dc:	00802074 	movhi	r2,129
  80d4e0:	1086aa04 	addi	r2,r2,6824
  80d4e4:	10800017 	ldw	r2,0(r2)
  80d4e8:	1005003a 	cmpeq	r2,r2,zero
  80d4ec:	1000061e 	bne	r2,zero,80d508 <alt_get_errno+0x3c>
  80d4f0:	00802074 	movhi	r2,129
  80d4f4:	1086aa04 	addi	r2,r2,6824
  80d4f8:	10800017 	ldw	r2,0(r2)
  80d4fc:	103ee83a 	callr	r2
  80d500:	e0bfff15 	stw	r2,-4(fp)
  80d504:	00000306 	br	80d514 <alt_get_errno+0x48>
  80d508:	00802074 	movhi	r2,129
  80d50c:	108d4c04 	addi	r2,r2,13616
  80d510:	e0bfff15 	stw	r2,-4(fp)
  80d514:	e0bfff17 	ldw	r2,-4(fp)
}
  80d518:	e037883a 	mov	sp,fp
  80d51c:	dfc00117 	ldw	ra,4(sp)
  80d520:	df000017 	ldw	fp,0(sp)
  80d524:	dec00204 	addi	sp,sp,8
  80d528:	f800283a 	ret

0080d52c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80d52c:	defffd04 	addi	sp,sp,-12
  80d530:	dfc00215 	stw	ra,8(sp)
  80d534:	df000115 	stw	fp,4(sp)
  80d538:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80d53c:	0009883a 	mov	r4,zero
  80d540:	080db080 	call	80db08 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80d544:	080db3c0 	call	80db3c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80d548:	01002074 	movhi	r4,129
  80d54c:	21001004 	addi	r4,r4,64
  80d550:	01402074 	movhi	r5,129
  80d554:	29401004 	addi	r5,r5,64
  80d558:	01802074 	movhi	r6,129
  80d55c:	31801004 	addi	r6,r6,64
  80d560:	080ee9c0 	call	80ee9c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80d564:	080ea000 	call	80ea00 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80d568:	01002074 	movhi	r4,129
  80d56c:	213a9904 	addi	r4,r4,-5532
  80d570:	080f6d00 	call	80f6d0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80d574:	d126ae17 	ldw	r4,-25928(gp)
  80d578:	d166af17 	ldw	r5,-25924(gp)
  80d57c:	d1a6b017 	ldw	r6,-25920(gp)
  80d580:	08005a00 	call	8005a0 <main>
  80d584:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80d588:	01000044 	movi	r4,1
  80d58c:	080cf040 	call	80cf04 <close>
  exit (result);
  80d590:	e13fff17 	ldw	r4,-4(fp)
  80d594:	080f6e40 	call	80f6e4 <exit>

0080d598 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80d598:	defffe04 	addi	sp,sp,-8
  80d59c:	df000115 	stw	fp,4(sp)
  80d5a0:	df000104 	addi	fp,sp,4
  80d5a4:	e13fff15 	stw	r4,-4(fp)
}
  80d5a8:	e037883a 	mov	sp,fp
  80d5ac:	df000017 	ldw	fp,0(sp)
  80d5b0:	dec00104 	addi	sp,sp,4
  80d5b4:	f800283a 	ret

0080d5b8 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80d5b8:	defffe04 	addi	sp,sp,-8
  80d5bc:	df000115 	stw	fp,4(sp)
  80d5c0:	df000104 	addi	fp,sp,4
  80d5c4:	e13fff15 	stw	r4,-4(fp)
}
  80d5c8:	e037883a 	mov	sp,fp
  80d5cc:	df000017 	ldw	fp,0(sp)
  80d5d0:	dec00104 	addi	sp,sp,4
  80d5d4:	f800283a 	ret

0080d5d8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80d5d8:	defff704 	addi	sp,sp,-36
  80d5dc:	dfc00815 	stw	ra,32(sp)
  80d5e0:	df000715 	stw	fp,28(sp)
  80d5e4:	df000704 	addi	fp,sp,28
  80d5e8:	e13ffb15 	stw	r4,-20(fp)
  80d5ec:	e17ffc15 	stw	r5,-16(fp)
  80d5f0:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d5f4:	e0bffb17 	ldw	r2,-20(fp)
  80d5f8:	1004803a 	cmplt	r2,r2,zero
  80d5fc:	1000091e 	bne	r2,zero,80d624 <read+0x4c>
  80d600:	e13ffb17 	ldw	r4,-20(fp)
  80d604:	01400304 	movi	r5,12
  80d608:	0803fc00 	call	803fc0 <__mulsi3>
  80d60c:	1007883a 	mov	r3,r2
  80d610:	00802074 	movhi	r2,129
  80d614:	10822704 	addi	r2,r2,2204
  80d618:	1887883a 	add	r3,r3,r2
  80d61c:	e0ffff15 	stw	r3,-4(fp)
  80d620:	00000106 	br	80d628 <read+0x50>
  80d624:	e03fff15 	stw	zero,-4(fp)
  80d628:	e0bfff17 	ldw	r2,-4(fp)
  80d62c:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
  80d630:	e0bffa17 	ldw	r2,-24(fp)
  80d634:	1005003a 	cmpeq	r2,r2,zero
  80d638:	1000241e 	bne	r2,zero,80d6cc <read+0xf4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80d63c:	e0bffa17 	ldw	r2,-24(fp)
  80d640:	10800217 	ldw	r2,8(r2)
  80d644:	108000cc 	andi	r2,r2,3
  80d648:	10800060 	cmpeqi	r2,r2,1
  80d64c:	10001a1e 	bne	r2,zero,80d6b8 <read+0xe0>
  80d650:	e0bffa17 	ldw	r2,-24(fp)
  80d654:	10800017 	ldw	r2,0(r2)
  80d658:	10800517 	ldw	r2,20(r2)
  80d65c:	1005003a 	cmpeq	r2,r2,zero
  80d660:	1000151e 	bne	r2,zero,80d6b8 <read+0xe0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80d664:	e0bffa17 	ldw	r2,-24(fp)
  80d668:	10800017 	ldw	r2,0(r2)
  80d66c:	10800517 	ldw	r2,20(r2)
  80d670:	e17ffc17 	ldw	r5,-16(fp)
  80d674:	e1bffd17 	ldw	r6,-12(fp)
  80d678:	e13ffa17 	ldw	r4,-24(fp)
  80d67c:	103ee83a 	callr	r2
  80d680:	e0bff915 	stw	r2,-28(fp)
  80d684:	e0bff917 	ldw	r2,-28(fp)
  80d688:	1004403a 	cmpge	r2,r2,zero
  80d68c:	1000071e 	bne	r2,zero,80d6ac <read+0xd4>
        {
          ALT_ERRNO = -rval;
  80d690:	080d6fc0 	call	80d6fc <alt_get_errno>
  80d694:	e0fff917 	ldw	r3,-28(fp)
  80d698:	00c7c83a 	sub	r3,zero,r3
  80d69c:	10c00015 	stw	r3,0(r2)
          return -1;
  80d6a0:	00bfffc4 	movi	r2,-1
  80d6a4:	e0bffe15 	stw	r2,-8(fp)
  80d6a8:	00000e06 	br	80d6e4 <read+0x10c>
        }
        return rval;
  80d6ac:	e0bff917 	ldw	r2,-28(fp)
  80d6b0:	e0bffe15 	stw	r2,-8(fp)
  80d6b4:	00000b06 	br	80d6e4 <read+0x10c>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80d6b8:	080d6fc0 	call	80d6fc <alt_get_errno>
  80d6bc:	1007883a 	mov	r3,r2
  80d6c0:	00800344 	movi	r2,13
  80d6c4:	18800015 	stw	r2,0(r3)
  80d6c8:	00000406 	br	80d6dc <read+0x104>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80d6cc:	080d6fc0 	call	80d6fc <alt_get_errno>
  80d6d0:	1007883a 	mov	r3,r2
  80d6d4:	00801444 	movi	r2,81
  80d6d8:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80d6dc:	00bfffc4 	movi	r2,-1
  80d6e0:	e0bffe15 	stw	r2,-8(fp)
  80d6e4:	e0bffe17 	ldw	r2,-8(fp)
}
  80d6e8:	e037883a 	mov	sp,fp
  80d6ec:	dfc00117 	ldw	ra,4(sp)
  80d6f0:	df000017 	ldw	fp,0(sp)
  80d6f4:	dec00204 	addi	sp,sp,8
  80d6f8:	f800283a 	ret

0080d6fc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d6fc:	defffd04 	addi	sp,sp,-12
  80d700:	dfc00215 	stw	ra,8(sp)
  80d704:	df000115 	stw	fp,4(sp)
  80d708:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80d70c:	00802074 	movhi	r2,129
  80d710:	1086aa04 	addi	r2,r2,6824
  80d714:	10800017 	ldw	r2,0(r2)
  80d718:	1005003a 	cmpeq	r2,r2,zero
  80d71c:	1000061e 	bne	r2,zero,80d738 <alt_get_errno+0x3c>
  80d720:	00802074 	movhi	r2,129
  80d724:	1086aa04 	addi	r2,r2,6824
  80d728:	10800017 	ldw	r2,0(r2)
  80d72c:	103ee83a 	callr	r2
  80d730:	e0bfff15 	stw	r2,-4(fp)
  80d734:	00000306 	br	80d744 <alt_get_errno+0x48>
  80d738:	00802074 	movhi	r2,129
  80d73c:	108d4c04 	addi	r2,r2,13616
  80d740:	e0bfff15 	stw	r2,-4(fp)
  80d744:	e0bfff17 	ldw	r2,-4(fp)
}
  80d748:	e037883a 	mov	sp,fp
  80d74c:	dfc00117 	ldw	ra,4(sp)
  80d750:	df000017 	ldw	fp,0(sp)
  80d754:	dec00204 	addi	sp,sp,8
  80d758:	f800283a 	ret

0080d75c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80d75c:	defffc04 	addi	sp,sp,-16
  80d760:	dfc00315 	stw	ra,12(sp)
  80d764:	df000215 	stw	fp,8(sp)
  80d768:	dc000115 	stw	r16,4(sp)
  80d76c:	df000104 	addi	fp,sp,4
  80d770:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80d774:	e0bfff17 	ldw	r2,-4(fp)
  80d778:	108000d0 	cmplti	r2,r2,3
  80d77c:	10000f1e 	bne	r2,zero,80d7bc <alt_release_fd+0x60>
  {
    alt_fd_list[fd].fd_flags = 0;
  80d780:	e13fff17 	ldw	r4,-4(fp)
  80d784:	04002074 	movhi	r16,129
  80d788:	84022704 	addi	r16,r16,2204
  80d78c:	01400304 	movi	r5,12
  80d790:	0803fc00 	call	803fc0 <__mulsi3>
  80d794:	1405883a 	add	r2,r2,r16
  80d798:	10800204 	addi	r2,r2,8
  80d79c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80d7a0:	e13fff17 	ldw	r4,-4(fp)
  80d7a4:	04002074 	movhi	r16,129
  80d7a8:	84022704 	addi	r16,r16,2204
  80d7ac:	01400304 	movi	r5,12
  80d7b0:	0803fc00 	call	803fc0 <__mulsi3>
  80d7b4:	1405883a 	add	r2,r2,r16
  80d7b8:	10000015 	stw	zero,0(r2)
  }
}
  80d7bc:	e037883a 	mov	sp,fp
  80d7c0:	dfc00217 	ldw	ra,8(sp)
  80d7c4:	df000117 	ldw	fp,4(sp)
  80d7c8:	dc000017 	ldw	r16,0(sp)
  80d7cc:	dec00304 	addi	sp,sp,12
  80d7d0:	f800283a 	ret

0080d7d4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80d7d4:	defff804 	addi	sp,sp,-32
  80d7d8:	df000715 	stw	fp,28(sp)
  80d7dc:	df000704 	addi	fp,sp,28
  80d7e0:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80d7e4:	0005303a 	rdctl	r2,status
  80d7e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80d7ec:	e0fffb17 	ldw	r3,-20(fp)
  80d7f0:	00bfff84 	movi	r2,-2
  80d7f4:	1884703a 	and	r2,r3,r2
  80d7f8:	1001703a 	wrctl	status,r2
  
  return context;
  80d7fc:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80d800:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80d804:	d0a00c17 	ldw	r2,-32720(gp)
  80d808:	10c000c4 	addi	r3,r2,3
  80d80c:	00bfff04 	movi	r2,-4
  80d810:	1884703a 	and	r2,r3,r2
  80d814:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80d818:	d0e00c17 	ldw	r3,-32720(gp)
  80d81c:	e0bffe17 	ldw	r2,-8(fp)
  80d820:	1887883a 	add	r3,r3,r2
  80d824:	00804034 	movhi	r2,256
  80d828:	10800004 	addi	r2,r2,0
  80d82c:	10c0072e 	bgeu	r2,r3,80d84c <sbrk+0x78>
  80d830:	e0bffd17 	ldw	r2,-12(fp)
  80d834:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80d838:	e0bffa17 	ldw	r2,-24(fp)
  80d83c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80d840:	00bfffc4 	movi	r2,-1
  80d844:	e0bfff15 	stw	r2,-4(fp)
  80d848:	00000c06 	br	80d87c <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
  80d84c:	d0a00c17 	ldw	r2,-32720(gp)
  80d850:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
  80d854:	d0e00c17 	ldw	r3,-32720(gp)
  80d858:	e0bffe17 	ldw	r2,-8(fp)
  80d85c:	1885883a 	add	r2,r3,r2
  80d860:	d0a00c15 	stw	r2,-32720(gp)
  80d864:	e0bffd17 	ldw	r2,-12(fp)
  80d868:	e0bff915 	stw	r2,-28(fp)
  80d86c:	e0bff917 	ldw	r2,-28(fp)
  80d870:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80d874:	e0bffc17 	ldw	r2,-16(fp)
  80d878:	e0bfff15 	stw	r2,-4(fp)
  80d87c:	e0bfff17 	ldw	r2,-4(fp)
} 
  80d880:	e037883a 	mov	sp,fp
  80d884:	df000017 	ldw	fp,0(sp)
  80d888:	dec00104 	addi	sp,sp,4
  80d88c:	f800283a 	ret

0080d890 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  80d890:	defffb04 	addi	sp,sp,-20
  80d894:	dfc00415 	stw	ra,16(sp)
  80d898:	df000315 	stw	fp,12(sp)
  80d89c:	df000304 	addi	fp,sp,12
  80d8a0:	e13ffe15 	stw	r4,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80d8a4:	00802074 	movhi	r2,129
  80d8a8:	108d5204 	addi	r2,r2,13640
  80d8ac:	10800017 	ldw	r2,0(r2)
  clock_t ticks = alt_nticks(); 
  80d8b0:	e0bffd15 	stw	r2,-12(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80d8b4:	00802074 	movhi	r2,129
  80d8b8:	108d5104 	addi	r2,r2,13636
  80d8bc:	10800017 	ldw	r2,0(r2)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  80d8c0:	1004c03a 	cmpne	r2,r2,zero
  80d8c4:	1000061e 	bne	r2,zero,80d8e0 <times+0x50>
  {
    ALT_ERRNO = ENOSYS;
  80d8c8:	080d9240 	call	80d924 <alt_get_errno>
  80d8cc:	1007883a 	mov	r3,r2
  80d8d0:	00801604 	movi	r2,88
  80d8d4:	18800015 	stw	r2,0(r3)
    return 0;
  80d8d8:	e03fff15 	stw	zero,-4(fp)
  80d8dc:	00000b06 	br	80d90c <times+0x7c>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  80d8e0:	e0bffe17 	ldw	r2,-8(fp)
  80d8e4:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  80d8e8:	e0fffe17 	ldw	r3,-8(fp)
  80d8ec:	e0bffd17 	ldw	r2,-12(fp)
  80d8f0:	18800115 	stw	r2,4(r3)
  buf->tms_cutime = 0;
  80d8f4:	e0bffe17 	ldw	r2,-8(fp)
  80d8f8:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  80d8fc:	e0bffe17 	ldw	r2,-8(fp)
  80d900:	10000315 	stw	zero,12(r2)

  return ticks;
  80d904:	e0bffd17 	ldw	r2,-12(fp)
  80d908:	e0bfff15 	stw	r2,-4(fp)
  80d90c:	e0bfff17 	ldw	r2,-4(fp)
}
  80d910:	e037883a 	mov	sp,fp
  80d914:	dfc00117 	ldw	ra,4(sp)
  80d918:	df000017 	ldw	fp,0(sp)
  80d91c:	dec00204 	addi	sp,sp,8
  80d920:	f800283a 	ret

0080d924 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d924:	defffd04 	addi	sp,sp,-12
  80d928:	dfc00215 	stw	ra,8(sp)
  80d92c:	df000115 	stw	fp,4(sp)
  80d930:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80d934:	00802074 	movhi	r2,129
  80d938:	1086aa04 	addi	r2,r2,6824
  80d93c:	10800017 	ldw	r2,0(r2)
  80d940:	1005003a 	cmpeq	r2,r2,zero
  80d944:	1000061e 	bne	r2,zero,80d960 <alt_get_errno+0x3c>
  80d948:	00802074 	movhi	r2,129
  80d94c:	1086aa04 	addi	r2,r2,6824
  80d950:	10800017 	ldw	r2,0(r2)
  80d954:	103ee83a 	callr	r2
  80d958:	e0bfff15 	stw	r2,-4(fp)
  80d95c:	00000306 	br	80d96c <alt_get_errno+0x48>
  80d960:	00802074 	movhi	r2,129
  80d964:	108d4c04 	addi	r2,r2,13616
  80d968:	e0bfff15 	stw	r2,-4(fp)
  80d96c:	e0bfff17 	ldw	r2,-4(fp)
}
  80d970:	e037883a 	mov	sp,fp
  80d974:	dfc00117 	ldw	ra,4(sp)
  80d978:	df000017 	ldw	fp,0(sp)
  80d97c:	dec00204 	addi	sp,sp,8
  80d980:	f800283a 	ret

0080d984 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80d984:	defff704 	addi	sp,sp,-36
  80d988:	dfc00815 	stw	ra,32(sp)
  80d98c:	df000715 	stw	fp,28(sp)
  80d990:	df000704 	addi	fp,sp,28
  80d994:	e13ffb15 	stw	r4,-20(fp)
  80d998:	e17ffc15 	stw	r5,-16(fp)
  80d99c:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d9a0:	e0bffb17 	ldw	r2,-20(fp)
  80d9a4:	1004803a 	cmplt	r2,r2,zero
  80d9a8:	1000091e 	bne	r2,zero,80d9d0 <write+0x4c>
  80d9ac:	e13ffb17 	ldw	r4,-20(fp)
  80d9b0:	01400304 	movi	r5,12
  80d9b4:	0803fc00 	call	803fc0 <__mulsi3>
  80d9b8:	1007883a 	mov	r3,r2
  80d9bc:	00802074 	movhi	r2,129
  80d9c0:	10822704 	addi	r2,r2,2204
  80d9c4:	1887883a 	add	r3,r3,r2
  80d9c8:	e0ffff15 	stw	r3,-4(fp)
  80d9cc:	00000106 	br	80d9d4 <write+0x50>
  80d9d0:	e03fff15 	stw	zero,-4(fp)
  80d9d4:	e0bfff17 	ldw	r2,-4(fp)
  80d9d8:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
  80d9dc:	e0bffa17 	ldw	r2,-24(fp)
  80d9e0:	1005003a 	cmpeq	r2,r2,zero
  80d9e4:	1000241e 	bne	r2,zero,80da78 <write+0xf4>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80d9e8:	e0bffa17 	ldw	r2,-24(fp)
  80d9ec:	10800217 	ldw	r2,8(r2)
  80d9f0:	108000cc 	andi	r2,r2,3
  80d9f4:	1005003a 	cmpeq	r2,r2,zero
  80d9f8:	10001a1e 	bne	r2,zero,80da64 <write+0xe0>
  80d9fc:	e0bffa17 	ldw	r2,-24(fp)
  80da00:	10800017 	ldw	r2,0(r2)
  80da04:	10800617 	ldw	r2,24(r2)
  80da08:	1005003a 	cmpeq	r2,r2,zero
  80da0c:	1000151e 	bne	r2,zero,80da64 <write+0xe0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80da10:	e0bffa17 	ldw	r2,-24(fp)
  80da14:	10800017 	ldw	r2,0(r2)
  80da18:	10800617 	ldw	r2,24(r2)
  80da1c:	e17ffc17 	ldw	r5,-16(fp)
  80da20:	e1bffd17 	ldw	r6,-12(fp)
  80da24:	e13ffa17 	ldw	r4,-24(fp)
  80da28:	103ee83a 	callr	r2
  80da2c:	e0bff915 	stw	r2,-28(fp)
  80da30:	e0bff917 	ldw	r2,-28(fp)
  80da34:	1004403a 	cmpge	r2,r2,zero
  80da38:	1000071e 	bne	r2,zero,80da58 <write+0xd4>
      {
        ALT_ERRNO = -rval;
  80da3c:	080daa80 	call	80daa8 <alt_get_errno>
  80da40:	e0fff917 	ldw	r3,-28(fp)
  80da44:	00c7c83a 	sub	r3,zero,r3
  80da48:	10c00015 	stw	r3,0(r2)
        return -1;
  80da4c:	00bfffc4 	movi	r2,-1
  80da50:	e0bffe15 	stw	r2,-8(fp)
  80da54:	00000e06 	br	80da90 <write+0x10c>
      }
      return rval;
  80da58:	e0bff917 	ldw	r2,-28(fp)
  80da5c:	e0bffe15 	stw	r2,-8(fp)
  80da60:	00000b06 	br	80da90 <write+0x10c>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80da64:	080daa80 	call	80daa8 <alt_get_errno>
  80da68:	1007883a 	mov	r3,r2
  80da6c:	00800344 	movi	r2,13
  80da70:	18800015 	stw	r2,0(r3)
  80da74:	00000406 	br	80da88 <write+0x104>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80da78:	080daa80 	call	80daa8 <alt_get_errno>
  80da7c:	1007883a 	mov	r3,r2
  80da80:	00801444 	movi	r2,81
  80da84:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80da88:	00bfffc4 	movi	r2,-1
  80da8c:	e0bffe15 	stw	r2,-8(fp)
  80da90:	e0bffe17 	ldw	r2,-8(fp)
}
  80da94:	e037883a 	mov	sp,fp
  80da98:	dfc00117 	ldw	ra,4(sp)
  80da9c:	df000017 	ldw	fp,0(sp)
  80daa0:	dec00204 	addi	sp,sp,8
  80daa4:	f800283a 	ret

0080daa8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80daa8:	defffd04 	addi	sp,sp,-12
  80daac:	dfc00215 	stw	ra,8(sp)
  80dab0:	df000115 	stw	fp,4(sp)
  80dab4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80dab8:	00802074 	movhi	r2,129
  80dabc:	1086aa04 	addi	r2,r2,6824
  80dac0:	10800017 	ldw	r2,0(r2)
  80dac4:	1005003a 	cmpeq	r2,r2,zero
  80dac8:	1000061e 	bne	r2,zero,80dae4 <alt_get_errno+0x3c>
  80dacc:	00802074 	movhi	r2,129
  80dad0:	1086aa04 	addi	r2,r2,6824
  80dad4:	10800017 	ldw	r2,0(r2)
  80dad8:	103ee83a 	callr	r2
  80dadc:	e0bfff15 	stw	r2,-4(fp)
  80dae0:	00000306 	br	80daf0 <alt_get_errno+0x48>
  80dae4:	00802074 	movhi	r2,129
  80dae8:	108d4c04 	addi	r2,r2,13616
  80daec:	e0bfff15 	stw	r2,-4(fp)
  80daf0:	e0bfff17 	ldw	r2,-4(fp)
}
  80daf4:	e037883a 	mov	sp,fp
  80daf8:	dfc00117 	ldw	ra,4(sp)
  80dafc:	df000017 	ldw	fp,0(sp)
  80db00:	dec00204 	addi	sp,sp,8
  80db04:	f800283a 	ret

0080db08 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80db08:	defffd04 	addi	sp,sp,-12
  80db0c:	dfc00215 	stw	ra,8(sp)
  80db10:	df000115 	stw	fp,4(sp)
  80db14:	df000104 	addi	fp,sp,4
  80db18:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
  80db1c:	080f39c0 	call	80f39c <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80db20:	00800044 	movi	r2,1
  80db24:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80db28:	e037883a 	mov	sp,fp
  80db2c:	dfc00117 	ldw	ra,4(sp)
  80db30:	df000017 	ldw	fp,0(sp)
  80db34:	dec00204 	addi	sp,sp,8
  80db38:	f800283a 	ret

0080db3c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80db3c:	defffe04 	addi	sp,sp,-8
  80db40:	dfc00115 	stw	ra,4(sp)
  80db44:	df000015 	stw	fp,0(sp)
  80db48:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80db4c:	01004034 	movhi	r4,256
  80db50:	21040004 	addi	r4,r4,4096
  80db54:	000b883a 	mov	r5,zero
  80db58:	01800044 	movi	r6,1
  80db5c:	01c0fa04 	movi	r7,1000
  80db60:	080e6ec0 	call	80e6ec <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80db64:	01002074 	movhi	r4,129
  80db68:	21029104 	addi	r4,r4,2628
  80db6c:	000b883a 	mov	r5,zero
  80db70:	01800404 	movi	r6,16
  80db74:	080dd180 	call	80dd18 <altera_avalon_jtag_uart_init>
  80db78:	01002074 	movhi	r4,129
  80db7c:	21028704 	addi	r4,r4,2588
  80db80:	080db980 	call	80db98 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
}
  80db84:	e037883a 	mov	sp,fp
  80db88:	dfc00117 	ldw	ra,4(sp)
  80db8c:	df000017 	ldw	fp,0(sp)
  80db90:	dec00204 	addi	sp,sp,8
  80db94:	f800283a 	ret

0080db98 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80db98:	defffd04 	addi	sp,sp,-12
  80db9c:	dfc00215 	stw	ra,8(sp)
  80dba0:	df000115 	stw	fp,4(sp)
  80dba4:	df000104 	addi	fp,sp,4
  80dba8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80dbac:	e13fff17 	ldw	r4,-4(fp)
  80dbb0:	01402074 	movhi	r5,129
  80dbb4:	2946a704 	addi	r5,r5,6812
  80dbb8:	080e8ec0 	call	80e8ec <alt_dev_llist_insert>
}
  80dbbc:	e037883a 	mov	sp,fp
  80dbc0:	dfc00117 	ldw	ra,4(sp)
  80dbc4:	df000017 	ldw	fp,0(sp)
  80dbc8:	dec00204 	addi	sp,sp,8
  80dbcc:	f800283a 	ret

0080dbd0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80dbd0:	defffa04 	addi	sp,sp,-24
  80dbd4:	dfc00515 	stw	ra,20(sp)
  80dbd8:	df000415 	stw	fp,16(sp)
  80dbdc:	df000404 	addi	fp,sp,16
  80dbe0:	e13ffd15 	stw	r4,-12(fp)
  80dbe4:	e17ffe15 	stw	r5,-8(fp)
  80dbe8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80dbec:	e0bffd17 	ldw	r2,-12(fp)
  80dbf0:	10800017 	ldw	r2,0(r2)
  80dbf4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80dbf8:	e0bffc17 	ldw	r2,-16(fp)
  80dbfc:	11000a04 	addi	r4,r2,40
  80dc00:	e0bffd17 	ldw	r2,-12(fp)
  80dc04:	11c00217 	ldw	r7,8(r2)
  80dc08:	e17ffe17 	ldw	r5,-8(fp)
  80dc0c:	e1bfff17 	ldw	r6,-4(fp)
  80dc10:	080e2180 	call	80e218 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80dc14:	e037883a 	mov	sp,fp
  80dc18:	dfc00117 	ldw	ra,4(sp)
  80dc1c:	df000017 	ldw	fp,0(sp)
  80dc20:	dec00204 	addi	sp,sp,8
  80dc24:	f800283a 	ret

0080dc28 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80dc28:	defffa04 	addi	sp,sp,-24
  80dc2c:	dfc00515 	stw	ra,20(sp)
  80dc30:	df000415 	stw	fp,16(sp)
  80dc34:	df000404 	addi	fp,sp,16
  80dc38:	e13ffd15 	stw	r4,-12(fp)
  80dc3c:	e17ffe15 	stw	r5,-8(fp)
  80dc40:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80dc44:	e0bffd17 	ldw	r2,-12(fp)
  80dc48:	10800017 	ldw	r2,0(r2)
  80dc4c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80dc50:	e0bffc17 	ldw	r2,-16(fp)
  80dc54:	11000a04 	addi	r4,r2,40
  80dc58:	e0bffd17 	ldw	r2,-12(fp)
  80dc5c:	11c00217 	ldw	r7,8(r2)
  80dc60:	e17ffe17 	ldw	r5,-8(fp)
  80dc64:	e1bfff17 	ldw	r6,-4(fp)
  80dc68:	080e43c0 	call	80e43c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80dc6c:	e037883a 	mov	sp,fp
  80dc70:	dfc00117 	ldw	ra,4(sp)
  80dc74:	df000017 	ldw	fp,0(sp)
  80dc78:	dec00204 	addi	sp,sp,8
  80dc7c:	f800283a 	ret

0080dc80 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80dc80:	defffc04 	addi	sp,sp,-16
  80dc84:	dfc00315 	stw	ra,12(sp)
  80dc88:	df000215 	stw	fp,8(sp)
  80dc8c:	df000204 	addi	fp,sp,8
  80dc90:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80dc94:	e0bfff17 	ldw	r2,-4(fp)
  80dc98:	10800017 	ldw	r2,0(r2)
  80dc9c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80dca0:	e0bffe17 	ldw	r2,-8(fp)
  80dca4:	11000a04 	addi	r4,r2,40
  80dca8:	e0bfff17 	ldw	r2,-4(fp)
  80dcac:	11400217 	ldw	r5,8(r2)
  80dcb0:	080e0b00 	call	80e0b0 <altera_avalon_jtag_uart_close>
}
  80dcb4:	e037883a 	mov	sp,fp
  80dcb8:	dfc00117 	ldw	ra,4(sp)
  80dcbc:	df000017 	ldw	fp,0(sp)
  80dcc0:	dec00204 	addi	sp,sp,8
  80dcc4:	f800283a 	ret

0080dcc8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80dcc8:	defffa04 	addi	sp,sp,-24
  80dccc:	dfc00515 	stw	ra,20(sp)
  80dcd0:	df000415 	stw	fp,16(sp)
  80dcd4:	df000404 	addi	fp,sp,16
  80dcd8:	e13ffd15 	stw	r4,-12(fp)
  80dcdc:	e17ffe15 	stw	r5,-8(fp)
  80dce0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80dce4:	e0bffd17 	ldw	r2,-12(fp)
  80dce8:	10800017 	ldw	r2,0(r2)
  80dcec:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80dcf0:	e0bffc17 	ldw	r2,-16(fp)
  80dcf4:	11000a04 	addi	r4,r2,40
  80dcf8:	e17ffe17 	ldw	r5,-8(fp)
  80dcfc:	e1bfff17 	ldw	r6,-4(fp)
  80dd00:	080e1240 	call	80e124 <altera_avalon_jtag_uart_ioctl>
}
  80dd04:	e037883a 	mov	sp,fp
  80dd08:	dfc00117 	ldw	ra,4(sp)
  80dd0c:	df000017 	ldw	fp,0(sp)
  80dd10:	dec00204 	addi	sp,sp,8
  80dd14:	f800283a 	ret

0080dd18 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80dd18:	defffa04 	addi	sp,sp,-24
  80dd1c:	dfc00515 	stw	ra,20(sp)
  80dd20:	df000415 	stw	fp,16(sp)
  80dd24:	df000404 	addi	fp,sp,16
  80dd28:	e13ffd15 	stw	r4,-12(fp)
  80dd2c:	e17ffe15 	stw	r5,-8(fp)
  80dd30:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80dd34:	e0fffd17 	ldw	r3,-12(fp)
  80dd38:	00800044 	movi	r2,1
  80dd3c:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80dd40:	e0bffd17 	ldw	r2,-12(fp)
  80dd44:	10800017 	ldw	r2,0(r2)
  80dd48:	11000104 	addi	r4,r2,4
  80dd4c:	e0bffd17 	ldw	r2,-12(fp)
  80dd50:	10800817 	ldw	r2,32(r2)
  80dd54:	1007883a 	mov	r3,r2
  80dd58:	2005883a 	mov	r2,r4
  80dd5c:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80dd60:	e13ffe17 	ldw	r4,-8(fp)
  80dd64:	e17fff17 	ldw	r5,-4(fp)
  80dd68:	d8000015 	stw	zero,0(sp)
  80dd6c:	01802074 	movhi	r6,129
  80dd70:	31b77604 	addi	r6,r6,-8744
  80dd74:	e1fffd17 	ldw	r7,-12(fp)
  80dd78:	080eaf80 	call	80eaf8 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80dd7c:	e0bffd17 	ldw	r2,-12(fp)
  80dd80:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80dd84:	e0bffd17 	ldw	r2,-12(fp)
  80dd88:	11000204 	addi	r4,r2,8
  80dd8c:	00802074 	movhi	r2,129
  80dd90:	108d5104 	addi	r2,r2,13636
  80dd94:	10800017 	ldw	r2,0(r2)
  80dd98:	100b883a 	mov	r5,r2
  80dd9c:	01802074 	movhi	r6,129
  80dda0:	31b80004 	addi	r6,r6,-8192
  80dda4:	e1fffd17 	ldw	r7,-12(fp)
  80dda8:	080e77c0 	call	80e77c <alt_alarm_start>
  80ddac:	1004403a 	cmpge	r2,r2,zero
  80ddb0:	1000041e 	bne	r2,zero,80ddc4 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80ddb4:	e0fffd17 	ldw	r3,-12(fp)
  80ddb8:	00a00034 	movhi	r2,32768
  80ddbc:	10bfffc4 	addi	r2,r2,-1
  80ddc0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80ddc4:	e037883a 	mov	sp,fp
  80ddc8:	dfc00117 	ldw	ra,4(sp)
  80ddcc:	df000017 	ldw	fp,0(sp)
  80ddd0:	dec00204 	addi	sp,sp,8
  80ddd4:	f800283a 	ret

0080ddd8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80ddd8:	defff804 	addi	sp,sp,-32
  80dddc:	df000715 	stw	fp,28(sp)
  80dde0:	df000704 	addi	fp,sp,28
  80dde4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80dde8:	e0bfff17 	ldw	r2,-4(fp)
  80ddec:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
  80ddf0:	e0bffe17 	ldw	r2,-8(fp)
  80ddf4:	10800017 	ldw	r2,0(r2)
  80ddf8:	e0bffd15 	stw	r2,-12(fp)
  80ddfc:	00000006 	br	80de00 <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80de00:	e0bffd17 	ldw	r2,-12(fp)
  80de04:	10800104 	addi	r2,r2,4
  80de08:	10800037 	ldwio	r2,0(r2)
  80de0c:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80de10:	e0bffc17 	ldw	r2,-16(fp)
  80de14:	1080c00c 	andi	r2,r2,768
  80de18:	1005003a 	cmpeq	r2,r2,zero
  80de1c:	1000741e 	bne	r2,zero,80dff0 <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80de20:	e0bffc17 	ldw	r2,-16(fp)
  80de24:	1080400c 	andi	r2,r2,256
  80de28:	1005003a 	cmpeq	r2,r2,zero
  80de2c:	1000351e 	bne	r2,zero,80df04 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80de30:	00800074 	movhi	r2,1
  80de34:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80de38:	e0bffe17 	ldw	r2,-8(fp)
  80de3c:	10800a17 	ldw	r2,40(r2)
  80de40:	10800044 	addi	r2,r2,1
  80de44:	1081ffcc 	andi	r2,r2,2047
  80de48:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
  80de4c:	e0bffe17 	ldw	r2,-8(fp)
  80de50:	10c00b17 	ldw	r3,44(r2)
  80de54:	e0bffa17 	ldw	r2,-24(fp)
  80de58:	18801626 	beq	r3,r2,80deb4 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80de5c:	e0bffd17 	ldw	r2,-12(fp)
  80de60:	10800037 	ldwio	r2,0(r2)
  80de64:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80de68:	e0bffb17 	ldw	r2,-20(fp)
  80de6c:	10a0000c 	andi	r2,r2,32768
  80de70:	1005003a 	cmpeq	r2,r2,zero
  80de74:	10000f1e 	bne	r2,zero,80deb4 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80de78:	e0bffe17 	ldw	r2,-8(fp)
  80de7c:	10c00a17 	ldw	r3,40(r2)
  80de80:	e0bffb17 	ldw	r2,-20(fp)
  80de84:	1009883a 	mov	r4,r2
  80de88:	e0bffe17 	ldw	r2,-8(fp)
  80de8c:	1885883a 	add	r2,r3,r2
  80de90:	10800e04 	addi	r2,r2,56
  80de94:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80de98:	e0bffe17 	ldw	r2,-8(fp)
  80de9c:	10800a17 	ldw	r2,40(r2)
  80dea0:	10800044 	addi	r2,r2,1
  80dea4:	10c1ffcc 	andi	r3,r2,2047
  80dea8:	e0bffe17 	ldw	r2,-8(fp)
  80deac:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  80deb0:	003fe106 	br	80de38 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80deb4:	e0bffb17 	ldw	r2,-20(fp)
  80deb8:	10bfffec 	andhi	r2,r2,65535
  80debc:	1005003a 	cmpeq	r2,r2,zero
  80dec0:	1000101e 	bne	r2,zero,80df04 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80dec4:	e0bffe17 	ldw	r2,-8(fp)
  80dec8:	10c00817 	ldw	r3,32(r2)
  80decc:	00bfff84 	movi	r2,-2
  80ded0:	1886703a 	and	r3,r3,r2
  80ded4:	e0bffe17 	ldw	r2,-8(fp)
  80ded8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80dedc:	e0bffd17 	ldw	r2,-12(fp)
  80dee0:	11000104 	addi	r4,r2,4
  80dee4:	e0bffe17 	ldw	r2,-8(fp)
  80dee8:	10800817 	ldw	r2,32(r2)
  80deec:	1007883a 	mov	r3,r2
  80def0:	2005883a 	mov	r2,r4
  80def4:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80def8:	e0bffd17 	ldw	r2,-12(fp)
  80defc:	10800104 	addi	r2,r2,4
  80df00:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80df04:	e0bffc17 	ldw	r2,-16(fp)
  80df08:	1080800c 	andi	r2,r2,512
  80df0c:	1005003a 	cmpeq	r2,r2,zero
  80df10:	103fbb1e 	bne	r2,zero,80de00 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80df14:	e0bffc17 	ldw	r2,-16(fp)
  80df18:	10bfffec 	andhi	r2,r2,65535
  80df1c:	1004d43a 	srli	r2,r2,16
  80df20:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80df24:	00001506 	br	80df7c <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80df28:	e13ffd17 	ldw	r4,-12(fp)
  80df2c:	e0bffe17 	ldw	r2,-8(fp)
  80df30:	10c00d17 	ldw	r3,52(r2)
  80df34:	e0bffe17 	ldw	r2,-8(fp)
  80df38:	1885883a 	add	r2,r3,r2
  80df3c:	10820e04 	addi	r2,r2,2104
  80df40:	10800003 	ldbu	r2,0(r2)
  80df44:	10c03fcc 	andi	r3,r2,255
  80df48:	18c0201c 	xori	r3,r3,128
  80df4c:	18ffe004 	addi	r3,r3,-128
  80df50:	2005883a 	mov	r2,r4
  80df54:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80df58:	e0bffe17 	ldw	r2,-8(fp)
  80df5c:	10800d17 	ldw	r2,52(r2)
  80df60:	10800044 	addi	r2,r2,1
  80df64:	10c1ffcc 	andi	r3,r2,2047
  80df68:	e0bffe17 	ldw	r2,-8(fp)
  80df6c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80df70:	e0bff917 	ldw	r2,-28(fp)
  80df74:	10bfffc4 	addi	r2,r2,-1
  80df78:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  80df7c:	e0bff917 	ldw	r2,-28(fp)
  80df80:	1005003a 	cmpeq	r2,r2,zero
  80df84:	1000051e 	bne	r2,zero,80df9c <altera_avalon_jtag_uart_irq+0x1c4>
  80df88:	e0bffe17 	ldw	r2,-8(fp)
  80df8c:	10c00d17 	ldw	r3,52(r2)
  80df90:	e0bffe17 	ldw	r2,-8(fp)
  80df94:	10800c17 	ldw	r2,48(r2)
  80df98:	18bfe31e 	bne	r3,r2,80df28 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  80df9c:	e0bff917 	ldw	r2,-28(fp)
  80dfa0:	1005003a 	cmpeq	r2,r2,zero
  80dfa4:	103f961e 	bne	r2,zero,80de00 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80dfa8:	e0bffe17 	ldw	r2,-8(fp)
  80dfac:	10c00817 	ldw	r3,32(r2)
  80dfb0:	00bfff44 	movi	r2,-3
  80dfb4:	1886703a 	and	r3,r3,r2
  80dfb8:	e0bffe17 	ldw	r2,-8(fp)
  80dfbc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80dfc0:	e0bffe17 	ldw	r2,-8(fp)
  80dfc4:	10800017 	ldw	r2,0(r2)
  80dfc8:	11000104 	addi	r4,r2,4
  80dfcc:	e0bffe17 	ldw	r2,-8(fp)
  80dfd0:	10800817 	ldw	r2,32(r2)
  80dfd4:	1007883a 	mov	r3,r2
  80dfd8:	2005883a 	mov	r2,r4
  80dfdc:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80dfe0:	e0bffd17 	ldw	r2,-12(fp)
  80dfe4:	10800104 	addi	r2,r2,4
  80dfe8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  80dfec:	003f8406 	br	80de00 <altera_avalon_jtag_uart_irq+0x28>
}
  80dff0:	e037883a 	mov	sp,fp
  80dff4:	df000017 	ldw	fp,0(sp)
  80dff8:	dec00104 	addi	sp,sp,4
  80dffc:	f800283a 	ret

0080e000 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80e000:	defffc04 	addi	sp,sp,-16
  80e004:	df000315 	stw	fp,12(sp)
  80e008:	df000304 	addi	fp,sp,12
  80e00c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80e010:	e0bfff17 	ldw	r2,-4(fp)
  80e014:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80e018:	e0bffe17 	ldw	r2,-8(fp)
  80e01c:	10800017 	ldw	r2,0(r2)
  80e020:	10800104 	addi	r2,r2,4
  80e024:	10800037 	ldwio	r2,0(r2)
  80e028:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80e02c:	e0bffd17 	ldw	r2,-12(fp)
  80e030:	1081000c 	andi	r2,r2,1024
  80e034:	1005003a 	cmpeq	r2,r2,zero
  80e038:	10000c1e 	bne	r2,zero,80e06c <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80e03c:	e0bffe17 	ldw	r2,-8(fp)
  80e040:	10800017 	ldw	r2,0(r2)
  80e044:	11000104 	addi	r4,r2,4
  80e048:	e0bffe17 	ldw	r2,-8(fp)
  80e04c:	10800817 	ldw	r2,32(r2)
  80e050:	10810014 	ori	r2,r2,1024
  80e054:	1007883a 	mov	r3,r2
  80e058:	2005883a 	mov	r2,r4
  80e05c:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
  80e060:	e0bffe17 	ldw	r2,-8(fp)
  80e064:	10000915 	stw	zero,36(r2)
  80e068:	00000a06 	br	80e094 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80e06c:	e0bffe17 	ldw	r2,-8(fp)
  80e070:	10c00917 	ldw	r3,36(r2)
  80e074:	00a00034 	movhi	r2,32768
  80e078:	10bfff04 	addi	r2,r2,-4
  80e07c:	10c00536 	bltu	r2,r3,80e094 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
  80e080:	e0bffe17 	ldw	r2,-8(fp)
  80e084:	10800917 	ldw	r2,36(r2)
  80e088:	10c00044 	addi	r3,r2,1
  80e08c:	e0bffe17 	ldw	r2,-8(fp)
  80e090:	10c00915 	stw	r3,36(r2)
  80e094:	00802074 	movhi	r2,129
  80e098:	108d5104 	addi	r2,r2,13636
  80e09c:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80e0a0:	e037883a 	mov	sp,fp
  80e0a4:	df000017 	ldw	fp,0(sp)
  80e0a8:	dec00104 	addi	sp,sp,4
  80e0ac:	f800283a 	ret

0080e0b0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80e0b0:	defffc04 	addi	sp,sp,-16
  80e0b4:	df000315 	stw	fp,12(sp)
  80e0b8:	df000304 	addi	fp,sp,12
  80e0bc:	e13ffd15 	stw	r4,-12(fp)
  80e0c0:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e0c4:	00000706 	br	80e0e4 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
  80e0c8:	e0bffe17 	ldw	r2,-8(fp)
  80e0cc:	1090000c 	andi	r2,r2,16384
  80e0d0:	1005003a 	cmpeq	r2,r2,zero
  80e0d4:	1000031e 	bne	r2,zero,80e0e4 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
  80e0d8:	00bffd44 	movi	r2,-11
  80e0dc:	e0bfff15 	stw	r2,-4(fp)
  80e0e0:	00000b06 	br	80e110 <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e0e4:	e0bffd17 	ldw	r2,-12(fp)
  80e0e8:	10c00d17 	ldw	r3,52(r2)
  80e0ec:	e0bffd17 	ldw	r2,-12(fp)
  80e0f0:	10800c17 	ldw	r2,48(r2)
  80e0f4:	18800526 	beq	r3,r2,80e10c <altera_avalon_jtag_uart_close+0x5c>
  80e0f8:	e0bffd17 	ldw	r2,-12(fp)
  80e0fc:	10c00917 	ldw	r3,36(r2)
  80e100:	e0bffd17 	ldw	r2,-12(fp)
  80e104:	10800117 	ldw	r2,4(r2)
  80e108:	18bfef36 	bltu	r3,r2,80e0c8 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80e10c:	e03fff15 	stw	zero,-4(fp)
  80e110:	e0bfff17 	ldw	r2,-4(fp)
}
  80e114:	e037883a 	mov	sp,fp
  80e118:	df000017 	ldw	fp,0(sp)
  80e11c:	dec00104 	addi	sp,sp,4
  80e120:	f800283a 	ret

0080e124 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80e124:	defff804 	addi	sp,sp,-32
  80e128:	df000715 	stw	fp,28(sp)
  80e12c:	df000704 	addi	fp,sp,28
  80e130:	e13ffb15 	stw	r4,-20(fp)
  80e134:	e17ffc15 	stw	r5,-16(fp)
  80e138:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
  80e13c:	00bff9c4 	movi	r2,-25
  80e140:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
  80e144:	e0bffc17 	ldw	r2,-16(fp)
  80e148:	e0bfff15 	stw	r2,-4(fp)
  80e14c:	e0ffff17 	ldw	r3,-4(fp)
  80e150:	189a8060 	cmpeqi	r2,r3,27137
  80e154:	1000041e 	bne	r2,zero,80e168 <altera_avalon_jtag_uart_ioctl+0x44>
  80e158:	e0ffff17 	ldw	r3,-4(fp)
  80e15c:	189a80a0 	cmpeqi	r2,r3,27138
  80e160:	10001b1e 	bne	r2,zero,80e1d0 <altera_avalon_jtag_uart_ioctl+0xac>
  80e164:	00002706 	br	80e204 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  80e168:	e0bffb17 	ldw	r2,-20(fp)
  80e16c:	10c00117 	ldw	r3,4(r2)
  80e170:	00a00034 	movhi	r2,32768
  80e174:	10bfffc4 	addi	r2,r2,-1
  80e178:	18802226 	beq	r3,r2,80e204 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
  80e17c:	e0bffd17 	ldw	r2,-12(fp)
  80e180:	10800017 	ldw	r2,0(r2)
  80e184:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80e188:	e0bff917 	ldw	r2,-28(fp)
  80e18c:	10800090 	cmplti	r2,r2,2
  80e190:	1000071e 	bne	r2,zero,80e1b0 <altera_avalon_jtag_uart_ioctl+0x8c>
  80e194:	e0fff917 	ldw	r3,-28(fp)
  80e198:	00a00034 	movhi	r2,32768
  80e19c:	10bfffc4 	addi	r2,r2,-1
  80e1a0:	18800326 	beq	r3,r2,80e1b0 <altera_avalon_jtag_uart_ioctl+0x8c>
  80e1a4:	e0bff917 	ldw	r2,-28(fp)
  80e1a8:	e0bffe15 	stw	r2,-8(fp)
  80e1ac:	00000306 	br	80e1bc <altera_avalon_jtag_uart_ioctl+0x98>
  80e1b0:	00e00034 	movhi	r3,32768
  80e1b4:	18ffff84 	addi	r3,r3,-2
  80e1b8:	e0fffe15 	stw	r3,-8(fp)
  80e1bc:	e0bffb17 	ldw	r2,-20(fp)
  80e1c0:	e0fffe17 	ldw	r3,-8(fp)
  80e1c4:	10c00115 	stw	r3,4(r2)
      rc = 0;
  80e1c8:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
  80e1cc:	00000d06 	br	80e204 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  80e1d0:	e0bffb17 	ldw	r2,-20(fp)
  80e1d4:	10c00117 	ldw	r3,4(r2)
  80e1d8:	00a00034 	movhi	r2,32768
  80e1dc:	10bfffc4 	addi	r2,r2,-1
  80e1e0:	18800826 	beq	r3,r2,80e204 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80e1e4:	e13ffd17 	ldw	r4,-12(fp)
  80e1e8:	e0bffb17 	ldw	r2,-20(fp)
  80e1ec:	10c00917 	ldw	r3,36(r2)
  80e1f0:	e0bffb17 	ldw	r2,-20(fp)
  80e1f4:	10800117 	ldw	r2,4(r2)
  80e1f8:	1885803a 	cmpltu	r2,r3,r2
  80e1fc:	20800015 	stw	r2,0(r4)
      rc = 0;
  80e200:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
  80e204:	e0bffa17 	ldw	r2,-24(fp)
}
  80e208:	e037883a 	mov	sp,fp
  80e20c:	df000017 	ldw	fp,0(sp)
  80e210:	dec00104 	addi	sp,sp,4
  80e214:	f800283a 	ret

0080e218 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80e218:	defff204 	addi	sp,sp,-56
  80e21c:	dfc00d15 	stw	ra,52(sp)
  80e220:	df000c15 	stw	fp,48(sp)
  80e224:	df000c04 	addi	fp,sp,48
  80e228:	e13ffb15 	stw	r4,-20(fp)
  80e22c:	e17ffc15 	stw	r5,-16(fp)
  80e230:	e1bffd15 	stw	r6,-12(fp)
  80e234:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
  80e238:	e0bffc17 	ldw	r2,-16(fp)
  80e23c:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e240:	00004806 	br	80e364 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80e244:	e0bffb17 	ldw	r2,-20(fp)
  80e248:	10800a17 	ldw	r2,40(r2)
  80e24c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  80e250:	e0bffb17 	ldw	r2,-20(fp)
  80e254:	10800b17 	ldw	r2,44(r2)
  80e258:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
  80e25c:	e0fff717 	ldw	r3,-36(fp)
  80e260:	e0bff617 	ldw	r2,-40(fp)
  80e264:	18800536 	bltu	r3,r2,80e27c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80e268:	e0bff717 	ldw	r2,-36(fp)
  80e26c:	e0fff617 	ldw	r3,-40(fp)
  80e270:	10c5c83a 	sub	r2,r2,r3
  80e274:	e0bff815 	stw	r2,-32(fp)
  80e278:	00000406 	br	80e28c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80e27c:	00820004 	movi	r2,2048
  80e280:	e0fff617 	ldw	r3,-40(fp)
  80e284:	10c5c83a 	sub	r2,r2,r3
  80e288:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
  80e28c:	e0bff817 	ldw	r2,-32(fp)
  80e290:	1005003a 	cmpeq	r2,r2,zero
  80e294:	10001f1e 	bne	r2,zero,80e314 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
  80e298:	e0fffd17 	ldw	r3,-12(fp)
  80e29c:	e0bff817 	ldw	r2,-32(fp)
  80e2a0:	1880022e 	bgeu	r3,r2,80e2ac <altera_avalon_jtag_uart_read+0x94>
        n = space;
  80e2a4:	e0bffd17 	ldw	r2,-12(fp)
  80e2a8:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80e2ac:	e0bffb17 	ldw	r2,-20(fp)
  80e2b0:	10c00e04 	addi	r3,r2,56
  80e2b4:	e0bff617 	ldw	r2,-40(fp)
  80e2b8:	1887883a 	add	r3,r3,r2
  80e2bc:	e0bffa17 	ldw	r2,-24(fp)
  80e2c0:	1009883a 	mov	r4,r2
  80e2c4:	180b883a 	mov	r5,r3
  80e2c8:	e1bff817 	ldw	r6,-32(fp)
  80e2cc:	0809d140 	call	809d14 <memcpy>
      ptr   += n;
  80e2d0:	e0fff817 	ldw	r3,-32(fp)
  80e2d4:	e0bffa17 	ldw	r2,-24(fp)
  80e2d8:	10c5883a 	add	r2,r2,r3
  80e2dc:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
  80e2e0:	e0fffd17 	ldw	r3,-12(fp)
  80e2e4:	e0bff817 	ldw	r2,-32(fp)
  80e2e8:	1885c83a 	sub	r2,r3,r2
  80e2ec:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e2f0:	e0fff617 	ldw	r3,-40(fp)
  80e2f4:	e0bff817 	ldw	r2,-32(fp)
  80e2f8:	1885883a 	add	r2,r3,r2
  80e2fc:	10c1ffcc 	andi	r3,r2,2047
  80e300:	e0bffb17 	ldw	r2,-20(fp)
  80e304:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80e308:	e0bffd17 	ldw	r2,-12(fp)
  80e30c:	10800048 	cmpgei	r2,r2,1
  80e310:	103fcc1e 	bne	r2,zero,80e244 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
  80e314:	e0fffa17 	ldw	r3,-24(fp)
  80e318:	e0bffc17 	ldw	r2,-16(fp)
  80e31c:	1880141e 	bne	r3,r2,80e370 <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80e320:	e0bffe17 	ldw	r2,-8(fp)
  80e324:	1090000c 	andi	r2,r2,16384
  80e328:	1004c03a 	cmpne	r2,r2,zero
  80e32c:	1000101e 	bne	r2,zero,80e370 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80e330:	e0bffb17 	ldw	r2,-20(fp)
  80e334:	10c00a17 	ldw	r3,40(r2)
  80e338:	e0bff717 	ldw	r2,-36(fp)
  80e33c:	1880051e 	bne	r3,r2,80e354 <altera_avalon_jtag_uart_read+0x13c>
  80e340:	e0bffb17 	ldw	r2,-20(fp)
  80e344:	10c00917 	ldw	r3,36(r2)
  80e348:	e0bffb17 	ldw	r2,-20(fp)
  80e34c:	10800117 	ldw	r2,4(r2)
  80e350:	18bff736 	bltu	r3,r2,80e330 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80e354:	e0bffb17 	ldw	r2,-20(fp)
  80e358:	10c00a17 	ldw	r3,40(r2)
  80e35c:	e0bff717 	ldw	r2,-36(fp)
  80e360:	18800326 	beq	r3,r2,80e370 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e364:	e0bffd17 	ldw	r2,-12(fp)
  80e368:	10800048 	cmpgei	r2,r2,1
  80e36c:	103fb51e 	bne	r2,zero,80e244 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80e370:	e0fffa17 	ldw	r3,-24(fp)
  80e374:	e0bffc17 	ldw	r2,-16(fp)
  80e378:	18801926 	beq	r3,r2,80e3e0 <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e37c:	0005303a 	rdctl	r2,status
  80e380:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e384:	e0fff517 	ldw	r3,-44(fp)
  80e388:	00bfff84 	movi	r2,-2
  80e38c:	1884703a 	and	r2,r3,r2
  80e390:	1001703a 	wrctl	status,r2
  
  return context;
  80e394:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80e398:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e39c:	e0bffb17 	ldw	r2,-20(fp)
  80e3a0:	10800817 	ldw	r2,32(r2)
  80e3a4:	10c00054 	ori	r3,r2,1
  80e3a8:	e0bffb17 	ldw	r2,-20(fp)
  80e3ac:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e3b0:	e0bffb17 	ldw	r2,-20(fp)
  80e3b4:	10800017 	ldw	r2,0(r2)
  80e3b8:	11000104 	addi	r4,r2,4
  80e3bc:	e0bffb17 	ldw	r2,-20(fp)
  80e3c0:	10800817 	ldw	r2,32(r2)
  80e3c4:	1007883a 	mov	r3,r2
  80e3c8:	2005883a 	mov	r2,r4
  80e3cc:	10c00035 	stwio	r3,0(r2)
  80e3d0:	e0bff917 	ldw	r2,-28(fp)
  80e3d4:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e3d8:	e0bff417 	ldw	r2,-48(fp)
  80e3dc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80e3e0:	e0fffa17 	ldw	r3,-24(fp)
  80e3e4:	e0bffc17 	ldw	r2,-16(fp)
  80e3e8:	18800526 	beq	r3,r2,80e400 <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
  80e3ec:	e0fffa17 	ldw	r3,-24(fp)
  80e3f0:	e0bffc17 	ldw	r2,-16(fp)
  80e3f4:	1887c83a 	sub	r3,r3,r2
  80e3f8:	e0ffff15 	stw	r3,-4(fp)
  80e3fc:	00000906 	br	80e424 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
  80e400:	e0bffe17 	ldw	r2,-8(fp)
  80e404:	1090000c 	andi	r2,r2,16384
  80e408:	1005003a 	cmpeq	r2,r2,zero
  80e40c:	1000031e 	bne	r2,zero,80e41c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  80e410:	00bffd44 	movi	r2,-11
  80e414:	e0bfff15 	stw	r2,-4(fp)
  80e418:	00000206 	br	80e424 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
  80e41c:	00bffec4 	movi	r2,-5
  80e420:	e0bfff15 	stw	r2,-4(fp)
  80e424:	e0bfff17 	ldw	r2,-4(fp)
}
  80e428:	e037883a 	mov	sp,fp
  80e42c:	dfc00117 	ldw	ra,4(sp)
  80e430:	df000017 	ldw	fp,0(sp)
  80e434:	dec00204 	addi	sp,sp,8
  80e438:	f800283a 	ret

0080e43c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80e43c:	defff204 	addi	sp,sp,-56
  80e440:	dfc00d15 	stw	ra,52(sp)
  80e444:	df000c15 	stw	fp,48(sp)
  80e448:	df000c04 	addi	fp,sp,48
  80e44c:	e13ffb15 	stw	r4,-20(fp)
  80e450:	e17ffc15 	stw	r5,-16(fp)
  80e454:	e1bffd15 	stw	r6,-12(fp)
  80e458:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80e45c:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80e460:	e0bffc17 	ldw	r2,-16(fp)
  80e464:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e468:	00003a06 	br	80e554 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80e46c:	e0bffb17 	ldw	r2,-20(fp)
  80e470:	10800c17 	ldw	r2,48(r2)
  80e474:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
  80e478:	e0bffb17 	ldw	r2,-20(fp)
  80e47c:	10800d17 	ldw	r2,52(r2)
  80e480:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
  80e484:	e0fffa17 	ldw	r3,-24(fp)
  80e488:	e0bff917 	ldw	r2,-28(fp)
  80e48c:	1880062e 	bgeu	r3,r2,80e4a8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80e490:	e0fff917 	ldw	r3,-28(fp)
  80e494:	e0bffa17 	ldw	r2,-24(fp)
  80e498:	1885c83a 	sub	r2,r3,r2
  80e49c:	10bfffc4 	addi	r2,r2,-1
  80e4a0:	e0bff815 	stw	r2,-32(fp)
  80e4a4:	00000c06 	br	80e4d8 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
  80e4a8:	e0bff917 	ldw	r2,-28(fp)
  80e4ac:	1005003a 	cmpeq	r2,r2,zero
  80e4b0:	1000051e 	bne	r2,zero,80e4c8 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80e4b4:	00820004 	movi	r2,2048
  80e4b8:	e0fffa17 	ldw	r3,-24(fp)
  80e4bc:	10c5c83a 	sub	r2,r2,r3
  80e4c0:	e0bff815 	stw	r2,-32(fp)
  80e4c4:	00000406 	br	80e4d8 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80e4c8:	0081ffc4 	movi	r2,2047
  80e4cc:	e0fffa17 	ldw	r3,-24(fp)
  80e4d0:	10c5c83a 	sub	r2,r2,r3
  80e4d4:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
  80e4d8:	e0bff817 	ldw	r2,-32(fp)
  80e4dc:	1005003a 	cmpeq	r2,r2,zero
  80e4e0:	10001f1e 	bne	r2,zero,80e560 <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
  80e4e4:	e0fffd17 	ldw	r3,-12(fp)
  80e4e8:	e0bff817 	ldw	r2,-32(fp)
  80e4ec:	1880022e 	bgeu	r3,r2,80e4f8 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
  80e4f0:	e0bffd17 	ldw	r2,-12(fp)
  80e4f4:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80e4f8:	e0bffb17 	ldw	r2,-20(fp)
  80e4fc:	10c20e04 	addi	r3,r2,2104
  80e500:	e0bffa17 	ldw	r2,-24(fp)
  80e504:	1885883a 	add	r2,r3,r2
  80e508:	e0fffc17 	ldw	r3,-16(fp)
  80e50c:	1009883a 	mov	r4,r2
  80e510:	180b883a 	mov	r5,r3
  80e514:	e1bff817 	ldw	r6,-32(fp)
  80e518:	0809d140 	call	809d14 <memcpy>
      ptr   += n;
  80e51c:	e0fff817 	ldw	r3,-32(fp)
  80e520:	e0bffc17 	ldw	r2,-16(fp)
  80e524:	10c5883a 	add	r2,r2,r3
  80e528:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
  80e52c:	e0fffd17 	ldw	r3,-12(fp)
  80e530:	e0bff817 	ldw	r2,-32(fp)
  80e534:	1885c83a 	sub	r2,r3,r2
  80e538:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e53c:	e0fffa17 	ldw	r3,-24(fp)
  80e540:	e0bff817 	ldw	r2,-32(fp)
  80e544:	1885883a 	add	r2,r3,r2
  80e548:	10c1ffcc 	andi	r3,r2,2047
  80e54c:	e0bffb17 	ldw	r2,-20(fp)
  80e550:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e554:	e0bffd17 	ldw	r2,-12(fp)
  80e558:	10800048 	cmpgei	r2,r2,1
  80e55c:	103fc31e 	bne	r2,zero,80e46c <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e560:	0005303a 	rdctl	r2,status
  80e564:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e568:	e0fff517 	ldw	r3,-44(fp)
  80e56c:	00bfff84 	movi	r2,-2
  80e570:	1884703a 	and	r2,r3,r2
  80e574:	1001703a 	wrctl	status,r2
  
  return context;
  80e578:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80e57c:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e580:	e0bffb17 	ldw	r2,-20(fp)
  80e584:	10800817 	ldw	r2,32(r2)
  80e588:	10c00094 	ori	r3,r2,2
  80e58c:	e0bffb17 	ldw	r2,-20(fp)
  80e590:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e594:	e0bffb17 	ldw	r2,-20(fp)
  80e598:	10800017 	ldw	r2,0(r2)
  80e59c:	11000104 	addi	r4,r2,4
  80e5a0:	e0bffb17 	ldw	r2,-20(fp)
  80e5a4:	10800817 	ldw	r2,32(r2)
  80e5a8:	1007883a 	mov	r3,r2
  80e5ac:	2005883a 	mov	r2,r4
  80e5b0:	10c00035 	stwio	r3,0(r2)
  80e5b4:	e0bff717 	ldw	r2,-36(fp)
  80e5b8:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e5bc:	e0bff417 	ldw	r2,-48(fp)
  80e5c0:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80e5c4:	e0bffd17 	ldw	r2,-12(fp)
  80e5c8:	10800050 	cmplti	r2,r2,1
  80e5cc:	1000111e 	bne	r2,zero,80e614 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
  80e5d0:	e0bffe17 	ldw	r2,-8(fp)
  80e5d4:	1090000c 	andi	r2,r2,16384
  80e5d8:	1004c03a 	cmpne	r2,r2,zero
  80e5dc:	1000101e 	bne	r2,zero,80e620 <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80e5e0:	e0bffb17 	ldw	r2,-20(fp)
  80e5e4:	10c00d17 	ldw	r3,52(r2)
  80e5e8:	e0bff917 	ldw	r2,-28(fp)
  80e5ec:	1880051e 	bne	r3,r2,80e604 <altera_avalon_jtag_uart_write+0x1c8>
  80e5f0:	e0bffb17 	ldw	r2,-20(fp)
  80e5f4:	10c00917 	ldw	r3,36(r2)
  80e5f8:	e0bffb17 	ldw	r2,-20(fp)
  80e5fc:	10800117 	ldw	r2,4(r2)
  80e600:	18bff736 	bltu	r3,r2,80e5e0 <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
  80e604:	e0bffb17 	ldw	r2,-20(fp)
  80e608:	10c00d17 	ldw	r3,52(r2)
  80e60c:	e0bff917 	ldw	r2,-28(fp)
  80e610:	18800326 	beq	r3,r2,80e620 <altera_avalon_jtag_uart_write+0x1e4>
         break;
    }
  }
  while (count > 0);
  80e614:	e0bffd17 	ldw	r2,-12(fp)
  80e618:	10800048 	cmpgei	r2,r2,1
  80e61c:	103fcd1e 	bne	r2,zero,80e554 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80e620:	e0fffc17 	ldw	r3,-16(fp)
  80e624:	e0bff617 	ldw	r2,-40(fp)
  80e628:	18800526 	beq	r3,r2,80e640 <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
  80e62c:	e0fffc17 	ldw	r3,-16(fp)
  80e630:	e0bff617 	ldw	r2,-40(fp)
  80e634:	1887c83a 	sub	r3,r3,r2
  80e638:	e0ffff15 	stw	r3,-4(fp)
  80e63c:	00000906 	br	80e664 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
  80e640:	e0bffe17 	ldw	r2,-8(fp)
  80e644:	1090000c 	andi	r2,r2,16384
  80e648:	1005003a 	cmpeq	r2,r2,zero
  80e64c:	1000031e 	bne	r2,zero,80e65c <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
  80e650:	00bffd44 	movi	r2,-11
  80e654:	e0bfff15 	stw	r2,-4(fp)
  80e658:	00000206 	br	80e664 <altera_avalon_jtag_uart_write+0x228>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80e65c:	00bffec4 	movi	r2,-5
  80e660:	e0bfff15 	stw	r2,-4(fp)
  80e664:	e0bfff17 	ldw	r2,-4(fp)
}
  80e668:	e037883a 	mov	sp,fp
  80e66c:	dfc00117 	ldw	ra,4(sp)
  80e670:	df000017 	ldw	fp,0(sp)
  80e674:	dec00204 	addi	sp,sp,8
  80e678:	f800283a 	ret

0080e67c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80e67c:	defffa04 	addi	sp,sp,-24
  80e680:	dfc00515 	stw	ra,20(sp)
  80e684:	df000415 	stw	fp,16(sp)
  80e688:	df000404 	addi	fp,sp,16
  80e68c:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80e690:	e0bfff17 	ldw	r2,-4(fp)
  80e694:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80e698:	e0bfff17 	ldw	r2,-4(fp)
  80e69c:	10800104 	addi	r2,r2,4
  80e6a0:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e6a4:	0005303a 	rdctl	r2,status
  80e6a8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e6ac:	e0fffd17 	ldw	r3,-12(fp)
  80e6b0:	00bfff84 	movi	r2,-2
  80e6b4:	1884703a 	and	r2,r3,r2
  80e6b8:	1001703a 	wrctl	status,r2
  
  return context;
  80e6bc:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80e6c0:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
  80e6c4:	080f2900 	call	80f290 <alt_tick>
  80e6c8:	e0bffe17 	ldw	r2,-8(fp)
  80e6cc:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e6d0:	e0bffc17 	ldw	r2,-16(fp)
  80e6d4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  80e6d8:	e037883a 	mov	sp,fp
  80e6dc:	dfc00117 	ldw	ra,4(sp)
  80e6e0:	df000017 	ldw	fp,0(sp)
  80e6e4:	dec00204 	addi	sp,sp,8
  80e6e8:	f800283a 	ret

0080e6ec <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80e6ec:	defff804 	addi	sp,sp,-32
  80e6f0:	dfc00715 	stw	ra,28(sp)
  80e6f4:	df000615 	stw	fp,24(sp)
  80e6f8:	df000604 	addi	fp,sp,24
  80e6fc:	e13ffc15 	stw	r4,-16(fp)
  80e700:	e17ffd15 	stw	r5,-12(fp)
  80e704:	e1bffe15 	stw	r6,-8(fp)
  80e708:	e1ffff15 	stw	r7,-4(fp)
  80e70c:	e0bfff17 	ldw	r2,-4(fp)
  80e710:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80e714:	00802074 	movhi	r2,129
  80e718:	108d5104 	addi	r2,r2,13636
  80e71c:	10800017 	ldw	r2,0(r2)
  80e720:	1004c03a 	cmpne	r2,r2,zero
  80e724:	1000041e 	bne	r2,zero,80e738 <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
  80e728:	00c02074 	movhi	r3,129
  80e72c:	18cd5104 	addi	r3,r3,13636
  80e730:	e0bffb17 	ldw	r2,-20(fp)
  80e734:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80e738:	e0bffc17 	ldw	r2,-16(fp)
  80e73c:	10800104 	addi	r2,r2,4
  80e740:	1007883a 	mov	r3,r2
  80e744:	008001c4 	movi	r2,7
  80e748:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80e74c:	d8000015 	stw	zero,0(sp)
  80e750:	e13ffd17 	ldw	r4,-12(fp)
  80e754:	e17ffe17 	ldw	r5,-8(fp)
  80e758:	01802074 	movhi	r6,129
  80e75c:	31b99f04 	addi	r6,r6,-6532
  80e760:	e1fffc17 	ldw	r7,-16(fp)
  80e764:	080eaf80 	call	80eaf8 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80e768:	e037883a 	mov	sp,fp
  80e76c:	dfc00117 	ldw	ra,4(sp)
  80e770:	df000017 	ldw	fp,0(sp)
  80e774:	dec00204 	addi	sp,sp,8
  80e778:	f800283a 	ret

0080e77c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80e77c:	defff404 	addi	sp,sp,-48
  80e780:	df000b15 	stw	fp,44(sp)
  80e784:	df000b04 	addi	fp,sp,44
  80e788:	e13ffb15 	stw	r4,-20(fp)
  80e78c:	e17ffc15 	stw	r5,-16(fp)
  80e790:	e1bffd15 	stw	r6,-12(fp)
  80e794:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80e798:	e03ff915 	stw	zero,-28(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80e79c:	00802074 	movhi	r2,129
  80e7a0:	108d5104 	addi	r2,r2,13636
  80e7a4:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
  80e7a8:	1005003a 	cmpeq	r2,r2,zero
  80e7ac:	1000411e 	bne	r2,zero,80e8b4 <alt_alarm_start+0x138>
  {
    if (alarm)
  80e7b0:	e0bffb17 	ldw	r2,-20(fp)
  80e7b4:	1005003a 	cmpeq	r2,r2,zero
  80e7b8:	10003b1e 	bne	r2,zero,80e8a8 <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
  80e7bc:	e0fffb17 	ldw	r3,-20(fp)
  80e7c0:	e0bffd17 	ldw	r2,-12(fp)
  80e7c4:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
  80e7c8:	e0fffb17 	ldw	r3,-20(fp)
  80e7cc:	e0bffe17 	ldw	r2,-8(fp)
  80e7d0:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e7d4:	0005303a 	rdctl	r2,status
  80e7d8:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e7dc:	e0fff817 	ldw	r3,-32(fp)
  80e7e0:	00bfff84 	movi	r2,-2
  80e7e4:	1884703a 	and	r2,r3,r2
  80e7e8:	1001703a 	wrctl	status,r2
  
  return context;
  80e7ec:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
  80e7f0:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80e7f4:	00802074 	movhi	r2,129
  80e7f8:	108d5204 	addi	r2,r2,13640
  80e7fc:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
  80e800:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80e804:	e0fffc17 	ldw	r3,-16(fp)
  80e808:	e0bff917 	ldw	r2,-28(fp)
  80e80c:	1885883a 	add	r2,r3,r2
  80e810:	10c00044 	addi	r3,r2,1
  80e814:	e0bffb17 	ldw	r2,-20(fp)
  80e818:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80e81c:	e0bffb17 	ldw	r2,-20(fp)
  80e820:	10c00217 	ldw	r3,8(r2)
  80e824:	e0bff917 	ldw	r2,-28(fp)
  80e828:	1880042e 	bgeu	r3,r2,80e83c <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
  80e82c:	e0fffb17 	ldw	r3,-20(fp)
  80e830:	00800044 	movi	r2,1
  80e834:	18800405 	stb	r2,16(r3)
  80e838:	00000206 	br	80e844 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
  80e83c:	e0bffb17 	ldw	r2,-20(fp)
  80e840:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80e844:	e0fffb17 	ldw	r3,-20(fp)
  80e848:	00802074 	movhi	r2,129
  80e84c:	1086ad04 	addi	r2,r2,6836
  80e850:	e0bff615 	stw	r2,-40(fp)
  80e854:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80e858:	e0fff717 	ldw	r3,-36(fp)
  80e85c:	e0bff617 	ldw	r2,-40(fp)
  80e860:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
  80e864:	e0bff617 	ldw	r2,-40(fp)
  80e868:	10c00017 	ldw	r3,0(r2)
  80e86c:	e0bff717 	ldw	r2,-36(fp)
  80e870:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80e874:	e0bff617 	ldw	r2,-40(fp)
  80e878:	10c00017 	ldw	r3,0(r2)
  80e87c:	e0bff717 	ldw	r2,-36(fp)
  80e880:	18800115 	stw	r2,4(r3)
  list->next           = entry;
  80e884:	e0fff617 	ldw	r3,-40(fp)
  80e888:	e0bff717 	ldw	r2,-36(fp)
  80e88c:	18800015 	stw	r2,0(r3)
  80e890:	e0bffa17 	ldw	r2,-24(fp)
  80e894:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e898:	e0bff517 	ldw	r2,-44(fp)
  80e89c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  80e8a0:	e03fff15 	stw	zero,-4(fp)
  80e8a4:	00000506 	br	80e8bc <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
  80e8a8:	00bffa84 	movi	r2,-22
  80e8ac:	e0bfff15 	stw	r2,-4(fp)
  80e8b0:	00000206 	br	80e8bc <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
  80e8b4:	00bfde84 	movi	r2,-134
  80e8b8:	e0bfff15 	stw	r2,-4(fp)
  80e8bc:	e0bfff17 	ldw	r2,-4(fp)
  }
}
  80e8c0:	e037883a 	mov	sp,fp
  80e8c4:	df000017 	ldw	fp,0(sp)
  80e8c8:	dec00104 	addi	sp,sp,4
  80e8cc:	f800283a 	ret

0080e8d0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80e8d0:	deffff04 	addi	sp,sp,-4
  80e8d4:	df000015 	stw	fp,0(sp)
  80e8d8:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80e8dc:	e037883a 	mov	sp,fp
  80e8e0:	df000017 	ldw	fp,0(sp)
  80e8e4:	dec00104 	addi	sp,sp,4
  80e8e8:	f800283a 	ret

0080e8ec <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80e8ec:	defff904 	addi	sp,sp,-28
  80e8f0:	dfc00615 	stw	ra,24(sp)
  80e8f4:	df000515 	stw	fp,20(sp)
  80e8f8:	df000504 	addi	fp,sp,20
  80e8fc:	e13ffd15 	stw	r4,-12(fp)
  80e900:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80e904:	e0bffd17 	ldw	r2,-12(fp)
  80e908:	1005003a 	cmpeq	r2,r2,zero
  80e90c:	1000041e 	bne	r2,zero,80e920 <alt_dev_llist_insert+0x34>
  80e910:	e0bffd17 	ldw	r2,-12(fp)
  80e914:	10800217 	ldw	r2,8(r2)
  80e918:	1004c03a 	cmpne	r2,r2,zero
  80e91c:	1000071e 	bne	r2,zero,80e93c <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
  80e920:	080e9a00 	call	80e9a0 <alt_get_errno>
  80e924:	1007883a 	mov	r3,r2
  80e928:	00800584 	movi	r2,22
  80e92c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80e930:	00bffa84 	movi	r2,-22
  80e934:	e0bfff15 	stw	r2,-4(fp)
  80e938:	00001306 	br	80e988 <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80e93c:	e0fffd17 	ldw	r3,-12(fp)
  80e940:	e0bffe17 	ldw	r2,-8(fp)
  80e944:	e0bffb15 	stw	r2,-20(fp)
  80e948:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80e94c:	e0fffc17 	ldw	r3,-16(fp)
  80e950:	e0bffb17 	ldw	r2,-20(fp)
  80e954:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
  80e958:	e0bffb17 	ldw	r2,-20(fp)
  80e95c:	10c00017 	ldw	r3,0(r2)
  80e960:	e0bffc17 	ldw	r2,-16(fp)
  80e964:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80e968:	e0bffb17 	ldw	r2,-20(fp)
  80e96c:	10c00017 	ldw	r3,0(r2)
  80e970:	e0bffc17 	ldw	r2,-16(fp)
  80e974:	18800115 	stw	r2,4(r3)
  list->next           = entry;
  80e978:	e0fffb17 	ldw	r3,-20(fp)
  80e97c:	e0bffc17 	ldw	r2,-16(fp)
  80e980:	18800015 	stw	r2,0(r3)

  return 0;  
  80e984:	e03fff15 	stw	zero,-4(fp)
  80e988:	e0bfff17 	ldw	r2,-4(fp)
}
  80e98c:	e037883a 	mov	sp,fp
  80e990:	dfc00117 	ldw	ra,4(sp)
  80e994:	df000017 	ldw	fp,0(sp)
  80e998:	dec00204 	addi	sp,sp,8
  80e99c:	f800283a 	ret

0080e9a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e9a0:	defffd04 	addi	sp,sp,-12
  80e9a4:	dfc00215 	stw	ra,8(sp)
  80e9a8:	df000115 	stw	fp,4(sp)
  80e9ac:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80e9b0:	00802074 	movhi	r2,129
  80e9b4:	1086aa04 	addi	r2,r2,6824
  80e9b8:	10800017 	ldw	r2,0(r2)
  80e9bc:	1005003a 	cmpeq	r2,r2,zero
  80e9c0:	1000061e 	bne	r2,zero,80e9dc <alt_get_errno+0x3c>
  80e9c4:	00802074 	movhi	r2,129
  80e9c8:	1086aa04 	addi	r2,r2,6824
  80e9cc:	10800017 	ldw	r2,0(r2)
  80e9d0:	103ee83a 	callr	r2
  80e9d4:	e0bfff15 	stw	r2,-4(fp)
  80e9d8:	00000306 	br	80e9e8 <alt_get_errno+0x48>
  80e9dc:	00802074 	movhi	r2,129
  80e9e0:	108d4c04 	addi	r2,r2,13616
  80e9e4:	e0bfff15 	stw	r2,-4(fp)
  80e9e8:	e0bfff17 	ldw	r2,-4(fp)
}
  80e9ec:	e037883a 	mov	sp,fp
  80e9f0:	dfc00117 	ldw	ra,4(sp)
  80e9f4:	df000017 	ldw	fp,0(sp)
  80e9f8:	dec00204 	addi	sp,sp,8
  80e9fc:	f800283a 	ret

0080ea00 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80ea00:	defffd04 	addi	sp,sp,-12
  80ea04:	dfc00215 	stw	ra,8(sp)
  80ea08:	df000115 	stw	fp,4(sp)
  80ea0c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80ea10:	00bfff04 	movi	r2,-4
  80ea14:	00c02074 	movhi	r3,129
  80ea18:	18feb704 	addi	r3,r3,-1316
  80ea1c:	1885883a 	add	r2,r3,r2
  80ea20:	e0bfff15 	stw	r2,-4(fp)
  80ea24:	00000606 	br	80ea40 <_do_ctors+0x40>
        (*ctor) (); 
  80ea28:	e0bfff17 	ldw	r2,-4(fp)
  80ea2c:	10800017 	ldw	r2,0(r2)
  80ea30:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80ea34:	e0bfff17 	ldw	r2,-4(fp)
  80ea38:	10bfff04 	addi	r2,r2,-4
  80ea3c:	e0bfff15 	stw	r2,-4(fp)
  80ea40:	e0ffff17 	ldw	r3,-4(fp)
  80ea44:	00802074 	movhi	r2,129
  80ea48:	10beb604 	addi	r2,r2,-1320
  80ea4c:	18bff62e 	bgeu	r3,r2,80ea28 <_do_ctors+0x28>
        (*ctor) (); 
}
  80ea50:	e037883a 	mov	sp,fp
  80ea54:	dfc00117 	ldw	ra,4(sp)
  80ea58:	df000017 	ldw	fp,0(sp)
  80ea5c:	dec00204 	addi	sp,sp,8
  80ea60:	f800283a 	ret

0080ea64 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80ea64:	defffd04 	addi	sp,sp,-12
  80ea68:	dfc00215 	stw	ra,8(sp)
  80ea6c:	df000115 	stw	fp,4(sp)
  80ea70:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ea74:	00bfff04 	movi	r2,-4
  80ea78:	00c02074 	movhi	r3,129
  80ea7c:	18feb704 	addi	r3,r3,-1316
  80ea80:	1885883a 	add	r2,r3,r2
  80ea84:	e0bfff15 	stw	r2,-4(fp)
  80ea88:	00000606 	br	80eaa4 <_do_dtors+0x40>
        (*dtor) (); 
  80ea8c:	e0bfff17 	ldw	r2,-4(fp)
  80ea90:	10800017 	ldw	r2,0(r2)
  80ea94:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ea98:	e0bfff17 	ldw	r2,-4(fp)
  80ea9c:	10bfff04 	addi	r2,r2,-4
  80eaa0:	e0bfff15 	stw	r2,-4(fp)
  80eaa4:	e0ffff17 	ldw	r3,-4(fp)
  80eaa8:	00802074 	movhi	r2,129
  80eaac:	10beb704 	addi	r2,r2,-1316
  80eab0:	18bff62e 	bgeu	r3,r2,80ea8c <_do_dtors+0x28>
        (*dtor) (); 
}
  80eab4:	e037883a 	mov	sp,fp
  80eab8:	dfc00117 	ldw	ra,4(sp)
  80eabc:	df000017 	ldw	fp,0(sp)
  80eac0:	dec00204 	addi	sp,sp,8
  80eac4:	f800283a 	ret

0080eac8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80eac8:	defffe04 	addi	sp,sp,-8
  80eacc:	dfc00115 	stw	ra,4(sp)
  80ead0:	df000015 	stw	fp,0(sp)
  80ead4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80ead8:	0009883a 	mov	r4,zero
  80eadc:	01500004 	movi	r5,16384
  80eae0:	080f6400 	call	80f640 <alt_icache_flush>
#endif
}
  80eae4:	e037883a 	mov	sp,fp
  80eae8:	dfc00117 	ldw	ra,4(sp)
  80eaec:	df000017 	ldw	fp,0(sp)
  80eaf0:	dec00204 	addi	sp,sp,8
  80eaf4:	f800283a 	ret

0080eaf8 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80eaf8:	defff904 	addi	sp,sp,-28
  80eafc:	dfc00615 	stw	ra,24(sp)
  80eb00:	df000515 	stw	fp,20(sp)
  80eb04:	df000504 	addi	fp,sp,20
  80eb08:	e13ffc15 	stw	r4,-16(fp)
  80eb0c:	e17ffd15 	stw	r5,-12(fp)
  80eb10:	e1bffe15 	stw	r6,-8(fp)
  80eb14:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80eb18:	e0800217 	ldw	r2,8(fp)
  80eb1c:	d8800015 	stw	r2,0(sp)
  80eb20:	e13ffc17 	ldw	r4,-16(fp)
  80eb24:	e17ffd17 	ldw	r5,-12(fp)
  80eb28:	e1bffe17 	ldw	r6,-8(fp)
  80eb2c:	e1ffff17 	ldw	r7,-4(fp)
  80eb30:	080eccc0 	call	80eccc <alt_iic_isr_register>
}  
  80eb34:	e037883a 	mov	sp,fp
  80eb38:	dfc00117 	ldw	ra,4(sp)
  80eb3c:	df000017 	ldw	fp,0(sp)
  80eb40:	dec00204 	addi	sp,sp,8
  80eb44:	f800283a 	ret

0080eb48 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80eb48:	defff904 	addi	sp,sp,-28
  80eb4c:	df000615 	stw	fp,24(sp)
  80eb50:	df000604 	addi	fp,sp,24
  80eb54:	e13ffe15 	stw	r4,-8(fp)
  80eb58:	e17fff15 	stw	r5,-4(fp)
  80eb5c:	e0bfff17 	ldw	r2,-4(fp)
  80eb60:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80eb64:	0005303a 	rdctl	r2,status
  80eb68:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80eb6c:	e0fffb17 	ldw	r3,-20(fp)
  80eb70:	00bfff84 	movi	r2,-2
  80eb74:	1884703a 	and	r2,r3,r2
  80eb78:	1001703a 	wrctl	status,r2
  
  return context;
  80eb7c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80eb80:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
  80eb84:	e0fffc17 	ldw	r3,-16(fp)
  80eb88:	00800044 	movi	r2,1
  80eb8c:	10c4983a 	sll	r2,r2,r3
  80eb90:	1007883a 	mov	r3,r2
  80eb94:	00802074 	movhi	r2,129
  80eb98:	108d5004 	addi	r2,r2,13632
  80eb9c:	10800017 	ldw	r2,0(r2)
  80eba0:	1886b03a 	or	r3,r3,r2
  80eba4:	00802074 	movhi	r2,129
  80eba8:	108d5004 	addi	r2,r2,13632
  80ebac:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80ebb0:	00802074 	movhi	r2,129
  80ebb4:	108d5004 	addi	r2,r2,13632
  80ebb8:	10800017 	ldw	r2,0(r2)
  80ebbc:	100170fa 	wrctl	ienable,r2
  80ebc0:	e0bffd17 	ldw	r2,-12(fp)
  80ebc4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ebc8:	e0bffa17 	ldw	r2,-24(fp)
  80ebcc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80ebd0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
  80ebd4:	e037883a 	mov	sp,fp
  80ebd8:	df000017 	ldw	fp,0(sp)
  80ebdc:	dec00104 	addi	sp,sp,4
  80ebe0:	f800283a 	ret

0080ebe4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80ebe4:	defff904 	addi	sp,sp,-28
  80ebe8:	df000615 	stw	fp,24(sp)
  80ebec:	df000604 	addi	fp,sp,24
  80ebf0:	e13ffe15 	stw	r4,-8(fp)
  80ebf4:	e17fff15 	stw	r5,-4(fp)
  80ebf8:	e0bfff17 	ldw	r2,-4(fp)
  80ebfc:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ec00:	0005303a 	rdctl	r2,status
  80ec04:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ec08:	e0fffb17 	ldw	r3,-20(fp)
  80ec0c:	00bfff84 	movi	r2,-2
  80ec10:	1884703a 	and	r2,r3,r2
  80ec14:	1001703a 	wrctl	status,r2
  
  return context;
  80ec18:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80ec1c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
  80ec20:	e0fffc17 	ldw	r3,-16(fp)
  80ec24:	00800044 	movi	r2,1
  80ec28:	10c4983a 	sll	r2,r2,r3
  80ec2c:	0084303a 	nor	r2,zero,r2
  80ec30:	1007883a 	mov	r3,r2
  80ec34:	00802074 	movhi	r2,129
  80ec38:	108d5004 	addi	r2,r2,13632
  80ec3c:	10800017 	ldw	r2,0(r2)
  80ec40:	1886703a 	and	r3,r3,r2
  80ec44:	00802074 	movhi	r2,129
  80ec48:	108d5004 	addi	r2,r2,13632
  80ec4c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80ec50:	00802074 	movhi	r2,129
  80ec54:	108d5004 	addi	r2,r2,13632
  80ec58:	10800017 	ldw	r2,0(r2)
  80ec5c:	100170fa 	wrctl	ienable,r2
  80ec60:	e0bffd17 	ldw	r2,-12(fp)
  80ec64:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ec68:	e0bffa17 	ldw	r2,-24(fp)
  80ec6c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80ec70:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
  80ec74:	e037883a 	mov	sp,fp
  80ec78:	df000017 	ldw	fp,0(sp)
  80ec7c:	dec00104 	addi	sp,sp,4
  80ec80:	f800283a 	ret

0080ec84 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80ec84:	defffc04 	addi	sp,sp,-16
  80ec88:	df000315 	stw	fp,12(sp)
  80ec8c:	df000304 	addi	fp,sp,12
  80ec90:	e13ffe15 	stw	r4,-8(fp)
  80ec94:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80ec98:	000530fa 	rdctl	r2,ienable
  80ec9c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80eca0:	e0ffff17 	ldw	r3,-4(fp)
  80eca4:	00800044 	movi	r2,1
  80eca8:	10c4983a 	sll	r2,r2,r3
  80ecac:	1007883a 	mov	r3,r2
  80ecb0:	e0bffd17 	ldw	r2,-12(fp)
  80ecb4:	1884703a 	and	r2,r3,r2
  80ecb8:	1004c03a 	cmpne	r2,r2,zero
}
  80ecbc:	e037883a 	mov	sp,fp
  80ecc0:	df000017 	ldw	fp,0(sp)
  80ecc4:	dec00104 	addi	sp,sp,4
  80ecc8:	f800283a 	ret

0080eccc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80eccc:	defff404 	addi	sp,sp,-48
  80ecd0:	dfc00b15 	stw	ra,44(sp)
  80ecd4:	df000a15 	stw	fp,40(sp)
  80ecd8:	df000a04 	addi	fp,sp,40
  80ecdc:	e13ffb15 	stw	r4,-20(fp)
  80ece0:	e17ffc15 	stw	r5,-16(fp)
  80ece4:	e1bffd15 	stw	r6,-12(fp)
  80ece8:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
  80ecec:	00bffa84 	movi	r2,-22
  80ecf0:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80ecf4:	e0bffc17 	ldw	r2,-16(fp)
  80ecf8:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80ecfc:	e0bff917 	ldw	r2,-28(fp)
  80ed00:	10800808 	cmpgei	r2,r2,32
  80ed04:	1000291e 	bne	r2,zero,80edac <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ed08:	0005303a 	rdctl	r2,status
  80ed0c:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ed10:	e0fff717 	ldw	r3,-36(fp)
  80ed14:	00bfff84 	movi	r2,-2
  80ed18:	1884703a 	and	r2,r3,r2
  80ed1c:	1001703a 	wrctl	status,r2
  
  return context;
  80ed20:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80ed24:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
  80ed28:	e0bff917 	ldw	r2,-28(fp)
  80ed2c:	00c02074 	movhi	r3,129
  80ed30:	18cd5d04 	addi	r3,r3,13684
  80ed34:	100490fa 	slli	r2,r2,3
  80ed38:	10c7883a 	add	r3,r2,r3
  80ed3c:	e0bffd17 	ldw	r2,-12(fp)
  80ed40:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
  80ed44:	e0bff917 	ldw	r2,-28(fp)
  80ed48:	00c02074 	movhi	r3,129
  80ed4c:	18cd5d04 	addi	r3,r3,13684
  80ed50:	100490fa 	slli	r2,r2,3
  80ed54:	10c5883a 	add	r2,r2,r3
  80ed58:	10c00104 	addi	r3,r2,4
  80ed5c:	e0bffe17 	ldw	r2,-8(fp)
  80ed60:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80ed64:	e0bffd17 	ldw	r2,-12(fp)
  80ed68:	1005003a 	cmpeq	r2,r2,zero
  80ed6c:	1000051e 	bne	r2,zero,80ed84 <alt_iic_isr_register+0xb8>
  80ed70:	e17ff917 	ldw	r5,-28(fp)
  80ed74:	e13ffb17 	ldw	r4,-20(fp)
  80ed78:	080eb480 	call	80eb48 <alt_ic_irq_enable>
  80ed7c:	e0bfff15 	stw	r2,-4(fp)
  80ed80:	00000406 	br	80ed94 <alt_iic_isr_register+0xc8>
  80ed84:	e17ff917 	ldw	r5,-28(fp)
  80ed88:	e13ffb17 	ldw	r4,-20(fp)
  80ed8c:	080ebe40 	call	80ebe4 <alt_ic_irq_disable>
  80ed90:	e0bfff15 	stw	r2,-4(fp)
  80ed94:	e0bfff17 	ldw	r2,-4(fp)
  80ed98:	e0bffa15 	stw	r2,-24(fp)
  80ed9c:	e0bff817 	ldw	r2,-32(fp)
  80eda0:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80eda4:	e0bff617 	ldw	r2,-40(fp)
  80eda8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  80edac:	e0bffa17 	ldw	r2,-24(fp)
}
  80edb0:	e037883a 	mov	sp,fp
  80edb4:	dfc00117 	ldw	ra,4(sp)
  80edb8:	df000017 	ldw	fp,0(sp)
  80edbc:	dec00204 	addi	sp,sp,8
  80edc0:	f800283a 	ret

0080edc4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80edc4:	defff804 	addi	sp,sp,-32
  80edc8:	dfc00715 	stw	ra,28(sp)
  80edcc:	df000615 	stw	fp,24(sp)
  80edd0:	dc000515 	stw	r16,20(sp)
  80edd4:	df000504 	addi	fp,sp,20
  80edd8:	e13ffc15 	stw	r4,-16(fp)
  80eddc:	e17ffd15 	stw	r5,-12(fp)
  80ede0:	e1bffe15 	stw	r6,-8(fp)
  80ede4:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  80ede8:	e13ffd17 	ldw	r4,-12(fp)
  80edec:	e17ffe17 	ldw	r5,-8(fp)
  80edf0:	e1bfff17 	ldw	r6,-4(fp)
  80edf4:	080f00c0 	call	80f00c <open>
  80edf8:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  80edfc:	e0bffb17 	ldw	r2,-20(fp)
  80ee00:	1004803a 	cmplt	r2,r2,zero
  80ee04:	10001f1e 	bne	r2,zero,80ee84 <alt_open_fd+0xc0>
  {
    fd->dev      = alt_fd_list[old].dev;
  80ee08:	e13ffb17 	ldw	r4,-20(fp)
  80ee0c:	04002074 	movhi	r16,129
  80ee10:	84022704 	addi	r16,r16,2204
  80ee14:	01400304 	movi	r5,12
  80ee18:	0803fc00 	call	803fc0 <__mulsi3>
  80ee1c:	1405883a 	add	r2,r2,r16
  80ee20:	10c00017 	ldw	r3,0(r2)
  80ee24:	e0bffc17 	ldw	r2,-16(fp)
  80ee28:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80ee2c:	e13ffb17 	ldw	r4,-20(fp)
  80ee30:	04002074 	movhi	r16,129
  80ee34:	84022704 	addi	r16,r16,2204
  80ee38:	01400304 	movi	r5,12
  80ee3c:	0803fc00 	call	803fc0 <__mulsi3>
  80ee40:	1405883a 	add	r2,r2,r16
  80ee44:	10800104 	addi	r2,r2,4
  80ee48:	10c00017 	ldw	r3,0(r2)
  80ee4c:	e0bffc17 	ldw	r2,-16(fp)
  80ee50:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80ee54:	e13ffb17 	ldw	r4,-20(fp)
  80ee58:	04002074 	movhi	r16,129
  80ee5c:	84022704 	addi	r16,r16,2204
  80ee60:	01400304 	movi	r5,12
  80ee64:	0803fc00 	call	803fc0 <__mulsi3>
  80ee68:	1405883a 	add	r2,r2,r16
  80ee6c:	10800204 	addi	r2,r2,8
  80ee70:	10c00017 	ldw	r3,0(r2)
  80ee74:	e0bffc17 	ldw	r2,-16(fp)
  80ee78:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80ee7c:	e13ffb17 	ldw	r4,-20(fp)
  80ee80:	080d75c0 	call	80d75c <alt_release_fd>
  }
} 
  80ee84:	e037883a 	mov	sp,fp
  80ee88:	dfc00217 	ldw	ra,8(sp)
  80ee8c:	df000117 	ldw	fp,4(sp)
  80ee90:	dc000017 	ldw	r16,0(sp)
  80ee94:	dec00304 	addi	sp,sp,12
  80ee98:	f800283a 	ret

0080ee9c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80ee9c:	defffb04 	addi	sp,sp,-20
  80eea0:	dfc00415 	stw	ra,16(sp)
  80eea4:	df000315 	stw	fp,12(sp)
  80eea8:	df000304 	addi	fp,sp,12
  80eeac:	e13ffd15 	stw	r4,-12(fp)
  80eeb0:	e17ffe15 	stw	r5,-8(fp)
  80eeb4:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80eeb8:	01002074 	movhi	r4,129
  80eebc:	21022a04 	addi	r4,r4,2216
  80eec0:	e17ffd17 	ldw	r5,-12(fp)
  80eec4:	01800044 	movi	r6,1
  80eec8:	01c07fc4 	movi	r7,511
  80eecc:	080edc40 	call	80edc4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80eed0:	01002074 	movhi	r4,129
  80eed4:	21022704 	addi	r4,r4,2204
  80eed8:	e17ffe17 	ldw	r5,-8(fp)
  80eedc:	000d883a 	mov	r6,zero
  80eee0:	01c07fc4 	movi	r7,511
  80eee4:	080edc40 	call	80edc4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80eee8:	01002074 	movhi	r4,129
  80eeec:	21022d04 	addi	r4,r4,2228
  80eef0:	e17fff17 	ldw	r5,-4(fp)
  80eef4:	01800044 	movi	r6,1
  80eef8:	01c07fc4 	movi	r7,511
  80eefc:	080edc40 	call	80edc4 <alt_open_fd>
}  
  80ef00:	e037883a 	mov	sp,fp
  80ef04:	dfc00117 	ldw	ra,4(sp)
  80ef08:	df000017 	ldw	fp,0(sp)
  80ef0c:	dec00204 	addi	sp,sp,8
  80ef10:	f800283a 	ret

0080ef14 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80ef14:	defffa04 	addi	sp,sp,-24
  80ef18:	dfc00515 	stw	ra,20(sp)
  80ef1c:	df000415 	stw	fp,16(sp)
  80ef20:	dc000315 	stw	r16,12(sp)
  80ef24:	df000304 	addi	fp,sp,12
  80ef28:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80ef2c:	e0bffe17 	ldw	r2,-8(fp)
  80ef30:	10800217 	ldw	r2,8(r2)
  80ef34:	10d00034 	orhi	r3,r2,16384
  80ef38:	e0bffe17 	ldw	r2,-8(fp)
  80ef3c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80ef40:	e03ffd15 	stw	zero,-12(fp)
  80ef44:	00002306 	br	80efd4 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80ef48:	e13ffd17 	ldw	r4,-12(fp)
  80ef4c:	04002074 	movhi	r16,129
  80ef50:	84022704 	addi	r16,r16,2204
  80ef54:	01400304 	movi	r5,12
  80ef58:	0803fc00 	call	803fc0 <__mulsi3>
  80ef5c:	1405883a 	add	r2,r2,r16
  80ef60:	10c00017 	ldw	r3,0(r2)
  80ef64:	e0bffe17 	ldw	r2,-8(fp)
  80ef68:	10800017 	ldw	r2,0(r2)
  80ef6c:	1880161e 	bne	r3,r2,80efc8 <alt_file_locked+0xb4>
  80ef70:	e13ffd17 	ldw	r4,-12(fp)
  80ef74:	04002074 	movhi	r16,129
  80ef78:	84022704 	addi	r16,r16,2204
  80ef7c:	01400304 	movi	r5,12
  80ef80:	0803fc00 	call	803fc0 <__mulsi3>
  80ef84:	1405883a 	add	r2,r2,r16
  80ef88:	10800204 	addi	r2,r2,8
  80ef8c:	10800017 	ldw	r2,0(r2)
  80ef90:	1004403a 	cmpge	r2,r2,zero
  80ef94:	10000c1e 	bne	r2,zero,80efc8 <alt_file_locked+0xb4>
  80ef98:	e13ffd17 	ldw	r4,-12(fp)
  80ef9c:	01400304 	movi	r5,12
  80efa0:	0803fc00 	call	803fc0 <__mulsi3>
  80efa4:	1007883a 	mov	r3,r2
  80efa8:	00802074 	movhi	r2,129
  80efac:	10822704 	addi	r2,r2,2204
  80efb0:	1887883a 	add	r3,r3,r2
  80efb4:	e0bffe17 	ldw	r2,-8(fp)
  80efb8:	18800326 	beq	r3,r2,80efc8 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  80efbc:	00bffcc4 	movi	r2,-13
  80efc0:	e0bfff15 	stw	r2,-4(fp)
  80efc4:	00000a06 	br	80eff0 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80efc8:	e0bffd17 	ldw	r2,-12(fp)
  80efcc:	10800044 	addi	r2,r2,1
  80efd0:	e0bffd15 	stw	r2,-12(fp)
  80efd4:	00802074 	movhi	r2,129
  80efd8:	1086a904 	addi	r2,r2,6820
  80efdc:	10800017 	ldw	r2,0(r2)
  80efe0:	1007883a 	mov	r3,r2
  80efe4:	e0bffd17 	ldw	r2,-12(fp)
  80efe8:	18bfd72e 	bgeu	r3,r2,80ef48 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80efec:	e03fff15 	stw	zero,-4(fp)
  80eff0:	e0bfff17 	ldw	r2,-4(fp)
}
  80eff4:	e037883a 	mov	sp,fp
  80eff8:	dfc00217 	ldw	ra,8(sp)
  80effc:	df000117 	ldw	fp,4(sp)
  80f000:	dc000017 	ldw	r16,0(sp)
  80f004:	dec00304 	addi	sp,sp,12
  80f008:	f800283a 	ret

0080f00c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80f00c:	defff404 	addi	sp,sp,-48
  80f010:	dfc00b15 	stw	ra,44(sp)
  80f014:	df000a15 	stw	fp,40(sp)
  80f018:	df000a04 	addi	fp,sp,40
  80f01c:	e13ffb15 	stw	r4,-20(fp)
  80f020:	e17ffc15 	stw	r5,-16(fp)
  80f024:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80f028:	00bfffc4 	movi	r2,-1
  80f02c:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
  80f030:	00bffb44 	movi	r2,-19
  80f034:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
  80f038:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80f03c:	e13ffb17 	ldw	r4,-20(fp)
  80f040:	01402074 	movhi	r5,129
  80f044:	2946a704 	addi	r5,r5,6812
  80f048:	080f3bc0 	call	80f3bc <alt_find_dev>
  80f04c:	e0bffa15 	stw	r2,-24(fp)
  80f050:	e0bffa17 	ldw	r2,-24(fp)
  80f054:	1004c03a 	cmpne	r2,r2,zero
  80f058:	1000051e 	bne	r2,zero,80f070 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80f05c:	e13ffb17 	ldw	r4,-20(fp)
  80f060:	080f4500 	call	80f450 <alt_find_file>
  80f064:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
  80f068:	00800044 	movi	r2,1
  80f06c:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80f070:	e0bffa17 	ldw	r2,-24(fp)
  80f074:	1005003a 	cmpeq	r2,r2,zero
  80f078:	1000311e 	bne	r2,zero,80f140 <open+0x134>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80f07c:	e13ffa17 	ldw	r4,-24(fp)
  80f080:	080f5700 	call	80f570 <alt_get_fd>
  80f084:	e0bff815 	stw	r2,-32(fp)
  80f088:	e0bff817 	ldw	r2,-32(fp)
  80f08c:	1004403a 	cmpge	r2,r2,zero
  80f090:	1000031e 	bne	r2,zero,80f0a0 <open+0x94>
    {
      status = index;
  80f094:	e0bff817 	ldw	r2,-32(fp)
  80f098:	e0bff715 	stw	r2,-36(fp)
  80f09c:	00002a06 	br	80f148 <open+0x13c>
    }
    else
    {
      fd = &alt_fd_list[index];
  80f0a0:	e13ff817 	ldw	r4,-32(fp)
  80f0a4:	01400304 	movi	r5,12
  80f0a8:	0803fc00 	call	803fc0 <__mulsi3>
  80f0ac:	1007883a 	mov	r3,r2
  80f0b0:	00802074 	movhi	r2,129
  80f0b4:	10822704 	addi	r2,r2,2204
  80f0b8:	1885883a 	add	r2,r3,r2
  80f0bc:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80f0c0:	e0fffc17 	ldw	r3,-16(fp)
  80f0c4:	00900034 	movhi	r2,16384
  80f0c8:	10bfffc4 	addi	r2,r2,-1
  80f0cc:	1886703a 	and	r3,r3,r2
  80f0d0:	e0bff917 	ldw	r2,-28(fp)
  80f0d4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80f0d8:	e0bff617 	ldw	r2,-40(fp)
  80f0dc:	1004c03a 	cmpne	r2,r2,zero
  80f0e0:	1000061e 	bne	r2,zero,80f0fc <open+0xf0>
  80f0e4:	e13ff917 	ldw	r4,-28(fp)
  80f0e8:	080ef140 	call	80ef14 <alt_file_locked>
  80f0ec:	e0bff715 	stw	r2,-36(fp)
  80f0f0:	e0bff717 	ldw	r2,-36(fp)
  80f0f4:	1004803a 	cmplt	r2,r2,zero
  80f0f8:	1000131e 	bne	r2,zero,80f148 <open+0x13c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80f0fc:	e0bffa17 	ldw	r2,-24(fp)
  80f100:	10800317 	ldw	r2,12(r2)
  80f104:	1005003a 	cmpeq	r2,r2,zero
  80f108:	1000091e 	bne	r2,zero,80f130 <open+0x124>
  80f10c:	e0bffa17 	ldw	r2,-24(fp)
  80f110:	10800317 	ldw	r2,12(r2)
  80f114:	e13ff917 	ldw	r4,-28(fp)
  80f118:	e17ffb17 	ldw	r5,-20(fp)
  80f11c:	e1bffc17 	ldw	r6,-16(fp)
  80f120:	e1fffd17 	ldw	r7,-12(fp)
  80f124:	103ee83a 	callr	r2
  80f128:	e0bfff15 	stw	r2,-4(fp)
  80f12c:	00000106 	br	80f134 <open+0x128>
  80f130:	e03fff15 	stw	zero,-4(fp)
  80f134:	e0bfff17 	ldw	r2,-4(fp)
  80f138:	e0bff715 	stw	r2,-36(fp)
  80f13c:	00000206 	br	80f148 <open+0x13c>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80f140:	00bffb44 	movi	r2,-19
  80f144:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80f148:	e0bff717 	ldw	r2,-36(fp)
  80f14c:	1004403a 	cmpge	r2,r2,zero
  80f150:	1000091e 	bne	r2,zero,80f178 <open+0x16c>
  {
    alt_release_fd (index);  
  80f154:	e13ff817 	ldw	r4,-32(fp)
  80f158:	080d75c0 	call	80d75c <alt_release_fd>
    ALT_ERRNO = -status;
  80f15c:	080f1980 	call	80f198 <alt_get_errno>
  80f160:	e0fff717 	ldw	r3,-36(fp)
  80f164:	00c7c83a 	sub	r3,zero,r3
  80f168:	10c00015 	stw	r3,0(r2)
    return -1;
  80f16c:	00bfffc4 	movi	r2,-1
  80f170:	e0bffe15 	stw	r2,-8(fp)
  80f174:	00000206 	br	80f180 <open+0x174>
  }
  
  /* return the reference upon success */

  return index;
  80f178:	e0bff817 	ldw	r2,-32(fp)
  80f17c:	e0bffe15 	stw	r2,-8(fp)
  80f180:	e0bffe17 	ldw	r2,-8(fp)
}
  80f184:	e037883a 	mov	sp,fp
  80f188:	dfc00117 	ldw	ra,4(sp)
  80f18c:	df000017 	ldw	fp,0(sp)
  80f190:	dec00204 	addi	sp,sp,8
  80f194:	f800283a 	ret

0080f198 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f198:	defffd04 	addi	sp,sp,-12
  80f19c:	dfc00215 	stw	ra,8(sp)
  80f1a0:	df000115 	stw	fp,4(sp)
  80f1a4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80f1a8:	00802074 	movhi	r2,129
  80f1ac:	1086aa04 	addi	r2,r2,6824
  80f1b0:	10800017 	ldw	r2,0(r2)
  80f1b4:	1005003a 	cmpeq	r2,r2,zero
  80f1b8:	1000061e 	bne	r2,zero,80f1d4 <alt_get_errno+0x3c>
  80f1bc:	00802074 	movhi	r2,129
  80f1c0:	1086aa04 	addi	r2,r2,6824
  80f1c4:	10800017 	ldw	r2,0(r2)
  80f1c8:	103ee83a 	callr	r2
  80f1cc:	e0bfff15 	stw	r2,-4(fp)
  80f1d0:	00000306 	br	80f1e0 <alt_get_errno+0x48>
  80f1d4:	00802074 	movhi	r2,129
  80f1d8:	108d4c04 	addi	r2,r2,13616
  80f1dc:	e0bfff15 	stw	r2,-4(fp)
  80f1e0:	e0bfff17 	ldw	r2,-4(fp)
}
  80f1e4:	e037883a 	mov	sp,fp
  80f1e8:	dfc00117 	ldw	ra,4(sp)
  80f1ec:	df000017 	ldw	fp,0(sp)
  80f1f0:	dec00204 	addi	sp,sp,8
  80f1f4:	f800283a 	ret

0080f1f8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80f1f8:	defffa04 	addi	sp,sp,-24
  80f1fc:	df000515 	stw	fp,20(sp)
  80f200:	df000504 	addi	fp,sp,20
  80f204:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f208:	0005303a 	rdctl	r2,status
  80f20c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f210:	e0fffd17 	ldw	r3,-12(fp)
  80f214:	00bfff84 	movi	r2,-2
  80f218:	1884703a 	and	r2,r3,r2
  80f21c:	1001703a 	wrctl	status,r2
  
  return context;
  80f220:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80f224:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
  80f228:	e0bfff17 	ldw	r2,-4(fp)
  80f22c:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80f230:	e0bffc17 	ldw	r2,-16(fp)
  80f234:	10c00017 	ldw	r3,0(r2)
  80f238:	e0bffc17 	ldw	r2,-16(fp)
  80f23c:	10800117 	ldw	r2,4(r2)
  80f240:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
  80f244:	e0bffc17 	ldw	r2,-16(fp)
  80f248:	10c00117 	ldw	r3,4(r2)
  80f24c:	e0bffc17 	ldw	r2,-16(fp)
  80f250:	10800017 	ldw	r2,0(r2)
  80f254:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80f258:	e0fffc17 	ldw	r3,-16(fp)
  80f25c:	e0bffc17 	ldw	r2,-16(fp)
  80f260:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
  80f264:	e0fffc17 	ldw	r3,-16(fp)
  80f268:	e0bffc17 	ldw	r2,-16(fp)
  80f26c:	18800015 	stw	r2,0(r3)
  80f270:	e0bffe17 	ldw	r2,-8(fp)
  80f274:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f278:	e0bffb17 	ldw	r2,-20(fp)
  80f27c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  80f280:	e037883a 	mov	sp,fp
  80f284:	df000017 	ldw	fp,0(sp)
  80f288:	dec00104 	addi	sp,sp,4
  80f28c:	f800283a 	ret

0080f290 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80f290:	defffb04 	addi	sp,sp,-20
  80f294:	dfc00415 	stw	ra,16(sp)
  80f298:	df000315 	stw	fp,12(sp)
  80f29c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80f2a0:	d0a00e17 	ldw	r2,-32712(gp)
  80f2a4:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80f2a8:	d0a6b317 	ldw	r2,-25908(gp)
  80f2ac:	10800044 	addi	r2,r2,1
  80f2b0:	d0a6b315 	stw	r2,-25908(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f2b4:	00003106 	br	80f37c <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
  80f2b8:	e0bffe17 	ldw	r2,-8(fp)
  80f2bc:	10800017 	ldw	r2,0(r2)
  80f2c0:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80f2c4:	e0bffe17 	ldw	r2,-8(fp)
  80f2c8:	10800403 	ldbu	r2,16(r2)
  80f2cc:	10803fcc 	andi	r2,r2,255
  80f2d0:	1005003a 	cmpeq	r2,r2,zero
  80f2d4:	1000051e 	bne	r2,zero,80f2ec <alt_tick+0x5c>
  80f2d8:	d0a6b317 	ldw	r2,-25908(gp)
  80f2dc:	1004c03a 	cmpne	r2,r2,zero
  80f2e0:	1000021e 	bne	r2,zero,80f2ec <alt_tick+0x5c>
    {
      alarm->rollover = 0;
  80f2e4:	e0bffe17 	ldw	r2,-8(fp)
  80f2e8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80f2ec:	e0bffe17 	ldw	r2,-8(fp)
  80f2f0:	10c00217 	ldw	r3,8(r2)
  80f2f4:	d0a6b317 	ldw	r2,-25908(gp)
  80f2f8:	10c01e36 	bltu	r2,r3,80f374 <alt_tick+0xe4>
  80f2fc:	e0bffe17 	ldw	r2,-8(fp)
  80f300:	10800403 	ldbu	r2,16(r2)
  80f304:	10803fcc 	andi	r2,r2,255
  80f308:	1004c03a 	cmpne	r2,r2,zero
  80f30c:	1000191e 	bne	r2,zero,80f374 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
  80f310:	e0bffe17 	ldw	r2,-8(fp)
  80f314:	10c00317 	ldw	r3,12(r2)
  80f318:	e0bffe17 	ldw	r2,-8(fp)
  80f31c:	11000517 	ldw	r4,20(r2)
  80f320:	183ee83a 	callr	r3
  80f324:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80f328:	e0bffd17 	ldw	r2,-12(fp)
  80f32c:	1004c03a 	cmpne	r2,r2,zero
  80f330:	1000031e 	bne	r2,zero,80f340 <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
  80f334:	e13ffe17 	ldw	r4,-8(fp)
  80f338:	080f1f80 	call	80f1f8 <alt_alarm_stop>
  80f33c:	00000d06 	br	80f374 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
  80f340:	e0bffe17 	ldw	r2,-8(fp)
  80f344:	10c00217 	ldw	r3,8(r2)
  80f348:	e0bffd17 	ldw	r2,-12(fp)
  80f34c:	1887883a 	add	r3,r3,r2
  80f350:	e0bffe17 	ldw	r2,-8(fp)
  80f354:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80f358:	e0bffe17 	ldw	r2,-8(fp)
  80f35c:	10c00217 	ldw	r3,8(r2)
  80f360:	d0a6b317 	ldw	r2,-25908(gp)
  80f364:	1880032e 	bgeu	r3,r2,80f374 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
  80f368:	e0fffe17 	ldw	r3,-8(fp)
  80f36c:	00800044 	movi	r2,1
  80f370:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
  80f374:	e0bfff17 	ldw	r2,-4(fp)
  80f378:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f37c:	d0e00e04 	addi	r3,gp,-32712
  80f380:	e0bffe17 	ldw	r2,-8(fp)
  80f384:	10ffcc1e 	bne	r2,r3,80f2b8 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
  80f388:	e037883a 	mov	sp,fp
  80f38c:	dfc00117 	ldw	ra,4(sp)
  80f390:	df000017 	ldw	fp,0(sp)
  80f394:	dec00204 	addi	sp,sp,8
  80f398:	f800283a 	ret

0080f39c <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
  80f39c:	deffff04 	addi	sp,sp,-4
  80f3a0:	df000015 	stw	fp,0(sp)
  80f3a4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  80f3a8:	000170fa 	wrctl	ienable,zero
}
  80f3ac:	e037883a 	mov	sp,fp
  80f3b0:	df000017 	ldw	fp,0(sp)
  80f3b4:	dec00104 	addi	sp,sp,4
  80f3b8:	f800283a 	ret

0080f3bc <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80f3bc:	defff904 	addi	sp,sp,-28
  80f3c0:	dfc00615 	stw	ra,24(sp)
  80f3c4:	df000515 	stw	fp,20(sp)
  80f3c8:	df000504 	addi	fp,sp,20
  80f3cc:	e13ffd15 	stw	r4,-12(fp)
  80f3d0:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80f3d4:	e0bffe17 	ldw	r2,-8(fp)
  80f3d8:	10800017 	ldw	r2,0(r2)
  80f3dc:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80f3e0:	e13ffd17 	ldw	r4,-12(fp)
  80f3e4:	0804a300 	call	804a30 <strlen>
  80f3e8:	10800044 	addi	r2,r2,1
  80f3ec:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f3f0:	00000d06 	br	80f428 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80f3f4:	e0bffc17 	ldw	r2,-16(fp)
  80f3f8:	11000217 	ldw	r4,8(r2)
  80f3fc:	e1bffb17 	ldw	r6,-20(fp)
  80f400:	e17ffd17 	ldw	r5,-12(fp)
  80f404:	080f71c0 	call	80f71c <memcmp>
  80f408:	1004c03a 	cmpne	r2,r2,zero
  80f40c:	1000031e 	bne	r2,zero,80f41c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80f410:	e0bffc17 	ldw	r2,-16(fp)
  80f414:	e0bfff15 	stw	r2,-4(fp)
  80f418:	00000706 	br	80f438 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80f41c:	e0bffc17 	ldw	r2,-16(fp)
  80f420:	10800017 	ldw	r2,0(r2)
  80f424:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f428:	e0fffe17 	ldw	r3,-8(fp)
  80f42c:	e0bffc17 	ldw	r2,-16(fp)
  80f430:	10fff01e 	bne	r2,r3,80f3f4 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  80f434:	e03fff15 	stw	zero,-4(fp)
  80f438:	e0bfff17 	ldw	r2,-4(fp)
}
  80f43c:	e037883a 	mov	sp,fp
  80f440:	dfc00117 	ldw	ra,4(sp)
  80f444:	df000017 	ldw	fp,0(sp)
  80f448:	dec00204 	addi	sp,sp,8
  80f44c:	f800283a 	ret

0080f450 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80f450:	defffa04 	addi	sp,sp,-24
  80f454:	dfc00515 	stw	ra,20(sp)
  80f458:	df000415 	stw	fp,16(sp)
  80f45c:	df000404 	addi	fp,sp,16
  80f460:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80f464:	00802074 	movhi	r2,129
  80f468:	1086a504 	addi	r2,r2,6804
  80f46c:	10800017 	ldw	r2,0(r2)
  80f470:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f474:	00003306 	br	80f544 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
  80f478:	e0bffd17 	ldw	r2,-12(fp)
  80f47c:	11000217 	ldw	r4,8(r2)
  80f480:	0804a300 	call	804a30 <strlen>
  80f484:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
  80f488:	e0bffd17 	ldw	r2,-12(fp)
  80f48c:	10c00217 	ldw	r3,8(r2)
  80f490:	e0bffc17 	ldw	r2,-16(fp)
  80f494:	1885883a 	add	r2,r3,r2
  80f498:	10bfffc4 	addi	r2,r2,-1
  80f49c:	10800003 	ldbu	r2,0(r2)
  80f4a0:	10803fcc 	andi	r2,r2,255
  80f4a4:	1080201c 	xori	r2,r2,128
  80f4a8:	10bfe004 	addi	r2,r2,-128
  80f4ac:	10800bd8 	cmpnei	r2,r2,47
  80f4b0:	1000031e 	bne	r2,zero,80f4c0 <alt_find_file+0x70>
    {
      len -= 1;
  80f4b4:	e0bffc17 	ldw	r2,-16(fp)
  80f4b8:	10bfffc4 	addi	r2,r2,-1
  80f4bc:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80f4c0:	e0bffc17 	ldw	r2,-16(fp)
  80f4c4:	1007883a 	mov	r3,r2
  80f4c8:	e0bffe17 	ldw	r2,-8(fp)
  80f4cc:	1885883a 	add	r2,r3,r2
  80f4d0:	10800003 	ldbu	r2,0(r2)
  80f4d4:	10803fcc 	andi	r2,r2,255
  80f4d8:	1080201c 	xori	r2,r2,128
  80f4dc:	10bfe004 	addi	r2,r2,-128
  80f4e0:	10800be0 	cmpeqi	r2,r2,47
  80f4e4:	10000a1e 	bne	r2,zero,80f510 <alt_find_file+0xc0>
  80f4e8:	e0bffc17 	ldw	r2,-16(fp)
  80f4ec:	1007883a 	mov	r3,r2
  80f4f0:	e0bffe17 	ldw	r2,-8(fp)
  80f4f4:	1885883a 	add	r2,r3,r2
  80f4f8:	10800003 	ldbu	r2,0(r2)
  80f4fc:	10803fcc 	andi	r2,r2,255
  80f500:	1080201c 	xori	r2,r2,128
  80f504:	10bfe004 	addi	r2,r2,-128
  80f508:	1004c03a 	cmpne	r2,r2,zero
  80f50c:	10000a1e 	bne	r2,zero,80f538 <alt_find_file+0xe8>
  80f510:	e0bffd17 	ldw	r2,-12(fp)
  80f514:	11000217 	ldw	r4,8(r2)
  80f518:	e1bffc17 	ldw	r6,-16(fp)
  80f51c:	e17ffe17 	ldw	r5,-8(fp)
  80f520:	080f71c0 	call	80f71c <memcmp>
  80f524:	1004c03a 	cmpne	r2,r2,zero
  80f528:	1000031e 	bne	r2,zero,80f538 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  80f52c:	e0bffd17 	ldw	r2,-12(fp)
  80f530:	e0bfff15 	stw	r2,-4(fp)
  80f534:	00000806 	br	80f558 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
  80f538:	e0bffd17 	ldw	r2,-12(fp)
  80f53c:	10800017 	ldw	r2,0(r2)
  80f540:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f544:	00c02074 	movhi	r3,129
  80f548:	18c6a504 	addi	r3,r3,6804
  80f54c:	e0bffd17 	ldw	r2,-12(fp)
  80f550:	10ffc91e 	bne	r2,r3,80f478 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  80f554:	e03fff15 	stw	zero,-4(fp)
  80f558:	e0bfff17 	ldw	r2,-4(fp)
}
  80f55c:	e037883a 	mov	sp,fp
  80f560:	dfc00117 	ldw	ra,4(sp)
  80f564:	df000017 	ldw	fp,0(sp)
  80f568:	dec00204 	addi	sp,sp,8
  80f56c:	f800283a 	ret

0080f570 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  80f570:	defffa04 	addi	sp,sp,-24
  80f574:	dfc00515 	stw	ra,20(sp)
  80f578:	df000415 	stw	fp,16(sp)
  80f57c:	dc000315 	stw	r16,12(sp)
  80f580:	df000304 	addi	fp,sp,12
  80f584:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  80f588:	00bffa04 	movi	r2,-24
  80f58c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80f590:	e03ffe15 	stw	zero,-8(fp)
  80f594:	00002006 	br	80f618 <alt_get_fd+0xa8>
  {
    if (!alt_fd_list[i].dev)
  80f598:	e13ffe17 	ldw	r4,-8(fp)
  80f59c:	04002074 	movhi	r16,129
  80f5a0:	84022704 	addi	r16,r16,2204
  80f5a4:	01400304 	movi	r5,12
  80f5a8:	0803fc00 	call	803fc0 <__mulsi3>
  80f5ac:	1405883a 	add	r2,r2,r16
  80f5b0:	10800017 	ldw	r2,0(r2)
  80f5b4:	1004c03a 	cmpne	r2,r2,zero
  80f5b8:	1000141e 	bne	r2,zero,80f60c <alt_get_fd+0x9c>
    {
      alt_fd_list[i].dev = dev;
  80f5bc:	e13ffe17 	ldw	r4,-8(fp)
  80f5c0:	04002074 	movhi	r16,129
  80f5c4:	84022704 	addi	r16,r16,2204
  80f5c8:	01400304 	movi	r5,12
  80f5cc:	0803fc00 	call	803fc0 <__mulsi3>
  80f5d0:	1407883a 	add	r3,r2,r16
  80f5d4:	e0bfff17 	ldw	r2,-4(fp)
  80f5d8:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
  80f5dc:	00802074 	movhi	r2,129
  80f5e0:	1086a904 	addi	r2,r2,6820
  80f5e4:	10c00017 	ldw	r3,0(r2)
  80f5e8:	e0bffe17 	ldw	r2,-8(fp)
  80f5ec:	1880040e 	bge	r3,r2,80f600 <alt_get_fd+0x90>
      {
        alt_max_fd = i;
  80f5f0:	00c02074 	movhi	r3,129
  80f5f4:	18c6a904 	addi	r3,r3,6820
  80f5f8:	e0bffe17 	ldw	r2,-8(fp)
  80f5fc:	18800015 	stw	r2,0(r3)
      }
      rc = i;
  80f600:	e0bffe17 	ldw	r2,-8(fp)
  80f604:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
  80f608:	00000606 	br	80f624 <alt_get_fd+0xb4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80f60c:	e0bffe17 	ldw	r2,-8(fp)
  80f610:	10800044 	addi	r2,r2,1
  80f614:	e0bffe15 	stw	r2,-8(fp)
  80f618:	e0bffe17 	ldw	r2,-8(fp)
  80f61c:	10800810 	cmplti	r2,r2,32
  80f620:	103fdd1e 	bne	r2,zero,80f598 <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  80f624:	e0bffd17 	ldw	r2,-12(fp)
}
  80f628:	e037883a 	mov	sp,fp
  80f62c:	dfc00217 	ldw	ra,8(sp)
  80f630:	df000117 	ldw	fp,4(sp)
  80f634:	dc000017 	ldw	r16,0(sp)
  80f638:	dec00304 	addi	sp,sp,12
  80f63c:	f800283a 	ret

0080f640 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  80f640:	defffb04 	addi	sp,sp,-20
  80f644:	df000415 	stw	fp,16(sp)
  80f648:	df000404 	addi	fp,sp,16
  80f64c:	e13ffe15 	stw	r4,-8(fp)
  80f650:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  80f654:	e0bfff17 	ldw	r2,-4(fp)
  80f658:	10900070 	cmpltui	r2,r2,16385
  80f65c:	1000021e 	bne	r2,zero,80f668 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  80f660:	00900004 	movi	r2,16384
  80f664:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  80f668:	e0fffe17 	ldw	r3,-8(fp)
  80f66c:	e0bfff17 	ldw	r2,-4(fp)
  80f670:	1885883a 	add	r2,r3,r2
  80f674:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80f678:	e0bffe17 	ldw	r2,-8(fp)
  80f67c:	e0bffd15 	stw	r2,-12(fp)
  80f680:	00000506 	br	80f698 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  80f684:	e0bffd17 	ldw	r2,-12(fp)
  80f688:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80f68c:	e0bffd17 	ldw	r2,-12(fp)
  80f690:	10800804 	addi	r2,r2,32
  80f694:	e0bffd15 	stw	r2,-12(fp)
  80f698:	e0fffd17 	ldw	r3,-12(fp)
  80f69c:	e0bffc17 	ldw	r2,-16(fp)
  80f6a0:	18bff836 	bltu	r3,r2,80f684 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  80f6a4:	e0bffe17 	ldw	r2,-8(fp)
  80f6a8:	108007cc 	andi	r2,r2,31
  80f6ac:	1005003a 	cmpeq	r2,r2,zero
  80f6b0:	1000021e 	bne	r2,zero,80f6bc <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  80f6b4:	e0bffd17 	ldw	r2,-12(fp)
  80f6b8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  80f6bc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  80f6c0:	e037883a 	mov	sp,fp
  80f6c4:	df000017 	ldw	fp,0(sp)
  80f6c8:	dec00104 	addi	sp,sp,4
  80f6cc:	f800283a 	ret

0080f6d0 <atexit>:
  80f6d0:	200b883a 	mov	r5,r4
  80f6d4:	000d883a 	mov	r6,zero
  80f6d8:	0009883a 	mov	r4,zero
  80f6dc:	000f883a 	mov	r7,zero
  80f6e0:	080f7901 	jmpi	80f790 <__register_exitproc>

0080f6e4 <exit>:
  80f6e4:	defffe04 	addi	sp,sp,-8
  80f6e8:	000b883a 	mov	r5,zero
  80f6ec:	dc000015 	stw	r16,0(sp)
  80f6f0:	dfc00115 	stw	ra,4(sp)
  80f6f4:	2021883a 	mov	r16,r4
  80f6f8:	080f8c80 	call	80f8c8 <__call_exitprocs>
  80f6fc:	00802074 	movhi	r2,129
  80f700:	1086a004 	addi	r2,r2,6784
  80f704:	11000017 	ldw	r4,0(r2)
  80f708:	20800f17 	ldw	r2,60(r4)
  80f70c:	10000126 	beq	r2,zero,80f714 <exit+0x30>
  80f710:	103ee83a 	callr	r2
  80f714:	8009883a 	mov	r4,r16
  80f718:	080fab80 	call	80fab8 <_exit>

0080f71c <memcmp>:
  80f71c:	00c000c4 	movi	r3,3
  80f720:	1980032e 	bgeu	r3,r6,80f730 <memcmp+0x14>
  80f724:	2144b03a 	or	r2,r4,r5
  80f728:	10c4703a 	and	r2,r2,r3
  80f72c:	10000f26 	beq	r2,zero,80f76c <memcmp+0x50>
  80f730:	31ffffc4 	addi	r7,r6,-1
  80f734:	3000061e 	bne	r6,zero,80f750 <memcmp+0x34>
  80f738:	00000a06 	br	80f764 <memcmp+0x48>
  80f73c:	39ffffc4 	addi	r7,r7,-1
  80f740:	00bfffc4 	movi	r2,-1
  80f744:	21000044 	addi	r4,r4,1
  80f748:	29400044 	addi	r5,r5,1
  80f74c:	38800526 	beq	r7,r2,80f764 <memcmp+0x48>
  80f750:	20c00003 	ldbu	r3,0(r4)
  80f754:	28800003 	ldbu	r2,0(r5)
  80f758:	18bff826 	beq	r3,r2,80f73c <memcmp+0x20>
  80f75c:	1885c83a 	sub	r2,r3,r2
  80f760:	f800283a 	ret
  80f764:	0005883a 	mov	r2,zero
  80f768:	f800283a 	ret
  80f76c:	180f883a 	mov	r7,r3
  80f770:	20c00017 	ldw	r3,0(r4)
  80f774:	28800017 	ldw	r2,0(r5)
  80f778:	18bfed1e 	bne	r3,r2,80f730 <memcmp+0x14>
  80f77c:	31bfff04 	addi	r6,r6,-4
  80f780:	21000104 	addi	r4,r4,4
  80f784:	29400104 	addi	r5,r5,4
  80f788:	39bff936 	bltu	r7,r6,80f770 <memcmp+0x54>
  80f78c:	003fe806 	br	80f730 <memcmp+0x14>

0080f790 <__register_exitproc>:
  80f790:	defffa04 	addi	sp,sp,-24
  80f794:	00802074 	movhi	r2,129
  80f798:	1086a004 	addi	r2,r2,6784
  80f79c:	dc000015 	stw	r16,0(sp)
  80f7a0:	14000017 	ldw	r16,0(r2)
  80f7a4:	dd000415 	stw	r20,16(sp)
  80f7a8:	2829883a 	mov	r20,r5
  80f7ac:	81405217 	ldw	r5,328(r16)
  80f7b0:	dcc00315 	stw	r19,12(sp)
  80f7b4:	dc800215 	stw	r18,8(sp)
  80f7b8:	dc400115 	stw	r17,4(sp)
  80f7bc:	dfc00515 	stw	ra,20(sp)
  80f7c0:	2023883a 	mov	r17,r4
  80f7c4:	3027883a 	mov	r19,r6
  80f7c8:	3825883a 	mov	r18,r7
  80f7cc:	28002526 	beq	r5,zero,80f864 <__register_exitproc+0xd4>
  80f7d0:	29000117 	ldw	r4,4(r5)
  80f7d4:	008007c4 	movi	r2,31
  80f7d8:	11002716 	blt	r2,r4,80f878 <__register_exitproc+0xe8>
  80f7dc:	8800101e 	bne	r17,zero,80f820 <__register_exitproc+0x90>
  80f7e0:	2105883a 	add	r2,r4,r4
  80f7e4:	1085883a 	add	r2,r2,r2
  80f7e8:	20c00044 	addi	r3,r4,1
  80f7ec:	1145883a 	add	r2,r2,r5
  80f7f0:	0009883a 	mov	r4,zero
  80f7f4:	15000215 	stw	r20,8(r2)
  80f7f8:	28c00115 	stw	r3,4(r5)
  80f7fc:	2005883a 	mov	r2,r4
  80f800:	dfc00517 	ldw	ra,20(sp)
  80f804:	dd000417 	ldw	r20,16(sp)
  80f808:	dcc00317 	ldw	r19,12(sp)
  80f80c:	dc800217 	ldw	r18,8(sp)
  80f810:	dc400117 	ldw	r17,4(sp)
  80f814:	dc000017 	ldw	r16,0(sp)
  80f818:	dec00604 	addi	sp,sp,24
  80f81c:	f800283a 	ret
  80f820:	29802204 	addi	r6,r5,136
  80f824:	00800044 	movi	r2,1
  80f828:	110e983a 	sll	r7,r2,r4
  80f82c:	30c04017 	ldw	r3,256(r6)
  80f830:	2105883a 	add	r2,r4,r4
  80f834:	1085883a 	add	r2,r2,r2
  80f838:	1185883a 	add	r2,r2,r6
  80f83c:	19c6b03a 	or	r3,r3,r7
  80f840:	14802015 	stw	r18,128(r2)
  80f844:	14c00015 	stw	r19,0(r2)
  80f848:	00800084 	movi	r2,2
  80f84c:	30c04015 	stw	r3,256(r6)
  80f850:	88bfe31e 	bne	r17,r2,80f7e0 <__register_exitproc+0x50>
  80f854:	30804117 	ldw	r2,260(r6)
  80f858:	11c4b03a 	or	r2,r2,r7
  80f85c:	30804115 	stw	r2,260(r6)
  80f860:	003fdf06 	br	80f7e0 <__register_exitproc+0x50>
  80f864:	00802074 	movhi	r2,129
  80f868:	108d9d04 	addi	r2,r2,13940
  80f86c:	100b883a 	mov	r5,r2
  80f870:	80805215 	stw	r2,328(r16)
  80f874:	003fd606 	br	80f7d0 <__register_exitproc+0x40>
  80f878:	00800034 	movhi	r2,0
  80f87c:	10800004 	addi	r2,r2,0
  80f880:	1000021e 	bne	r2,zero,80f88c <__register_exitproc+0xfc>
  80f884:	013fffc4 	movi	r4,-1
  80f888:	003fdc06 	br	80f7fc <__register_exitproc+0x6c>
  80f88c:	01006404 	movi	r4,400
  80f890:	103ee83a 	callr	r2
  80f894:	1007883a 	mov	r3,r2
  80f898:	103ffa26 	beq	r2,zero,80f884 <__register_exitproc+0xf4>
  80f89c:	80805217 	ldw	r2,328(r16)
  80f8a0:	180b883a 	mov	r5,r3
  80f8a4:	18000115 	stw	zero,4(r3)
  80f8a8:	18800015 	stw	r2,0(r3)
  80f8ac:	80c05215 	stw	r3,328(r16)
  80f8b0:	18006215 	stw	zero,392(r3)
  80f8b4:	18006315 	stw	zero,396(r3)
  80f8b8:	0009883a 	mov	r4,zero
  80f8bc:	883fc826 	beq	r17,zero,80f7e0 <__register_exitproc+0x50>
  80f8c0:	003fd706 	br	80f820 <__register_exitproc+0x90>

0080f8c4 <register_fini>:
  80f8c4:	f800283a 	ret

0080f8c8 <__call_exitprocs>:
  80f8c8:	00802074 	movhi	r2,129
  80f8cc:	1086a004 	addi	r2,r2,6784
  80f8d0:	10800017 	ldw	r2,0(r2)
  80f8d4:	defff304 	addi	sp,sp,-52
  80f8d8:	df000b15 	stw	fp,44(sp)
  80f8dc:	d8800115 	stw	r2,4(sp)
  80f8e0:	00800034 	movhi	r2,0
  80f8e4:	10800004 	addi	r2,r2,0
  80f8e8:	1005003a 	cmpeq	r2,r2,zero
  80f8ec:	d8800215 	stw	r2,8(sp)
  80f8f0:	d8800117 	ldw	r2,4(sp)
  80f8f4:	dd400815 	stw	r21,32(sp)
  80f8f8:	dd000715 	stw	r20,28(sp)
  80f8fc:	10805204 	addi	r2,r2,328
  80f900:	dfc00c15 	stw	ra,48(sp)
  80f904:	ddc00a15 	stw	r23,40(sp)
  80f908:	dd800915 	stw	r22,36(sp)
  80f90c:	dcc00615 	stw	r19,24(sp)
  80f910:	dc800515 	stw	r18,20(sp)
  80f914:	dc400415 	stw	r17,16(sp)
  80f918:	dc000315 	stw	r16,12(sp)
  80f91c:	282b883a 	mov	r21,r5
  80f920:	2039883a 	mov	fp,r4
  80f924:	d8800015 	stw	r2,0(sp)
  80f928:	2829003a 	cmpeq	r20,r5,zero
  80f92c:	d8800117 	ldw	r2,4(sp)
  80f930:	14405217 	ldw	r17,328(r2)
  80f934:	88001026 	beq	r17,zero,80f978 <__call_exitprocs+0xb0>
  80f938:	ddc00017 	ldw	r23,0(sp)
  80f93c:	88800117 	ldw	r2,4(r17)
  80f940:	8c802204 	addi	r18,r17,136
  80f944:	143fffc4 	addi	r16,r2,-1
  80f948:	80000916 	blt	r16,zero,80f970 <__call_exitprocs+0xa8>
  80f94c:	05bfffc4 	movi	r22,-1
  80f950:	a000151e 	bne	r20,zero,80f9a8 <__call_exitprocs+0xe0>
  80f954:	8409883a 	add	r4,r16,r16
  80f958:	2105883a 	add	r2,r4,r4
  80f95c:	1485883a 	add	r2,r2,r18
  80f960:	10c02017 	ldw	r3,128(r2)
  80f964:	a8c01126 	beq	r21,r3,80f9ac <__call_exitprocs+0xe4>
  80f968:	843fffc4 	addi	r16,r16,-1
  80f96c:	85bff81e 	bne	r16,r22,80f950 <__call_exitprocs+0x88>
  80f970:	d8800217 	ldw	r2,8(sp)
  80f974:	10003126 	beq	r2,zero,80fa3c <__call_exitprocs+0x174>
  80f978:	dfc00c17 	ldw	ra,48(sp)
  80f97c:	df000b17 	ldw	fp,44(sp)
  80f980:	ddc00a17 	ldw	r23,40(sp)
  80f984:	dd800917 	ldw	r22,36(sp)
  80f988:	dd400817 	ldw	r21,32(sp)
  80f98c:	dd000717 	ldw	r20,28(sp)
  80f990:	dcc00617 	ldw	r19,24(sp)
  80f994:	dc800517 	ldw	r18,20(sp)
  80f998:	dc400417 	ldw	r17,16(sp)
  80f99c:	dc000317 	ldw	r16,12(sp)
  80f9a0:	dec00d04 	addi	sp,sp,52
  80f9a4:	f800283a 	ret
  80f9a8:	8409883a 	add	r4,r16,r16
  80f9ac:	88c00117 	ldw	r3,4(r17)
  80f9b0:	2105883a 	add	r2,r4,r4
  80f9b4:	1445883a 	add	r2,r2,r17
  80f9b8:	18ffffc4 	addi	r3,r3,-1
  80f9bc:	11800217 	ldw	r6,8(r2)
  80f9c0:	1c001526 	beq	r3,r16,80fa18 <__call_exitprocs+0x150>
  80f9c4:	10000215 	stw	zero,8(r2)
  80f9c8:	303fe726 	beq	r6,zero,80f968 <__call_exitprocs+0xa0>
  80f9cc:	00c00044 	movi	r3,1
  80f9d0:	1c06983a 	sll	r3,r3,r16
  80f9d4:	90804017 	ldw	r2,256(r18)
  80f9d8:	8cc00117 	ldw	r19,4(r17)
  80f9dc:	1884703a 	and	r2,r3,r2
  80f9e0:	10001426 	beq	r2,zero,80fa34 <__call_exitprocs+0x16c>
  80f9e4:	90804117 	ldw	r2,260(r18)
  80f9e8:	1884703a 	and	r2,r3,r2
  80f9ec:	10000c1e 	bne	r2,zero,80fa20 <__call_exitprocs+0x158>
  80f9f0:	2105883a 	add	r2,r4,r4
  80f9f4:	1485883a 	add	r2,r2,r18
  80f9f8:	11400017 	ldw	r5,0(r2)
  80f9fc:	e009883a 	mov	r4,fp
  80fa00:	303ee83a 	callr	r6
  80fa04:	88800117 	ldw	r2,4(r17)
  80fa08:	98bfc81e 	bne	r19,r2,80f92c <__call_exitprocs+0x64>
  80fa0c:	b8800017 	ldw	r2,0(r23)
  80fa10:	147fd526 	beq	r2,r17,80f968 <__call_exitprocs+0xa0>
  80fa14:	003fc506 	br	80f92c <__call_exitprocs+0x64>
  80fa18:	8c000115 	stw	r16,4(r17)
  80fa1c:	003fea06 	br	80f9c8 <__call_exitprocs+0x100>
  80fa20:	2105883a 	add	r2,r4,r4
  80fa24:	1485883a 	add	r2,r2,r18
  80fa28:	11000017 	ldw	r4,0(r2)
  80fa2c:	303ee83a 	callr	r6
  80fa30:	003ff406 	br	80fa04 <__call_exitprocs+0x13c>
  80fa34:	303ee83a 	callr	r6
  80fa38:	003ff206 	br	80fa04 <__call_exitprocs+0x13c>
  80fa3c:	88800117 	ldw	r2,4(r17)
  80fa40:	1000081e 	bne	r2,zero,80fa64 <__call_exitprocs+0x19c>
  80fa44:	89000017 	ldw	r4,0(r17)
  80fa48:	20000726 	beq	r4,zero,80fa68 <__call_exitprocs+0x1a0>
  80fa4c:	b9000015 	stw	r4,0(r23)
  80fa50:	8809883a 	mov	r4,r17
  80fa54:	00000000 	call	0 <__reset-0x800000>
  80fa58:	bc400017 	ldw	r17,0(r23)
  80fa5c:	883fb71e 	bne	r17,zero,80f93c <__call_exitprocs+0x74>
  80fa60:	003fc506 	br	80f978 <__call_exitprocs+0xb0>
  80fa64:	89000017 	ldw	r4,0(r17)
  80fa68:	882f883a 	mov	r23,r17
  80fa6c:	2023883a 	mov	r17,r4
  80fa70:	883fb21e 	bne	r17,zero,80f93c <__call_exitprocs+0x74>
  80fa74:	003fc006 	br	80f978 <__call_exitprocs+0xb0>

0080fa78 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  80fa78:	defffd04 	addi	sp,sp,-12
  80fa7c:	df000215 	stw	fp,8(sp)
  80fa80:	df000204 	addi	fp,sp,8
  80fa84:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
  80fa88:	e0bfff17 	ldw	r2,-4(fp)
  80fa8c:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80fa90:	e0bffe17 	ldw	r2,-8(fp)
  80fa94:	1005003a 	cmpeq	r2,r2,zero
  80fa98:	1000021e 	bne	r2,zero,80faa4 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
  80fa9c:	002af070 	cmpltui	zero,zero,43969
  80faa0:	00000106 	br	80faa8 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
  80faa4:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
  80faa8:	e037883a 	mov	sp,fp
  80faac:	df000017 	ldw	fp,0(sp)
  80fab0:	dec00104 	addi	sp,sp,4
  80fab4:	f800283a 	ret

0080fab8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80fab8:	defffd04 	addi	sp,sp,-12
  80fabc:	dfc00215 	stw	ra,8(sp)
  80fac0:	df000115 	stw	fp,4(sp)
  80fac4:	df000104 	addi	fp,sp,4
  80fac8:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
  80facc:	e13fff17 	ldw	r4,-4(fp)
  80fad0:	080fa780 	call	80fa78 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80fad4:	003fff06 	br	80fad4 <_exit+0x1c>
  80fad8:	0080f8c4 	movi	r2,995
