
hello_world_custom_instr.elf:     file format elf32-littlenios2
hello_world_custom_instr.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x008001c0

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x0000ffb0 memsz 0x0000ffb0 flags r-x
    LOAD off    0x00010fd0 vaddr 0x0080ffd0 paddr 0x00811abc align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x000135a8 vaddr 0x008135a8 paddr 0x008135a8 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fafc  008001c0  008001c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000314  0080fcbc  0080fcbc  00010cbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0080ffd0  00811abc  00010fd0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  008135a8  008135a8  000135a8  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00813704  00813704  00012abc  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012abc  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ef0  00000000  00000000  00012ae0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000236d8  00000000  00000000  000139d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000091cd  00000000  00000000  000370a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b52c  00000000  00000000  00040275  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000020e8  00000000  00000000  0004b7a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003560  00000000  00000000  0004d88c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017ec0  00000000  00000000  00050dec  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  00068cac  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001938  00000000  00000000  00068cd0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006d70a  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0006d70d  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006d710  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006d711  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006d712  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006d716  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006d71a  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0006d71e  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0006d727  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0006d730  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0006d739  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000009  00000000  00000000  0006d74b  2**0
                  CONTENTS, READONLY
 29 .jdi          00004fae  00000000  00000000  0006d754  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003614f  00000000  00000000  00072702  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
008001c0 l    d  .text	00000000 .text
0080fcbc l    d  .rodata	00000000 .rodata
0080ffd0 l    d  .rwdata	00000000 .rwdata
008135a8 l    d  .bss	00000000 .bss
00813704 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../hello_world_custom_instr_bsp//obj/HAL/src/crt0.o
008001f8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00800094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0080fe1e l     O .rodata	00000010 zeroes.4404
008029d8 l     F .text	000000bc __sbprintf
0080fe2e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00802be8 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00804740 l     F .text	00000008 __fp_unlock
00804754 l     F .text	0000019c __sinit.part.1
008048f0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0080ffd0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00810414 l     O .rwdata	00000020 lc_ctype_charset
008103f4 l     O .rwdata	00000020 lc_message_charset
00810434 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0080fe60 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00807dc4 l     F .text	000000fc __sprint_r.part.0
0080ff84 l     O .rodata	00000010 zeroes.4349
00809400 l     F .text	000000bc __sbprintf
0080ff94 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080d3e0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080d508 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080d534 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080d63c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080d738 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080d824 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080da14 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00811aac l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0080dc9c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080ddec l     F .text	00000038 alt_dev_reg
00810a1c l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080e0ec l     F .text	0000020c altera_avalon_jtag_uart_irq
0080e2f8 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080e938 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080eb9c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080f054 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080f1b4 l     F .text	00000050 alt_get_errno
0080f204 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00807408 g     F .text	00000074 _mprec_log10
008074f4 g     F .text	0000008c __any_on
008099b4 g     F .text	00000054 _isatty_r
0080fe6c g     O .rodata	00000028 __mprec_tinytens
0080d950 g     F .text	0000007c alt_main
00800574 g     F .text	000000c0 _puts_r
00813604 g     O .bss	00000100 alt_irq
00809a08 g     F .text	00000060 _lseek_r
00811abc g       *ABS*	00000000 __flash_rwdata_start
0080be20 g     F .text	00000088 .hidden __eqdf2
00813704 g       *ABS*	00000000 __alt_heap_start
00800538 g     F .text	0000003c printf
00809c20 g     F .text	0000009c _wcrtomb_r
00807c84 g     F .text	0000005c __sseek
00804aa0 g     F .text	00000010 __sinit
00809ac8 g     F .text	00000140 __swbuf_r
00805574 g     F .text	0000007c _setlocale_r
008048f8 g     F .text	00000078 __sfmoreglue
0080d9f0 g     F .text	00000024 __malloc_unlock
00806244 g     F .text	0000015c memmove
00804a88 g     F .text	00000018 _cleanup
008064c8 g     F .text	000000a8 _Balloc
0080bea8 g     F .text	000000dc .hidden __gtdf2
00800000 g     F .entry	0000001c __reset
00800020 g       *ABS*	00000000 __flash_exceptions_start
00809958 g     F .text	0000005c _fstat_r
008135c0 g     O .bss	00000004 errno
00807c00 g     F .text	00000008 __seofread
008135c8 g     O .bss	00000004 alt_argv
00819a7c g       *ABS*	00000000 _gp
0081089c g     O .rwdata	00000180 alt_fd_list
0080f620 g     F .text	00000090 alt_find_dev
008060fc g     F .text	00000148 memcpy
00804748 g     F .text	0000000c _cleanup_r
0080d25c g     F .text	000000dc .hidden __floatsidf
0080f138 g     F .text	0000007c alt_io_redirect
0080bf84 g     F .text	000000f4 .hidden __ltdf2
0080fcbc g       *ABS*	00000000 __DTOR_END__
00800634 g     F .text	00000014 puts
00807ae4 g     F .text	00000074 __fpclassifyd
00807364 g     F .text	000000a4 __ratio
008093e4 g     F .text	0000001c __vfiprintf_internal
0080e4f8 g     F .text	0000021c altera_avalon_jtag_uart_read
00800508 g     F .text	00000030 _printf_r
0080aac0 g     F .text	00000064 .hidden __udivsi3
0080d68c g     F .text	000000ac isatty
0080febc g     O .rodata	000000c8 __mprec_tens
008055f0 g     F .text	0000000c __locale_charset
0080f898 g     F .text	00000090 alt_icache_flush
008135bc g     O .bss	00000004 __malloc_top_pad
00811a84 g     O .rwdata	00000004 __mb_cur_max
00805620 g     F .text	0000000c _localeconv_r
008068fc g     F .text	0000003c __i2b
00804f24 g     F .text	000004c8 __sfvwrite_r
00807b58 g     F .text	00000054 _sbrk_r
00809a68 g     F .text	00000060 _read_r
00811aa4 g     O .rwdata	00000004 alt_max_fd
0080964c g     F .text	000000f0 _fclose_r
00804710 g     F .text	00000030 fflush
008135b8 g     O .bss	00000004 __malloc_max_sbrked_mem
00800394 g     F .text	00000110 .hidden __extendsfdf2
0080aba4 g     F .text	000008ac .hidden __adddf3
0080710c g     F .text	0000010c __b2d
0080a404 g     F .text	000005c4 .hidden __umoddi3
0080d874 g     F .text	000000dc lseek
00811a7c g     O .rwdata	00000004 _global_impure_ptr
00807580 g     F .text	00000564 _realloc_r
00813704 g       *ABS*	00000000 __bss_end
0080ef64 g     F .text	000000f0 alt_iic_isr_register
0080f4f4 g     F .text	00000108 alt_tick
00809e08 g     F .text	000005fc .hidden __udivdi3
008098b4 g     F .text	00000024 _fputwc_r
0080fe94 g     O .rodata	00000028 __mprec_bigtens
008066e0 g     F .text	00000104 __s2b
0080d338 g     F .text	000000a8 .hidden __floatunsidf
00806e4c g     F .text	00000060 __mcmp
00804ac0 g     F .text	00000018 __fp_lock_all
0080ef18 g     F .text	0000004c alt_ic_irq_enabled
0080f458 g     F .text	0000009c alt_alarm_stop
008135d0 g     O .bss	00000004 alt_irq_active
008000ec g     F .exceptions	000000d4 alt_irq_handler
00810874 g     O .rwdata	00000028 alt_dev_null
0080eb7c g     F .text	00000020 alt_dcache_flush_all
008067e4 g     F .text	00000068 __hi0bits
0080d1dc g     F .text	00000080 .hidden __fixdfsi
00811abc g       *ABS*	00000000 __ram_rwdata_end
00811a9c g     O .rwdata	00000008 alt_dev_list
0080dcec g     F .text	00000100 write
0080ffd0 g       *ABS*	00000000 __ram_rodata_end
0080d584 g     F .text	000000b8 fstat
0080bf84 g     F .text	000000f4 .hidden __ledf2
00806bc4 g     F .text	00000140 __pow5mult
00807ed8 g     F .text	0000150c ___vfiprintf_internal_r
008135b0 g     O .bss	00000004 __nlocale_changed
0080ab24 g     F .text	00000058 .hidden __umodsi3
00813704 g       *ABS*	00000000 end
0080e024 g     F .text	000000c8 altera_avalon_jtag_uart_init
0080fcbc g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080e9b0 g     F .text	0000008c alt_avalon_timer_sc_init
008004a4 g     F .text	00000064 .hidden __clzsi2
0080e714 g     F .text	00000224 altera_avalon_jtag_uart_write
00804ab0 g     F .text	00000004 __sfp_lock_acquire
00806018 g     F .text	000000e4 memchr
008006e0 g     F .text	000022dc ___vfprintf_internal_r
00804c14 g     F .text	00000310 _free_r
008055fc g     F .text	00000010 __locale_mb_cur_max
0080fb08 g     F .text	00000180 __call_exitprocs
008135ac g     O .bss	00000004 __mlocale_changed
00811a88 g     O .rwdata	00000004 __malloc_sbrk_base
008001c0 g     F .text	0000003c _start
008135d4 g     O .bss	00000004 _alt_tick_rate
00806d04 g     F .text	00000148 __lshift
008135d8 g     O .bss	00000004 _alt_nticks
0080da64 g     F .text	00000104 read
0080de5c g     F .text	00000064 alt_sys_init
00800270 g     F .text	00000124 .hidden __floatsisf
0080f9f0 g     F .text	00000118 __register_exitproc
00806938 g     F .text	0000028c __multiply
0080e3a0 g     F .text	00000068 altera_avalon_jtag_uart_close
0080ab7c g     F .text	00000028 .hidden __mulsi3
0080ffd0 g       *ABS*	00000000 __ram_rwdata_start
0080fcbc g       *ABS*	00000000 __ram_rodata_start
008135dc g     O .bss	00000028 __malloc_current_mallinfo
00807218 g     F .text	0000014c __d2b
0080dec0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0080f7c4 g     F .text	000000d4 alt_get_fd
0080951c g     F .text	00000054 _close_r
0080f974 g     F .text	0000007c memcmp
0080df80 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00813704 g       *ABS*	00000000 __alt_stack_base
0080dfd0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00802a94 g     F .text	00000154 __swsetup_r
0080b450 g     F .text	000009d0 .hidden __divdf3
00804970 g     F .text	00000118 __sfp
0080747c g     F .text	00000078 __copybits
0081046c g     O .rwdata	00000408 __malloc_av_
00804abc g     F .text	00000004 __sinit_lock_release
0080c078 g     F .text	00000868 .hidden __muldf3
00807bac g     F .text	00000054 __sread
0080f6b0 g     F .text	00000114 alt_find_file
0080ebec g     F .text	000000a4 alt_dev_llist_insert
0080d9cc g     F .text	00000024 __malloc_lock
0080dbec g     F .text	000000b0 sbrk
008046b4 g     F .text	0000005c _fflush_r
00809570 g     F .text	000000dc _calloc_r
008135a8 g       *ABS*	00000000 __bss_start
008063a0 g     F .text	00000128 memset
008001fc g     F .text	00000074 main
008135cc g     O .bss	00000004 alt_envp
008135b4 g     O .bss	00000004 __malloc_max_total_mem
0080df20 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00809c08 g     F .text	00000018 __swbuf
00807ce0 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080973c g     F .text	00000014 fclose
00802e10 g     F .text	00001688 _dtoa_r
0080580c g     F .text	0000080c _malloc_r
00809d7c g     F .text	00000030 __ascii_wctomb
00811aa8 g     O .rwdata	00000004 alt_errno
008053ec g     F .text	000000c4 _fwalk
0080a9c8 g     F .text	00000084 .hidden __divsi3
00804af0 g     F .text	00000124 _malloc_trim_r
0080fcbc g       *ABS*	00000000 __CTOR_END__
00807ce8 g     F .text	000000dc strcmp
0080fcbc g       *ABS*	00000000 __flash_rodata_start
0080fcbc g       *ABS*	00000000 __DTOR_LIST__
0080be20 g     F .text	00000088 .hidden __nedf2
0080de24 g     F .text	00000038 alt_irq_init
0080db68 g     F .text	00000084 alt_release_fd
0080fcd5 g     O .rodata	00000100 .hidden __clz_tab
008135a8 g     O .bss	00000004 _PathLocale
0080f928 g     F .text	00000014 atexit
008094bc g     F .text	00000060 _write_r
0080562c g     F .text	00000018 setlocale
00811a80 g     O .rwdata	00000004 _impure_ptr
008135c4 g     O .bss	00000004 alt_argc
00804498 g     F .text	0000021c __sflush_r
0080ecf0 g     F .text	00000060 _do_dtors
00805618 g     F .text	00000008 __locale_cjk_lang
00800020 g       .exceptions	00000000 alt_irq_entry
008070a8 g     F .text	00000064 __ulp
00804ad8 g     F .text	00000018 __fp_unlock_all
00811a94 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00805644 g     F .text	0000000c localeconv
0080ed84 g     F .text	00000050 alt_ic_isr_register
00811abc g       *ABS*	00000000 _edata
00813704 g       *ABS*	00000000 _end
00809750 g     F .text	00000164 __fputwc
008001c0 g       *ABS*	00000000 __ram_exceptions_end
0080e408 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0080ee74 g     F .text	000000a4 alt_ic_irq_disable
00807c08 g     F .text	0000007c __swrite
00811a8c g     O .rwdata	00000004 __malloc_trim_threshold
0080f5fc g     F .text	00000024 altera_nios2_qsys_irq_init
0080560c g     F .text	0000000c __locale_msgcharset
0080f93c g     F .text	00000038 exit
008054b0 g     F .text	000000c4 _fwalk_reent
00806eac g     F .text	000001fc __mdiff
0080aa4c g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00804ab4 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
0080fc88 g     F .text	00000034 _exit
0080ea3c g     F .text	00000140 alt_alarm_start
00805650 g     F .text	000001bc __smakebuf_r
00800648 g     F .text	00000098 strlen
0080f2f8 g     F .text	00000160 open
0080bea8 g     F .text	000000dc .hidden __gedf2
00811a90 g     O .rwdata	00000004 __wctomb
00807ec0 g     F .text	00000018 __sprint_r
0080ed50 g     F .text	00000034 alt_icache_flush_all
00811ab0 g     O .rwdata	00000004 alt_priority_mask
0080edd4 g     F .text	000000a0 alt_ic_irq_enable
008029bc g     F .text	0000001c __vfprintf_internal
00809dac g     F .text	0000005c _wctomb_r
0080c8e0 g     F .text	000008fc .hidden __subdf3
0080684c g     F .text	000000b0 __lo0bits
00811ab4 g     O .rwdata	00000008 alt_alarm_list
0080ec90 g     F .text	00000060 _do_ctors
00809cbc g     F .text	000000c0 wcrtomb
0080d430 g     F .text	000000d8 close
0080d7a0 g     F .text	00000084 alt_load
008098d8 g     F .text	00000080 fputwc
00804ab8 g     F .text	00000004 __sinit_lock_acquire
00806598 g     F .text	00000148 __multadd
00806570 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00900014 	movui	r2,16384
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08407014 	ori	at,at,448
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__reset-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000ec0 	call	8000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000306 	br	800098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)

00800094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  800094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  800098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  80009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000e8:	ef80083a 	eret

008000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000ec:	defff904 	addi	sp,sp,-28
  8000f0:	dfc00615 	stw	ra,24(sp)
  8000f4:	df000515 	stw	fp,20(sp)
  8000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  8000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800100:	0005313a 	rdctl	r2,ipending
  800104:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800114:	00800044 	movi	r2,1
  800118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80011c:	e0fffb17 	ldw	r3,-20(fp)
  800120:	e0bffc17 	ldw	r2,-16(fp)
  800124:	1884703a 	and	r2,r3,r2
  800128:	10001426 	beq	r2,zero,80017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80012c:	00802074 	movhi	r2,129
  800130:	108d8104 	addi	r2,r2,13828
  800134:	e0fffd17 	ldw	r3,-12(fp)
  800138:	180690fa 	slli	r3,r3,3
  80013c:	10c5883a 	add	r2,r2,r3
  800140:	10c00017 	ldw	r3,0(r2)
  800144:	00802074 	movhi	r2,129
  800148:	108d8104 	addi	r2,r2,13828
  80014c:	e13ffd17 	ldw	r4,-12(fp)
  800150:	200890fa 	slli	r4,r4,3
  800154:	1105883a 	add	r2,r2,r4
  800158:	10800104 	addi	r2,r2,4
  80015c:	10800017 	ldw	r2,0(r2)
  800160:	1009883a 	mov	r4,r2
  800164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80016c:	0005313a 	rdctl	r2,ipending
  800170:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800174:	e0bfff17 	ldw	r2,-4(fp)
  800178:	00000706 	br	800198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80017c:	e0bffc17 	ldw	r2,-16(fp)
  800180:	1085883a 	add	r2,r2,r2
  800184:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800188:	e0bffd17 	ldw	r2,-12(fp)
  80018c:	10800044 	addi	r2,r2,1
  800190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  800194:	003fe106 	br	80011c <__alt_data_end+0xff80011c>

    active = alt_irq_pending ();
  800198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  80019c:	e0bffb17 	ldw	r2,-20(fp)
  8001a0:	103fdb1e 	bne	r2,zero,800110 <__alt_data_end+0xff800110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001a4:	0001883a 	nop
}
  8001a8:	0001883a 	nop
  8001ac:	e037883a 	mov	sp,fp
  8001b0:	dfc00117 	ldw	ra,4(sp)
  8001b4:	df000017 	ldw	fp,0(sp)
  8001b8:	dec00204 	addi	sp,sp,8
  8001bc:	f800283a 	ret

Disassembly of section .text:

008001c0 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  8001c0:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  8001c4:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  8001c8:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  8001cc:	d6a69f14 	ori	gp,gp,39548
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  8001d0:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  8001d4:	108d6a14 	ori	r2,r2,13736

    movhi r3, %hi(__bss_end)
  8001d8:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  8001dc:	18cdc114 	ori	r3,r3,14084

    beq r2, r3, 1f
  8001e0:	10c00326 	beq	r2,r3,8001f0 <_start+0x30>

0:
    stw zero, (r2)
  8001e4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  8001e8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  8001ec:	10fffd36 	bltu	r2,r3,8001e4 <__alt_data_end+0xff8001e4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  8001f0:	080d7a00 	call	80d7a0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  8001f4:	080d9500 	call	80d950 <alt_main>

008001f8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  8001f8:	003fff06 	br	8001f8 <__alt_data_end+0xff8001f8>

008001fc <main>:

#include <stdio.h>
#include <system.h>

int main()
{
  8001fc:	defffd04 	addi	sp,sp,-12
  800200:	dfc00215 	stw	ra,8(sp)
  800204:	df000115 	stw	fp,4(sp)
  800208:	df000104 	addi	fp,sp,4
  printf("Hello from Nios II!\n");
  80020c:	01002074 	movhi	r4,129
  800210:	213f2f04 	addi	r4,r4,-836
  800214:	08006340 	call	800634 <puts>

  float x = ALT_CI_AHFP_MULT_0(1.0f,2.0f);
  800218:	00800044 	movi	r2,1
  80021c:	00c00084 	movi	r3,2
  800220:	10c5c032 	custom	0,r2,r2,r3
  800224:	1009883a 	mov	r4,r2
  800228:	08002700 	call	800270 <__floatsisf>
  80022c:	1007883a 	mov	r3,r2
  800230:	e0ffff15 	stw	r3,-4(fp)

  printf("%.6f",x);
  800234:	e13fff17 	ldw	r4,-4(fp)
  800238:	08003940 	call	800394 <__extendsfdf2>
  80023c:	100d883a 	mov	r6,r2
  800240:	180f883a 	mov	r7,r3
  800244:	300b883a 	mov	r5,r6
  800248:	380d883a 	mov	r6,r7
  80024c:	01002074 	movhi	r4,129
  800250:	213f3404 	addi	r4,r4,-816
  800254:	08005380 	call	800538 <printf>

  return 0;
  800258:	0005883a 	mov	r2,zero
}
  80025c:	e037883a 	mov	sp,fp
  800260:	dfc00117 	ldw	ra,4(sp)
  800264:	df000017 	ldw	fp,0(sp)
  800268:	dec00204 	addi	sp,sp,8
  80026c:	f800283a 	ret

00800270 <__floatsisf>:
  800270:	defffd04 	addi	sp,sp,-12
  800274:	dfc00215 	stw	ra,8(sp)
  800278:	dc400115 	stw	r17,4(sp)
  80027c:	dc000015 	stw	r16,0(sp)
  800280:	20003526 	beq	r4,zero,800358 <__floatsisf+0xe8>
  800284:	2021883a 	mov	r16,r4
  800288:	2022d7fa 	srli	r17,r4,31
  80028c:	20003616 	blt	r4,zero,800368 <__floatsisf+0xf8>
  800290:	8009883a 	mov	r4,r16
  800294:	08004a40 	call	8004a4 <__clzsi2>
  800298:	00c02784 	movi	r3,158
  80029c:	1887c83a 	sub	r3,r3,r2
  8002a0:	01002584 	movi	r4,150
  8002a4:	20c01416 	blt	r4,r3,8002f8 <__floatsisf+0x88>
  8002a8:	20c9c83a 	sub	r4,r4,r3
  8002ac:	8120983a 	sll	r16,r16,r4
  8002b0:	00802034 	movhi	r2,128
  8002b4:	10bfffc4 	addi	r2,r2,-1
  8002b8:	8809883a 	mov	r4,r17
  8002bc:	80a0703a 	and	r16,r16,r2
  8002c0:	18803fcc 	andi	r2,r3,255
  8002c4:	100695fa 	slli	r3,r2,23
  8002c8:	20803fcc 	andi	r2,r4,255
  8002cc:	100897fa 	slli	r4,r2,31
  8002d0:	00802034 	movhi	r2,128
  8002d4:	10bfffc4 	addi	r2,r2,-1
  8002d8:	8084703a 	and	r2,r16,r2
  8002dc:	10c4b03a 	or	r2,r2,r3
  8002e0:	1104b03a 	or	r2,r2,r4
  8002e4:	dfc00217 	ldw	ra,8(sp)
  8002e8:	dc400117 	ldw	r17,4(sp)
  8002ec:	dc000017 	ldw	r16,0(sp)
  8002f0:	dec00304 	addi	sp,sp,12
  8002f4:	f800283a 	ret
  8002f8:	01002644 	movi	r4,153
  8002fc:	20c01c16 	blt	r4,r3,800370 <__floatsisf+0x100>
  800300:	20c9c83a 	sub	r4,r4,r3
  800304:	8120983a 	sll	r16,r16,r4
  800308:	013f0034 	movhi	r4,64512
  80030c:	213fffc4 	addi	r4,r4,-1
  800310:	814001cc 	andi	r5,r16,7
  800314:	8108703a 	and	r4,r16,r4
  800318:	28000426 	beq	r5,zero,80032c <__floatsisf+0xbc>
  80031c:	840003cc 	andi	r16,r16,15
  800320:	01400104 	movi	r5,4
  800324:	81400126 	beq	r16,r5,80032c <__floatsisf+0xbc>
  800328:	2149883a 	add	r4,r4,r5
  80032c:	2141002c 	andhi	r5,r4,1024
  800330:	28000526 	beq	r5,zero,800348 <__floatsisf+0xd8>
  800334:	00c027c4 	movi	r3,159
  800338:	1887c83a 	sub	r3,r3,r2
  80033c:	00bf0034 	movhi	r2,64512
  800340:	10bfffc4 	addi	r2,r2,-1
  800344:	2088703a 	and	r4,r4,r2
  800348:	202091ba 	slli	r16,r4,6
  80034c:	8809883a 	mov	r4,r17
  800350:	8020d27a 	srli	r16,r16,9
  800354:	003fda06 	br	8002c0 <__alt_data_end+0xff8002c0>
  800358:	0009883a 	mov	r4,zero
  80035c:	0007883a 	mov	r3,zero
  800360:	0021883a 	mov	r16,zero
  800364:	003fd606 	br	8002c0 <__alt_data_end+0xff8002c0>
  800368:	0121c83a 	sub	r16,zero,r4
  80036c:	003fc806 	br	800290 <__alt_data_end+0xff800290>
  800370:	01002e44 	movi	r4,185
  800374:	20c9c83a 	sub	r4,r4,r3
  800378:	01400144 	movi	r5,5
  80037c:	8108983a 	sll	r4,r16,r4
  800380:	288bc83a 	sub	r5,r5,r2
  800384:	8160d83a 	srl	r16,r16,r5
  800388:	2008c03a 	cmpne	r4,r4,zero
  80038c:	8120b03a 	or	r16,r16,r4
  800390:	003fdd06 	br	800308 <__alt_data_end+0xff800308>

00800394 <__extendsfdf2>:
  800394:	200ad5fa 	srli	r5,r4,23
  800398:	defffd04 	addi	sp,sp,-12
  80039c:	dc400115 	stw	r17,4(sp)
  8003a0:	29403fcc 	andi	r5,r5,255
  8003a4:	29800044 	addi	r6,r5,1
  8003a8:	04402034 	movhi	r17,128
  8003ac:	dc000015 	stw	r16,0(sp)
  8003b0:	8c7fffc4 	addi	r17,r17,-1
  8003b4:	dfc00215 	stw	ra,8(sp)
  8003b8:	31803fcc 	andi	r6,r6,255
  8003bc:	00800044 	movi	r2,1
  8003c0:	8922703a 	and	r17,r17,r4
  8003c4:	2020d7fa 	srli	r16,r4,31
  8003c8:	1180110e 	bge	r2,r6,800410 <__extendsfdf2+0x7c>
  8003cc:	880cd0fa 	srli	r6,r17,3
  8003d0:	8822977a 	slli	r17,r17,29
  8003d4:	2940e004 	addi	r5,r5,896
  8003d8:	2941ffcc 	andi	r5,r5,2047
  8003dc:	2804953a 	slli	r2,r5,20
  8003e0:	01400434 	movhi	r5,16
  8003e4:	800697fa 	slli	r3,r16,31
  8003e8:	297fffc4 	addi	r5,r5,-1
  8003ec:	314a703a 	and	r5,r6,r5
  8003f0:	288ab03a 	or	r5,r5,r2
  8003f4:	28c6b03a 	or	r3,r5,r3
  8003f8:	8805883a 	mov	r2,r17
  8003fc:	dfc00217 	ldw	ra,8(sp)
  800400:	dc400117 	ldw	r17,4(sp)
  800404:	dc000017 	ldw	r16,0(sp)
  800408:	dec00304 	addi	sp,sp,12
  80040c:	f800283a 	ret
  800410:	2800111e 	bne	r5,zero,800458 <__extendsfdf2+0xc4>
  800414:	88001c26 	beq	r17,zero,800488 <__extendsfdf2+0xf4>
  800418:	8809883a 	mov	r4,r17
  80041c:	08004a40 	call	8004a4 <__clzsi2>
  800420:	00c00284 	movi	r3,10
  800424:	18801b16 	blt	r3,r2,800494 <__extendsfdf2+0x100>
  800428:	018002c4 	movi	r6,11
  80042c:	308dc83a 	sub	r6,r6,r2
  800430:	11000544 	addi	r4,r2,21
  800434:	8986d83a 	srl	r3,r17,r6
  800438:	8922983a 	sll	r17,r17,r4
  80043c:	0180e244 	movi	r6,905
  800440:	01400434 	movhi	r5,16
  800444:	3085c83a 	sub	r2,r6,r2
  800448:	297fffc4 	addi	r5,r5,-1
  80044c:	194c703a 	and	r6,r3,r5
  800450:	1141ffcc 	andi	r5,r2,2047
  800454:	003fe006 	br	8003d8 <__alt_data_end+0xff8003d8>
  800458:	88000826 	beq	r17,zero,80047c <__extendsfdf2+0xe8>
  80045c:	880cd0fa 	srli	r6,r17,3
  800460:	00800434 	movhi	r2,16
  800464:	10bfffc4 	addi	r2,r2,-1
  800468:	31800234 	orhi	r6,r6,8
  80046c:	8822977a 	slli	r17,r17,29
  800470:	308c703a 	and	r6,r6,r2
  800474:	0141ffc4 	movi	r5,2047
  800478:	003fd706 	br	8003d8 <__alt_data_end+0xff8003d8>
  80047c:	0141ffc4 	movi	r5,2047
  800480:	000d883a 	mov	r6,zero
  800484:	003fd406 	br	8003d8 <__alt_data_end+0xff8003d8>
  800488:	000b883a 	mov	r5,zero
  80048c:	000d883a 	mov	r6,zero
  800490:	003fd106 	br	8003d8 <__alt_data_end+0xff8003d8>
  800494:	11bffd44 	addi	r6,r2,-11
  800498:	8986983a 	sll	r3,r17,r6
  80049c:	0023883a 	mov	r17,zero
  8004a0:	003fe606 	br	80043c <__alt_data_end+0xff80043c>

008004a4 <__clzsi2>:
  8004a4:	00bfffd4 	movui	r2,65535
  8004a8:	11000536 	bltu	r2,r4,8004c0 <__clzsi2+0x1c>
  8004ac:	00803fc4 	movi	r2,255
  8004b0:	11000f36 	bltu	r2,r4,8004f0 <__clzsi2+0x4c>
  8004b4:	00800804 	movi	r2,32
  8004b8:	0007883a 	mov	r3,zero
  8004bc:	00000506 	br	8004d4 <__clzsi2+0x30>
  8004c0:	00804034 	movhi	r2,256
  8004c4:	10bfffc4 	addi	r2,r2,-1
  8004c8:	11000c2e 	bgeu	r2,r4,8004fc <__clzsi2+0x58>
  8004cc:	00800204 	movi	r2,8
  8004d0:	00c00604 	movi	r3,24
  8004d4:	20c8d83a 	srl	r4,r4,r3
  8004d8:	00c02074 	movhi	r3,129
  8004dc:	18ff3544 	addi	r3,r3,-811
  8004e0:	1909883a 	add	r4,r3,r4
  8004e4:	20c00003 	ldbu	r3,0(r4)
  8004e8:	10c5c83a 	sub	r2,r2,r3
  8004ec:	f800283a 	ret
  8004f0:	00800604 	movi	r2,24
  8004f4:	00c00204 	movi	r3,8
  8004f8:	003ff606 	br	8004d4 <__alt_data_end+0xff8004d4>
  8004fc:	00800404 	movi	r2,16
  800500:	1007883a 	mov	r3,r2
  800504:	003ff306 	br	8004d4 <__alt_data_end+0xff8004d4>

00800508 <_printf_r>:
  800508:	defffd04 	addi	sp,sp,-12
  80050c:	2805883a 	mov	r2,r5
  800510:	dfc00015 	stw	ra,0(sp)
  800514:	d9800115 	stw	r6,4(sp)
  800518:	d9c00215 	stw	r7,8(sp)
  80051c:	21400217 	ldw	r5,8(r4)
  800520:	d9c00104 	addi	r7,sp,4
  800524:	100d883a 	mov	r6,r2
  800528:	08006e00 	call	8006e0 <___vfprintf_internal_r>
  80052c:	dfc00017 	ldw	ra,0(sp)
  800530:	dec00304 	addi	sp,sp,12
  800534:	f800283a 	ret

00800538 <printf>:
  800538:	defffc04 	addi	sp,sp,-16
  80053c:	dfc00015 	stw	ra,0(sp)
  800540:	d9400115 	stw	r5,4(sp)
  800544:	d9800215 	stw	r6,8(sp)
  800548:	d9c00315 	stw	r7,12(sp)
  80054c:	00802074 	movhi	r2,129
  800550:	1086a004 	addi	r2,r2,6784
  800554:	10800017 	ldw	r2,0(r2)
  800558:	200b883a 	mov	r5,r4
  80055c:	d9800104 	addi	r6,sp,4
  800560:	11000217 	ldw	r4,8(r2)
  800564:	08029bc0 	call	8029bc <__vfprintf_internal>
  800568:	dfc00017 	ldw	ra,0(sp)
  80056c:	dec00404 	addi	sp,sp,16
  800570:	f800283a 	ret

00800574 <_puts_r>:
  800574:	defff604 	addi	sp,sp,-40
  800578:	dc000715 	stw	r16,28(sp)
  80057c:	2021883a 	mov	r16,r4
  800580:	2809883a 	mov	r4,r5
  800584:	dc400815 	stw	r17,32(sp)
  800588:	dfc00915 	stw	ra,36(sp)
  80058c:	2823883a 	mov	r17,r5
  800590:	08006480 	call	800648 <strlen>
  800594:	10c00044 	addi	r3,r2,1
  800598:	d8800115 	stw	r2,4(sp)
  80059c:	00802074 	movhi	r2,129
  8005a0:	10bf7604 	addi	r2,r2,-552
  8005a4:	d8800215 	stw	r2,8(sp)
  8005a8:	00800044 	movi	r2,1
  8005ac:	d8800315 	stw	r2,12(sp)
  8005b0:	00800084 	movi	r2,2
  8005b4:	dc400015 	stw	r17,0(sp)
  8005b8:	d8c00615 	stw	r3,24(sp)
  8005bc:	dec00415 	stw	sp,16(sp)
  8005c0:	d8800515 	stw	r2,20(sp)
  8005c4:	80000226 	beq	r16,zero,8005d0 <_puts_r+0x5c>
  8005c8:	80800e17 	ldw	r2,56(r16)
  8005cc:	10001426 	beq	r2,zero,800620 <_puts_r+0xac>
  8005d0:	81400217 	ldw	r5,8(r16)
  8005d4:	2880030b 	ldhu	r2,12(r5)
  8005d8:	10c8000c 	andi	r3,r2,8192
  8005dc:	1800061e 	bne	r3,zero,8005f8 <_puts_r+0x84>
  8005e0:	29001917 	ldw	r4,100(r5)
  8005e4:	00f7ffc4 	movi	r3,-8193
  8005e8:	10880014 	ori	r2,r2,8192
  8005ec:	20c6703a 	and	r3,r4,r3
  8005f0:	2880030d 	sth	r2,12(r5)
  8005f4:	28c01915 	stw	r3,100(r5)
  8005f8:	d9800404 	addi	r6,sp,16
  8005fc:	8009883a 	mov	r4,r16
  800600:	0804f240 	call	804f24 <__sfvwrite_r>
  800604:	1000091e 	bne	r2,zero,80062c <_puts_r+0xb8>
  800608:	00800284 	movi	r2,10
  80060c:	dfc00917 	ldw	ra,36(sp)
  800610:	dc400817 	ldw	r17,32(sp)
  800614:	dc000717 	ldw	r16,28(sp)
  800618:	dec00a04 	addi	sp,sp,40
  80061c:	f800283a 	ret
  800620:	8009883a 	mov	r4,r16
  800624:	0804aa00 	call	804aa0 <__sinit>
  800628:	003fe906 	br	8005d0 <__alt_data_end+0xff8005d0>
  80062c:	00bfffc4 	movi	r2,-1
  800630:	003ff606 	br	80060c <__alt_data_end+0xff80060c>

00800634 <puts>:
  800634:	00802074 	movhi	r2,129
  800638:	1086a004 	addi	r2,r2,6784
  80063c:	200b883a 	mov	r5,r4
  800640:	11000017 	ldw	r4,0(r2)
  800644:	08005741 	jmpi	800574 <_puts_r>

00800648 <strlen>:
  800648:	208000cc 	andi	r2,r4,3
  80064c:	10002026 	beq	r2,zero,8006d0 <strlen+0x88>
  800650:	20800007 	ldb	r2,0(r4)
  800654:	10002026 	beq	r2,zero,8006d8 <strlen+0x90>
  800658:	2005883a 	mov	r2,r4
  80065c:	00000206 	br	800668 <strlen+0x20>
  800660:	10c00007 	ldb	r3,0(r2)
  800664:	18001826 	beq	r3,zero,8006c8 <strlen+0x80>
  800668:	10800044 	addi	r2,r2,1
  80066c:	10c000cc 	andi	r3,r2,3
  800670:	183ffb1e 	bne	r3,zero,800660 <__alt_data_end+0xff800660>
  800674:	10c00017 	ldw	r3,0(r2)
  800678:	01ffbff4 	movhi	r7,65279
  80067c:	39ffbfc4 	addi	r7,r7,-257
  800680:	00ca303a 	nor	r5,zero,r3
  800684:	01a02074 	movhi	r6,32897
  800688:	19c7883a 	add	r3,r3,r7
  80068c:	31a02004 	addi	r6,r6,-32640
  800690:	1946703a 	and	r3,r3,r5
  800694:	1986703a 	and	r3,r3,r6
  800698:	1800091e 	bne	r3,zero,8006c0 <strlen+0x78>
  80069c:	10800104 	addi	r2,r2,4
  8006a0:	10c00017 	ldw	r3,0(r2)
  8006a4:	19cb883a 	add	r5,r3,r7
  8006a8:	00c6303a 	nor	r3,zero,r3
  8006ac:	28c6703a 	and	r3,r5,r3
  8006b0:	1986703a 	and	r3,r3,r6
  8006b4:	183ff926 	beq	r3,zero,80069c <__alt_data_end+0xff80069c>
  8006b8:	00000106 	br	8006c0 <strlen+0x78>
  8006bc:	10800044 	addi	r2,r2,1
  8006c0:	10c00007 	ldb	r3,0(r2)
  8006c4:	183ffd1e 	bne	r3,zero,8006bc <__alt_data_end+0xff8006bc>
  8006c8:	1105c83a 	sub	r2,r2,r4
  8006cc:	f800283a 	ret
  8006d0:	2005883a 	mov	r2,r4
  8006d4:	003fe706 	br	800674 <__alt_data_end+0xff800674>
  8006d8:	0005883a 	mov	r2,zero
  8006dc:	f800283a 	ret

008006e0 <___vfprintf_internal_r>:
  8006e0:	deffb804 	addi	sp,sp,-288
  8006e4:	dfc04715 	stw	ra,284(sp)
  8006e8:	ddc04515 	stw	r23,276(sp)
  8006ec:	dd404315 	stw	r21,268(sp)
  8006f0:	d9002d15 	stw	r4,180(sp)
  8006f4:	282f883a 	mov	r23,r5
  8006f8:	302b883a 	mov	r21,r6
  8006fc:	d9c02e15 	stw	r7,184(sp)
  800700:	df004615 	stw	fp,280(sp)
  800704:	dd804415 	stw	r22,272(sp)
  800708:	dd004215 	stw	r20,264(sp)
  80070c:	dcc04115 	stw	r19,260(sp)
  800710:	dc804015 	stw	r18,256(sp)
  800714:	dc403f15 	stw	r17,252(sp)
  800718:	dc003e15 	stw	r16,248(sp)
  80071c:	08056200 	call	805620 <_localeconv_r>
  800720:	10800017 	ldw	r2,0(r2)
  800724:	1009883a 	mov	r4,r2
  800728:	d8803415 	stw	r2,208(sp)
  80072c:	08006480 	call	800648 <strlen>
  800730:	d8803715 	stw	r2,220(sp)
  800734:	d8802d17 	ldw	r2,180(sp)
  800738:	10000226 	beq	r2,zero,800744 <___vfprintf_internal_r+0x64>
  80073c:	10800e17 	ldw	r2,56(r2)
  800740:	1000fb26 	beq	r2,zero,800b30 <___vfprintf_internal_r+0x450>
  800744:	b880030b 	ldhu	r2,12(r23)
  800748:	10c8000c 	andi	r3,r2,8192
  80074c:	1800061e 	bne	r3,zero,800768 <___vfprintf_internal_r+0x88>
  800750:	b9001917 	ldw	r4,100(r23)
  800754:	00f7ffc4 	movi	r3,-8193
  800758:	10880014 	ori	r2,r2,8192
  80075c:	20c6703a 	and	r3,r4,r3
  800760:	b880030d 	sth	r2,12(r23)
  800764:	b8c01915 	stw	r3,100(r23)
  800768:	10c0020c 	andi	r3,r2,8
  80076c:	1800c326 	beq	r3,zero,800a7c <___vfprintf_internal_r+0x39c>
  800770:	b8c00417 	ldw	r3,16(r23)
  800774:	1800c126 	beq	r3,zero,800a7c <___vfprintf_internal_r+0x39c>
  800778:	1080068c 	andi	r2,r2,26
  80077c:	00c00284 	movi	r3,10
  800780:	10c0c626 	beq	r2,r3,800a9c <___vfprintf_internal_r+0x3bc>
  800784:	d8c00404 	addi	r3,sp,16
  800788:	05002074 	movhi	r20,129
  80078c:	d9001e04 	addi	r4,sp,120
  800790:	a53f8784 	addi	r20,r20,-482
  800794:	d8c01e15 	stw	r3,120(sp)
  800798:	d8002015 	stw	zero,128(sp)
  80079c:	d8001f15 	stw	zero,124(sp)
  8007a0:	d8003315 	stw	zero,204(sp)
  8007a4:	d8003615 	stw	zero,216(sp)
  8007a8:	d8003815 	stw	zero,224(sp)
  8007ac:	1811883a 	mov	r8,r3
  8007b0:	d8003915 	stw	zero,228(sp)
  8007b4:	d8003a15 	stw	zero,232(sp)
  8007b8:	d8002f15 	stw	zero,188(sp)
  8007bc:	d9002815 	stw	r4,160(sp)
  8007c0:	a8800007 	ldb	r2,0(r21)
  8007c4:	10028b26 	beq	r2,zero,8011f4 <___vfprintf_internal_r+0xb14>
  8007c8:	00c00944 	movi	r3,37
  8007cc:	a823883a 	mov	r17,r21
  8007d0:	10c0021e 	bne	r2,r3,8007dc <___vfprintf_internal_r+0xfc>
  8007d4:	00001406 	br	800828 <___vfprintf_internal_r+0x148>
  8007d8:	10c00326 	beq	r2,r3,8007e8 <___vfprintf_internal_r+0x108>
  8007dc:	8c400044 	addi	r17,r17,1
  8007e0:	88800007 	ldb	r2,0(r17)
  8007e4:	103ffc1e 	bne	r2,zero,8007d8 <__alt_data_end+0xff8007d8>
  8007e8:	8d61c83a 	sub	r16,r17,r21
  8007ec:	80000e26 	beq	r16,zero,800828 <___vfprintf_internal_r+0x148>
  8007f0:	d8c02017 	ldw	r3,128(sp)
  8007f4:	d8801f17 	ldw	r2,124(sp)
  8007f8:	45400015 	stw	r21,0(r8)
  8007fc:	1c07883a 	add	r3,r3,r16
  800800:	10800044 	addi	r2,r2,1
  800804:	d8c02015 	stw	r3,128(sp)
  800808:	44000115 	stw	r16,4(r8)
  80080c:	d8801f15 	stw	r2,124(sp)
  800810:	00c001c4 	movi	r3,7
  800814:	1880a916 	blt	r3,r2,800abc <___vfprintf_internal_r+0x3dc>
  800818:	42000204 	addi	r8,r8,8
  80081c:	d9402f17 	ldw	r5,188(sp)
  800820:	2c0b883a 	add	r5,r5,r16
  800824:	d9402f15 	stw	r5,188(sp)
  800828:	88800007 	ldb	r2,0(r17)
  80082c:	1000aa26 	beq	r2,zero,800ad8 <___vfprintf_internal_r+0x3f8>
  800830:	8d400044 	addi	r21,r17,1
  800834:	8c400047 	ldb	r17,1(r17)
  800838:	0021883a 	mov	r16,zero
  80083c:	00bfffc4 	movi	r2,-1
  800840:	0025883a 	mov	r18,zero
  800844:	dc002905 	stb	r16,164(sp)
  800848:	d8002785 	stb	zero,158(sp)
  80084c:	d8002b05 	stb	zero,172(sp)
  800850:	d8802a15 	stw	r2,168(sp)
  800854:	d8003115 	stw	zero,196(sp)
  800858:	04c01604 	movi	r19,88
  80085c:	05800244 	movi	r22,9
  800860:	9021883a 	mov	r16,r18
  800864:	4039883a 	mov	fp,r8
  800868:	ad400044 	addi	r21,r21,1
  80086c:	88bff804 	addi	r2,r17,-32
  800870:	98833236 	bltu	r19,r2,80153c <___vfprintf_internal_r+0xe5c>
  800874:	100490ba 	slli	r2,r2,2
  800878:	00c02034 	movhi	r3,128
  80087c:	18c22304 	addi	r3,r3,2188
  800880:	10c5883a 	add	r2,r2,r3
  800884:	10800017 	ldw	r2,0(r2)
  800888:	1000683a 	jmp	r2
  80088c:	00801434 	movhi	r2,80
  800890:	0080153c 	xorhi	r2,zero,84
  800894:	0080153c 	xorhi	r2,zero,84
  800898:	00801454 	movui	r2,81
  80089c:	0080153c 	xorhi	r2,zero,84
  8008a0:	0080153c 	xorhi	r2,zero,84
  8008a4:	0080153c 	xorhi	r2,zero,84
  8008a8:	0080153c 	xorhi	r2,zero,84
  8008ac:	0080153c 	xorhi	r2,zero,84
  8008b0:	0080153c 	xorhi	r2,zero,84
  8008b4:	00800b3c 	xorhi	r2,zero,44
  8008b8:	00801344 	movi	r2,77
  8008bc:	0080153c 	xorhi	r2,zero,84
  8008c0:	00800a00 	call	800a0 <__reset-0x77ff60>
  8008c4:	00800b60 	cmpeqi	r2,zero,45
  8008c8:	0080153c 	xorhi	r2,zero,84
  8008cc:	00800bb0 	cmpltui	r2,zero,46
  8008d0:	00800bbc 	xorhi	r2,zero,46
  8008d4:	00800bbc 	xorhi	r2,zero,46
  8008d8:	00800bbc 	xorhi	r2,zero,46
  8008dc:	00800bbc 	xorhi	r2,zero,46
  8008e0:	00800bbc 	xorhi	r2,zero,46
  8008e4:	00800bbc 	xorhi	r2,zero,46
  8008e8:	00800bbc 	xorhi	r2,zero,46
  8008ec:	00800bbc 	xorhi	r2,zero,46
  8008f0:	00800bbc 	xorhi	r2,zero,46
  8008f4:	0080153c 	xorhi	r2,zero,84
  8008f8:	0080153c 	xorhi	r2,zero,84
  8008fc:	0080153c 	xorhi	r2,zero,84
  800900:	0080153c 	xorhi	r2,zero,84
  800904:	0080153c 	xorhi	r2,zero,84
  800908:	0080153c 	xorhi	r2,zero,84
  80090c:	0080153c 	xorhi	r2,zero,84
  800910:	0080153c 	xorhi	r2,zero,84
  800914:	0080153c 	xorhi	r2,zero,84
  800918:	0080153c 	xorhi	r2,zero,84
  80091c:	00800bf8 	rdprs	r2,zero,47
  800920:	00800cc0 	call	800cc <__reset-0x77ff34>
  800924:	0080153c 	xorhi	r2,zero,84
  800928:	00800cc0 	call	800cc <__reset-0x77ff34>
  80092c:	0080153c 	xorhi	r2,zero,84
  800930:	0080153c 	xorhi	r2,zero,84
  800934:	0080153c 	xorhi	r2,zero,84
  800938:	0080153c 	xorhi	r2,zero,84
  80093c:	00800d6c 	andhi	r2,zero,53
  800940:	0080153c 	xorhi	r2,zero,84
  800944:	0080153c 	xorhi	r2,zero,84
  800948:	00800d78 	rdprs	r2,zero,53
  80094c:	0080153c 	xorhi	r2,zero,84
  800950:	0080153c 	xorhi	r2,zero,84
  800954:	0080153c 	xorhi	r2,zero,84
  800958:	0080153c 	xorhi	r2,zero,84
  80095c:	0080153c 	xorhi	r2,zero,84
  800960:	008011fc 	xorhi	r2,zero,71
  800964:	0080153c 	xorhi	r2,zero,84
  800968:	0080153c 	xorhi	r2,zero,84
  80096c:	00801268 	cmpgeui	r2,zero,73
  800970:	0080153c 	xorhi	r2,zero,84
  800974:	0080153c 	xorhi	r2,zero,84
  800978:	0080153c 	xorhi	r2,zero,84
  80097c:	0080153c 	xorhi	r2,zero,84
  800980:	0080153c 	xorhi	r2,zero,84
  800984:	0080153c 	xorhi	r2,zero,84
  800988:	0080153c 	xorhi	r2,zero,84
  80098c:	0080153c 	xorhi	r2,zero,84
  800990:	0080153c 	xorhi	r2,zero,84
  800994:	0080153c 	xorhi	r2,zero,84
  800998:	008014e0 	cmpeqi	r2,zero,83
  80099c:	00801460 	cmpeqi	r2,zero,81
  8009a0:	00800cc0 	call	800cc <__reset-0x77ff34>
  8009a4:	00800cc0 	call	800cc <__reset-0x77ff34>
  8009a8:	00800cc0 	call	800cc <__reset-0x77ff34>
  8009ac:	00801480 	call	80148 <__reset-0x77feb8>
  8009b0:	00801460 	cmpeqi	r2,zero,81
  8009b4:	0080153c 	xorhi	r2,zero,84
  8009b8:	0080153c 	xorhi	r2,zero,84
  8009bc:	0080148c 	andi	r2,zero,82
  8009c0:	0080153c 	xorhi	r2,zero,84
  8009c4:	008014a0 	cmpeqi	r2,zero,82
  8009c8:	00801324 	muli	r2,zero,76
  8009cc:	00800a0c 	andi	r2,zero,40
  8009d0:	0080135c 	xori	r2,zero,77
  8009d4:	0080153c 	xorhi	r2,zero,84
  8009d8:	00801368 	cmpgeui	r2,zero,77
  8009dc:	0080153c 	xorhi	r2,zero,84
  8009e0:	008013cc 	andi	r2,zero,79
  8009e4:	0080153c 	xorhi	r2,zero,84
  8009e8:	0080153c 	xorhi	r2,zero,84
  8009ec:	008013ec 	andhi	r2,zero,79
  8009f0:	d8c03117 	ldw	r3,196(sp)
  8009f4:	d8802e15 	stw	r2,184(sp)
  8009f8:	00c7c83a 	sub	r3,zero,r3
  8009fc:	d8c03115 	stw	r3,196(sp)
  800a00:	84000114 	ori	r16,r16,4
  800a04:	ac400007 	ldb	r17,0(r21)
  800a08:	003f9706 	br	800868 <__alt_data_end+0xff800868>
  800a0c:	00800c04 	movi	r2,48
  800a10:	d8802705 	stb	r2,156(sp)
  800a14:	00801e04 	movi	r2,120
  800a18:	d8802745 	stb	r2,157(sp)
  800a1c:	d9002a17 	ldw	r4,168(sp)
  800a20:	d8802e17 	ldw	r2,184(sp)
  800a24:	d8002785 	stb	zero,158(sp)
  800a28:	e011883a 	mov	r8,fp
  800a2c:	10c00104 	addi	r3,r2,4
  800a30:	14c00017 	ldw	r19,0(r2)
  800a34:	002d883a 	mov	r22,zero
  800a38:	80800094 	ori	r2,r16,2
  800a3c:	2002ca16 	blt	r4,zero,801568 <___vfprintf_internal_r+0xe88>
  800a40:	00bfdfc4 	movi	r2,-129
  800a44:	80a4703a 	and	r18,r16,r2
  800a48:	d8c02e15 	stw	r3,184(sp)
  800a4c:	94800094 	ori	r18,r18,2
  800a50:	9802b41e 	bne	r19,zero,801524 <___vfprintf_internal_r+0xe44>
  800a54:	01402074 	movhi	r5,129
  800a58:	297f8004 	addi	r5,r5,-512
  800a5c:	d9403915 	stw	r5,228(sp)
  800a60:	04401e04 	movi	r17,120
  800a64:	d8802a17 	ldw	r2,168(sp)
  800a68:	0039883a 	mov	fp,zero
  800a6c:	1001fa26 	beq	r2,zero,801258 <___vfprintf_internal_r+0xb78>
  800a70:	0027883a 	mov	r19,zero
  800a74:	002d883a 	mov	r22,zero
  800a78:	00021906 	br	8012e0 <___vfprintf_internal_r+0xc00>
  800a7c:	d9002d17 	ldw	r4,180(sp)
  800a80:	b80b883a 	mov	r5,r23
  800a84:	0802a940 	call	802a94 <__swsetup_r>
  800a88:	1005dc1e 	bne	r2,zero,8021fc <___vfprintf_internal_r+0x1b1c>
  800a8c:	b880030b 	ldhu	r2,12(r23)
  800a90:	00c00284 	movi	r3,10
  800a94:	1080068c 	andi	r2,r2,26
  800a98:	10ff3a1e 	bne	r2,r3,800784 <__alt_data_end+0xff800784>
  800a9c:	b880038f 	ldh	r2,14(r23)
  800aa0:	103f3816 	blt	r2,zero,800784 <__alt_data_end+0xff800784>
  800aa4:	d9c02e17 	ldw	r7,184(sp)
  800aa8:	d9002d17 	ldw	r4,180(sp)
  800aac:	a80d883a 	mov	r6,r21
  800ab0:	b80b883a 	mov	r5,r23
  800ab4:	08029d80 	call	8029d8 <__sbprintf>
  800ab8:	00001106 	br	800b00 <___vfprintf_internal_r+0x420>
  800abc:	d9002d17 	ldw	r4,180(sp)
  800ac0:	d9801e04 	addi	r6,sp,120
  800ac4:	b80b883a 	mov	r5,r23
  800ac8:	0807ec00 	call	807ec0 <__sprint_r>
  800acc:	1000081e 	bne	r2,zero,800af0 <___vfprintf_internal_r+0x410>
  800ad0:	da000404 	addi	r8,sp,16
  800ad4:	003f5106 	br	80081c <__alt_data_end+0xff80081c>
  800ad8:	d8802017 	ldw	r2,128(sp)
  800adc:	10000426 	beq	r2,zero,800af0 <___vfprintf_internal_r+0x410>
  800ae0:	d9002d17 	ldw	r4,180(sp)
  800ae4:	d9801e04 	addi	r6,sp,120
  800ae8:	b80b883a 	mov	r5,r23
  800aec:	0807ec00 	call	807ec0 <__sprint_r>
  800af0:	b880030b 	ldhu	r2,12(r23)
  800af4:	1080100c 	andi	r2,r2,64
  800af8:	1005c01e 	bne	r2,zero,8021fc <___vfprintf_internal_r+0x1b1c>
  800afc:	d8802f17 	ldw	r2,188(sp)
  800b00:	dfc04717 	ldw	ra,284(sp)
  800b04:	df004617 	ldw	fp,280(sp)
  800b08:	ddc04517 	ldw	r23,276(sp)
  800b0c:	dd804417 	ldw	r22,272(sp)
  800b10:	dd404317 	ldw	r21,268(sp)
  800b14:	dd004217 	ldw	r20,264(sp)
  800b18:	dcc04117 	ldw	r19,260(sp)
  800b1c:	dc804017 	ldw	r18,256(sp)
  800b20:	dc403f17 	ldw	r17,252(sp)
  800b24:	dc003e17 	ldw	r16,248(sp)
  800b28:	dec04804 	addi	sp,sp,288
  800b2c:	f800283a 	ret
  800b30:	d9002d17 	ldw	r4,180(sp)
  800b34:	0804aa00 	call	804aa0 <__sinit>
  800b38:	003f0206 	br	800744 <__alt_data_end+0xff800744>
  800b3c:	d9002e17 	ldw	r4,184(sp)
  800b40:	d9402e17 	ldw	r5,184(sp)
  800b44:	21000017 	ldw	r4,0(r4)
  800b48:	28800104 	addi	r2,r5,4
  800b4c:	d9003115 	stw	r4,196(sp)
  800b50:	203fa716 	blt	r4,zero,8009f0 <__alt_data_end+0xff8009f0>
  800b54:	d8802e15 	stw	r2,184(sp)
  800b58:	ac400007 	ldb	r17,0(r21)
  800b5c:	003f4206 	br	800868 <__alt_data_end+0xff800868>
  800b60:	ac400007 	ldb	r17,0(r21)
  800b64:	01000a84 	movi	r4,42
  800b68:	a8c00044 	addi	r3,r21,1
  800b6c:	89075826 	beq	r17,r4,8028d0 <___vfprintf_internal_r+0x21f0>
  800b70:	8cbff404 	addi	r18,r17,-48
  800b74:	b486ae36 	bltu	r22,r18,802630 <___vfprintf_internal_r+0x1f50>
  800b78:	0009883a 	mov	r4,zero
  800b7c:	1823883a 	mov	r17,r3
  800b80:	01400284 	movi	r5,10
  800b84:	080ab7c0 	call	80ab7c <__mulsi3>
  800b88:	88c00007 	ldb	r3,0(r17)
  800b8c:	1489883a 	add	r4,r2,r18
  800b90:	8d400044 	addi	r21,r17,1
  800b94:	1cbff404 	addi	r18,r3,-48
  800b98:	a823883a 	mov	r17,r21
  800b9c:	b4bff82e 	bgeu	r22,r18,800b80 <__alt_data_end+0xff800b80>
  800ba0:	1823883a 	mov	r17,r3
  800ba4:	2005f616 	blt	r4,zero,802380 <___vfprintf_internal_r+0x1ca0>
  800ba8:	d9002a15 	stw	r4,168(sp)
  800bac:	003f2f06 	br	80086c <__alt_data_end+0xff80086c>
  800bb0:	84002014 	ori	r16,r16,128
  800bb4:	ac400007 	ldb	r17,0(r21)
  800bb8:	003f2b06 	br	800868 <__alt_data_end+0xff800868>
  800bbc:	8cbff404 	addi	r18,r17,-48
  800bc0:	d8003115 	stw	zero,196(sp)
  800bc4:	0009883a 	mov	r4,zero
  800bc8:	a823883a 	mov	r17,r21
  800bcc:	01400284 	movi	r5,10
  800bd0:	080ab7c0 	call	80ab7c <__mulsi3>
  800bd4:	88c00007 	ldb	r3,0(r17)
  800bd8:	9089883a 	add	r4,r18,r2
  800bdc:	ad400044 	addi	r21,r21,1
  800be0:	1cbff404 	addi	r18,r3,-48
  800be4:	a823883a 	mov	r17,r21
  800be8:	b4bff82e 	bgeu	r22,r18,800bcc <__alt_data_end+0xff800bcc>
  800bec:	1823883a 	mov	r17,r3
  800bf0:	d9003115 	stw	r4,196(sp)
  800bf4:	003f1d06 	br	80086c <__alt_data_end+0xff80086c>
  800bf8:	8025883a 	mov	r18,r16
  800bfc:	dc002903 	ldbu	r16,164(sp)
  800c00:	e011883a 	mov	r8,fp
  800c04:	84003fcc 	andi	r16,r16,255
  800c08:	8007531e 	bne	r16,zero,802958 <___vfprintf_internal_r+0x2278>
  800c0c:	94800414 	ori	r18,r18,16
  800c10:	9080080c 	andi	r2,r18,32
  800c14:	1003a326 	beq	r2,zero,801aa4 <___vfprintf_internal_r+0x13c4>
  800c18:	d9002e17 	ldw	r4,184(sp)
  800c1c:	20800117 	ldw	r2,4(r4)
  800c20:	24c00017 	ldw	r19,0(r4)
  800c24:	21000204 	addi	r4,r4,8
  800c28:	d9002e15 	stw	r4,184(sp)
  800c2c:	102d883a 	mov	r22,r2
  800c30:	10047316 	blt	r2,zero,801e00 <___vfprintf_internal_r+0x1720>
  800c34:	d9002a17 	ldw	r4,168(sp)
  800c38:	df002783 	ldbu	fp,158(sp)
  800c3c:	2003e416 	blt	r4,zero,801bd0 <___vfprintf_internal_r+0x14f0>
  800c40:	00ffdfc4 	movi	r3,-129
  800c44:	9d84b03a 	or	r2,r19,r22
  800c48:	90e4703a 	and	r18,r18,r3
  800c4c:	10018026 	beq	r2,zero,801250 <___vfprintf_internal_r+0xb70>
  800c50:	b003ab26 	beq	r22,zero,801b00 <___vfprintf_internal_r+0x1420>
  800c54:	dc402915 	stw	r17,164(sp)
  800c58:	dc001e04 	addi	r16,sp,120
  800c5c:	b023883a 	mov	r17,r22
  800c60:	402d883a 	mov	r22,r8
  800c64:	9809883a 	mov	r4,r19
  800c68:	880b883a 	mov	r5,r17
  800c6c:	01800284 	movi	r6,10
  800c70:	000f883a 	mov	r7,zero
  800c74:	080a4040 	call	80a404 <__umoddi3>
  800c78:	10800c04 	addi	r2,r2,48
  800c7c:	843fffc4 	addi	r16,r16,-1
  800c80:	9809883a 	mov	r4,r19
  800c84:	880b883a 	mov	r5,r17
  800c88:	80800005 	stb	r2,0(r16)
  800c8c:	01800284 	movi	r6,10
  800c90:	000f883a 	mov	r7,zero
  800c94:	0809e080 	call	809e08 <__udivdi3>
  800c98:	1027883a 	mov	r19,r2
  800c9c:	10c4b03a 	or	r2,r2,r3
  800ca0:	1823883a 	mov	r17,r3
  800ca4:	103fef1e 	bne	r2,zero,800c64 <__alt_data_end+0xff800c64>
  800ca8:	d8c02817 	ldw	r3,160(sp)
  800cac:	dc402917 	ldw	r17,164(sp)
  800cb0:	b011883a 	mov	r8,r22
  800cb4:	1c07c83a 	sub	r3,r3,r16
  800cb8:	d8c02b15 	stw	r3,172(sp)
  800cbc:	00005f06 	br	800e3c <___vfprintf_internal_r+0x75c>
  800cc0:	8025883a 	mov	r18,r16
  800cc4:	dc002903 	ldbu	r16,164(sp)
  800cc8:	e011883a 	mov	r8,fp
  800ccc:	84003fcc 	andi	r16,r16,255
  800cd0:	80071e1e 	bne	r16,zero,80294c <___vfprintf_internal_r+0x226c>
  800cd4:	9080020c 	andi	r2,r18,8
  800cd8:	1004af26 	beq	r2,zero,801f98 <___vfprintf_internal_r+0x18b8>
  800cdc:	d9002e17 	ldw	r4,184(sp)
  800ce0:	d9402e17 	ldw	r5,184(sp)
  800ce4:	d8802e17 	ldw	r2,184(sp)
  800ce8:	21000017 	ldw	r4,0(r4)
  800cec:	29400117 	ldw	r5,4(r5)
  800cf0:	10800204 	addi	r2,r2,8
  800cf4:	d9003615 	stw	r4,216(sp)
  800cf8:	d9403815 	stw	r5,224(sp)
  800cfc:	d8802e15 	stw	r2,184(sp)
  800d00:	d9003617 	ldw	r4,216(sp)
  800d04:	d9403817 	ldw	r5,224(sp)
  800d08:	da003d15 	stw	r8,244(sp)
  800d0c:	04000044 	movi	r16,1
  800d10:	0807ae40 	call	807ae4 <__fpclassifyd>
  800d14:	da003d17 	ldw	r8,244(sp)
  800d18:	1404441e 	bne	r2,r16,801e2c <___vfprintf_internal_r+0x174c>
  800d1c:	d9003617 	ldw	r4,216(sp)
  800d20:	d9403817 	ldw	r5,224(sp)
  800d24:	000d883a 	mov	r6,zero
  800d28:	000f883a 	mov	r7,zero
  800d2c:	080bf840 	call	80bf84 <__ledf2>
  800d30:	da003d17 	ldw	r8,244(sp)
  800d34:	1005e316 	blt	r2,zero,8024c4 <___vfprintf_internal_r+0x1de4>
  800d38:	df002783 	ldbu	fp,158(sp)
  800d3c:	008011c4 	movi	r2,71
  800d40:	1445580e 	bge	r2,r17,8022a4 <___vfprintf_internal_r+0x1bc4>
  800d44:	04002074 	movhi	r16,129
  800d48:	843f7804 	addi	r16,r16,-544
  800d4c:	00c000c4 	movi	r3,3
  800d50:	00bfdfc4 	movi	r2,-129
  800d54:	d8c02915 	stw	r3,164(sp)
  800d58:	90a4703a 	and	r18,r18,r2
  800d5c:	d8c02b15 	stw	r3,172(sp)
  800d60:	d8002a15 	stw	zero,168(sp)
  800d64:	d8003215 	stw	zero,200(sp)
  800d68:	00003a06 	br	800e54 <___vfprintf_internal_r+0x774>
  800d6c:	84000214 	ori	r16,r16,8
  800d70:	ac400007 	ldb	r17,0(r21)
  800d74:	003ebc06 	br	800868 <__alt_data_end+0xff800868>
  800d78:	8025883a 	mov	r18,r16
  800d7c:	dc002903 	ldbu	r16,164(sp)
  800d80:	e011883a 	mov	r8,fp
  800d84:	84003fcc 	andi	r16,r16,255
  800d88:	8007001e 	bne	r16,zero,80298c <___vfprintf_internal_r+0x22ac>
  800d8c:	94800414 	ori	r18,r18,16
  800d90:	9080080c 	andi	r2,r18,32
  800d94:	1002fa26 	beq	r2,zero,801980 <___vfprintf_internal_r+0x12a0>
  800d98:	d9002e17 	ldw	r4,184(sp)
  800d9c:	d9402a17 	ldw	r5,168(sp)
  800da0:	d8002785 	stb	zero,158(sp)
  800da4:	20800204 	addi	r2,r4,8
  800da8:	24c00017 	ldw	r19,0(r4)
  800dac:	25800117 	ldw	r22,4(r4)
  800db0:	2804b116 	blt	r5,zero,802078 <___vfprintf_internal_r+0x1998>
  800db4:	013fdfc4 	movi	r4,-129
  800db8:	9d86b03a 	or	r3,r19,r22
  800dbc:	d8802e15 	stw	r2,184(sp)
  800dc0:	9124703a 	and	r18,r18,r4
  800dc4:	1802fb1e 	bne	r3,zero,8019b4 <___vfprintf_internal_r+0x12d4>
  800dc8:	d8c02a17 	ldw	r3,168(sp)
  800dcc:	0039883a 	mov	fp,zero
  800dd0:	1805e526 	beq	r3,zero,802568 <___vfprintf_internal_r+0x1e88>
  800dd4:	0027883a 	mov	r19,zero
  800dd8:	002d883a 	mov	r22,zero
  800ddc:	dc001e04 	addi	r16,sp,120
  800de0:	9806d0fa 	srli	r3,r19,3
  800de4:	b008977a 	slli	r4,r22,29
  800de8:	b02cd0fa 	srli	r22,r22,3
  800dec:	9cc001cc 	andi	r19,r19,7
  800df0:	98800c04 	addi	r2,r19,48
  800df4:	843fffc4 	addi	r16,r16,-1
  800df8:	20e6b03a 	or	r19,r4,r3
  800dfc:	80800005 	stb	r2,0(r16)
  800e00:	9d86b03a 	or	r3,r19,r22
  800e04:	183ff61e 	bne	r3,zero,800de0 <__alt_data_end+0xff800de0>
  800e08:	90c0004c 	andi	r3,r18,1
  800e0c:	18014126 	beq	r3,zero,801314 <___vfprintf_internal_r+0xc34>
  800e10:	10803fcc 	andi	r2,r2,255
  800e14:	1080201c 	xori	r2,r2,128
  800e18:	10bfe004 	addi	r2,r2,-128
  800e1c:	00c00c04 	movi	r3,48
  800e20:	10c13c26 	beq	r2,r3,801314 <___vfprintf_internal_r+0xc34>
  800e24:	80ffffc5 	stb	r3,-1(r16)
  800e28:	d8c02817 	ldw	r3,160(sp)
  800e2c:	80bfffc4 	addi	r2,r16,-1
  800e30:	1021883a 	mov	r16,r2
  800e34:	1887c83a 	sub	r3,r3,r2
  800e38:	d8c02b15 	stw	r3,172(sp)
  800e3c:	d8802b17 	ldw	r2,172(sp)
  800e40:	d9002a17 	ldw	r4,168(sp)
  800e44:	1100010e 	bge	r2,r4,800e4c <___vfprintf_internal_r+0x76c>
  800e48:	2005883a 	mov	r2,r4
  800e4c:	d8802915 	stw	r2,164(sp)
  800e50:	d8003215 	stw	zero,200(sp)
  800e54:	e7003fcc 	andi	fp,fp,255
  800e58:	e700201c 	xori	fp,fp,128
  800e5c:	e73fe004 	addi	fp,fp,-128
  800e60:	e0000326 	beq	fp,zero,800e70 <___vfprintf_internal_r+0x790>
  800e64:	d8c02917 	ldw	r3,164(sp)
  800e68:	18c00044 	addi	r3,r3,1
  800e6c:	d8c02915 	stw	r3,164(sp)
  800e70:	90c0008c 	andi	r3,r18,2
  800e74:	d8c02c15 	stw	r3,176(sp)
  800e78:	18000326 	beq	r3,zero,800e88 <___vfprintf_internal_r+0x7a8>
  800e7c:	d8c02917 	ldw	r3,164(sp)
  800e80:	18c00084 	addi	r3,r3,2
  800e84:	d8c02915 	stw	r3,164(sp)
  800e88:	90c0210c 	andi	r3,r18,132
  800e8c:	d8c03015 	stw	r3,192(sp)
  800e90:	1801c51e 	bne	r3,zero,8015a8 <___vfprintf_internal_r+0xec8>
  800e94:	d9003117 	ldw	r4,196(sp)
  800e98:	d8c02917 	ldw	r3,164(sp)
  800e9c:	20e7c83a 	sub	r19,r4,r3
  800ea0:	04c1c10e 	bge	zero,r19,8015a8 <___vfprintf_internal_r+0xec8>
  800ea4:	02400404 	movi	r9,16
  800ea8:	d8c02017 	ldw	r3,128(sp)
  800eac:	d8801f17 	ldw	r2,124(sp)
  800eb0:	4cc52f0e 	bge	r9,r19,802370 <___vfprintf_internal_r+0x1c90>
  800eb4:	01402074 	movhi	r5,129
  800eb8:	297f8b84 	addi	r5,r5,-466
  800ebc:	dc403b15 	stw	r17,236(sp)
  800ec0:	d9403515 	stw	r5,212(sp)
  800ec4:	9823883a 	mov	r17,r19
  800ec8:	482d883a 	mov	r22,r9
  800ecc:	9027883a 	mov	r19,r18
  800ed0:	070001c4 	movi	fp,7
  800ed4:	8025883a 	mov	r18,r16
  800ed8:	dc002d17 	ldw	r16,180(sp)
  800edc:	00000306 	br	800eec <___vfprintf_internal_r+0x80c>
  800ee0:	8c7ffc04 	addi	r17,r17,-16
  800ee4:	42000204 	addi	r8,r8,8
  800ee8:	b440130e 	bge	r22,r17,800f38 <___vfprintf_internal_r+0x858>
  800eec:	01002074 	movhi	r4,129
  800ef0:	18c00404 	addi	r3,r3,16
  800ef4:	10800044 	addi	r2,r2,1
  800ef8:	213f8b84 	addi	r4,r4,-466
  800efc:	41000015 	stw	r4,0(r8)
  800f00:	45800115 	stw	r22,4(r8)
  800f04:	d8c02015 	stw	r3,128(sp)
  800f08:	d8801f15 	stw	r2,124(sp)
  800f0c:	e0bff40e 	bge	fp,r2,800ee0 <__alt_data_end+0xff800ee0>
  800f10:	d9801e04 	addi	r6,sp,120
  800f14:	b80b883a 	mov	r5,r23
  800f18:	8009883a 	mov	r4,r16
  800f1c:	0807ec00 	call	807ec0 <__sprint_r>
  800f20:	103ef31e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  800f24:	8c7ffc04 	addi	r17,r17,-16
  800f28:	d8c02017 	ldw	r3,128(sp)
  800f2c:	d8801f17 	ldw	r2,124(sp)
  800f30:	da000404 	addi	r8,sp,16
  800f34:	b47fed16 	blt	r22,r17,800eec <__alt_data_end+0xff800eec>
  800f38:	9021883a 	mov	r16,r18
  800f3c:	9825883a 	mov	r18,r19
  800f40:	8827883a 	mov	r19,r17
  800f44:	dc403b17 	ldw	r17,236(sp)
  800f48:	d9403517 	ldw	r5,212(sp)
  800f4c:	98c7883a 	add	r3,r19,r3
  800f50:	10800044 	addi	r2,r2,1
  800f54:	41400015 	stw	r5,0(r8)
  800f58:	44c00115 	stw	r19,4(r8)
  800f5c:	d8c02015 	stw	r3,128(sp)
  800f60:	d8801f15 	stw	r2,124(sp)
  800f64:	010001c4 	movi	r4,7
  800f68:	2082c516 	blt	r4,r2,801a80 <___vfprintf_internal_r+0x13a0>
  800f6c:	df002787 	ldb	fp,158(sp)
  800f70:	42000204 	addi	r8,r8,8
  800f74:	e0000c26 	beq	fp,zero,800fa8 <___vfprintf_internal_r+0x8c8>
  800f78:	d8801f17 	ldw	r2,124(sp)
  800f7c:	d9002784 	addi	r4,sp,158
  800f80:	18c00044 	addi	r3,r3,1
  800f84:	10800044 	addi	r2,r2,1
  800f88:	41000015 	stw	r4,0(r8)
  800f8c:	01000044 	movi	r4,1
  800f90:	41000115 	stw	r4,4(r8)
  800f94:	d8c02015 	stw	r3,128(sp)
  800f98:	d8801f15 	stw	r2,124(sp)
  800f9c:	010001c4 	movi	r4,7
  800fa0:	20825e16 	blt	r4,r2,80191c <___vfprintf_internal_r+0x123c>
  800fa4:	42000204 	addi	r8,r8,8
  800fa8:	d8802c17 	ldw	r2,176(sp)
  800fac:	10000c26 	beq	r2,zero,800fe0 <___vfprintf_internal_r+0x900>
  800fb0:	d8801f17 	ldw	r2,124(sp)
  800fb4:	d9002704 	addi	r4,sp,156
  800fb8:	18c00084 	addi	r3,r3,2
  800fbc:	10800044 	addi	r2,r2,1
  800fc0:	41000015 	stw	r4,0(r8)
  800fc4:	01000084 	movi	r4,2
  800fc8:	41000115 	stw	r4,4(r8)
  800fcc:	d8c02015 	stw	r3,128(sp)
  800fd0:	d8801f15 	stw	r2,124(sp)
  800fd4:	010001c4 	movi	r4,7
  800fd8:	20825816 	blt	r4,r2,80193c <___vfprintf_internal_r+0x125c>
  800fdc:	42000204 	addi	r8,r8,8
  800fe0:	d9003017 	ldw	r4,192(sp)
  800fe4:	00802004 	movi	r2,128
  800fe8:	2081bb26 	beq	r4,r2,8016d8 <___vfprintf_internal_r+0xff8>
  800fec:	d9402a17 	ldw	r5,168(sp)
  800ff0:	d8802b17 	ldw	r2,172(sp)
  800ff4:	28adc83a 	sub	r22,r5,r2
  800ff8:	0580310e 	bge	zero,r22,8010c0 <___vfprintf_internal_r+0x9e0>
  800ffc:	07000404 	movi	fp,16
  801000:	d8801f17 	ldw	r2,124(sp)
  801004:	e584360e 	bge	fp,r22,8020e0 <___vfprintf_internal_r+0x1a00>
  801008:	01402074 	movhi	r5,129
  80100c:	297f8784 	addi	r5,r5,-482
  801010:	dc402a15 	stw	r17,168(sp)
  801014:	d9402c15 	stw	r5,176(sp)
  801018:	b023883a 	mov	r17,r22
  80101c:	04c001c4 	movi	r19,7
  801020:	a82d883a 	mov	r22,r21
  801024:	902b883a 	mov	r21,r18
  801028:	8025883a 	mov	r18,r16
  80102c:	dc002d17 	ldw	r16,180(sp)
  801030:	00000306 	br	801040 <___vfprintf_internal_r+0x960>
  801034:	8c7ffc04 	addi	r17,r17,-16
  801038:	42000204 	addi	r8,r8,8
  80103c:	e440110e 	bge	fp,r17,801084 <___vfprintf_internal_r+0x9a4>
  801040:	18c00404 	addi	r3,r3,16
  801044:	10800044 	addi	r2,r2,1
  801048:	45000015 	stw	r20,0(r8)
  80104c:	47000115 	stw	fp,4(r8)
  801050:	d8c02015 	stw	r3,128(sp)
  801054:	d8801f15 	stw	r2,124(sp)
  801058:	98bff60e 	bge	r19,r2,801034 <__alt_data_end+0xff801034>
  80105c:	d9801e04 	addi	r6,sp,120
  801060:	b80b883a 	mov	r5,r23
  801064:	8009883a 	mov	r4,r16
  801068:	0807ec00 	call	807ec0 <__sprint_r>
  80106c:	103ea01e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801070:	8c7ffc04 	addi	r17,r17,-16
  801074:	d8c02017 	ldw	r3,128(sp)
  801078:	d8801f17 	ldw	r2,124(sp)
  80107c:	da000404 	addi	r8,sp,16
  801080:	e47fef16 	blt	fp,r17,801040 <__alt_data_end+0xff801040>
  801084:	9021883a 	mov	r16,r18
  801088:	a825883a 	mov	r18,r21
  80108c:	b02b883a 	mov	r21,r22
  801090:	882d883a 	mov	r22,r17
  801094:	dc402a17 	ldw	r17,168(sp)
  801098:	d9002c17 	ldw	r4,176(sp)
  80109c:	1d87883a 	add	r3,r3,r22
  8010a0:	10800044 	addi	r2,r2,1
  8010a4:	41000015 	stw	r4,0(r8)
  8010a8:	45800115 	stw	r22,4(r8)
  8010ac:	d8c02015 	stw	r3,128(sp)
  8010b0:	d8801f15 	stw	r2,124(sp)
  8010b4:	010001c4 	movi	r4,7
  8010b8:	20821016 	blt	r4,r2,8018fc <___vfprintf_internal_r+0x121c>
  8010bc:	42000204 	addi	r8,r8,8
  8010c0:	9080400c 	andi	r2,r18,256
  8010c4:	10013a1e 	bne	r2,zero,8015b0 <___vfprintf_internal_r+0xed0>
  8010c8:	d9402b17 	ldw	r5,172(sp)
  8010cc:	d8801f17 	ldw	r2,124(sp)
  8010d0:	44000015 	stw	r16,0(r8)
  8010d4:	1947883a 	add	r3,r3,r5
  8010d8:	10800044 	addi	r2,r2,1
  8010dc:	41400115 	stw	r5,4(r8)
  8010e0:	d8c02015 	stw	r3,128(sp)
  8010e4:	d8801f15 	stw	r2,124(sp)
  8010e8:	010001c4 	movi	r4,7
  8010ec:	2081f516 	blt	r4,r2,8018c4 <___vfprintf_internal_r+0x11e4>
  8010f0:	42000204 	addi	r8,r8,8
  8010f4:	9480010c 	andi	r18,r18,4
  8010f8:	90003226 	beq	r18,zero,8011c4 <___vfprintf_internal_r+0xae4>
  8010fc:	d9403117 	ldw	r5,196(sp)
  801100:	d8802917 	ldw	r2,164(sp)
  801104:	28a1c83a 	sub	r16,r5,r2
  801108:	04002e0e 	bge	zero,r16,8011c4 <___vfprintf_internal_r+0xae4>
  80110c:	04400404 	movi	r17,16
  801110:	d8801f17 	ldw	r2,124(sp)
  801114:	8c04c40e 	bge	r17,r16,802428 <___vfprintf_internal_r+0x1d48>
  801118:	01402074 	movhi	r5,129
  80111c:	297f8b84 	addi	r5,r5,-466
  801120:	d9403515 	stw	r5,212(sp)
  801124:	048001c4 	movi	r18,7
  801128:	dcc02d17 	ldw	r19,180(sp)
  80112c:	00000306 	br	80113c <___vfprintf_internal_r+0xa5c>
  801130:	843ffc04 	addi	r16,r16,-16
  801134:	42000204 	addi	r8,r8,8
  801138:	8c00130e 	bge	r17,r16,801188 <___vfprintf_internal_r+0xaa8>
  80113c:	01002074 	movhi	r4,129
  801140:	18c00404 	addi	r3,r3,16
  801144:	10800044 	addi	r2,r2,1
  801148:	213f8b84 	addi	r4,r4,-466
  80114c:	41000015 	stw	r4,0(r8)
  801150:	44400115 	stw	r17,4(r8)
  801154:	d8c02015 	stw	r3,128(sp)
  801158:	d8801f15 	stw	r2,124(sp)
  80115c:	90bff40e 	bge	r18,r2,801130 <__alt_data_end+0xff801130>
  801160:	d9801e04 	addi	r6,sp,120
  801164:	b80b883a 	mov	r5,r23
  801168:	9809883a 	mov	r4,r19
  80116c:	0807ec00 	call	807ec0 <__sprint_r>
  801170:	103e5f1e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801174:	843ffc04 	addi	r16,r16,-16
  801178:	d8c02017 	ldw	r3,128(sp)
  80117c:	d8801f17 	ldw	r2,124(sp)
  801180:	da000404 	addi	r8,sp,16
  801184:	8c3fed16 	blt	r17,r16,80113c <__alt_data_end+0xff80113c>
  801188:	d9403517 	ldw	r5,212(sp)
  80118c:	1c07883a 	add	r3,r3,r16
  801190:	10800044 	addi	r2,r2,1
  801194:	41400015 	stw	r5,0(r8)
  801198:	44000115 	stw	r16,4(r8)
  80119c:	d8c02015 	stw	r3,128(sp)
  8011a0:	d8801f15 	stw	r2,124(sp)
  8011a4:	010001c4 	movi	r4,7
  8011a8:	2080060e 	bge	r4,r2,8011c4 <___vfprintf_internal_r+0xae4>
  8011ac:	d9002d17 	ldw	r4,180(sp)
  8011b0:	d9801e04 	addi	r6,sp,120
  8011b4:	b80b883a 	mov	r5,r23
  8011b8:	0807ec00 	call	807ec0 <__sprint_r>
  8011bc:	103e4c1e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  8011c0:	d8c02017 	ldw	r3,128(sp)
  8011c4:	d8803117 	ldw	r2,196(sp)
  8011c8:	d9002917 	ldw	r4,164(sp)
  8011cc:	1100010e 	bge	r2,r4,8011d4 <___vfprintf_internal_r+0xaf4>
  8011d0:	2005883a 	mov	r2,r4
  8011d4:	d9402f17 	ldw	r5,188(sp)
  8011d8:	288b883a 	add	r5,r5,r2
  8011dc:	d9402f15 	stw	r5,188(sp)
  8011e0:	1801c01e 	bne	r3,zero,8018e4 <___vfprintf_internal_r+0x1204>
  8011e4:	a8800007 	ldb	r2,0(r21)
  8011e8:	d8001f15 	stw	zero,124(sp)
  8011ec:	da000404 	addi	r8,sp,16
  8011f0:	103d751e 	bne	r2,zero,8007c8 <__alt_data_end+0xff8007c8>
  8011f4:	a823883a 	mov	r17,r21
  8011f8:	003d8b06 	br	800828 <__alt_data_end+0xff800828>
  8011fc:	8025883a 	mov	r18,r16
  801200:	dc002903 	ldbu	r16,164(sp)
  801204:	e011883a 	mov	r8,fp
  801208:	84003fcc 	andi	r16,r16,255
  80120c:	8005e51e 	bne	r16,zero,8029a4 <___vfprintf_internal_r+0x22c4>
  801210:	94800414 	ori	r18,r18,16
  801214:	9080080c 	andi	r2,r18,32
  801218:	10022b26 	beq	r2,zero,801ac8 <___vfprintf_internal_r+0x13e8>
  80121c:	d9002e17 	ldw	r4,184(sp)
  801220:	d9402a17 	ldw	r5,168(sp)
  801224:	d8002785 	stb	zero,158(sp)
  801228:	20c00204 	addi	r3,r4,8
  80122c:	24c00017 	ldw	r19,0(r4)
  801230:	25800117 	ldw	r22,4(r4)
  801234:	28042e16 	blt	r5,zero,8022f0 <___vfprintf_internal_r+0x1c10>
  801238:	013fdfc4 	movi	r4,-129
  80123c:	9d84b03a 	or	r2,r19,r22
  801240:	d8c02e15 	stw	r3,184(sp)
  801244:	9124703a 	and	r18,r18,r4
  801248:	0039883a 	mov	fp,zero
  80124c:	103e801e 	bne	r2,zero,800c50 <__alt_data_end+0xff800c50>
  801250:	d9002a17 	ldw	r4,168(sp)
  801254:	2002e01e 	bne	r4,zero,801dd8 <___vfprintf_internal_r+0x16f8>
  801258:	d8002a15 	stw	zero,168(sp)
  80125c:	d8002b15 	stw	zero,172(sp)
  801260:	dc001e04 	addi	r16,sp,120
  801264:	003ef506 	br	800e3c <__alt_data_end+0xff800e3c>
  801268:	8025883a 	mov	r18,r16
  80126c:	dc002903 	ldbu	r16,164(sp)
  801270:	e011883a 	mov	r8,fp
  801274:	84003fcc 	andi	r16,r16,255
  801278:	8005ba1e 	bne	r16,zero,802964 <___vfprintf_internal_r+0x2284>
  80127c:	01002074 	movhi	r4,129
  801280:	213f7b04 	addi	r4,r4,-532
  801284:	d9003915 	stw	r4,228(sp)
  801288:	9080080c 	andi	r2,r18,32
  80128c:	10006126 	beq	r2,zero,801414 <___vfprintf_internal_r+0xd34>
  801290:	d9402e17 	ldw	r5,184(sp)
  801294:	2cc00017 	ldw	r19,0(r5)
  801298:	2d800117 	ldw	r22,4(r5)
  80129c:	29400204 	addi	r5,r5,8
  8012a0:	d9402e15 	stw	r5,184(sp)
  8012a4:	9080004c 	andi	r2,r18,1
  8012a8:	1001ac26 	beq	r2,zero,80195c <___vfprintf_internal_r+0x127c>
  8012ac:	9d84b03a 	or	r2,r19,r22
  8012b0:	10038526 	beq	r2,zero,8020c8 <___vfprintf_internal_r+0x19e8>
  8012b4:	d8c02a17 	ldw	r3,168(sp)
  8012b8:	00800c04 	movi	r2,48
  8012bc:	d8802705 	stb	r2,156(sp)
  8012c0:	dc402745 	stb	r17,157(sp)
  8012c4:	d8002785 	stb	zero,158(sp)
  8012c8:	90800094 	ori	r2,r18,2
  8012cc:	18047916 	blt	r3,zero,8024b4 <___vfprintf_internal_r+0x1dd4>
  8012d0:	00bfdfc4 	movi	r2,-129
  8012d4:	90a4703a 	and	r18,r18,r2
  8012d8:	94800094 	ori	r18,r18,2
  8012dc:	0039883a 	mov	fp,zero
  8012e0:	d9003917 	ldw	r4,228(sp)
  8012e4:	dc001e04 	addi	r16,sp,120
  8012e8:	988003cc 	andi	r2,r19,15
  8012ec:	b006973a 	slli	r3,r22,28
  8012f0:	2085883a 	add	r2,r4,r2
  8012f4:	9826d13a 	srli	r19,r19,4
  8012f8:	10800003 	ldbu	r2,0(r2)
  8012fc:	b02cd13a 	srli	r22,r22,4
  801300:	843fffc4 	addi	r16,r16,-1
  801304:	1ce6b03a 	or	r19,r3,r19
  801308:	80800005 	stb	r2,0(r16)
  80130c:	9d84b03a 	or	r2,r19,r22
  801310:	103ff51e 	bne	r2,zero,8012e8 <__alt_data_end+0xff8012e8>
  801314:	d8c02817 	ldw	r3,160(sp)
  801318:	1c07c83a 	sub	r3,r3,r16
  80131c:	d8c02b15 	stw	r3,172(sp)
  801320:	003ec606 	br	800e3c <__alt_data_end+0xff800e3c>
  801324:	8025883a 	mov	r18,r16
  801328:	dc002903 	ldbu	r16,164(sp)
  80132c:	e011883a 	mov	r8,fp
  801330:	84003fcc 	andi	r16,r16,255
  801334:	803e9626 	beq	r16,zero,800d90 <__alt_data_end+0xff800d90>
  801338:	d8c02b03 	ldbu	r3,172(sp)
  80133c:	d8c02785 	stb	r3,158(sp)
  801340:	003e9306 	br	800d90 <__alt_data_end+0xff800d90>
  801344:	00c00044 	movi	r3,1
  801348:	d8c02905 	stb	r3,164(sp)
  80134c:	00c00ac4 	movi	r3,43
  801350:	d8c02b05 	stb	r3,172(sp)
  801354:	ac400007 	ldb	r17,0(r21)
  801358:	003d4306 	br	800868 <__alt_data_end+0xff800868>
  80135c:	84000814 	ori	r16,r16,32
  801360:	ac400007 	ldb	r17,0(r21)
  801364:	003d4006 	br	800868 <__alt_data_end+0xff800868>
  801368:	d8802e17 	ldw	r2,184(sp)
  80136c:	8025883a 	mov	r18,r16
  801370:	d8002785 	stb	zero,158(sp)
  801374:	14000017 	ldw	r16,0(r2)
  801378:	e011883a 	mov	r8,fp
  80137c:	14c00104 	addi	r19,r2,4
  801380:	80042d26 	beq	r16,zero,802438 <___vfprintf_internal_r+0x1d58>
  801384:	d8c02a17 	ldw	r3,168(sp)
  801388:	1803e416 	blt	r3,zero,80231c <___vfprintf_internal_r+0x1c3c>
  80138c:	180d883a 	mov	r6,r3
  801390:	000b883a 	mov	r5,zero
  801394:	8009883a 	mov	r4,r16
  801398:	df003d15 	stw	fp,244(sp)
  80139c:	08060180 	call	806018 <memchr>
  8013a0:	da003d17 	ldw	r8,244(sp)
  8013a4:	10046826 	beq	r2,zero,802548 <___vfprintf_internal_r+0x1e68>
  8013a8:	1405c83a 	sub	r2,r2,r16
  8013ac:	d8802b15 	stw	r2,172(sp)
  8013b0:	1003e016 	blt	r2,zero,802334 <___vfprintf_internal_r+0x1c54>
  8013b4:	df002783 	ldbu	fp,158(sp)
  8013b8:	d8802915 	stw	r2,164(sp)
  8013bc:	dcc02e15 	stw	r19,184(sp)
  8013c0:	d8002a15 	stw	zero,168(sp)
  8013c4:	d8003215 	stw	zero,200(sp)
  8013c8:	003ea206 	br	800e54 <__alt_data_end+0xff800e54>
  8013cc:	8025883a 	mov	r18,r16
  8013d0:	dc002903 	ldbu	r16,164(sp)
  8013d4:	e011883a 	mov	r8,fp
  8013d8:	84003fcc 	andi	r16,r16,255
  8013dc:	803f8d26 	beq	r16,zero,801214 <__alt_data_end+0xff801214>
  8013e0:	d8c02b03 	ldbu	r3,172(sp)
  8013e4:	d8c02785 	stb	r3,158(sp)
  8013e8:	003f8a06 	br	801214 <__alt_data_end+0xff801214>
  8013ec:	8025883a 	mov	r18,r16
  8013f0:	dc002903 	ldbu	r16,164(sp)
  8013f4:	e011883a 	mov	r8,fp
  8013f8:	84003fcc 	andi	r16,r16,255
  8013fc:	8005661e 	bne	r16,zero,802998 <___vfprintf_internal_r+0x22b8>
  801400:	01002074 	movhi	r4,129
  801404:	213f8004 	addi	r4,r4,-512
  801408:	d9003915 	stw	r4,228(sp)
  80140c:	9080080c 	andi	r2,r18,32
  801410:	103f9f1e 	bne	r2,zero,801290 <__alt_data_end+0xff801290>
  801414:	9080040c 	andi	r2,r18,16
  801418:	1002eb26 	beq	r2,zero,801fc8 <___vfprintf_internal_r+0x18e8>
  80141c:	d8802e17 	ldw	r2,184(sp)
  801420:	002d883a 	mov	r22,zero
  801424:	14c00017 	ldw	r19,0(r2)
  801428:	10800104 	addi	r2,r2,4
  80142c:	d8802e15 	stw	r2,184(sp)
  801430:	003f9c06 	br	8012a4 <__alt_data_end+0xff8012a4>
  801434:	d8802b07 	ldb	r2,172(sp)
  801438:	1002e11e 	bne	r2,zero,801fc0 <___vfprintf_internal_r+0x18e0>
  80143c:	00c00044 	movi	r3,1
  801440:	d8c02905 	stb	r3,164(sp)
  801444:	00c00804 	movi	r3,32
  801448:	d8c02b05 	stb	r3,172(sp)
  80144c:	ac400007 	ldb	r17,0(r21)
  801450:	003d0506 	br	800868 <__alt_data_end+0xff800868>
  801454:	84000054 	ori	r16,r16,1
  801458:	ac400007 	ldb	r17,0(r21)
  80145c:	003d0206 	br	800868 <__alt_data_end+0xff800868>
  801460:	8025883a 	mov	r18,r16
  801464:	dc002903 	ldbu	r16,164(sp)
  801468:	e011883a 	mov	r8,fp
  80146c:	84003fcc 	andi	r16,r16,255
  801470:	803de726 	beq	r16,zero,800c10 <__alt_data_end+0xff800c10>
  801474:	d8c02b03 	ldbu	r3,172(sp)
  801478:	d8c02785 	stb	r3,158(sp)
  80147c:	003de406 	br	800c10 <__alt_data_end+0xff800c10>
  801480:	84001014 	ori	r16,r16,64
  801484:	ac400007 	ldb	r17,0(r21)
  801488:	003cf706 	br	800868 <__alt_data_end+0xff800868>
  80148c:	ac400007 	ldb	r17,0(r21)
  801490:	00801b04 	movi	r2,108
  801494:	88838f26 	beq	r17,r2,8022d4 <___vfprintf_internal_r+0x1bf4>
  801498:	84000414 	ori	r16,r16,16
  80149c:	003cf206 	br	800868 <__alt_data_end+0xff800868>
  8014a0:	8025883a 	mov	r18,r16
  8014a4:	dc002903 	ldbu	r16,164(sp)
  8014a8:	e011883a 	mov	r8,fp
  8014ac:	84003fcc 	andi	r16,r16,255
  8014b0:	80053f1e 	bne	r16,zero,8029b0 <___vfprintf_internal_r+0x22d0>
  8014b4:	9080080c 	andi	r2,r18,32
  8014b8:	1002d226 	beq	r2,zero,802004 <___vfprintf_internal_r+0x1924>
  8014bc:	d9002e17 	ldw	r4,184(sp)
  8014c0:	d9402f17 	ldw	r5,188(sp)
  8014c4:	20800017 	ldw	r2,0(r4)
  8014c8:	2807d7fa 	srai	r3,r5,31
  8014cc:	21000104 	addi	r4,r4,4
  8014d0:	d9002e15 	stw	r4,184(sp)
  8014d4:	11400015 	stw	r5,0(r2)
  8014d8:	10c00115 	stw	r3,4(r2)
  8014dc:	003cb806 	br	8007c0 <__alt_data_end+0xff8007c0>
  8014e0:	d8c02e17 	ldw	r3,184(sp)
  8014e4:	d9002e17 	ldw	r4,184(sp)
  8014e8:	8025883a 	mov	r18,r16
  8014ec:	18800017 	ldw	r2,0(r3)
  8014f0:	21000104 	addi	r4,r4,4
  8014f4:	00c00044 	movi	r3,1
  8014f8:	e011883a 	mov	r8,fp
  8014fc:	d8c02915 	stw	r3,164(sp)
  801500:	d8002785 	stb	zero,158(sp)
  801504:	d8801405 	stb	r2,80(sp)
  801508:	d9002e15 	stw	r4,184(sp)
  80150c:	d8c02b15 	stw	r3,172(sp)
  801510:	d8002a15 	stw	zero,168(sp)
  801514:	d8003215 	stw	zero,200(sp)
  801518:	dc001404 	addi	r16,sp,80
  80151c:	0039883a 	mov	fp,zero
  801520:	003e5306 	br	800e70 <__alt_data_end+0xff800e70>
  801524:	01002074 	movhi	r4,129
  801528:	213f8004 	addi	r4,r4,-512
  80152c:	0039883a 	mov	fp,zero
  801530:	d9003915 	stw	r4,228(sp)
  801534:	04401e04 	movi	r17,120
  801538:	003f6906 	br	8012e0 <__alt_data_end+0xff8012e0>
  80153c:	8025883a 	mov	r18,r16
  801540:	dc002903 	ldbu	r16,164(sp)
  801544:	e011883a 	mov	r8,fp
  801548:	84003fcc 	andi	r16,r16,255
  80154c:	8005081e 	bne	r16,zero,802970 <___vfprintf_internal_r+0x2290>
  801550:	883d6126 	beq	r17,zero,800ad8 <__alt_data_end+0xff800ad8>
  801554:	00c00044 	movi	r3,1
  801558:	d8c02915 	stw	r3,164(sp)
  80155c:	dc401405 	stb	r17,80(sp)
  801560:	d8002785 	stb	zero,158(sp)
  801564:	003fe906 	br	80150c <__alt_data_end+0xff80150c>
  801568:	01402074 	movhi	r5,129
  80156c:	297f8004 	addi	r5,r5,-512
  801570:	d9403915 	stw	r5,228(sp)
  801574:	d8c02e15 	stw	r3,184(sp)
  801578:	1025883a 	mov	r18,r2
  80157c:	04401e04 	movi	r17,120
  801580:	9d84b03a 	or	r2,r19,r22
  801584:	1000fc1e 	bne	r2,zero,801978 <___vfprintf_internal_r+0x1298>
  801588:	0039883a 	mov	fp,zero
  80158c:	00800084 	movi	r2,2
  801590:	10803fcc 	andi	r2,r2,255
  801594:	00c00044 	movi	r3,1
  801598:	10c20f26 	beq	r2,r3,801dd8 <___vfprintf_internal_r+0x16f8>
  80159c:	00c00084 	movi	r3,2
  8015a0:	10fd3326 	beq	r2,r3,800a70 <__alt_data_end+0xff800a70>
  8015a4:	003e0b06 	br	800dd4 <__alt_data_end+0xff800dd4>
  8015a8:	d8c02017 	ldw	r3,128(sp)
  8015ac:	003e7106 	br	800f74 <__alt_data_end+0xff800f74>
  8015b0:	00801944 	movi	r2,101
  8015b4:	14407e0e 	bge	r2,r17,8017b0 <___vfprintf_internal_r+0x10d0>
  8015b8:	d9003617 	ldw	r4,216(sp)
  8015bc:	d9403817 	ldw	r5,224(sp)
  8015c0:	000d883a 	mov	r6,zero
  8015c4:	000f883a 	mov	r7,zero
  8015c8:	d8c03c15 	stw	r3,240(sp)
  8015cc:	da003d15 	stw	r8,244(sp)
  8015d0:	080be200 	call	80be20 <__eqdf2>
  8015d4:	d8c03c17 	ldw	r3,240(sp)
  8015d8:	da003d17 	ldw	r8,244(sp)
  8015dc:	1000f71e 	bne	r2,zero,8019bc <___vfprintf_internal_r+0x12dc>
  8015e0:	d8801f17 	ldw	r2,124(sp)
  8015e4:	01002074 	movhi	r4,129
  8015e8:	213f8704 	addi	r4,r4,-484
  8015ec:	18c00044 	addi	r3,r3,1
  8015f0:	10800044 	addi	r2,r2,1
  8015f4:	41000015 	stw	r4,0(r8)
  8015f8:	01000044 	movi	r4,1
  8015fc:	41000115 	stw	r4,4(r8)
  801600:	d8c02015 	stw	r3,128(sp)
  801604:	d8801f15 	stw	r2,124(sp)
  801608:	010001c4 	movi	r4,7
  80160c:	2082b816 	blt	r4,r2,8020f0 <___vfprintf_internal_r+0x1a10>
  801610:	42000204 	addi	r8,r8,8
  801614:	d8802617 	ldw	r2,152(sp)
  801618:	d9403317 	ldw	r5,204(sp)
  80161c:	11400216 	blt	r2,r5,801628 <___vfprintf_internal_r+0xf48>
  801620:	9080004c 	andi	r2,r18,1
  801624:	103eb326 	beq	r2,zero,8010f4 <__alt_data_end+0xff8010f4>
  801628:	d8803717 	ldw	r2,220(sp)
  80162c:	d9003417 	ldw	r4,208(sp)
  801630:	d9403717 	ldw	r5,220(sp)
  801634:	1887883a 	add	r3,r3,r2
  801638:	d8801f17 	ldw	r2,124(sp)
  80163c:	41000015 	stw	r4,0(r8)
  801640:	41400115 	stw	r5,4(r8)
  801644:	10800044 	addi	r2,r2,1
  801648:	d8c02015 	stw	r3,128(sp)
  80164c:	d8801f15 	stw	r2,124(sp)
  801650:	010001c4 	movi	r4,7
  801654:	20832916 	blt	r4,r2,8022fc <___vfprintf_internal_r+0x1c1c>
  801658:	42000204 	addi	r8,r8,8
  80165c:	d8803317 	ldw	r2,204(sp)
  801660:	143fffc4 	addi	r16,r2,-1
  801664:	043ea30e 	bge	zero,r16,8010f4 <__alt_data_end+0xff8010f4>
  801668:	04400404 	movi	r17,16
  80166c:	d8801f17 	ldw	r2,124(sp)
  801670:	8c00880e 	bge	r17,r16,801894 <___vfprintf_internal_r+0x11b4>
  801674:	01402074 	movhi	r5,129
  801678:	297f8784 	addi	r5,r5,-482
  80167c:	d9402c15 	stw	r5,176(sp)
  801680:	058001c4 	movi	r22,7
  801684:	dcc02d17 	ldw	r19,180(sp)
  801688:	00000306 	br	801698 <___vfprintf_internal_r+0xfb8>
  80168c:	42000204 	addi	r8,r8,8
  801690:	843ffc04 	addi	r16,r16,-16
  801694:	8c00820e 	bge	r17,r16,8018a0 <___vfprintf_internal_r+0x11c0>
  801698:	18c00404 	addi	r3,r3,16
  80169c:	10800044 	addi	r2,r2,1
  8016a0:	45000015 	stw	r20,0(r8)
  8016a4:	44400115 	stw	r17,4(r8)
  8016a8:	d8c02015 	stw	r3,128(sp)
  8016ac:	d8801f15 	stw	r2,124(sp)
  8016b0:	b0bff60e 	bge	r22,r2,80168c <__alt_data_end+0xff80168c>
  8016b4:	d9801e04 	addi	r6,sp,120
  8016b8:	b80b883a 	mov	r5,r23
  8016bc:	9809883a 	mov	r4,r19
  8016c0:	0807ec00 	call	807ec0 <__sprint_r>
  8016c4:	103d0a1e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  8016c8:	d8c02017 	ldw	r3,128(sp)
  8016cc:	d8801f17 	ldw	r2,124(sp)
  8016d0:	da000404 	addi	r8,sp,16
  8016d4:	003fee06 	br	801690 <__alt_data_end+0xff801690>
  8016d8:	d9403117 	ldw	r5,196(sp)
  8016dc:	d8802917 	ldw	r2,164(sp)
  8016e0:	28adc83a 	sub	r22,r5,r2
  8016e4:	05be410e 	bge	zero,r22,800fec <__alt_data_end+0xff800fec>
  8016e8:	07000404 	movi	fp,16
  8016ec:	d8801f17 	ldw	r2,124(sp)
  8016f0:	e5838f0e 	bge	fp,r22,802530 <___vfprintf_internal_r+0x1e50>
  8016f4:	01402074 	movhi	r5,129
  8016f8:	297f8784 	addi	r5,r5,-482
  8016fc:	dc403015 	stw	r17,192(sp)
  801700:	d9402c15 	stw	r5,176(sp)
  801704:	b023883a 	mov	r17,r22
  801708:	04c001c4 	movi	r19,7
  80170c:	a82d883a 	mov	r22,r21
  801710:	902b883a 	mov	r21,r18
  801714:	8025883a 	mov	r18,r16
  801718:	dc002d17 	ldw	r16,180(sp)
  80171c:	00000306 	br	80172c <___vfprintf_internal_r+0x104c>
  801720:	8c7ffc04 	addi	r17,r17,-16
  801724:	42000204 	addi	r8,r8,8
  801728:	e440110e 	bge	fp,r17,801770 <___vfprintf_internal_r+0x1090>
  80172c:	18c00404 	addi	r3,r3,16
  801730:	10800044 	addi	r2,r2,1
  801734:	45000015 	stw	r20,0(r8)
  801738:	47000115 	stw	fp,4(r8)
  80173c:	d8c02015 	stw	r3,128(sp)
  801740:	d8801f15 	stw	r2,124(sp)
  801744:	98bff60e 	bge	r19,r2,801720 <__alt_data_end+0xff801720>
  801748:	d9801e04 	addi	r6,sp,120
  80174c:	b80b883a 	mov	r5,r23
  801750:	8009883a 	mov	r4,r16
  801754:	0807ec00 	call	807ec0 <__sprint_r>
  801758:	103ce51e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  80175c:	8c7ffc04 	addi	r17,r17,-16
  801760:	d8c02017 	ldw	r3,128(sp)
  801764:	d8801f17 	ldw	r2,124(sp)
  801768:	da000404 	addi	r8,sp,16
  80176c:	e47fef16 	blt	fp,r17,80172c <__alt_data_end+0xff80172c>
  801770:	9021883a 	mov	r16,r18
  801774:	a825883a 	mov	r18,r21
  801778:	b02b883a 	mov	r21,r22
  80177c:	882d883a 	mov	r22,r17
  801780:	dc403017 	ldw	r17,192(sp)
  801784:	d9002c17 	ldw	r4,176(sp)
  801788:	1d87883a 	add	r3,r3,r22
  80178c:	10800044 	addi	r2,r2,1
  801790:	41000015 	stw	r4,0(r8)
  801794:	45800115 	stw	r22,4(r8)
  801798:	d8c02015 	stw	r3,128(sp)
  80179c:	d8801f15 	stw	r2,124(sp)
  8017a0:	010001c4 	movi	r4,7
  8017a4:	20818e16 	blt	r4,r2,801de0 <___vfprintf_internal_r+0x1700>
  8017a8:	42000204 	addi	r8,r8,8
  8017ac:	003e0f06 	br	800fec <__alt_data_end+0xff800fec>
  8017b0:	d9403317 	ldw	r5,204(sp)
  8017b4:	00800044 	movi	r2,1
  8017b8:	18c00044 	addi	r3,r3,1
  8017bc:	1141530e 	bge	r2,r5,801d0c <___vfprintf_internal_r+0x162c>
  8017c0:	dc401f17 	ldw	r17,124(sp)
  8017c4:	00800044 	movi	r2,1
  8017c8:	40800115 	stw	r2,4(r8)
  8017cc:	8c400044 	addi	r17,r17,1
  8017d0:	44000015 	stw	r16,0(r8)
  8017d4:	d8c02015 	stw	r3,128(sp)
  8017d8:	dc401f15 	stw	r17,124(sp)
  8017dc:	008001c4 	movi	r2,7
  8017e0:	14416b16 	blt	r2,r17,801d90 <___vfprintf_internal_r+0x16b0>
  8017e4:	42000204 	addi	r8,r8,8
  8017e8:	d8803717 	ldw	r2,220(sp)
  8017ec:	d9003417 	ldw	r4,208(sp)
  8017f0:	8c400044 	addi	r17,r17,1
  8017f4:	10c7883a 	add	r3,r2,r3
  8017f8:	40800115 	stw	r2,4(r8)
  8017fc:	41000015 	stw	r4,0(r8)
  801800:	d8c02015 	stw	r3,128(sp)
  801804:	dc401f15 	stw	r17,124(sp)
  801808:	008001c4 	movi	r2,7
  80180c:	14416916 	blt	r2,r17,801db4 <___vfprintf_internal_r+0x16d4>
  801810:	45800204 	addi	r22,r8,8
  801814:	d9003617 	ldw	r4,216(sp)
  801818:	d9403817 	ldw	r5,224(sp)
  80181c:	000d883a 	mov	r6,zero
  801820:	000f883a 	mov	r7,zero
  801824:	d8c03c15 	stw	r3,240(sp)
  801828:	080be200 	call	80be20 <__eqdf2>
  80182c:	d8c03c17 	ldw	r3,240(sp)
  801830:	1000bc26 	beq	r2,zero,801b24 <___vfprintf_internal_r+0x1444>
  801834:	d9403317 	ldw	r5,204(sp)
  801838:	84000044 	addi	r16,r16,1
  80183c:	8c400044 	addi	r17,r17,1
  801840:	28bfffc4 	addi	r2,r5,-1
  801844:	1887883a 	add	r3,r3,r2
  801848:	b0800115 	stw	r2,4(r22)
  80184c:	b4000015 	stw	r16,0(r22)
  801850:	d8c02015 	stw	r3,128(sp)
  801854:	dc401f15 	stw	r17,124(sp)
  801858:	008001c4 	movi	r2,7
  80185c:	14414316 	blt	r2,r17,801d6c <___vfprintf_internal_r+0x168c>
  801860:	b5800204 	addi	r22,r22,8
  801864:	d9003a17 	ldw	r4,232(sp)
  801868:	df0022c4 	addi	fp,sp,139
  80186c:	8c400044 	addi	r17,r17,1
  801870:	20c7883a 	add	r3,r4,r3
  801874:	b7000015 	stw	fp,0(r22)
  801878:	b1000115 	stw	r4,4(r22)
  80187c:	d8c02015 	stw	r3,128(sp)
  801880:	dc401f15 	stw	r17,124(sp)
  801884:	008001c4 	movi	r2,7
  801888:	14400e16 	blt	r2,r17,8018c4 <___vfprintf_internal_r+0x11e4>
  80188c:	b2000204 	addi	r8,r22,8
  801890:	003e1806 	br	8010f4 <__alt_data_end+0xff8010f4>
  801894:	01002074 	movhi	r4,129
  801898:	213f8784 	addi	r4,r4,-482
  80189c:	d9002c15 	stw	r4,176(sp)
  8018a0:	d9002c17 	ldw	r4,176(sp)
  8018a4:	1c07883a 	add	r3,r3,r16
  8018a8:	44000115 	stw	r16,4(r8)
  8018ac:	41000015 	stw	r4,0(r8)
  8018b0:	10800044 	addi	r2,r2,1
  8018b4:	d8c02015 	stw	r3,128(sp)
  8018b8:	d8801f15 	stw	r2,124(sp)
  8018bc:	010001c4 	movi	r4,7
  8018c0:	20be0b0e 	bge	r4,r2,8010f0 <__alt_data_end+0xff8010f0>
  8018c4:	d9002d17 	ldw	r4,180(sp)
  8018c8:	d9801e04 	addi	r6,sp,120
  8018cc:	b80b883a 	mov	r5,r23
  8018d0:	0807ec00 	call	807ec0 <__sprint_r>
  8018d4:	103c861e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  8018d8:	d8c02017 	ldw	r3,128(sp)
  8018dc:	da000404 	addi	r8,sp,16
  8018e0:	003e0406 	br	8010f4 <__alt_data_end+0xff8010f4>
  8018e4:	d9002d17 	ldw	r4,180(sp)
  8018e8:	d9801e04 	addi	r6,sp,120
  8018ec:	b80b883a 	mov	r5,r23
  8018f0:	0807ec00 	call	807ec0 <__sprint_r>
  8018f4:	103e3b26 	beq	r2,zero,8011e4 <__alt_data_end+0xff8011e4>
  8018f8:	003c7d06 	br	800af0 <__alt_data_end+0xff800af0>
  8018fc:	d9002d17 	ldw	r4,180(sp)
  801900:	d9801e04 	addi	r6,sp,120
  801904:	b80b883a 	mov	r5,r23
  801908:	0807ec00 	call	807ec0 <__sprint_r>
  80190c:	103c781e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801910:	d8c02017 	ldw	r3,128(sp)
  801914:	da000404 	addi	r8,sp,16
  801918:	003de906 	br	8010c0 <__alt_data_end+0xff8010c0>
  80191c:	d9002d17 	ldw	r4,180(sp)
  801920:	d9801e04 	addi	r6,sp,120
  801924:	b80b883a 	mov	r5,r23
  801928:	0807ec00 	call	807ec0 <__sprint_r>
  80192c:	103c701e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801930:	d8c02017 	ldw	r3,128(sp)
  801934:	da000404 	addi	r8,sp,16
  801938:	003d9b06 	br	800fa8 <__alt_data_end+0xff800fa8>
  80193c:	d9002d17 	ldw	r4,180(sp)
  801940:	d9801e04 	addi	r6,sp,120
  801944:	b80b883a 	mov	r5,r23
  801948:	0807ec00 	call	807ec0 <__sprint_r>
  80194c:	103c681e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801950:	d8c02017 	ldw	r3,128(sp)
  801954:	da000404 	addi	r8,sp,16
  801958:	003da106 	br	800fe0 <__alt_data_end+0xff800fe0>
  80195c:	d9402a17 	ldw	r5,168(sp)
  801960:	d8002785 	stb	zero,158(sp)
  801964:	283f0616 	blt	r5,zero,801580 <__alt_data_end+0xff801580>
  801968:	00ffdfc4 	movi	r3,-129
  80196c:	9d84b03a 	or	r2,r19,r22
  801970:	90e4703a 	and	r18,r18,r3
  801974:	103c3b26 	beq	r2,zero,800a64 <__alt_data_end+0xff800a64>
  801978:	0039883a 	mov	fp,zero
  80197c:	003e5806 	br	8012e0 <__alt_data_end+0xff8012e0>
  801980:	9080040c 	andi	r2,r18,16
  801984:	1001b326 	beq	r2,zero,802054 <___vfprintf_internal_r+0x1974>
  801988:	d8c02e17 	ldw	r3,184(sp)
  80198c:	d9002a17 	ldw	r4,168(sp)
  801990:	d8002785 	stb	zero,158(sp)
  801994:	18800104 	addi	r2,r3,4
  801998:	1cc00017 	ldw	r19,0(r3)
  80199c:	002d883a 	mov	r22,zero
  8019a0:	2001b516 	blt	r4,zero,802078 <___vfprintf_internal_r+0x1998>
  8019a4:	00ffdfc4 	movi	r3,-129
  8019a8:	d8802e15 	stw	r2,184(sp)
  8019ac:	90e4703a 	and	r18,r18,r3
  8019b0:	983d0526 	beq	r19,zero,800dc8 <__alt_data_end+0xff800dc8>
  8019b4:	0039883a 	mov	fp,zero
  8019b8:	003d0806 	br	800ddc <__alt_data_end+0xff800ddc>
  8019bc:	dc402617 	ldw	r17,152(sp)
  8019c0:	0441d30e 	bge	zero,r17,802110 <___vfprintf_internal_r+0x1a30>
  8019c4:	dc403217 	ldw	r17,200(sp)
  8019c8:	d8803317 	ldw	r2,204(sp)
  8019cc:	1440010e 	bge	r2,r17,8019d4 <___vfprintf_internal_r+0x12f4>
  8019d0:	1023883a 	mov	r17,r2
  8019d4:	04400a0e 	bge	zero,r17,801a00 <___vfprintf_internal_r+0x1320>
  8019d8:	d8801f17 	ldw	r2,124(sp)
  8019dc:	1c47883a 	add	r3,r3,r17
  8019e0:	44000015 	stw	r16,0(r8)
  8019e4:	10800044 	addi	r2,r2,1
  8019e8:	44400115 	stw	r17,4(r8)
  8019ec:	d8c02015 	stw	r3,128(sp)
  8019f0:	d8801f15 	stw	r2,124(sp)
  8019f4:	010001c4 	movi	r4,7
  8019f8:	20826516 	blt	r4,r2,802390 <___vfprintf_internal_r+0x1cb0>
  8019fc:	42000204 	addi	r8,r8,8
  801a00:	88026116 	blt	r17,zero,802388 <___vfprintf_internal_r+0x1ca8>
  801a04:	d9003217 	ldw	r4,200(sp)
  801a08:	2463c83a 	sub	r17,r4,r17
  801a0c:	04407b0e 	bge	zero,r17,801bfc <___vfprintf_internal_r+0x151c>
  801a10:	05800404 	movi	r22,16
  801a14:	d8801f17 	ldw	r2,124(sp)
  801a18:	b4419d0e 	bge	r22,r17,802090 <___vfprintf_internal_r+0x19b0>
  801a1c:	01002074 	movhi	r4,129
  801a20:	213f8784 	addi	r4,r4,-482
  801a24:	d9002c15 	stw	r4,176(sp)
  801a28:	070001c4 	movi	fp,7
  801a2c:	dcc02d17 	ldw	r19,180(sp)
  801a30:	00000306 	br	801a40 <___vfprintf_internal_r+0x1360>
  801a34:	42000204 	addi	r8,r8,8
  801a38:	8c7ffc04 	addi	r17,r17,-16
  801a3c:	b441970e 	bge	r22,r17,80209c <___vfprintf_internal_r+0x19bc>
  801a40:	18c00404 	addi	r3,r3,16
  801a44:	10800044 	addi	r2,r2,1
  801a48:	45000015 	stw	r20,0(r8)
  801a4c:	45800115 	stw	r22,4(r8)
  801a50:	d8c02015 	stw	r3,128(sp)
  801a54:	d8801f15 	stw	r2,124(sp)
  801a58:	e0bff60e 	bge	fp,r2,801a34 <__alt_data_end+0xff801a34>
  801a5c:	d9801e04 	addi	r6,sp,120
  801a60:	b80b883a 	mov	r5,r23
  801a64:	9809883a 	mov	r4,r19
  801a68:	0807ec00 	call	807ec0 <__sprint_r>
  801a6c:	103c201e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801a70:	d8c02017 	ldw	r3,128(sp)
  801a74:	d8801f17 	ldw	r2,124(sp)
  801a78:	da000404 	addi	r8,sp,16
  801a7c:	003fee06 	br	801a38 <__alt_data_end+0xff801a38>
  801a80:	d9002d17 	ldw	r4,180(sp)
  801a84:	d9801e04 	addi	r6,sp,120
  801a88:	b80b883a 	mov	r5,r23
  801a8c:	0807ec00 	call	807ec0 <__sprint_r>
  801a90:	103c171e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801a94:	d8c02017 	ldw	r3,128(sp)
  801a98:	df002787 	ldb	fp,158(sp)
  801a9c:	da000404 	addi	r8,sp,16
  801aa0:	003d3406 	br	800f74 <__alt_data_end+0xff800f74>
  801aa4:	9080040c 	andi	r2,r18,16
  801aa8:	10016126 	beq	r2,zero,802030 <___vfprintf_internal_r+0x1950>
  801aac:	d9402e17 	ldw	r5,184(sp)
  801ab0:	2cc00017 	ldw	r19,0(r5)
  801ab4:	29400104 	addi	r5,r5,4
  801ab8:	d9402e15 	stw	r5,184(sp)
  801abc:	982dd7fa 	srai	r22,r19,31
  801ac0:	b005883a 	mov	r2,r22
  801ac4:	003c5a06 	br	800c30 <__alt_data_end+0xff800c30>
  801ac8:	9080040c 	andi	r2,r18,16
  801acc:	10003526 	beq	r2,zero,801ba4 <___vfprintf_internal_r+0x14c4>
  801ad0:	d8c02e17 	ldw	r3,184(sp)
  801ad4:	d9002a17 	ldw	r4,168(sp)
  801ad8:	d8002785 	stb	zero,158(sp)
  801adc:	18800104 	addi	r2,r3,4
  801ae0:	1cc00017 	ldw	r19,0(r3)
  801ae4:	002d883a 	mov	r22,zero
  801ae8:	20003716 	blt	r4,zero,801bc8 <___vfprintf_internal_r+0x14e8>
  801aec:	00ffdfc4 	movi	r3,-129
  801af0:	d8802e15 	stw	r2,184(sp)
  801af4:	90e4703a 	and	r18,r18,r3
  801af8:	0039883a 	mov	fp,zero
  801afc:	983dd426 	beq	r19,zero,801250 <__alt_data_end+0xff801250>
  801b00:	00800244 	movi	r2,9
  801b04:	14fc5336 	bltu	r2,r19,800c54 <__alt_data_end+0xff800c54>
  801b08:	d8c02817 	ldw	r3,160(sp)
  801b0c:	dc001dc4 	addi	r16,sp,119
  801b10:	9cc00c04 	addi	r19,r19,48
  801b14:	1c07c83a 	sub	r3,r3,r16
  801b18:	dcc01dc5 	stb	r19,119(sp)
  801b1c:	d8c02b15 	stw	r3,172(sp)
  801b20:	003cc606 	br	800e3c <__alt_data_end+0xff800e3c>
  801b24:	d8803317 	ldw	r2,204(sp)
  801b28:	143fffc4 	addi	r16,r2,-1
  801b2c:	043f4d0e 	bge	zero,r16,801864 <__alt_data_end+0xff801864>
  801b30:	07000404 	movi	fp,16
  801b34:	e400810e 	bge	fp,r16,801d3c <___vfprintf_internal_r+0x165c>
  801b38:	01402074 	movhi	r5,129
  801b3c:	297f8784 	addi	r5,r5,-482
  801b40:	d9402c15 	stw	r5,176(sp)
  801b44:	01c001c4 	movi	r7,7
  801b48:	dcc02d17 	ldw	r19,180(sp)
  801b4c:	00000306 	br	801b5c <___vfprintf_internal_r+0x147c>
  801b50:	b5800204 	addi	r22,r22,8
  801b54:	843ffc04 	addi	r16,r16,-16
  801b58:	e4007b0e 	bge	fp,r16,801d48 <___vfprintf_internal_r+0x1668>
  801b5c:	18c00404 	addi	r3,r3,16
  801b60:	8c400044 	addi	r17,r17,1
  801b64:	b5000015 	stw	r20,0(r22)
  801b68:	b7000115 	stw	fp,4(r22)
  801b6c:	d8c02015 	stw	r3,128(sp)
  801b70:	dc401f15 	stw	r17,124(sp)
  801b74:	3c7ff60e 	bge	r7,r17,801b50 <__alt_data_end+0xff801b50>
  801b78:	d9801e04 	addi	r6,sp,120
  801b7c:	b80b883a 	mov	r5,r23
  801b80:	9809883a 	mov	r4,r19
  801b84:	d9c03c15 	stw	r7,240(sp)
  801b88:	0807ec00 	call	807ec0 <__sprint_r>
  801b8c:	d9c03c17 	ldw	r7,240(sp)
  801b90:	103bd71e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801b94:	d8c02017 	ldw	r3,128(sp)
  801b98:	dc401f17 	ldw	r17,124(sp)
  801b9c:	dd800404 	addi	r22,sp,16
  801ba0:	003fec06 	br	801b54 <__alt_data_end+0xff801b54>
  801ba4:	9080100c 	andi	r2,r18,64
  801ba8:	d8002785 	stb	zero,158(sp)
  801bac:	10010e26 	beq	r2,zero,801fe8 <___vfprintf_internal_r+0x1908>
  801bb0:	d9402e17 	ldw	r5,184(sp)
  801bb4:	d8c02a17 	ldw	r3,168(sp)
  801bb8:	002d883a 	mov	r22,zero
  801bbc:	28800104 	addi	r2,r5,4
  801bc0:	2cc0000b 	ldhu	r19,0(r5)
  801bc4:	183fc90e 	bge	r3,zero,801aec <__alt_data_end+0xff801aec>
  801bc8:	d8802e15 	stw	r2,184(sp)
  801bcc:	0039883a 	mov	fp,zero
  801bd0:	9d84b03a 	or	r2,r19,r22
  801bd4:	103c1e1e 	bne	r2,zero,800c50 <__alt_data_end+0xff800c50>
  801bd8:	00800044 	movi	r2,1
  801bdc:	003e6c06 	br	801590 <__alt_data_end+0xff801590>
  801be0:	d9002d17 	ldw	r4,180(sp)
  801be4:	d9801e04 	addi	r6,sp,120
  801be8:	b80b883a 	mov	r5,r23
  801bec:	0807ec00 	call	807ec0 <__sprint_r>
  801bf0:	103bbf1e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801bf4:	d8c02017 	ldw	r3,128(sp)
  801bf8:	da000404 	addi	r8,sp,16
  801bfc:	d9003217 	ldw	r4,200(sp)
  801c00:	d8802617 	ldw	r2,152(sp)
  801c04:	d9403317 	ldw	r5,204(sp)
  801c08:	8123883a 	add	r17,r16,r4
  801c0c:	11400216 	blt	r2,r5,801c18 <___vfprintf_internal_r+0x1538>
  801c10:	9100004c 	andi	r4,r18,1
  801c14:	20000d26 	beq	r4,zero,801c4c <___vfprintf_internal_r+0x156c>
  801c18:	d9003717 	ldw	r4,220(sp)
  801c1c:	d9403417 	ldw	r5,208(sp)
  801c20:	1907883a 	add	r3,r3,r4
  801c24:	d9001f17 	ldw	r4,124(sp)
  801c28:	41400015 	stw	r5,0(r8)
  801c2c:	d9403717 	ldw	r5,220(sp)
  801c30:	21000044 	addi	r4,r4,1
  801c34:	d8c02015 	stw	r3,128(sp)
  801c38:	41400115 	stw	r5,4(r8)
  801c3c:	d9001f15 	stw	r4,124(sp)
  801c40:	014001c4 	movi	r5,7
  801c44:	2901e816 	blt	r5,r4,8023e8 <___vfprintf_internal_r+0x1d08>
  801c48:	42000204 	addi	r8,r8,8
  801c4c:	d9003317 	ldw	r4,204(sp)
  801c50:	8121883a 	add	r16,r16,r4
  801c54:	2085c83a 	sub	r2,r4,r2
  801c58:	8461c83a 	sub	r16,r16,r17
  801c5c:	1400010e 	bge	r2,r16,801c64 <___vfprintf_internal_r+0x1584>
  801c60:	1021883a 	mov	r16,r2
  801c64:	04000a0e 	bge	zero,r16,801c90 <___vfprintf_internal_r+0x15b0>
  801c68:	d9001f17 	ldw	r4,124(sp)
  801c6c:	1c07883a 	add	r3,r3,r16
  801c70:	44400015 	stw	r17,0(r8)
  801c74:	21000044 	addi	r4,r4,1
  801c78:	44000115 	stw	r16,4(r8)
  801c7c:	d8c02015 	stw	r3,128(sp)
  801c80:	d9001f15 	stw	r4,124(sp)
  801c84:	014001c4 	movi	r5,7
  801c88:	2901fb16 	blt	r5,r4,802478 <___vfprintf_internal_r+0x1d98>
  801c8c:	42000204 	addi	r8,r8,8
  801c90:	8001f716 	blt	r16,zero,802470 <___vfprintf_internal_r+0x1d90>
  801c94:	1421c83a 	sub	r16,r2,r16
  801c98:	043d160e 	bge	zero,r16,8010f4 <__alt_data_end+0xff8010f4>
  801c9c:	04400404 	movi	r17,16
  801ca0:	d8801f17 	ldw	r2,124(sp)
  801ca4:	8c3efb0e 	bge	r17,r16,801894 <__alt_data_end+0xff801894>
  801ca8:	01402074 	movhi	r5,129
  801cac:	297f8784 	addi	r5,r5,-482
  801cb0:	d9402c15 	stw	r5,176(sp)
  801cb4:	058001c4 	movi	r22,7
  801cb8:	dcc02d17 	ldw	r19,180(sp)
  801cbc:	00000306 	br	801ccc <___vfprintf_internal_r+0x15ec>
  801cc0:	42000204 	addi	r8,r8,8
  801cc4:	843ffc04 	addi	r16,r16,-16
  801cc8:	8c3ef50e 	bge	r17,r16,8018a0 <__alt_data_end+0xff8018a0>
  801ccc:	18c00404 	addi	r3,r3,16
  801cd0:	10800044 	addi	r2,r2,1
  801cd4:	45000015 	stw	r20,0(r8)
  801cd8:	44400115 	stw	r17,4(r8)
  801cdc:	d8c02015 	stw	r3,128(sp)
  801ce0:	d8801f15 	stw	r2,124(sp)
  801ce4:	b0bff60e 	bge	r22,r2,801cc0 <__alt_data_end+0xff801cc0>
  801ce8:	d9801e04 	addi	r6,sp,120
  801cec:	b80b883a 	mov	r5,r23
  801cf0:	9809883a 	mov	r4,r19
  801cf4:	0807ec00 	call	807ec0 <__sprint_r>
  801cf8:	103b7d1e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801cfc:	d8c02017 	ldw	r3,128(sp)
  801d00:	d8801f17 	ldw	r2,124(sp)
  801d04:	da000404 	addi	r8,sp,16
  801d08:	003fee06 	br	801cc4 <__alt_data_end+0xff801cc4>
  801d0c:	9088703a 	and	r4,r18,r2
  801d10:	203eab1e 	bne	r4,zero,8017c0 <__alt_data_end+0xff8017c0>
  801d14:	dc401f17 	ldw	r17,124(sp)
  801d18:	40800115 	stw	r2,4(r8)
  801d1c:	44000015 	stw	r16,0(r8)
  801d20:	8c400044 	addi	r17,r17,1
  801d24:	d8c02015 	stw	r3,128(sp)
  801d28:	dc401f15 	stw	r17,124(sp)
  801d2c:	008001c4 	movi	r2,7
  801d30:	14400e16 	blt	r2,r17,801d6c <___vfprintf_internal_r+0x168c>
  801d34:	45800204 	addi	r22,r8,8
  801d38:	003eca06 	br	801864 <__alt_data_end+0xff801864>
  801d3c:	01002074 	movhi	r4,129
  801d40:	213f8784 	addi	r4,r4,-482
  801d44:	d9002c15 	stw	r4,176(sp)
  801d48:	d8802c17 	ldw	r2,176(sp)
  801d4c:	1c07883a 	add	r3,r3,r16
  801d50:	8c400044 	addi	r17,r17,1
  801d54:	b0800015 	stw	r2,0(r22)
  801d58:	b4000115 	stw	r16,4(r22)
  801d5c:	d8c02015 	stw	r3,128(sp)
  801d60:	dc401f15 	stw	r17,124(sp)
  801d64:	008001c4 	movi	r2,7
  801d68:	147ebd0e 	bge	r2,r17,801860 <__alt_data_end+0xff801860>
  801d6c:	d9002d17 	ldw	r4,180(sp)
  801d70:	d9801e04 	addi	r6,sp,120
  801d74:	b80b883a 	mov	r5,r23
  801d78:	0807ec00 	call	807ec0 <__sprint_r>
  801d7c:	103b5c1e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801d80:	d8c02017 	ldw	r3,128(sp)
  801d84:	dc401f17 	ldw	r17,124(sp)
  801d88:	dd800404 	addi	r22,sp,16
  801d8c:	003eb506 	br	801864 <__alt_data_end+0xff801864>
  801d90:	d9002d17 	ldw	r4,180(sp)
  801d94:	d9801e04 	addi	r6,sp,120
  801d98:	b80b883a 	mov	r5,r23
  801d9c:	0807ec00 	call	807ec0 <__sprint_r>
  801da0:	103b531e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801da4:	d8c02017 	ldw	r3,128(sp)
  801da8:	dc401f17 	ldw	r17,124(sp)
  801dac:	da000404 	addi	r8,sp,16
  801db0:	003e8d06 	br	8017e8 <__alt_data_end+0xff8017e8>
  801db4:	d9002d17 	ldw	r4,180(sp)
  801db8:	d9801e04 	addi	r6,sp,120
  801dbc:	b80b883a 	mov	r5,r23
  801dc0:	0807ec00 	call	807ec0 <__sprint_r>
  801dc4:	103b4a1e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801dc8:	d8c02017 	ldw	r3,128(sp)
  801dcc:	dc401f17 	ldw	r17,124(sp)
  801dd0:	dd800404 	addi	r22,sp,16
  801dd4:	003e8f06 	br	801814 <__alt_data_end+0xff801814>
  801dd8:	0027883a 	mov	r19,zero
  801ddc:	003f4a06 	br	801b08 <__alt_data_end+0xff801b08>
  801de0:	d9002d17 	ldw	r4,180(sp)
  801de4:	d9801e04 	addi	r6,sp,120
  801de8:	b80b883a 	mov	r5,r23
  801dec:	0807ec00 	call	807ec0 <__sprint_r>
  801df0:	103b3f1e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801df4:	d8c02017 	ldw	r3,128(sp)
  801df8:	da000404 	addi	r8,sp,16
  801dfc:	003c7b06 	br	800fec <__alt_data_end+0xff800fec>
  801e00:	d9402a17 	ldw	r5,168(sp)
  801e04:	04e7c83a 	sub	r19,zero,r19
  801e08:	07000b44 	movi	fp,45
  801e0c:	9804c03a 	cmpne	r2,r19,zero
  801e10:	05adc83a 	sub	r22,zero,r22
  801e14:	df002785 	stb	fp,158(sp)
  801e18:	b0adc83a 	sub	r22,r22,r2
  801e1c:	28017b16 	blt	r5,zero,80240c <___vfprintf_internal_r+0x1d2c>
  801e20:	00bfdfc4 	movi	r2,-129
  801e24:	90a4703a 	and	r18,r18,r2
  801e28:	003b8906 	br	800c50 <__alt_data_end+0xff800c50>
  801e2c:	d9003617 	ldw	r4,216(sp)
  801e30:	d9403817 	ldw	r5,224(sp)
  801e34:	da003d15 	stw	r8,244(sp)
  801e38:	0807ae40 	call	807ae4 <__fpclassifyd>
  801e3c:	da003d17 	ldw	r8,244(sp)
  801e40:	1000f026 	beq	r2,zero,802204 <___vfprintf_internal_r+0x1b24>
  801e44:	d9002a17 	ldw	r4,168(sp)
  801e48:	05bff7c4 	movi	r22,-33
  801e4c:	00bfffc4 	movi	r2,-1
  801e50:	8dac703a 	and	r22,r17,r22
  801e54:	20820026 	beq	r4,r2,802658 <___vfprintf_internal_r+0x1f78>
  801e58:	008011c4 	movi	r2,71
  801e5c:	b081f726 	beq	r22,r2,80263c <___vfprintf_internal_r+0x1f5c>
  801e60:	d9003817 	ldw	r4,224(sp)
  801e64:	90c04014 	ori	r3,r18,256
  801e68:	d8c02c15 	stw	r3,176(sp)
  801e6c:	20021516 	blt	r4,zero,8026c4 <___vfprintf_internal_r+0x1fe4>
  801e70:	dcc03817 	ldw	r19,224(sp)
  801e74:	d8002905 	stb	zero,164(sp)
  801e78:	00801984 	movi	r2,102
  801e7c:	8881f926 	beq	r17,r2,802664 <___vfprintf_internal_r+0x1f84>
  801e80:	00801184 	movi	r2,70
  801e84:	88821c26 	beq	r17,r2,8026f8 <___vfprintf_internal_r+0x2018>
  801e88:	00801144 	movi	r2,69
  801e8c:	b081ef26 	beq	r22,r2,80264c <___vfprintf_internal_r+0x1f6c>
  801e90:	d8c02a17 	ldw	r3,168(sp)
  801e94:	d8802104 	addi	r2,sp,132
  801e98:	d8800315 	stw	r2,12(sp)
  801e9c:	d9403617 	ldw	r5,216(sp)
  801ea0:	d8802504 	addi	r2,sp,148
  801ea4:	d9002d17 	ldw	r4,180(sp)
  801ea8:	d8800215 	stw	r2,8(sp)
  801eac:	d8802604 	addi	r2,sp,152
  801eb0:	d8c00015 	stw	r3,0(sp)
  801eb4:	d8800115 	stw	r2,4(sp)
  801eb8:	01c00084 	movi	r7,2
  801ebc:	980d883a 	mov	r6,r19
  801ec0:	d8c03c15 	stw	r3,240(sp)
  801ec4:	da003d15 	stw	r8,244(sp)
  801ec8:	0802e100 	call	802e10 <_dtoa_r>
  801ecc:	1021883a 	mov	r16,r2
  801ed0:	008019c4 	movi	r2,103
  801ed4:	d8c03c17 	ldw	r3,240(sp)
  801ed8:	da003d17 	ldw	r8,244(sp)
  801edc:	88817126 	beq	r17,r2,8024a4 <___vfprintf_internal_r+0x1dc4>
  801ee0:	008011c4 	movi	r2,71
  801ee4:	88829126 	beq	r17,r2,80292c <___vfprintf_internal_r+0x224c>
  801ee8:	80f9883a 	add	fp,r16,r3
  801eec:	d9003617 	ldw	r4,216(sp)
  801ef0:	000d883a 	mov	r6,zero
  801ef4:	000f883a 	mov	r7,zero
  801ef8:	980b883a 	mov	r5,r19
  801efc:	da003d15 	stw	r8,244(sp)
  801f00:	080be200 	call	80be20 <__eqdf2>
  801f04:	da003d17 	ldw	r8,244(sp)
  801f08:	10018d26 	beq	r2,zero,802540 <___vfprintf_internal_r+0x1e60>
  801f0c:	d8802117 	ldw	r2,132(sp)
  801f10:	1700062e 	bgeu	r2,fp,801f2c <___vfprintf_internal_r+0x184c>
  801f14:	01000c04 	movi	r4,48
  801f18:	10c00044 	addi	r3,r2,1
  801f1c:	d8c02115 	stw	r3,132(sp)
  801f20:	11000005 	stb	r4,0(r2)
  801f24:	d8802117 	ldw	r2,132(sp)
  801f28:	173ffb36 	bltu	r2,fp,801f18 <__alt_data_end+0xff801f18>
  801f2c:	1405c83a 	sub	r2,r2,r16
  801f30:	d8803315 	stw	r2,204(sp)
  801f34:	008011c4 	movi	r2,71
  801f38:	b0817626 	beq	r22,r2,802514 <___vfprintf_internal_r+0x1e34>
  801f3c:	00801944 	movi	r2,101
  801f40:	1442800e 	bge	r2,r17,802944 <___vfprintf_internal_r+0x2264>
  801f44:	d8c02617 	ldw	r3,152(sp)
  801f48:	00801984 	movi	r2,102
  801f4c:	d8c03215 	stw	r3,200(sp)
  801f50:	8881fe26 	beq	r17,r2,80274c <___vfprintf_internal_r+0x206c>
  801f54:	d8c03217 	ldw	r3,200(sp)
  801f58:	d9003317 	ldw	r4,204(sp)
  801f5c:	1901dd16 	blt	r3,r4,8026d4 <___vfprintf_internal_r+0x1ff4>
  801f60:	9480004c 	andi	r18,r18,1
  801f64:	90022b1e 	bne	r18,zero,802814 <___vfprintf_internal_r+0x2134>
  801f68:	1805883a 	mov	r2,r3
  801f6c:	18028316 	blt	r3,zero,80297c <___vfprintf_internal_r+0x229c>
  801f70:	d8c03217 	ldw	r3,200(sp)
  801f74:	044019c4 	movi	r17,103
  801f78:	d8c02b15 	stw	r3,172(sp)
  801f7c:	df002907 	ldb	fp,164(sp)
  801f80:	e001531e 	bne	fp,zero,8024d0 <___vfprintf_internal_r+0x1df0>
  801f84:	df002783 	ldbu	fp,158(sp)
  801f88:	d8802915 	stw	r2,164(sp)
  801f8c:	dc802c17 	ldw	r18,176(sp)
  801f90:	d8002a15 	stw	zero,168(sp)
  801f94:	003baf06 	br	800e54 <__alt_data_end+0xff800e54>
  801f98:	d8c02e17 	ldw	r3,184(sp)
  801f9c:	d9002e17 	ldw	r4,184(sp)
  801fa0:	d9402e17 	ldw	r5,184(sp)
  801fa4:	18c00017 	ldw	r3,0(r3)
  801fa8:	21000117 	ldw	r4,4(r4)
  801fac:	29400204 	addi	r5,r5,8
  801fb0:	d8c03615 	stw	r3,216(sp)
  801fb4:	d9003815 	stw	r4,224(sp)
  801fb8:	d9402e15 	stw	r5,184(sp)
  801fbc:	003b5006 	br	800d00 <__alt_data_end+0xff800d00>
  801fc0:	ac400007 	ldb	r17,0(r21)
  801fc4:	003a2806 	br	800868 <__alt_data_end+0xff800868>
  801fc8:	9080100c 	andi	r2,r18,64
  801fcc:	1000a826 	beq	r2,zero,802270 <___vfprintf_internal_r+0x1b90>
  801fd0:	d8c02e17 	ldw	r3,184(sp)
  801fd4:	002d883a 	mov	r22,zero
  801fd8:	1cc0000b 	ldhu	r19,0(r3)
  801fdc:	18c00104 	addi	r3,r3,4
  801fe0:	d8c02e15 	stw	r3,184(sp)
  801fe4:	003caf06 	br	8012a4 <__alt_data_end+0xff8012a4>
  801fe8:	d9002e17 	ldw	r4,184(sp)
  801fec:	d9402a17 	ldw	r5,168(sp)
  801ff0:	002d883a 	mov	r22,zero
  801ff4:	20800104 	addi	r2,r4,4
  801ff8:	24c00017 	ldw	r19,0(r4)
  801ffc:	283ebb0e 	bge	r5,zero,801aec <__alt_data_end+0xff801aec>
  802000:	003ef106 	br	801bc8 <__alt_data_end+0xff801bc8>
  802004:	9080040c 	andi	r2,r18,16
  802008:	1000921e 	bne	r2,zero,802254 <___vfprintf_internal_r+0x1b74>
  80200c:	9480100c 	andi	r18,r18,64
  802010:	90013926 	beq	r18,zero,8024f8 <___vfprintf_internal_r+0x1e18>
  802014:	d9402e17 	ldw	r5,184(sp)
  802018:	d8c02f17 	ldw	r3,188(sp)
  80201c:	28800017 	ldw	r2,0(r5)
  802020:	29400104 	addi	r5,r5,4
  802024:	d9402e15 	stw	r5,184(sp)
  802028:	10c0000d 	sth	r3,0(r2)
  80202c:	0039e406 	br	8007c0 <__alt_data_end+0xff8007c0>
  802030:	9080100c 	andi	r2,r18,64
  802034:	10008026 	beq	r2,zero,802238 <___vfprintf_internal_r+0x1b58>
  802038:	d8802e17 	ldw	r2,184(sp)
  80203c:	14c0000f 	ldh	r19,0(r2)
  802040:	10800104 	addi	r2,r2,4
  802044:	d8802e15 	stw	r2,184(sp)
  802048:	982dd7fa 	srai	r22,r19,31
  80204c:	b005883a 	mov	r2,r22
  802050:	003af706 	br	800c30 <__alt_data_end+0xff800c30>
  802054:	9080100c 	andi	r2,r18,64
  802058:	d8002785 	stb	zero,158(sp)
  80205c:	10008a1e 	bne	r2,zero,802288 <___vfprintf_internal_r+0x1ba8>
  802060:	d9002e17 	ldw	r4,184(sp)
  802064:	d9402a17 	ldw	r5,168(sp)
  802068:	002d883a 	mov	r22,zero
  80206c:	20800104 	addi	r2,r4,4
  802070:	24c00017 	ldw	r19,0(r4)
  802074:	283e4b0e 	bge	r5,zero,8019a4 <__alt_data_end+0xff8019a4>
  802078:	9d86b03a 	or	r3,r19,r22
  80207c:	d8802e15 	stw	r2,184(sp)
  802080:	183e4c1e 	bne	r3,zero,8019b4 <__alt_data_end+0xff8019b4>
  802084:	0039883a 	mov	fp,zero
  802088:	0005883a 	mov	r2,zero
  80208c:	003d4006 	br	801590 <__alt_data_end+0xff801590>
  802090:	01402074 	movhi	r5,129
  802094:	297f8784 	addi	r5,r5,-482
  802098:	d9402c15 	stw	r5,176(sp)
  80209c:	d9402c17 	ldw	r5,176(sp)
  8020a0:	1c47883a 	add	r3,r3,r17
  8020a4:	10800044 	addi	r2,r2,1
  8020a8:	41400015 	stw	r5,0(r8)
  8020ac:	44400115 	stw	r17,4(r8)
  8020b0:	d8c02015 	stw	r3,128(sp)
  8020b4:	d8801f15 	stw	r2,124(sp)
  8020b8:	010001c4 	movi	r4,7
  8020bc:	20bec816 	blt	r4,r2,801be0 <__alt_data_end+0xff801be0>
  8020c0:	42000204 	addi	r8,r8,8
  8020c4:	003ecd06 	br	801bfc <__alt_data_end+0xff801bfc>
  8020c8:	d9002a17 	ldw	r4,168(sp)
  8020cc:	d8002785 	stb	zero,158(sp)
  8020d0:	203d2d16 	blt	r4,zero,801588 <__alt_data_end+0xff801588>
  8020d4:	00bfdfc4 	movi	r2,-129
  8020d8:	90a4703a 	and	r18,r18,r2
  8020dc:	003a6106 	br	800a64 <__alt_data_end+0xff800a64>
  8020e0:	01002074 	movhi	r4,129
  8020e4:	213f8784 	addi	r4,r4,-482
  8020e8:	d9002c15 	stw	r4,176(sp)
  8020ec:	003bea06 	br	801098 <__alt_data_end+0xff801098>
  8020f0:	d9002d17 	ldw	r4,180(sp)
  8020f4:	d9801e04 	addi	r6,sp,120
  8020f8:	b80b883a 	mov	r5,r23
  8020fc:	0807ec00 	call	807ec0 <__sprint_r>
  802100:	103a7b1e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  802104:	d8c02017 	ldw	r3,128(sp)
  802108:	da000404 	addi	r8,sp,16
  80210c:	003d4106 	br	801614 <__alt_data_end+0xff801614>
  802110:	d8801f17 	ldw	r2,124(sp)
  802114:	01402074 	movhi	r5,129
  802118:	01000044 	movi	r4,1
  80211c:	18c00044 	addi	r3,r3,1
  802120:	10800044 	addi	r2,r2,1
  802124:	297f8704 	addi	r5,r5,-484
  802128:	41000115 	stw	r4,4(r8)
  80212c:	41400015 	stw	r5,0(r8)
  802130:	d8c02015 	stw	r3,128(sp)
  802134:	d8801f15 	stw	r2,124(sp)
  802138:	010001c4 	movi	r4,7
  80213c:	20805c16 	blt	r4,r2,8022b0 <___vfprintf_internal_r+0x1bd0>
  802140:	42000204 	addi	r8,r8,8
  802144:	8800041e 	bne	r17,zero,802158 <___vfprintf_internal_r+0x1a78>
  802148:	d8803317 	ldw	r2,204(sp)
  80214c:	1000021e 	bne	r2,zero,802158 <___vfprintf_internal_r+0x1a78>
  802150:	9080004c 	andi	r2,r18,1
  802154:	103be726 	beq	r2,zero,8010f4 <__alt_data_end+0xff8010f4>
  802158:	d9003717 	ldw	r4,220(sp)
  80215c:	d8801f17 	ldw	r2,124(sp)
  802160:	d9403417 	ldw	r5,208(sp)
  802164:	20c7883a 	add	r3,r4,r3
  802168:	10800044 	addi	r2,r2,1
  80216c:	41000115 	stw	r4,4(r8)
  802170:	41400015 	stw	r5,0(r8)
  802174:	d8c02015 	stw	r3,128(sp)
  802178:	d8801f15 	stw	r2,124(sp)
  80217c:	010001c4 	movi	r4,7
  802180:	20812116 	blt	r4,r2,802608 <___vfprintf_internal_r+0x1f28>
  802184:	42000204 	addi	r8,r8,8
  802188:	0463c83a 	sub	r17,zero,r17
  80218c:	0440730e 	bge	zero,r17,80235c <___vfprintf_internal_r+0x1c7c>
  802190:	05800404 	movi	r22,16
  802194:	b440860e 	bge	r22,r17,8023b0 <___vfprintf_internal_r+0x1cd0>
  802198:	01402074 	movhi	r5,129
  80219c:	297f8784 	addi	r5,r5,-482
  8021a0:	d9402c15 	stw	r5,176(sp)
  8021a4:	070001c4 	movi	fp,7
  8021a8:	dcc02d17 	ldw	r19,180(sp)
  8021ac:	00000306 	br	8021bc <___vfprintf_internal_r+0x1adc>
  8021b0:	42000204 	addi	r8,r8,8
  8021b4:	8c7ffc04 	addi	r17,r17,-16
  8021b8:	b440800e 	bge	r22,r17,8023bc <___vfprintf_internal_r+0x1cdc>
  8021bc:	18c00404 	addi	r3,r3,16
  8021c0:	10800044 	addi	r2,r2,1
  8021c4:	45000015 	stw	r20,0(r8)
  8021c8:	45800115 	stw	r22,4(r8)
  8021cc:	d8c02015 	stw	r3,128(sp)
  8021d0:	d8801f15 	stw	r2,124(sp)
  8021d4:	e0bff60e 	bge	fp,r2,8021b0 <__alt_data_end+0xff8021b0>
  8021d8:	d9801e04 	addi	r6,sp,120
  8021dc:	b80b883a 	mov	r5,r23
  8021e0:	9809883a 	mov	r4,r19
  8021e4:	0807ec00 	call	807ec0 <__sprint_r>
  8021e8:	103a411e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  8021ec:	d8c02017 	ldw	r3,128(sp)
  8021f0:	d8801f17 	ldw	r2,124(sp)
  8021f4:	da000404 	addi	r8,sp,16
  8021f8:	003fee06 	br	8021b4 <__alt_data_end+0xff8021b4>
  8021fc:	00bfffc4 	movi	r2,-1
  802200:	003a3f06 	br	800b00 <__alt_data_end+0xff800b00>
  802204:	008011c4 	movi	r2,71
  802208:	1440b816 	blt	r2,r17,8024ec <___vfprintf_internal_r+0x1e0c>
  80220c:	04002074 	movhi	r16,129
  802210:	843f7904 	addi	r16,r16,-540
  802214:	00c000c4 	movi	r3,3
  802218:	00bfdfc4 	movi	r2,-129
  80221c:	d8c02915 	stw	r3,164(sp)
  802220:	90a4703a 	and	r18,r18,r2
  802224:	df002783 	ldbu	fp,158(sp)
  802228:	d8c02b15 	stw	r3,172(sp)
  80222c:	d8002a15 	stw	zero,168(sp)
  802230:	d8003215 	stw	zero,200(sp)
  802234:	003b0706 	br	800e54 <__alt_data_end+0xff800e54>
  802238:	d8c02e17 	ldw	r3,184(sp)
  80223c:	1cc00017 	ldw	r19,0(r3)
  802240:	18c00104 	addi	r3,r3,4
  802244:	d8c02e15 	stw	r3,184(sp)
  802248:	982dd7fa 	srai	r22,r19,31
  80224c:	b005883a 	mov	r2,r22
  802250:	003a7706 	br	800c30 <__alt_data_end+0xff800c30>
  802254:	d8c02e17 	ldw	r3,184(sp)
  802258:	d9002f17 	ldw	r4,188(sp)
  80225c:	18800017 	ldw	r2,0(r3)
  802260:	18c00104 	addi	r3,r3,4
  802264:	d8c02e15 	stw	r3,184(sp)
  802268:	11000015 	stw	r4,0(r2)
  80226c:	00395406 	br	8007c0 <__alt_data_end+0xff8007c0>
  802270:	d9002e17 	ldw	r4,184(sp)
  802274:	002d883a 	mov	r22,zero
  802278:	24c00017 	ldw	r19,0(r4)
  80227c:	21000104 	addi	r4,r4,4
  802280:	d9002e15 	stw	r4,184(sp)
  802284:	003c0706 	br	8012a4 <__alt_data_end+0xff8012a4>
  802288:	d9402e17 	ldw	r5,184(sp)
  80228c:	d8c02a17 	ldw	r3,168(sp)
  802290:	002d883a 	mov	r22,zero
  802294:	28800104 	addi	r2,r5,4
  802298:	2cc0000b 	ldhu	r19,0(r5)
  80229c:	183dc10e 	bge	r3,zero,8019a4 <__alt_data_end+0xff8019a4>
  8022a0:	003f7506 	br	802078 <__alt_data_end+0xff802078>
  8022a4:	04002074 	movhi	r16,129
  8022a8:	843f7704 	addi	r16,r16,-548
  8022ac:	003aa706 	br	800d4c <__alt_data_end+0xff800d4c>
  8022b0:	d9002d17 	ldw	r4,180(sp)
  8022b4:	d9801e04 	addi	r6,sp,120
  8022b8:	b80b883a 	mov	r5,r23
  8022bc:	0807ec00 	call	807ec0 <__sprint_r>
  8022c0:	103a0b1e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  8022c4:	dc402617 	ldw	r17,152(sp)
  8022c8:	d8c02017 	ldw	r3,128(sp)
  8022cc:	da000404 	addi	r8,sp,16
  8022d0:	003f9c06 	br	802144 <__alt_data_end+0xff802144>
  8022d4:	ac400043 	ldbu	r17,1(r21)
  8022d8:	84000814 	ori	r16,r16,32
  8022dc:	ad400044 	addi	r21,r21,1
  8022e0:	8c403fcc 	andi	r17,r17,255
  8022e4:	8c40201c 	xori	r17,r17,128
  8022e8:	8c7fe004 	addi	r17,r17,-128
  8022ec:	00395e06 	br	800868 <__alt_data_end+0xff800868>
  8022f0:	d8c02e15 	stw	r3,184(sp)
  8022f4:	0039883a 	mov	fp,zero
  8022f8:	003e3506 	br	801bd0 <__alt_data_end+0xff801bd0>
  8022fc:	d9002d17 	ldw	r4,180(sp)
  802300:	d9801e04 	addi	r6,sp,120
  802304:	b80b883a 	mov	r5,r23
  802308:	0807ec00 	call	807ec0 <__sprint_r>
  80230c:	1039f81e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  802310:	d8c02017 	ldw	r3,128(sp)
  802314:	da000404 	addi	r8,sp,16
  802318:	003cd006 	br	80165c <__alt_data_end+0xff80165c>
  80231c:	8009883a 	mov	r4,r16
  802320:	df003d15 	stw	fp,244(sp)
  802324:	08006480 	call	800648 <strlen>
  802328:	d8802b15 	stw	r2,172(sp)
  80232c:	da003d17 	ldw	r8,244(sp)
  802330:	103c200e 	bge	r2,zero,8013b4 <__alt_data_end+0xff8013b4>
  802334:	0005883a 	mov	r2,zero
  802338:	003c1e06 	br	8013b4 <__alt_data_end+0xff8013b4>
  80233c:	d9002d17 	ldw	r4,180(sp)
  802340:	d9801e04 	addi	r6,sp,120
  802344:	b80b883a 	mov	r5,r23
  802348:	0807ec00 	call	807ec0 <__sprint_r>
  80234c:	1039e81e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  802350:	d8c02017 	ldw	r3,128(sp)
  802354:	d8801f17 	ldw	r2,124(sp)
  802358:	da000404 	addi	r8,sp,16
  80235c:	d9403317 	ldw	r5,204(sp)
  802360:	10800044 	addi	r2,r2,1
  802364:	44000015 	stw	r16,0(r8)
  802368:	28c7883a 	add	r3,r5,r3
  80236c:	003b5b06 	br	8010dc <__alt_data_end+0xff8010dc>
  802370:	01002074 	movhi	r4,129
  802374:	213f8b84 	addi	r4,r4,-466
  802378:	d9003515 	stw	r4,212(sp)
  80237c:	003af206 	br	800f48 <__alt_data_end+0xff800f48>
  802380:	013fffc4 	movi	r4,-1
  802384:	003a0806 	br	800ba8 <__alt_data_end+0xff800ba8>
  802388:	0023883a 	mov	r17,zero
  80238c:	003d9d06 	br	801a04 <__alt_data_end+0xff801a04>
  802390:	d9002d17 	ldw	r4,180(sp)
  802394:	d9801e04 	addi	r6,sp,120
  802398:	b80b883a 	mov	r5,r23
  80239c:	0807ec00 	call	807ec0 <__sprint_r>
  8023a0:	1039d31e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  8023a4:	d8c02017 	ldw	r3,128(sp)
  8023a8:	da000404 	addi	r8,sp,16
  8023ac:	003d9406 	br	801a00 <__alt_data_end+0xff801a00>
  8023b0:	01002074 	movhi	r4,129
  8023b4:	213f8784 	addi	r4,r4,-482
  8023b8:	d9002c15 	stw	r4,176(sp)
  8023bc:	d9002c17 	ldw	r4,176(sp)
  8023c0:	1c47883a 	add	r3,r3,r17
  8023c4:	10800044 	addi	r2,r2,1
  8023c8:	41000015 	stw	r4,0(r8)
  8023cc:	44400115 	stw	r17,4(r8)
  8023d0:	d8c02015 	stw	r3,128(sp)
  8023d4:	d8801f15 	stw	r2,124(sp)
  8023d8:	010001c4 	movi	r4,7
  8023dc:	20bfd716 	blt	r4,r2,80233c <__alt_data_end+0xff80233c>
  8023e0:	42000204 	addi	r8,r8,8
  8023e4:	003fdd06 	br	80235c <__alt_data_end+0xff80235c>
  8023e8:	d9002d17 	ldw	r4,180(sp)
  8023ec:	d9801e04 	addi	r6,sp,120
  8023f0:	b80b883a 	mov	r5,r23
  8023f4:	0807ec00 	call	807ec0 <__sprint_r>
  8023f8:	1039bd1e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  8023fc:	d8802617 	ldw	r2,152(sp)
  802400:	d8c02017 	ldw	r3,128(sp)
  802404:	da000404 	addi	r8,sp,16
  802408:	003e1006 	br	801c4c <__alt_data_end+0xff801c4c>
  80240c:	00800044 	movi	r2,1
  802410:	10803fcc 	andi	r2,r2,255
  802414:	00c00044 	movi	r3,1
  802418:	10fa0d26 	beq	r2,r3,800c50 <__alt_data_end+0xff800c50>
  80241c:	00c00084 	movi	r3,2
  802420:	10fbaf26 	beq	r2,r3,8012e0 <__alt_data_end+0xff8012e0>
  802424:	003a6d06 	br	800ddc <__alt_data_end+0xff800ddc>
  802428:	01002074 	movhi	r4,129
  80242c:	213f8b84 	addi	r4,r4,-466
  802430:	d9003515 	stw	r4,212(sp)
  802434:	003b5406 	br	801188 <__alt_data_end+0xff801188>
  802438:	d8802a17 	ldw	r2,168(sp)
  80243c:	00c00184 	movi	r3,6
  802440:	1880012e 	bgeu	r3,r2,802448 <___vfprintf_internal_r+0x1d68>
  802444:	1805883a 	mov	r2,r3
  802448:	d8802b15 	stw	r2,172(sp)
  80244c:	1000ef16 	blt	r2,zero,80280c <___vfprintf_internal_r+0x212c>
  802450:	04002074 	movhi	r16,129
  802454:	d8802915 	stw	r2,164(sp)
  802458:	dcc02e15 	stw	r19,184(sp)
  80245c:	d8002a15 	stw	zero,168(sp)
  802460:	d8003215 	stw	zero,200(sp)
  802464:	843f8504 	addi	r16,r16,-492
  802468:	0039883a 	mov	fp,zero
  80246c:	003a8006 	br	800e70 <__alt_data_end+0xff800e70>
  802470:	0021883a 	mov	r16,zero
  802474:	003e0706 	br	801c94 <__alt_data_end+0xff801c94>
  802478:	d9002d17 	ldw	r4,180(sp)
  80247c:	d9801e04 	addi	r6,sp,120
  802480:	b80b883a 	mov	r5,r23
  802484:	0807ec00 	call	807ec0 <__sprint_r>
  802488:	1039991e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  80248c:	d8802617 	ldw	r2,152(sp)
  802490:	d9403317 	ldw	r5,204(sp)
  802494:	d8c02017 	ldw	r3,128(sp)
  802498:	da000404 	addi	r8,sp,16
  80249c:	2885c83a 	sub	r2,r5,r2
  8024a0:	003dfb06 	br	801c90 <__alt_data_end+0xff801c90>
  8024a4:	9080004c 	andi	r2,r18,1
  8024a8:	103e8f1e 	bne	r2,zero,801ee8 <__alt_data_end+0xff801ee8>
  8024ac:	d8802117 	ldw	r2,132(sp)
  8024b0:	003e9e06 	br	801f2c <__alt_data_end+0xff801f2c>
  8024b4:	1025883a 	mov	r18,r2
  8024b8:	0039883a 	mov	fp,zero
  8024bc:	00800084 	movi	r2,2
  8024c0:	003fd306 	br	802410 <__alt_data_end+0xff802410>
  8024c4:	07000b44 	movi	fp,45
  8024c8:	df002785 	stb	fp,158(sp)
  8024cc:	003a1b06 	br	800d3c <__alt_data_end+0xff800d3c>
  8024d0:	00c00b44 	movi	r3,45
  8024d4:	d8c02785 	stb	r3,158(sp)
  8024d8:	d8802915 	stw	r2,164(sp)
  8024dc:	dc802c17 	ldw	r18,176(sp)
  8024e0:	d8002a15 	stw	zero,168(sp)
  8024e4:	07000b44 	movi	fp,45
  8024e8:	003a5e06 	br	800e64 <__alt_data_end+0xff800e64>
  8024ec:	04002074 	movhi	r16,129
  8024f0:	843f7a04 	addi	r16,r16,-536
  8024f4:	003f4706 	br	802214 <__alt_data_end+0xff802214>
  8024f8:	d9002e17 	ldw	r4,184(sp)
  8024fc:	d9402f17 	ldw	r5,188(sp)
  802500:	20800017 	ldw	r2,0(r4)
  802504:	21000104 	addi	r4,r4,4
  802508:	d9002e15 	stw	r4,184(sp)
  80250c:	11400015 	stw	r5,0(r2)
  802510:	0038ab06 	br	8007c0 <__alt_data_end+0xff8007c0>
  802514:	dd802617 	ldw	r22,152(sp)
  802518:	00bfff44 	movi	r2,-3
  80251c:	b0801c16 	blt	r22,r2,802590 <___vfprintf_internal_r+0x1eb0>
  802520:	d9402a17 	ldw	r5,168(sp)
  802524:	2d801a16 	blt	r5,r22,802590 <___vfprintf_internal_r+0x1eb0>
  802528:	dd803215 	stw	r22,200(sp)
  80252c:	003e8906 	br	801f54 <__alt_data_end+0xff801f54>
  802530:	01002074 	movhi	r4,129
  802534:	213f8784 	addi	r4,r4,-482
  802538:	d9002c15 	stw	r4,176(sp)
  80253c:	003c9106 	br	801784 <__alt_data_end+0xff801784>
  802540:	e005883a 	mov	r2,fp
  802544:	003e7906 	br	801f2c <__alt_data_end+0xff801f2c>
  802548:	d9002a17 	ldw	r4,168(sp)
  80254c:	df002783 	ldbu	fp,158(sp)
  802550:	dcc02e15 	stw	r19,184(sp)
  802554:	d9002915 	stw	r4,164(sp)
  802558:	d9002b15 	stw	r4,172(sp)
  80255c:	d8002a15 	stw	zero,168(sp)
  802560:	d8003215 	stw	zero,200(sp)
  802564:	003a3b06 	br	800e54 <__alt_data_end+0xff800e54>
  802568:	9080004c 	andi	r2,r18,1
  80256c:	0039883a 	mov	fp,zero
  802570:	10000426 	beq	r2,zero,802584 <___vfprintf_internal_r+0x1ea4>
  802574:	00800c04 	movi	r2,48
  802578:	dc001dc4 	addi	r16,sp,119
  80257c:	d8801dc5 	stb	r2,119(sp)
  802580:	003b6406 	br	801314 <__alt_data_end+0xff801314>
  802584:	d8002b15 	stw	zero,172(sp)
  802588:	dc001e04 	addi	r16,sp,120
  80258c:	003a2b06 	br	800e3c <__alt_data_end+0xff800e3c>
  802590:	8c7fff84 	addi	r17,r17,-2
  802594:	b5bfffc4 	addi	r22,r22,-1
  802598:	dd802615 	stw	r22,152(sp)
  80259c:	dc4022c5 	stb	r17,139(sp)
  8025a0:	b000bf16 	blt	r22,zero,8028a0 <___vfprintf_internal_r+0x21c0>
  8025a4:	00800ac4 	movi	r2,43
  8025a8:	d8802305 	stb	r2,140(sp)
  8025ac:	00800244 	movi	r2,9
  8025b0:	15807016 	blt	r2,r22,802774 <___vfprintf_internal_r+0x2094>
  8025b4:	00800c04 	movi	r2,48
  8025b8:	b5800c04 	addi	r22,r22,48
  8025bc:	d8802345 	stb	r2,141(sp)
  8025c0:	dd802385 	stb	r22,142(sp)
  8025c4:	d88023c4 	addi	r2,sp,143
  8025c8:	df0022c4 	addi	fp,sp,139
  8025cc:	d8c03317 	ldw	r3,204(sp)
  8025d0:	1739c83a 	sub	fp,r2,fp
  8025d4:	d9003317 	ldw	r4,204(sp)
  8025d8:	e0c7883a 	add	r3,fp,r3
  8025dc:	df003a15 	stw	fp,232(sp)
  8025e0:	d8c02b15 	stw	r3,172(sp)
  8025e4:	00800044 	movi	r2,1
  8025e8:	1100b30e 	bge	r2,r4,8028b8 <___vfprintf_internal_r+0x21d8>
  8025ec:	d8c02b17 	ldw	r3,172(sp)
  8025f0:	18c00044 	addi	r3,r3,1
  8025f4:	d8c02b15 	stw	r3,172(sp)
  8025f8:	1805883a 	mov	r2,r3
  8025fc:	1800ac16 	blt	r3,zero,8028b0 <___vfprintf_internal_r+0x21d0>
  802600:	d8003215 	stw	zero,200(sp)
  802604:	003e5d06 	br	801f7c <__alt_data_end+0xff801f7c>
  802608:	d9002d17 	ldw	r4,180(sp)
  80260c:	d9801e04 	addi	r6,sp,120
  802610:	b80b883a 	mov	r5,r23
  802614:	0807ec00 	call	807ec0 <__sprint_r>
  802618:	1039351e 	bne	r2,zero,800af0 <__alt_data_end+0xff800af0>
  80261c:	dc402617 	ldw	r17,152(sp)
  802620:	d8c02017 	ldw	r3,128(sp)
  802624:	d8801f17 	ldw	r2,124(sp)
  802628:	da000404 	addi	r8,sp,16
  80262c:	003ed606 	br	802188 <__alt_data_end+0xff802188>
  802630:	182b883a 	mov	r21,r3
  802634:	d8002a15 	stw	zero,168(sp)
  802638:	00388c06 	br	80086c <__alt_data_end+0xff80086c>
  80263c:	d8802a17 	ldw	r2,168(sp)
  802640:	103e071e 	bne	r2,zero,801e60 <__alt_data_end+0xff801e60>
  802644:	dc002a15 	stw	r16,168(sp)
  802648:	003e0506 	br	801e60 <__alt_data_end+0xff801e60>
  80264c:	d9002a17 	ldw	r4,168(sp)
  802650:	20c00044 	addi	r3,r4,1
  802654:	003e0f06 	br	801e94 <__alt_data_end+0xff801e94>
  802658:	01400184 	movi	r5,6
  80265c:	d9402a15 	stw	r5,168(sp)
  802660:	003dff06 	br	801e60 <__alt_data_end+0xff801e60>
  802664:	d8802104 	addi	r2,sp,132
  802668:	d8800315 	stw	r2,12(sp)
  80266c:	d8802504 	addi	r2,sp,148
  802670:	d8800215 	stw	r2,8(sp)
  802674:	d8802604 	addi	r2,sp,152
  802678:	d8800115 	stw	r2,4(sp)
  80267c:	d8802a17 	ldw	r2,168(sp)
  802680:	d9403617 	ldw	r5,216(sp)
  802684:	d9002d17 	ldw	r4,180(sp)
  802688:	d8800015 	stw	r2,0(sp)
  80268c:	01c000c4 	movi	r7,3
  802690:	980d883a 	mov	r6,r19
  802694:	da003d15 	stw	r8,244(sp)
  802698:	0802e100 	call	802e10 <_dtoa_r>
  80269c:	d8c02a17 	ldw	r3,168(sp)
  8026a0:	da003d17 	ldw	r8,244(sp)
  8026a4:	1021883a 	mov	r16,r2
  8026a8:	10f9883a 	add	fp,r2,r3
  8026ac:	81000007 	ldb	r4,0(r16)
  8026b0:	00800c04 	movi	r2,48
  8026b4:	20805e26 	beq	r4,r2,802830 <___vfprintf_internal_r+0x2150>
  8026b8:	d8c02617 	ldw	r3,152(sp)
  8026bc:	e0f9883a 	add	fp,fp,r3
  8026c0:	003e0a06 	br	801eec <__alt_data_end+0xff801eec>
  8026c4:	00c00b44 	movi	r3,45
  8026c8:	24e0003c 	xorhi	r19,r4,32768
  8026cc:	d8c02905 	stb	r3,164(sp)
  8026d0:	003de906 	br	801e78 <__alt_data_end+0xff801e78>
  8026d4:	d8c03217 	ldw	r3,200(sp)
  8026d8:	00c07a0e 	bge	zero,r3,8028c4 <___vfprintf_internal_r+0x21e4>
  8026dc:	00800044 	movi	r2,1
  8026e0:	d9003317 	ldw	r4,204(sp)
  8026e4:	1105883a 	add	r2,r2,r4
  8026e8:	d8802b15 	stw	r2,172(sp)
  8026ec:	10004e16 	blt	r2,zero,802828 <___vfprintf_internal_r+0x2148>
  8026f0:	044019c4 	movi	r17,103
  8026f4:	003e2106 	br	801f7c <__alt_data_end+0xff801f7c>
  8026f8:	d9002a17 	ldw	r4,168(sp)
  8026fc:	d8802104 	addi	r2,sp,132
  802700:	d8800315 	stw	r2,12(sp)
  802704:	d9000015 	stw	r4,0(sp)
  802708:	d8802504 	addi	r2,sp,148
  80270c:	d9403617 	ldw	r5,216(sp)
  802710:	d9002d17 	ldw	r4,180(sp)
  802714:	d8800215 	stw	r2,8(sp)
  802718:	d8802604 	addi	r2,sp,152
  80271c:	d8800115 	stw	r2,4(sp)
  802720:	01c000c4 	movi	r7,3
  802724:	980d883a 	mov	r6,r19
  802728:	da003d15 	stw	r8,244(sp)
  80272c:	0802e100 	call	802e10 <_dtoa_r>
  802730:	d8c02a17 	ldw	r3,168(sp)
  802734:	da003d17 	ldw	r8,244(sp)
  802738:	1021883a 	mov	r16,r2
  80273c:	00801184 	movi	r2,70
  802740:	80f9883a 	add	fp,r16,r3
  802744:	88bfd926 	beq	r17,r2,8026ac <__alt_data_end+0xff8026ac>
  802748:	003de806 	br	801eec <__alt_data_end+0xff801eec>
  80274c:	d9002a17 	ldw	r4,168(sp)
  802750:	00c04d0e 	bge	zero,r3,802888 <___vfprintf_internal_r+0x21a8>
  802754:	2000441e 	bne	r4,zero,802868 <___vfprintf_internal_r+0x2188>
  802758:	9480004c 	andi	r18,r18,1
  80275c:	9000421e 	bne	r18,zero,802868 <___vfprintf_internal_r+0x2188>
  802760:	1805883a 	mov	r2,r3
  802764:	18006f16 	blt	r3,zero,802924 <___vfprintf_internal_r+0x2244>
  802768:	d8c03217 	ldw	r3,200(sp)
  80276c:	d8c02b15 	stw	r3,172(sp)
  802770:	003e0206 	br	801f7c <__alt_data_end+0xff801f7c>
  802774:	df0022c4 	addi	fp,sp,139
  802778:	dc002a15 	stw	r16,168(sp)
  80277c:	4027883a 	mov	r19,r8
  802780:	e021883a 	mov	r16,fp
  802784:	b009883a 	mov	r4,r22
  802788:	01400284 	movi	r5,10
  80278c:	080aa4c0 	call	80aa4c <__modsi3>
  802790:	10800c04 	addi	r2,r2,48
  802794:	843fffc4 	addi	r16,r16,-1
  802798:	b009883a 	mov	r4,r22
  80279c:	01400284 	movi	r5,10
  8027a0:	80800005 	stb	r2,0(r16)
  8027a4:	080a9c80 	call	80a9c8 <__divsi3>
  8027a8:	102d883a 	mov	r22,r2
  8027ac:	00800244 	movi	r2,9
  8027b0:	15bff416 	blt	r2,r22,802784 <__alt_data_end+0xff802784>
  8027b4:	9811883a 	mov	r8,r19
  8027b8:	b0800c04 	addi	r2,r22,48
  8027bc:	8027883a 	mov	r19,r16
  8027c0:	997fffc4 	addi	r5,r19,-1
  8027c4:	98bfffc5 	stb	r2,-1(r19)
  8027c8:	dc002a17 	ldw	r16,168(sp)
  8027cc:	2f006d2e 	bgeu	r5,fp,802984 <___vfprintf_internal_r+0x22a4>
  8027d0:	d9c02384 	addi	r7,sp,142
  8027d4:	3ccfc83a 	sub	r7,r7,r19
  8027d8:	d9002344 	addi	r4,sp,141
  8027dc:	e1cf883a 	add	r7,fp,r7
  8027e0:	00000106 	br	8027e8 <___vfprintf_internal_r+0x2108>
  8027e4:	28800003 	ldbu	r2,0(r5)
  8027e8:	20800005 	stb	r2,0(r4)
  8027ec:	21000044 	addi	r4,r4,1
  8027f0:	29400044 	addi	r5,r5,1
  8027f4:	393ffb1e 	bne	r7,r4,8027e4 <__alt_data_end+0xff8027e4>
  8027f8:	d8802304 	addi	r2,sp,140
  8027fc:	14c5c83a 	sub	r2,r2,r19
  802800:	d8c02344 	addi	r3,sp,141
  802804:	1885883a 	add	r2,r3,r2
  802808:	003f7006 	br	8025cc <__alt_data_end+0xff8025cc>
  80280c:	0005883a 	mov	r2,zero
  802810:	003f0f06 	br	802450 <__alt_data_end+0xff802450>
  802814:	d8c03217 	ldw	r3,200(sp)
  802818:	18c00044 	addi	r3,r3,1
  80281c:	d8c02b15 	stw	r3,172(sp)
  802820:	1805883a 	mov	r2,r3
  802824:	183fb20e 	bge	r3,zero,8026f0 <__alt_data_end+0xff8026f0>
  802828:	0005883a 	mov	r2,zero
  80282c:	003fb006 	br	8026f0 <__alt_data_end+0xff8026f0>
  802830:	d9003617 	ldw	r4,216(sp)
  802834:	000d883a 	mov	r6,zero
  802838:	000f883a 	mov	r7,zero
  80283c:	980b883a 	mov	r5,r19
  802840:	d8c03c15 	stw	r3,240(sp)
  802844:	da003d15 	stw	r8,244(sp)
  802848:	080be200 	call	80be20 <__eqdf2>
  80284c:	d8c03c17 	ldw	r3,240(sp)
  802850:	da003d17 	ldw	r8,244(sp)
  802854:	103f9826 	beq	r2,zero,8026b8 <__alt_data_end+0xff8026b8>
  802858:	00800044 	movi	r2,1
  80285c:	10c7c83a 	sub	r3,r2,r3
  802860:	d8c02615 	stw	r3,152(sp)
  802864:	003f9506 	br	8026bc <__alt_data_end+0xff8026bc>
  802868:	d9002a17 	ldw	r4,168(sp)
  80286c:	d8c03217 	ldw	r3,200(sp)
  802870:	20800044 	addi	r2,r4,1
  802874:	1885883a 	add	r2,r3,r2
  802878:	d8802b15 	stw	r2,172(sp)
  80287c:	103dbf0e 	bge	r2,zero,801f7c <__alt_data_end+0xff801f7c>
  802880:	0005883a 	mov	r2,zero
  802884:	003dbd06 	br	801f7c <__alt_data_end+0xff801f7c>
  802888:	2000201e 	bne	r4,zero,80290c <___vfprintf_internal_r+0x222c>
  80288c:	9480004c 	andi	r18,r18,1
  802890:	90001e1e 	bne	r18,zero,80290c <___vfprintf_internal_r+0x222c>
  802894:	00800044 	movi	r2,1
  802898:	d8802b15 	stw	r2,172(sp)
  80289c:	003db706 	br	801f7c <__alt_data_end+0xff801f7c>
  8028a0:	00800b44 	movi	r2,45
  8028a4:	05adc83a 	sub	r22,zero,r22
  8028a8:	d8802305 	stb	r2,140(sp)
  8028ac:	003f3f06 	br	8025ac <__alt_data_end+0xff8025ac>
  8028b0:	0005883a 	mov	r2,zero
  8028b4:	003f5206 	br	802600 <__alt_data_end+0xff802600>
  8028b8:	90a4703a 	and	r18,r18,r2
  8028bc:	903f4e26 	beq	r18,zero,8025f8 <__alt_data_end+0xff8025f8>
  8028c0:	003f4a06 	br	8025ec <__alt_data_end+0xff8025ec>
  8028c4:	00800084 	movi	r2,2
  8028c8:	10c5c83a 	sub	r2,r2,r3
  8028cc:	003f8406 	br	8026e0 <__alt_data_end+0xff8026e0>
  8028d0:	d9402e17 	ldw	r5,184(sp)
  8028d4:	d9002e17 	ldw	r4,184(sp)
  8028d8:	ac400043 	ldbu	r17,1(r21)
  8028dc:	29400017 	ldw	r5,0(r5)
  8028e0:	20800104 	addi	r2,r4,4
  8028e4:	d8802e15 	stw	r2,184(sp)
  8028e8:	d9402a15 	stw	r5,168(sp)
  8028ec:	182b883a 	mov	r21,r3
  8028f0:	283e7b0e 	bge	r5,zero,8022e0 <__alt_data_end+0xff8022e0>
  8028f4:	8c403fcc 	andi	r17,r17,255
  8028f8:	017fffc4 	movi	r5,-1
  8028fc:	8c40201c 	xori	r17,r17,128
  802900:	d9402a15 	stw	r5,168(sp)
  802904:	8c7fe004 	addi	r17,r17,-128
  802908:	0037d706 	br	800868 <__alt_data_end+0xff800868>
  80290c:	d8c02a17 	ldw	r3,168(sp)
  802910:	18c00084 	addi	r3,r3,2
  802914:	d8c02b15 	stw	r3,172(sp)
  802918:	1805883a 	mov	r2,r3
  80291c:	183d970e 	bge	r3,zero,801f7c <__alt_data_end+0xff801f7c>
  802920:	003fd706 	br	802880 <__alt_data_end+0xff802880>
  802924:	0005883a 	mov	r2,zero
  802928:	003f8f06 	br	802768 <__alt_data_end+0xff802768>
  80292c:	9080004c 	andi	r2,r18,1
  802930:	103f821e 	bne	r2,zero,80273c <__alt_data_end+0xff80273c>
  802934:	d8802117 	ldw	r2,132(sp)
  802938:	1405c83a 	sub	r2,r2,r16
  80293c:	d8803315 	stw	r2,204(sp)
  802940:	b47ef426 	beq	r22,r17,802514 <__alt_data_end+0xff802514>
  802944:	dd802617 	ldw	r22,152(sp)
  802948:	003f1206 	br	802594 <__alt_data_end+0xff802594>
  80294c:	d8c02b03 	ldbu	r3,172(sp)
  802950:	d8c02785 	stb	r3,158(sp)
  802954:	0038df06 	br	800cd4 <__alt_data_end+0xff800cd4>
  802958:	d8c02b03 	ldbu	r3,172(sp)
  80295c:	d8c02785 	stb	r3,158(sp)
  802960:	0038aa06 	br	800c0c <__alt_data_end+0xff800c0c>
  802964:	d8c02b03 	ldbu	r3,172(sp)
  802968:	d8c02785 	stb	r3,158(sp)
  80296c:	003a4306 	br	80127c <__alt_data_end+0xff80127c>
  802970:	d8c02b03 	ldbu	r3,172(sp)
  802974:	d8c02785 	stb	r3,158(sp)
  802978:	003af506 	br	801550 <__alt_data_end+0xff801550>
  80297c:	0005883a 	mov	r2,zero
  802980:	003d7b06 	br	801f70 <__alt_data_end+0xff801f70>
  802984:	d8802344 	addi	r2,sp,141
  802988:	003f1006 	br	8025cc <__alt_data_end+0xff8025cc>
  80298c:	d8c02b03 	ldbu	r3,172(sp)
  802990:	d8c02785 	stb	r3,158(sp)
  802994:	0038fd06 	br	800d8c <__alt_data_end+0xff800d8c>
  802998:	d8c02b03 	ldbu	r3,172(sp)
  80299c:	d8c02785 	stb	r3,158(sp)
  8029a0:	003a9706 	br	801400 <__alt_data_end+0xff801400>
  8029a4:	d8c02b03 	ldbu	r3,172(sp)
  8029a8:	d8c02785 	stb	r3,158(sp)
  8029ac:	003a1806 	br	801210 <__alt_data_end+0xff801210>
  8029b0:	d8c02b03 	ldbu	r3,172(sp)
  8029b4:	d8c02785 	stb	r3,158(sp)
  8029b8:	003abe06 	br	8014b4 <__alt_data_end+0xff8014b4>

008029bc <__vfprintf_internal>:
  8029bc:	00802074 	movhi	r2,129
  8029c0:	1086a004 	addi	r2,r2,6784
  8029c4:	300f883a 	mov	r7,r6
  8029c8:	280d883a 	mov	r6,r5
  8029cc:	200b883a 	mov	r5,r4
  8029d0:	11000017 	ldw	r4,0(r2)
  8029d4:	08006e01 	jmpi	8006e0 <___vfprintf_internal_r>

008029d8 <__sbprintf>:
  8029d8:	2880030b 	ldhu	r2,12(r5)
  8029dc:	2ac01917 	ldw	r11,100(r5)
  8029e0:	2a80038b 	ldhu	r10,14(r5)
  8029e4:	2a400717 	ldw	r9,28(r5)
  8029e8:	2a000917 	ldw	r8,36(r5)
  8029ec:	defee204 	addi	sp,sp,-1144
  8029f0:	00c10004 	movi	r3,1024
  8029f4:	dc011a15 	stw	r16,1128(sp)
  8029f8:	10bfff4c 	andi	r2,r2,65533
  8029fc:	2821883a 	mov	r16,r5
  802a00:	d8cb883a 	add	r5,sp,r3
  802a04:	dc811c15 	stw	r18,1136(sp)
  802a08:	dc411b15 	stw	r17,1132(sp)
  802a0c:	dfc11d15 	stw	ra,1140(sp)
  802a10:	2025883a 	mov	r18,r4
  802a14:	d881030d 	sth	r2,1036(sp)
  802a18:	dac11915 	stw	r11,1124(sp)
  802a1c:	da81038d 	sth	r10,1038(sp)
  802a20:	da410715 	stw	r9,1052(sp)
  802a24:	da010915 	stw	r8,1060(sp)
  802a28:	dec10015 	stw	sp,1024(sp)
  802a2c:	dec10415 	stw	sp,1040(sp)
  802a30:	d8c10215 	stw	r3,1032(sp)
  802a34:	d8c10515 	stw	r3,1044(sp)
  802a38:	d8010615 	stw	zero,1048(sp)
  802a3c:	08006e00 	call	8006e0 <___vfprintf_internal_r>
  802a40:	1023883a 	mov	r17,r2
  802a44:	10000416 	blt	r2,zero,802a58 <__sbprintf+0x80>
  802a48:	d9410004 	addi	r5,sp,1024
  802a4c:	9009883a 	mov	r4,r18
  802a50:	08046b40 	call	8046b4 <_fflush_r>
  802a54:	10000d1e 	bne	r2,zero,802a8c <__sbprintf+0xb4>
  802a58:	d881030b 	ldhu	r2,1036(sp)
  802a5c:	1080100c 	andi	r2,r2,64
  802a60:	10000326 	beq	r2,zero,802a70 <__sbprintf+0x98>
  802a64:	8080030b 	ldhu	r2,12(r16)
  802a68:	10801014 	ori	r2,r2,64
  802a6c:	8080030d 	sth	r2,12(r16)
  802a70:	8805883a 	mov	r2,r17
  802a74:	dfc11d17 	ldw	ra,1140(sp)
  802a78:	dc811c17 	ldw	r18,1136(sp)
  802a7c:	dc411b17 	ldw	r17,1132(sp)
  802a80:	dc011a17 	ldw	r16,1128(sp)
  802a84:	dec11e04 	addi	sp,sp,1144
  802a88:	f800283a 	ret
  802a8c:	047fffc4 	movi	r17,-1
  802a90:	003ff106 	br	802a58 <__alt_data_end+0xff802a58>

00802a94 <__swsetup_r>:
  802a94:	00802074 	movhi	r2,129
  802a98:	defffd04 	addi	sp,sp,-12
  802a9c:	1086a004 	addi	r2,r2,6784
  802aa0:	dc400115 	stw	r17,4(sp)
  802aa4:	2023883a 	mov	r17,r4
  802aa8:	11000017 	ldw	r4,0(r2)
  802aac:	dc000015 	stw	r16,0(sp)
  802ab0:	dfc00215 	stw	ra,8(sp)
  802ab4:	2821883a 	mov	r16,r5
  802ab8:	20000226 	beq	r4,zero,802ac4 <__swsetup_r+0x30>
  802abc:	20800e17 	ldw	r2,56(r4)
  802ac0:	10003126 	beq	r2,zero,802b88 <__swsetup_r+0xf4>
  802ac4:	8080030b 	ldhu	r2,12(r16)
  802ac8:	10c0020c 	andi	r3,r2,8
  802acc:	1009883a 	mov	r4,r2
  802ad0:	18000f26 	beq	r3,zero,802b10 <__swsetup_r+0x7c>
  802ad4:	80c00417 	ldw	r3,16(r16)
  802ad8:	18001526 	beq	r3,zero,802b30 <__swsetup_r+0x9c>
  802adc:	1100004c 	andi	r4,r2,1
  802ae0:	20001c1e 	bne	r4,zero,802b54 <__swsetup_r+0xc0>
  802ae4:	1080008c 	andi	r2,r2,2
  802ae8:	1000291e 	bne	r2,zero,802b90 <__swsetup_r+0xfc>
  802aec:	80800517 	ldw	r2,20(r16)
  802af0:	80800215 	stw	r2,8(r16)
  802af4:	18001c26 	beq	r3,zero,802b68 <__swsetup_r+0xd4>
  802af8:	0005883a 	mov	r2,zero
  802afc:	dfc00217 	ldw	ra,8(sp)
  802b00:	dc400117 	ldw	r17,4(sp)
  802b04:	dc000017 	ldw	r16,0(sp)
  802b08:	dec00304 	addi	sp,sp,12
  802b0c:	f800283a 	ret
  802b10:	2080040c 	andi	r2,r4,16
  802b14:	10002e26 	beq	r2,zero,802bd0 <__swsetup_r+0x13c>
  802b18:	2080010c 	andi	r2,r4,4
  802b1c:	10001e1e 	bne	r2,zero,802b98 <__swsetup_r+0x104>
  802b20:	80c00417 	ldw	r3,16(r16)
  802b24:	20800214 	ori	r2,r4,8
  802b28:	8080030d 	sth	r2,12(r16)
  802b2c:	183feb1e 	bne	r3,zero,802adc <__alt_data_end+0xff802adc>
  802b30:	1100a00c 	andi	r4,r2,640
  802b34:	01408004 	movi	r5,512
  802b38:	217fe826 	beq	r4,r5,802adc <__alt_data_end+0xff802adc>
  802b3c:	800b883a 	mov	r5,r16
  802b40:	8809883a 	mov	r4,r17
  802b44:	08056500 	call	805650 <__smakebuf_r>
  802b48:	8080030b 	ldhu	r2,12(r16)
  802b4c:	80c00417 	ldw	r3,16(r16)
  802b50:	003fe206 	br	802adc <__alt_data_end+0xff802adc>
  802b54:	80800517 	ldw	r2,20(r16)
  802b58:	80000215 	stw	zero,8(r16)
  802b5c:	0085c83a 	sub	r2,zero,r2
  802b60:	80800615 	stw	r2,24(r16)
  802b64:	183fe41e 	bne	r3,zero,802af8 <__alt_data_end+0xff802af8>
  802b68:	80c0030b 	ldhu	r3,12(r16)
  802b6c:	0005883a 	mov	r2,zero
  802b70:	1900200c 	andi	r4,r3,128
  802b74:	203fe126 	beq	r4,zero,802afc <__alt_data_end+0xff802afc>
  802b78:	18c01014 	ori	r3,r3,64
  802b7c:	80c0030d 	sth	r3,12(r16)
  802b80:	00bfffc4 	movi	r2,-1
  802b84:	003fdd06 	br	802afc <__alt_data_end+0xff802afc>
  802b88:	0804aa00 	call	804aa0 <__sinit>
  802b8c:	003fcd06 	br	802ac4 <__alt_data_end+0xff802ac4>
  802b90:	0005883a 	mov	r2,zero
  802b94:	003fd606 	br	802af0 <__alt_data_end+0xff802af0>
  802b98:	81400c17 	ldw	r5,48(r16)
  802b9c:	28000626 	beq	r5,zero,802bb8 <__swsetup_r+0x124>
  802ba0:	80801004 	addi	r2,r16,64
  802ba4:	28800326 	beq	r5,r2,802bb4 <__swsetup_r+0x120>
  802ba8:	8809883a 	mov	r4,r17
  802bac:	0804c140 	call	804c14 <_free_r>
  802bb0:	8100030b 	ldhu	r4,12(r16)
  802bb4:	80000c15 	stw	zero,48(r16)
  802bb8:	80c00417 	ldw	r3,16(r16)
  802bbc:	00bff6c4 	movi	r2,-37
  802bc0:	1108703a 	and	r4,r2,r4
  802bc4:	80000115 	stw	zero,4(r16)
  802bc8:	80c00015 	stw	r3,0(r16)
  802bcc:	003fd506 	br	802b24 <__alt_data_end+0xff802b24>
  802bd0:	00800244 	movi	r2,9
  802bd4:	88800015 	stw	r2,0(r17)
  802bd8:	20801014 	ori	r2,r4,64
  802bdc:	8080030d 	sth	r2,12(r16)
  802be0:	00bfffc4 	movi	r2,-1
  802be4:	003fc506 	br	802afc <__alt_data_end+0xff802afc>

00802be8 <quorem>:
  802be8:	defff204 	addi	sp,sp,-56
  802bec:	ddc00b15 	stw	r23,44(sp)
  802bf0:	20800417 	ldw	r2,16(r4)
  802bf4:	2dc00417 	ldw	r23,16(r5)
  802bf8:	dfc00d15 	stw	ra,52(sp)
  802bfc:	df000c15 	stw	fp,48(sp)
  802c00:	dd800a15 	stw	r22,40(sp)
  802c04:	dd400915 	stw	r21,36(sp)
  802c08:	dd000815 	stw	r20,32(sp)
  802c0c:	dcc00715 	stw	r19,28(sp)
  802c10:	dc800615 	stw	r18,24(sp)
  802c14:	dc400515 	stw	r17,20(sp)
  802c18:	dc000415 	stw	r16,16(sp)
  802c1c:	15c07a16 	blt	r2,r23,802e08 <quorem+0x220>
  802c20:	bdffffc4 	addi	r23,r23,-1
  802c24:	bde9883a 	add	r20,r23,r23
  802c28:	28c00504 	addi	r3,r5,20
  802c2c:	a529883a 	add	r20,r20,r20
  802c30:	1d39883a 	add	fp,r3,r20
  802c34:	24c00504 	addi	r19,r4,20
  802c38:	d9400215 	stw	r5,8(sp)
  802c3c:	9d29883a 	add	r20,r19,r20
  802c40:	e1400017 	ldw	r5,0(fp)
  802c44:	d9000015 	stw	r4,0(sp)
  802c48:	a1000017 	ldw	r4,0(r20)
  802c4c:	29400044 	addi	r5,r5,1
  802c50:	d8c00115 	stw	r3,4(sp)
  802c54:	dd000315 	stw	r20,12(sp)
  802c58:	080aac00 	call	80aac0 <__udivsi3>
  802c5c:	1025883a 	mov	r18,r2
  802c60:	10003026 	beq	r2,zero,802d24 <quorem+0x13c>
  802c64:	dc400117 	ldw	r17,4(sp)
  802c68:	9829883a 	mov	r20,r19
  802c6c:	002d883a 	mov	r22,zero
  802c70:	0021883a 	mov	r16,zero
  802c74:	8d400017 	ldw	r21,0(r17)
  802c78:	900b883a 	mov	r5,r18
  802c7c:	8c400104 	addi	r17,r17,4
  802c80:	a93fffcc 	andi	r4,r21,65535
  802c84:	080ab7c0 	call	80ab7c <__mulsi3>
  802c88:	a808d43a 	srli	r4,r21,16
  802c8c:	900b883a 	mov	r5,r18
  802c90:	15ad883a 	add	r22,r2,r22
  802c94:	080ab7c0 	call	80ab7c <__mulsi3>
  802c98:	a1000017 	ldw	r4,0(r20)
  802c9c:	b00cd43a 	srli	r6,r22,16
  802ca0:	b0ffffcc 	andi	r3,r22,65535
  802ca4:	217fffcc 	andi	r5,r4,65535
  802ca8:	2c21883a 	add	r16,r5,r16
  802cac:	80c7c83a 	sub	r3,r16,r3
  802cb0:	2008d43a 	srli	r4,r4,16
  802cb4:	1185883a 	add	r2,r2,r6
  802cb8:	1821d43a 	srai	r16,r3,16
  802cbc:	117fffcc 	andi	r5,r2,65535
  802cc0:	2149c83a 	sub	r4,r4,r5
  802cc4:	2421883a 	add	r16,r4,r16
  802cc8:	8008943a 	slli	r4,r16,16
  802ccc:	18ffffcc 	andi	r3,r3,65535
  802cd0:	102cd43a 	srli	r22,r2,16
  802cd4:	20c8b03a 	or	r4,r4,r3
  802cd8:	a1000015 	stw	r4,0(r20)
  802cdc:	8021d43a 	srai	r16,r16,16
  802ce0:	a5000104 	addi	r20,r20,4
  802ce4:	e47fe32e 	bgeu	fp,r17,802c74 <__alt_data_end+0xff802c74>
  802ce8:	d8c00317 	ldw	r3,12(sp)
  802cec:	18800017 	ldw	r2,0(r3)
  802cf0:	10000c1e 	bne	r2,zero,802d24 <quorem+0x13c>
  802cf4:	18bfff04 	addi	r2,r3,-4
  802cf8:	9880082e 	bgeu	r19,r2,802d1c <quorem+0x134>
  802cfc:	18ffff17 	ldw	r3,-4(r3)
  802d00:	18000326 	beq	r3,zero,802d10 <quorem+0x128>
  802d04:	00000506 	br	802d1c <quorem+0x134>
  802d08:	10c00017 	ldw	r3,0(r2)
  802d0c:	1800031e 	bne	r3,zero,802d1c <quorem+0x134>
  802d10:	10bfff04 	addi	r2,r2,-4
  802d14:	bdffffc4 	addi	r23,r23,-1
  802d18:	98bffb36 	bltu	r19,r2,802d08 <__alt_data_end+0xff802d08>
  802d1c:	d8c00017 	ldw	r3,0(sp)
  802d20:	1dc00415 	stw	r23,16(r3)
  802d24:	d9400217 	ldw	r5,8(sp)
  802d28:	d9000017 	ldw	r4,0(sp)
  802d2c:	0806e4c0 	call	806e4c <__mcmp>
  802d30:	10002816 	blt	r2,zero,802dd4 <quorem+0x1ec>
  802d34:	dc400117 	ldw	r17,4(sp)
  802d38:	94800044 	addi	r18,r18,1
  802d3c:	980d883a 	mov	r6,r19
  802d40:	0007883a 	mov	r3,zero
  802d44:	31000017 	ldw	r4,0(r6)
  802d48:	89400017 	ldw	r5,0(r17)
  802d4c:	31800104 	addi	r6,r6,4
  802d50:	20bfffcc 	andi	r2,r4,65535
  802d54:	10c7883a 	add	r3,r2,r3
  802d58:	28bfffcc 	andi	r2,r5,65535
  802d5c:	1885c83a 	sub	r2,r3,r2
  802d60:	280ad43a 	srli	r5,r5,16
  802d64:	2008d43a 	srli	r4,r4,16
  802d68:	1007d43a 	srai	r3,r2,16
  802d6c:	10bfffcc 	andi	r2,r2,65535
  802d70:	2149c83a 	sub	r4,r4,r5
  802d74:	20c9883a 	add	r4,r4,r3
  802d78:	200a943a 	slli	r5,r4,16
  802d7c:	8c400104 	addi	r17,r17,4
  802d80:	2007d43a 	srai	r3,r4,16
  802d84:	2884b03a 	or	r2,r5,r2
  802d88:	30bfff15 	stw	r2,-4(r6)
  802d8c:	e47fed2e 	bgeu	fp,r17,802d44 <__alt_data_end+0xff802d44>
  802d90:	bdc5883a 	add	r2,r23,r23
  802d94:	1085883a 	add	r2,r2,r2
  802d98:	9887883a 	add	r3,r19,r2
  802d9c:	18800017 	ldw	r2,0(r3)
  802da0:	10000c1e 	bne	r2,zero,802dd4 <quorem+0x1ec>
  802da4:	18bfff04 	addi	r2,r3,-4
  802da8:	9880082e 	bgeu	r19,r2,802dcc <quorem+0x1e4>
  802dac:	18ffff17 	ldw	r3,-4(r3)
  802db0:	18000326 	beq	r3,zero,802dc0 <quorem+0x1d8>
  802db4:	00000506 	br	802dcc <quorem+0x1e4>
  802db8:	10c00017 	ldw	r3,0(r2)
  802dbc:	1800031e 	bne	r3,zero,802dcc <quorem+0x1e4>
  802dc0:	10bfff04 	addi	r2,r2,-4
  802dc4:	bdffffc4 	addi	r23,r23,-1
  802dc8:	98bffb36 	bltu	r19,r2,802db8 <__alt_data_end+0xff802db8>
  802dcc:	d8c00017 	ldw	r3,0(sp)
  802dd0:	1dc00415 	stw	r23,16(r3)
  802dd4:	9005883a 	mov	r2,r18
  802dd8:	dfc00d17 	ldw	ra,52(sp)
  802ddc:	df000c17 	ldw	fp,48(sp)
  802de0:	ddc00b17 	ldw	r23,44(sp)
  802de4:	dd800a17 	ldw	r22,40(sp)
  802de8:	dd400917 	ldw	r21,36(sp)
  802dec:	dd000817 	ldw	r20,32(sp)
  802df0:	dcc00717 	ldw	r19,28(sp)
  802df4:	dc800617 	ldw	r18,24(sp)
  802df8:	dc400517 	ldw	r17,20(sp)
  802dfc:	dc000417 	ldw	r16,16(sp)
  802e00:	dec00e04 	addi	sp,sp,56
  802e04:	f800283a 	ret
  802e08:	0005883a 	mov	r2,zero
  802e0c:	003ff206 	br	802dd8 <__alt_data_end+0xff802dd8>

00802e10 <_dtoa_r>:
  802e10:	20801017 	ldw	r2,64(r4)
  802e14:	deffde04 	addi	sp,sp,-136
  802e18:	df002015 	stw	fp,128(sp)
  802e1c:	dcc01b15 	stw	r19,108(sp)
  802e20:	dc801a15 	stw	r18,104(sp)
  802e24:	dc401915 	stw	r17,100(sp)
  802e28:	dc001815 	stw	r16,96(sp)
  802e2c:	dfc02115 	stw	ra,132(sp)
  802e30:	ddc01f15 	stw	r23,124(sp)
  802e34:	dd801e15 	stw	r22,120(sp)
  802e38:	dd401d15 	stw	r21,116(sp)
  802e3c:	dd001c15 	stw	r20,112(sp)
  802e40:	d9c00315 	stw	r7,12(sp)
  802e44:	2039883a 	mov	fp,r4
  802e48:	3023883a 	mov	r17,r6
  802e4c:	2825883a 	mov	r18,r5
  802e50:	dc002417 	ldw	r16,144(sp)
  802e54:	3027883a 	mov	r19,r6
  802e58:	10000826 	beq	r2,zero,802e7c <_dtoa_r+0x6c>
  802e5c:	21801117 	ldw	r6,68(r4)
  802e60:	00c00044 	movi	r3,1
  802e64:	100b883a 	mov	r5,r2
  802e68:	1986983a 	sll	r3,r3,r6
  802e6c:	11800115 	stw	r6,4(r2)
  802e70:	10c00215 	stw	r3,8(r2)
  802e74:	08065700 	call	806570 <_Bfree>
  802e78:	e0001015 	stw	zero,64(fp)
  802e7c:	88002e16 	blt	r17,zero,802f38 <_dtoa_r+0x128>
  802e80:	80000015 	stw	zero,0(r16)
  802e84:	889ffc2c 	andhi	r2,r17,32752
  802e88:	00dffc34 	movhi	r3,32752
  802e8c:	10c01c26 	beq	r2,r3,802f00 <_dtoa_r+0xf0>
  802e90:	000d883a 	mov	r6,zero
  802e94:	000f883a 	mov	r7,zero
  802e98:	9009883a 	mov	r4,r18
  802e9c:	980b883a 	mov	r5,r19
  802ea0:	080be200 	call	80be20 <__eqdf2>
  802ea4:	10002b1e 	bne	r2,zero,802f54 <_dtoa_r+0x144>
  802ea8:	d9c02317 	ldw	r7,140(sp)
  802eac:	00800044 	movi	r2,1
  802eb0:	38800015 	stw	r2,0(r7)
  802eb4:	d8802517 	ldw	r2,148(sp)
  802eb8:	10019e26 	beq	r2,zero,803534 <_dtoa_r+0x724>
  802ebc:	d8c02517 	ldw	r3,148(sp)
  802ec0:	00802074 	movhi	r2,129
  802ec4:	10bf8744 	addi	r2,r2,-483
  802ec8:	18800015 	stw	r2,0(r3)
  802ecc:	10bfffc4 	addi	r2,r2,-1
  802ed0:	dfc02117 	ldw	ra,132(sp)
  802ed4:	df002017 	ldw	fp,128(sp)
  802ed8:	ddc01f17 	ldw	r23,124(sp)
  802edc:	dd801e17 	ldw	r22,120(sp)
  802ee0:	dd401d17 	ldw	r21,116(sp)
  802ee4:	dd001c17 	ldw	r20,112(sp)
  802ee8:	dcc01b17 	ldw	r19,108(sp)
  802eec:	dc801a17 	ldw	r18,104(sp)
  802ef0:	dc401917 	ldw	r17,100(sp)
  802ef4:	dc001817 	ldw	r16,96(sp)
  802ef8:	dec02204 	addi	sp,sp,136
  802efc:	f800283a 	ret
  802f00:	d8c02317 	ldw	r3,140(sp)
  802f04:	0089c3c4 	movi	r2,9999
  802f08:	18800015 	stw	r2,0(r3)
  802f0c:	90017726 	beq	r18,zero,8034ec <_dtoa_r+0x6dc>
  802f10:	00802074 	movhi	r2,129
  802f14:	10bf9304 	addi	r2,r2,-436
  802f18:	d9002517 	ldw	r4,148(sp)
  802f1c:	203fec26 	beq	r4,zero,802ed0 <__alt_data_end+0xff802ed0>
  802f20:	10c000c7 	ldb	r3,3(r2)
  802f24:	1801781e 	bne	r3,zero,803508 <_dtoa_r+0x6f8>
  802f28:	10c000c4 	addi	r3,r2,3
  802f2c:	d9802517 	ldw	r6,148(sp)
  802f30:	30c00015 	stw	r3,0(r6)
  802f34:	003fe606 	br	802ed0 <__alt_data_end+0xff802ed0>
  802f38:	04e00034 	movhi	r19,32768
  802f3c:	9cffffc4 	addi	r19,r19,-1
  802f40:	00800044 	movi	r2,1
  802f44:	8ce6703a 	and	r19,r17,r19
  802f48:	80800015 	stw	r2,0(r16)
  802f4c:	9823883a 	mov	r17,r19
  802f50:	003fcc06 	br	802e84 <__alt_data_end+0xff802e84>
  802f54:	d8800204 	addi	r2,sp,8
  802f58:	d8800015 	stw	r2,0(sp)
  802f5c:	d9c00104 	addi	r7,sp,4
  802f60:	900b883a 	mov	r5,r18
  802f64:	980d883a 	mov	r6,r19
  802f68:	e009883a 	mov	r4,fp
  802f6c:	8820d53a 	srli	r16,r17,20
  802f70:	08072180 	call	807218 <__d2b>
  802f74:	d8800915 	stw	r2,36(sp)
  802f78:	8001651e 	bne	r16,zero,803510 <_dtoa_r+0x700>
  802f7c:	dd800217 	ldw	r22,8(sp)
  802f80:	dc000117 	ldw	r16,4(sp)
  802f84:	00800804 	movi	r2,32
  802f88:	b421883a 	add	r16,r22,r16
  802f8c:	80c10c84 	addi	r3,r16,1074
  802f90:	10c2d10e 	bge	r2,r3,803ad8 <_dtoa_r+0xcc8>
  802f94:	00801004 	movi	r2,64
  802f98:	81010484 	addi	r4,r16,1042
  802f9c:	10c7c83a 	sub	r3,r2,r3
  802fa0:	9108d83a 	srl	r4,r18,r4
  802fa4:	88e2983a 	sll	r17,r17,r3
  802fa8:	2448b03a 	or	r4,r4,r17
  802fac:	080d3380 	call	80d338 <__floatunsidf>
  802fb0:	017f8434 	movhi	r5,65040
  802fb4:	01800044 	movi	r6,1
  802fb8:	1009883a 	mov	r4,r2
  802fbc:	194b883a 	add	r5,r3,r5
  802fc0:	843fffc4 	addi	r16,r16,-1
  802fc4:	d9801115 	stw	r6,68(sp)
  802fc8:	000d883a 	mov	r6,zero
  802fcc:	01cffe34 	movhi	r7,16376
  802fd0:	080c8e00 	call	80c8e0 <__subdf3>
  802fd4:	0198dbf4 	movhi	r6,25455
  802fd8:	01cff4f4 	movhi	r7,16339
  802fdc:	3190d844 	addi	r6,r6,17249
  802fe0:	39e1e9c4 	addi	r7,r7,-30809
  802fe4:	1009883a 	mov	r4,r2
  802fe8:	180b883a 	mov	r5,r3
  802fec:	080c0780 	call	80c078 <__muldf3>
  802ff0:	01a2d874 	movhi	r6,35681
  802ff4:	01cff1f4 	movhi	r7,16327
  802ff8:	31b22cc4 	addi	r6,r6,-14157
  802ffc:	39e28a04 	addi	r7,r7,-30168
  803000:	180b883a 	mov	r5,r3
  803004:	1009883a 	mov	r4,r2
  803008:	080aba40 	call	80aba4 <__adddf3>
  80300c:	8009883a 	mov	r4,r16
  803010:	1029883a 	mov	r20,r2
  803014:	1823883a 	mov	r17,r3
  803018:	080d25c0 	call	80d25c <__floatsidf>
  80301c:	019427f4 	movhi	r6,20639
  803020:	01cff4f4 	movhi	r7,16339
  803024:	319e7ec4 	addi	r6,r6,31227
  803028:	39d104c4 	addi	r7,r7,17427
  80302c:	1009883a 	mov	r4,r2
  803030:	180b883a 	mov	r5,r3
  803034:	080c0780 	call	80c078 <__muldf3>
  803038:	100d883a 	mov	r6,r2
  80303c:	180f883a 	mov	r7,r3
  803040:	a009883a 	mov	r4,r20
  803044:	880b883a 	mov	r5,r17
  803048:	080aba40 	call	80aba4 <__adddf3>
  80304c:	1009883a 	mov	r4,r2
  803050:	180b883a 	mov	r5,r3
  803054:	1029883a 	mov	r20,r2
  803058:	1823883a 	mov	r17,r3
  80305c:	080d1dc0 	call	80d1dc <__fixdfsi>
  803060:	000d883a 	mov	r6,zero
  803064:	000f883a 	mov	r7,zero
  803068:	a009883a 	mov	r4,r20
  80306c:	880b883a 	mov	r5,r17
  803070:	d8800515 	stw	r2,20(sp)
  803074:	080bf840 	call	80bf84 <__ledf2>
  803078:	10028716 	blt	r2,zero,803a98 <_dtoa_r+0xc88>
  80307c:	d8c00517 	ldw	r3,20(sp)
  803080:	00800584 	movi	r2,22
  803084:	10c27536 	bltu	r2,r3,803a5c <_dtoa_r+0xc4c>
  803088:	180490fa 	slli	r2,r3,3
  80308c:	00c02074 	movhi	r3,129
  803090:	18ffaf04 	addi	r3,r3,-324
  803094:	1885883a 	add	r2,r3,r2
  803098:	11000017 	ldw	r4,0(r2)
  80309c:	11400117 	ldw	r5,4(r2)
  8030a0:	900d883a 	mov	r6,r18
  8030a4:	980f883a 	mov	r7,r19
  8030a8:	080bea80 	call	80bea8 <__gedf2>
  8030ac:	00828d0e 	bge	zero,r2,803ae4 <_dtoa_r+0xcd4>
  8030b0:	d9000517 	ldw	r4,20(sp)
  8030b4:	d8000e15 	stw	zero,56(sp)
  8030b8:	213fffc4 	addi	r4,r4,-1
  8030bc:	d9000515 	stw	r4,20(sp)
  8030c0:	b42dc83a 	sub	r22,r22,r16
  8030c4:	b5bfffc4 	addi	r22,r22,-1
  8030c8:	b0026f16 	blt	r22,zero,803a88 <_dtoa_r+0xc78>
  8030cc:	d8000815 	stw	zero,32(sp)
  8030d0:	d9c00517 	ldw	r7,20(sp)
  8030d4:	38026416 	blt	r7,zero,803a68 <_dtoa_r+0xc58>
  8030d8:	b1ed883a 	add	r22,r22,r7
  8030dc:	d9c00d15 	stw	r7,52(sp)
  8030e0:	d8000a15 	stw	zero,40(sp)
  8030e4:	d9800317 	ldw	r6,12(sp)
  8030e8:	00800244 	movi	r2,9
  8030ec:	11811436 	bltu	r2,r6,803540 <_dtoa_r+0x730>
  8030f0:	00800144 	movi	r2,5
  8030f4:	1184e10e 	bge	r2,r6,80447c <_dtoa_r+0x166c>
  8030f8:	31bfff04 	addi	r6,r6,-4
  8030fc:	d9800315 	stw	r6,12(sp)
  803100:	0023883a 	mov	r17,zero
  803104:	d9800317 	ldw	r6,12(sp)
  803108:	008000c4 	movi	r2,3
  80310c:	30836726 	beq	r6,r2,803eac <_dtoa_r+0x109c>
  803110:	1183410e 	bge	r2,r6,803e18 <_dtoa_r+0x1008>
  803114:	d9c00317 	ldw	r7,12(sp)
  803118:	00800104 	movi	r2,4
  80311c:	38827c26 	beq	r7,r2,803b10 <_dtoa_r+0xd00>
  803120:	00800144 	movi	r2,5
  803124:	3884c41e 	bne	r7,r2,804438 <_dtoa_r+0x1628>
  803128:	00800044 	movi	r2,1
  80312c:	d8800b15 	stw	r2,44(sp)
  803130:	d8c00517 	ldw	r3,20(sp)
  803134:	d9002217 	ldw	r4,136(sp)
  803138:	1907883a 	add	r3,r3,r4
  80313c:	19800044 	addi	r6,r3,1
  803140:	d8c00c15 	stw	r3,48(sp)
  803144:	d9800615 	stw	r6,24(sp)
  803148:	0183a40e 	bge	zero,r6,803fdc <_dtoa_r+0x11cc>
  80314c:	d9800617 	ldw	r6,24(sp)
  803150:	3021883a 	mov	r16,r6
  803154:	e0001115 	stw	zero,68(fp)
  803158:	008005c4 	movi	r2,23
  80315c:	1184c92e 	bgeu	r2,r6,804484 <_dtoa_r+0x1674>
  803160:	00c00044 	movi	r3,1
  803164:	00800104 	movi	r2,4
  803168:	1085883a 	add	r2,r2,r2
  80316c:	11000504 	addi	r4,r2,20
  803170:	180b883a 	mov	r5,r3
  803174:	18c00044 	addi	r3,r3,1
  803178:	313ffb2e 	bgeu	r6,r4,803168 <__alt_data_end+0xff803168>
  80317c:	e1401115 	stw	r5,68(fp)
  803180:	e009883a 	mov	r4,fp
  803184:	08064c80 	call	8064c8 <_Balloc>
  803188:	d8800715 	stw	r2,28(sp)
  80318c:	e0801015 	stw	r2,64(fp)
  803190:	00800384 	movi	r2,14
  803194:	1400f736 	bltu	r2,r16,803574 <_dtoa_r+0x764>
  803198:	8800f626 	beq	r17,zero,803574 <_dtoa_r+0x764>
  80319c:	d9c00517 	ldw	r7,20(sp)
  8031a0:	01c39a0e 	bge	zero,r7,80400c <_dtoa_r+0x11fc>
  8031a4:	388003cc 	andi	r2,r7,15
  8031a8:	100490fa 	slli	r2,r2,3
  8031ac:	382bd13a 	srai	r21,r7,4
  8031b0:	00c02074 	movhi	r3,129
  8031b4:	18ffaf04 	addi	r3,r3,-324
  8031b8:	1885883a 	add	r2,r3,r2
  8031bc:	a8c0040c 	andi	r3,r21,16
  8031c0:	12400017 	ldw	r9,0(r2)
  8031c4:	12000117 	ldw	r8,4(r2)
  8031c8:	18037926 	beq	r3,zero,803fb0 <_dtoa_r+0x11a0>
  8031cc:	00802074 	movhi	r2,129
  8031d0:	10bfa504 	addi	r2,r2,-364
  8031d4:	11800817 	ldw	r6,32(r2)
  8031d8:	11c00917 	ldw	r7,36(r2)
  8031dc:	9009883a 	mov	r4,r18
  8031e0:	980b883a 	mov	r5,r19
  8031e4:	da001715 	stw	r8,92(sp)
  8031e8:	da401615 	stw	r9,88(sp)
  8031ec:	080b4500 	call	80b450 <__divdf3>
  8031f0:	da001717 	ldw	r8,92(sp)
  8031f4:	da401617 	ldw	r9,88(sp)
  8031f8:	ad4003cc 	andi	r21,r21,15
  8031fc:	040000c4 	movi	r16,3
  803200:	1023883a 	mov	r17,r2
  803204:	1829883a 	mov	r20,r3
  803208:	a8001126 	beq	r21,zero,803250 <_dtoa_r+0x440>
  80320c:	05c02074 	movhi	r23,129
  803210:	bdffa504 	addi	r23,r23,-364
  803214:	4805883a 	mov	r2,r9
  803218:	4007883a 	mov	r3,r8
  80321c:	a980004c 	andi	r6,r21,1
  803220:	1009883a 	mov	r4,r2
  803224:	a82bd07a 	srai	r21,r21,1
  803228:	180b883a 	mov	r5,r3
  80322c:	30000426 	beq	r6,zero,803240 <_dtoa_r+0x430>
  803230:	b9800017 	ldw	r6,0(r23)
  803234:	b9c00117 	ldw	r7,4(r23)
  803238:	84000044 	addi	r16,r16,1
  80323c:	080c0780 	call	80c078 <__muldf3>
  803240:	bdc00204 	addi	r23,r23,8
  803244:	a83ff51e 	bne	r21,zero,80321c <__alt_data_end+0xff80321c>
  803248:	1013883a 	mov	r9,r2
  80324c:	1811883a 	mov	r8,r3
  803250:	480d883a 	mov	r6,r9
  803254:	400f883a 	mov	r7,r8
  803258:	8809883a 	mov	r4,r17
  80325c:	a00b883a 	mov	r5,r20
  803260:	080b4500 	call	80b450 <__divdf3>
  803264:	d8800f15 	stw	r2,60(sp)
  803268:	d8c01015 	stw	r3,64(sp)
  80326c:	d8c00e17 	ldw	r3,56(sp)
  803270:	18000626 	beq	r3,zero,80328c <_dtoa_r+0x47c>
  803274:	d9000f17 	ldw	r4,60(sp)
  803278:	d9401017 	ldw	r5,64(sp)
  80327c:	000d883a 	mov	r6,zero
  803280:	01cffc34 	movhi	r7,16368
  803284:	080bf840 	call	80bf84 <__ledf2>
  803288:	10040b16 	blt	r2,zero,8042b8 <_dtoa_r+0x14a8>
  80328c:	8009883a 	mov	r4,r16
  803290:	080d25c0 	call	80d25c <__floatsidf>
  803294:	d9800f17 	ldw	r6,60(sp)
  803298:	d9c01017 	ldw	r7,64(sp)
  80329c:	1009883a 	mov	r4,r2
  8032a0:	180b883a 	mov	r5,r3
  8032a4:	080c0780 	call	80c078 <__muldf3>
  8032a8:	000d883a 	mov	r6,zero
  8032ac:	01d00734 	movhi	r7,16412
  8032b0:	1009883a 	mov	r4,r2
  8032b4:	180b883a 	mov	r5,r3
  8032b8:	080aba40 	call	80aba4 <__adddf3>
  8032bc:	1021883a 	mov	r16,r2
  8032c0:	d8800617 	ldw	r2,24(sp)
  8032c4:	047f3034 	movhi	r17,64704
  8032c8:	1c63883a 	add	r17,r3,r17
  8032cc:	10031826 	beq	r2,zero,803f30 <_dtoa_r+0x1120>
  8032d0:	d8c00517 	ldw	r3,20(sp)
  8032d4:	db000617 	ldw	r12,24(sp)
  8032d8:	d8c01315 	stw	r3,76(sp)
  8032dc:	d9000b17 	ldw	r4,44(sp)
  8032e0:	20038f26 	beq	r4,zero,804120 <_dtoa_r+0x1310>
  8032e4:	60bfffc4 	addi	r2,r12,-1
  8032e8:	100490fa 	slli	r2,r2,3
  8032ec:	00c02074 	movhi	r3,129
  8032f0:	18ffaf04 	addi	r3,r3,-324
  8032f4:	1885883a 	add	r2,r3,r2
  8032f8:	11800017 	ldw	r6,0(r2)
  8032fc:	11c00117 	ldw	r7,4(r2)
  803300:	d8800717 	ldw	r2,28(sp)
  803304:	0009883a 	mov	r4,zero
  803308:	014ff834 	movhi	r5,16352
  80330c:	db001615 	stw	r12,88(sp)
  803310:	15c00044 	addi	r23,r2,1
  803314:	080b4500 	call	80b450 <__divdf3>
  803318:	800d883a 	mov	r6,r16
  80331c:	880f883a 	mov	r7,r17
  803320:	1009883a 	mov	r4,r2
  803324:	180b883a 	mov	r5,r3
  803328:	080c8e00 	call	80c8e0 <__subdf3>
  80332c:	d9401017 	ldw	r5,64(sp)
  803330:	d9000f17 	ldw	r4,60(sp)
  803334:	102b883a 	mov	r21,r2
  803338:	d8c01215 	stw	r3,72(sp)
  80333c:	080d1dc0 	call	80d1dc <__fixdfsi>
  803340:	1009883a 	mov	r4,r2
  803344:	1029883a 	mov	r20,r2
  803348:	080d25c0 	call	80d25c <__floatsidf>
  80334c:	d9000f17 	ldw	r4,60(sp)
  803350:	d9401017 	ldw	r5,64(sp)
  803354:	100d883a 	mov	r6,r2
  803358:	180f883a 	mov	r7,r3
  80335c:	080c8e00 	call	80c8e0 <__subdf3>
  803360:	1823883a 	mov	r17,r3
  803364:	d8c00717 	ldw	r3,28(sp)
  803368:	d9401217 	ldw	r5,72(sp)
  80336c:	a2000c04 	addi	r8,r20,48
  803370:	1021883a 	mov	r16,r2
  803374:	1a000005 	stb	r8,0(r3)
  803378:	800d883a 	mov	r6,r16
  80337c:	880f883a 	mov	r7,r17
  803380:	a809883a 	mov	r4,r21
  803384:	4029883a 	mov	r20,r8
  803388:	080bea80 	call	80bea8 <__gedf2>
  80338c:	00841d16 	blt	zero,r2,804404 <_dtoa_r+0x15f4>
  803390:	800d883a 	mov	r6,r16
  803394:	880f883a 	mov	r7,r17
  803398:	0009883a 	mov	r4,zero
  80339c:	014ffc34 	movhi	r5,16368
  8033a0:	080c8e00 	call	80c8e0 <__subdf3>
  8033a4:	d9401217 	ldw	r5,72(sp)
  8033a8:	100d883a 	mov	r6,r2
  8033ac:	180f883a 	mov	r7,r3
  8033b0:	a809883a 	mov	r4,r21
  8033b4:	080bea80 	call	80bea8 <__gedf2>
  8033b8:	db001617 	ldw	r12,88(sp)
  8033bc:	00840e16 	blt	zero,r2,8043f8 <_dtoa_r+0x15e8>
  8033c0:	00800044 	movi	r2,1
  8033c4:	13006b0e 	bge	r2,r12,803574 <_dtoa_r+0x764>
  8033c8:	d9000717 	ldw	r4,28(sp)
  8033cc:	dd800f15 	stw	r22,60(sp)
  8033d0:	dcc01015 	stw	r19,64(sp)
  8033d4:	2319883a 	add	r12,r4,r12
  8033d8:	dcc01217 	ldw	r19,72(sp)
  8033dc:	602d883a 	mov	r22,r12
  8033e0:	dc801215 	stw	r18,72(sp)
  8033e4:	b825883a 	mov	r18,r23
  8033e8:	00000906 	br	803410 <_dtoa_r+0x600>
  8033ec:	080c8e00 	call	80c8e0 <__subdf3>
  8033f0:	a80d883a 	mov	r6,r21
  8033f4:	980f883a 	mov	r7,r19
  8033f8:	1009883a 	mov	r4,r2
  8033fc:	180b883a 	mov	r5,r3
  803400:	080bf840 	call	80bf84 <__ledf2>
  803404:	1003e816 	blt	r2,zero,8043a8 <_dtoa_r+0x1598>
  803408:	b825883a 	mov	r18,r23
  80340c:	bd83e926 	beq	r23,r22,8043b4 <_dtoa_r+0x15a4>
  803410:	a809883a 	mov	r4,r21
  803414:	980b883a 	mov	r5,r19
  803418:	000d883a 	mov	r6,zero
  80341c:	01d00934 	movhi	r7,16420
  803420:	080c0780 	call	80c078 <__muldf3>
  803424:	000d883a 	mov	r6,zero
  803428:	01d00934 	movhi	r7,16420
  80342c:	8009883a 	mov	r4,r16
  803430:	880b883a 	mov	r5,r17
  803434:	102b883a 	mov	r21,r2
  803438:	1827883a 	mov	r19,r3
  80343c:	080c0780 	call	80c078 <__muldf3>
  803440:	180b883a 	mov	r5,r3
  803444:	1009883a 	mov	r4,r2
  803448:	1821883a 	mov	r16,r3
  80344c:	1023883a 	mov	r17,r2
  803450:	080d1dc0 	call	80d1dc <__fixdfsi>
  803454:	1009883a 	mov	r4,r2
  803458:	1029883a 	mov	r20,r2
  80345c:	080d25c0 	call	80d25c <__floatsidf>
  803460:	8809883a 	mov	r4,r17
  803464:	800b883a 	mov	r5,r16
  803468:	100d883a 	mov	r6,r2
  80346c:	180f883a 	mov	r7,r3
  803470:	080c8e00 	call	80c8e0 <__subdf3>
  803474:	a5000c04 	addi	r20,r20,48
  803478:	a80d883a 	mov	r6,r21
  80347c:	980f883a 	mov	r7,r19
  803480:	1009883a 	mov	r4,r2
  803484:	180b883a 	mov	r5,r3
  803488:	95000005 	stb	r20,0(r18)
  80348c:	1021883a 	mov	r16,r2
  803490:	1823883a 	mov	r17,r3
  803494:	080bf840 	call	80bf84 <__ledf2>
  803498:	bdc00044 	addi	r23,r23,1
  80349c:	800d883a 	mov	r6,r16
  8034a0:	880f883a 	mov	r7,r17
  8034a4:	0009883a 	mov	r4,zero
  8034a8:	014ffc34 	movhi	r5,16368
  8034ac:	103fcf0e 	bge	r2,zero,8033ec <__alt_data_end+0xff8033ec>
  8034b0:	d8c01317 	ldw	r3,76(sp)
  8034b4:	d8c00515 	stw	r3,20(sp)
  8034b8:	d9400917 	ldw	r5,36(sp)
  8034bc:	e009883a 	mov	r4,fp
  8034c0:	08065700 	call	806570 <_Bfree>
  8034c4:	d9000517 	ldw	r4,20(sp)
  8034c8:	d9802317 	ldw	r6,140(sp)
  8034cc:	d9c02517 	ldw	r7,148(sp)
  8034d0:	b8000005 	stb	zero,0(r23)
  8034d4:	20800044 	addi	r2,r4,1
  8034d8:	30800015 	stw	r2,0(r6)
  8034dc:	3802aa26 	beq	r7,zero,803f88 <_dtoa_r+0x1178>
  8034e0:	3dc00015 	stw	r23,0(r7)
  8034e4:	d8800717 	ldw	r2,28(sp)
  8034e8:	003e7906 	br	802ed0 <__alt_data_end+0xff802ed0>
  8034ec:	00800434 	movhi	r2,16
  8034f0:	10bfffc4 	addi	r2,r2,-1
  8034f4:	88a2703a 	and	r17,r17,r2
  8034f8:	883e851e 	bne	r17,zero,802f10 <__alt_data_end+0xff802f10>
  8034fc:	00802074 	movhi	r2,129
  803500:	10bf9004 	addi	r2,r2,-448
  803504:	003e8406 	br	802f18 <__alt_data_end+0xff802f18>
  803508:	10c00204 	addi	r3,r2,8
  80350c:	003e8706 	br	802f2c <__alt_data_end+0xff802f2c>
  803510:	01400434 	movhi	r5,16
  803514:	297fffc4 	addi	r5,r5,-1
  803518:	994a703a 	and	r5,r19,r5
  80351c:	9009883a 	mov	r4,r18
  803520:	843f0044 	addi	r16,r16,-1023
  803524:	294ffc34 	orhi	r5,r5,16368
  803528:	dd800217 	ldw	r22,8(sp)
  80352c:	d8001115 	stw	zero,68(sp)
  803530:	003ea506 	br	802fc8 <__alt_data_end+0xff802fc8>
  803534:	00802074 	movhi	r2,129
  803538:	10bf8704 	addi	r2,r2,-484
  80353c:	003e6406 	br	802ed0 <__alt_data_end+0xff802ed0>
  803540:	e0001115 	stw	zero,68(fp)
  803544:	000b883a 	mov	r5,zero
  803548:	e009883a 	mov	r4,fp
  80354c:	08064c80 	call	8064c8 <_Balloc>
  803550:	01bfffc4 	movi	r6,-1
  803554:	01c00044 	movi	r7,1
  803558:	d8800715 	stw	r2,28(sp)
  80355c:	d9800c15 	stw	r6,48(sp)
  803560:	e0801015 	stw	r2,64(fp)
  803564:	d8000315 	stw	zero,12(sp)
  803568:	d9c00b15 	stw	r7,44(sp)
  80356c:	d9800615 	stw	r6,24(sp)
  803570:	d8002215 	stw	zero,136(sp)
  803574:	d8800117 	ldw	r2,4(sp)
  803578:	10008916 	blt	r2,zero,8037a0 <_dtoa_r+0x990>
  80357c:	d9000517 	ldw	r4,20(sp)
  803580:	00c00384 	movi	r3,14
  803584:	19008616 	blt	r3,r4,8037a0 <_dtoa_r+0x990>
  803588:	200490fa 	slli	r2,r4,3
  80358c:	00c02074 	movhi	r3,129
  803590:	d9802217 	ldw	r6,136(sp)
  803594:	18ffaf04 	addi	r3,r3,-324
  803598:	1885883a 	add	r2,r3,r2
  80359c:	14000017 	ldw	r16,0(r2)
  8035a0:	14400117 	ldw	r17,4(r2)
  8035a4:	30016316 	blt	r6,zero,803b34 <_dtoa_r+0xd24>
  8035a8:	800d883a 	mov	r6,r16
  8035ac:	880f883a 	mov	r7,r17
  8035b0:	9009883a 	mov	r4,r18
  8035b4:	980b883a 	mov	r5,r19
  8035b8:	080b4500 	call	80b450 <__divdf3>
  8035bc:	180b883a 	mov	r5,r3
  8035c0:	1009883a 	mov	r4,r2
  8035c4:	080d1dc0 	call	80d1dc <__fixdfsi>
  8035c8:	1009883a 	mov	r4,r2
  8035cc:	102b883a 	mov	r21,r2
  8035d0:	080d25c0 	call	80d25c <__floatsidf>
  8035d4:	800d883a 	mov	r6,r16
  8035d8:	880f883a 	mov	r7,r17
  8035dc:	1009883a 	mov	r4,r2
  8035e0:	180b883a 	mov	r5,r3
  8035e4:	080c0780 	call	80c078 <__muldf3>
  8035e8:	100d883a 	mov	r6,r2
  8035ec:	180f883a 	mov	r7,r3
  8035f0:	9009883a 	mov	r4,r18
  8035f4:	980b883a 	mov	r5,r19
  8035f8:	080c8e00 	call	80c8e0 <__subdf3>
  8035fc:	d9c00717 	ldw	r7,28(sp)
  803600:	1009883a 	mov	r4,r2
  803604:	a8800c04 	addi	r2,r21,48
  803608:	38800005 	stb	r2,0(r7)
  80360c:	3dc00044 	addi	r23,r7,1
  803610:	d9c00617 	ldw	r7,24(sp)
  803614:	01800044 	movi	r6,1
  803618:	180b883a 	mov	r5,r3
  80361c:	2005883a 	mov	r2,r4
  803620:	39803826 	beq	r7,r6,803704 <_dtoa_r+0x8f4>
  803624:	000d883a 	mov	r6,zero
  803628:	01d00934 	movhi	r7,16420
  80362c:	080c0780 	call	80c078 <__muldf3>
  803630:	000d883a 	mov	r6,zero
  803634:	000f883a 	mov	r7,zero
  803638:	1009883a 	mov	r4,r2
  80363c:	180b883a 	mov	r5,r3
  803640:	1025883a 	mov	r18,r2
  803644:	1827883a 	mov	r19,r3
  803648:	080be200 	call	80be20 <__eqdf2>
  80364c:	103f9a26 	beq	r2,zero,8034b8 <__alt_data_end+0xff8034b8>
  803650:	d9c00617 	ldw	r7,24(sp)
  803654:	d8c00717 	ldw	r3,28(sp)
  803658:	b829883a 	mov	r20,r23
  80365c:	38bfffc4 	addi	r2,r7,-1
  803660:	18ad883a 	add	r22,r3,r2
  803664:	00000a06 	br	803690 <_dtoa_r+0x880>
  803668:	080c0780 	call	80c078 <__muldf3>
  80366c:	000d883a 	mov	r6,zero
  803670:	000f883a 	mov	r7,zero
  803674:	1009883a 	mov	r4,r2
  803678:	180b883a 	mov	r5,r3
  80367c:	1025883a 	mov	r18,r2
  803680:	1827883a 	mov	r19,r3
  803684:	b829883a 	mov	r20,r23
  803688:	080be200 	call	80be20 <__eqdf2>
  80368c:	103f8a26 	beq	r2,zero,8034b8 <__alt_data_end+0xff8034b8>
  803690:	800d883a 	mov	r6,r16
  803694:	880f883a 	mov	r7,r17
  803698:	9009883a 	mov	r4,r18
  80369c:	980b883a 	mov	r5,r19
  8036a0:	080b4500 	call	80b450 <__divdf3>
  8036a4:	180b883a 	mov	r5,r3
  8036a8:	1009883a 	mov	r4,r2
  8036ac:	080d1dc0 	call	80d1dc <__fixdfsi>
  8036b0:	1009883a 	mov	r4,r2
  8036b4:	102b883a 	mov	r21,r2
  8036b8:	080d25c0 	call	80d25c <__floatsidf>
  8036bc:	800d883a 	mov	r6,r16
  8036c0:	880f883a 	mov	r7,r17
  8036c4:	1009883a 	mov	r4,r2
  8036c8:	180b883a 	mov	r5,r3
  8036cc:	080c0780 	call	80c078 <__muldf3>
  8036d0:	100d883a 	mov	r6,r2
  8036d4:	180f883a 	mov	r7,r3
  8036d8:	9009883a 	mov	r4,r18
  8036dc:	980b883a 	mov	r5,r19
  8036e0:	080c8e00 	call	80c8e0 <__subdf3>
  8036e4:	aa000c04 	addi	r8,r21,48
  8036e8:	a2000005 	stb	r8,0(r20)
  8036ec:	000d883a 	mov	r6,zero
  8036f0:	01d00934 	movhi	r7,16420
  8036f4:	1009883a 	mov	r4,r2
  8036f8:	180b883a 	mov	r5,r3
  8036fc:	a5c00044 	addi	r23,r20,1
  803700:	b53fd91e 	bne	r22,r20,803668 <__alt_data_end+0xff803668>
  803704:	100d883a 	mov	r6,r2
  803708:	180f883a 	mov	r7,r3
  80370c:	1009883a 	mov	r4,r2
  803710:	180b883a 	mov	r5,r3
  803714:	080aba40 	call	80aba4 <__adddf3>
  803718:	100d883a 	mov	r6,r2
  80371c:	180f883a 	mov	r7,r3
  803720:	8009883a 	mov	r4,r16
  803724:	880b883a 	mov	r5,r17
  803728:	1027883a 	mov	r19,r2
  80372c:	1825883a 	mov	r18,r3
  803730:	080bf840 	call	80bf84 <__ledf2>
  803734:	10000816 	blt	r2,zero,803758 <_dtoa_r+0x948>
  803738:	980d883a 	mov	r6,r19
  80373c:	900f883a 	mov	r7,r18
  803740:	8009883a 	mov	r4,r16
  803744:	880b883a 	mov	r5,r17
  803748:	080be200 	call	80be20 <__eqdf2>
  80374c:	103f5a1e 	bne	r2,zero,8034b8 <__alt_data_end+0xff8034b8>
  803750:	ad40004c 	andi	r21,r21,1
  803754:	a83f5826 	beq	r21,zero,8034b8 <__alt_data_end+0xff8034b8>
  803758:	bd3fffc3 	ldbu	r20,-1(r23)
  80375c:	b8bfffc4 	addi	r2,r23,-1
  803760:	1007883a 	mov	r3,r2
  803764:	01400e44 	movi	r5,57
  803768:	d9800717 	ldw	r6,28(sp)
  80376c:	00000506 	br	803784 <_dtoa_r+0x974>
  803770:	18ffffc4 	addi	r3,r3,-1
  803774:	11824726 	beq	r2,r6,804094 <_dtoa_r+0x1284>
  803778:	1d000003 	ldbu	r20,0(r3)
  80377c:	102f883a 	mov	r23,r2
  803780:	10bfffc4 	addi	r2,r2,-1
  803784:	a1003fcc 	andi	r4,r20,255
  803788:	2100201c 	xori	r4,r4,128
  80378c:	213fe004 	addi	r4,r4,-128
  803790:	217ff726 	beq	r4,r5,803770 <__alt_data_end+0xff803770>
  803794:	a2000044 	addi	r8,r20,1
  803798:	12000005 	stb	r8,0(r2)
  80379c:	003f4606 	br	8034b8 <__alt_data_end+0xff8034b8>
  8037a0:	d9000b17 	ldw	r4,44(sp)
  8037a4:	2000c826 	beq	r4,zero,803ac8 <_dtoa_r+0xcb8>
  8037a8:	d9800317 	ldw	r6,12(sp)
  8037ac:	00c00044 	movi	r3,1
  8037b0:	1980f90e 	bge	r3,r6,803b98 <_dtoa_r+0xd88>
  8037b4:	d8800617 	ldw	r2,24(sp)
  8037b8:	d8c00a17 	ldw	r3,40(sp)
  8037bc:	157fffc4 	addi	r21,r2,-1
  8037c0:	1d41f316 	blt	r3,r21,803f90 <_dtoa_r+0x1180>
  8037c4:	1d6bc83a 	sub	r21,r3,r21
  8037c8:	d9c00617 	ldw	r7,24(sp)
  8037cc:	3802aa16 	blt	r7,zero,804278 <_dtoa_r+0x1468>
  8037d0:	dd000817 	ldw	r20,32(sp)
  8037d4:	d8800617 	ldw	r2,24(sp)
  8037d8:	d8c00817 	ldw	r3,32(sp)
  8037dc:	01400044 	movi	r5,1
  8037e0:	e009883a 	mov	r4,fp
  8037e4:	1887883a 	add	r3,r3,r2
  8037e8:	d8c00815 	stw	r3,32(sp)
  8037ec:	b0ad883a 	add	r22,r22,r2
  8037f0:	08068fc0 	call	8068fc <__i2b>
  8037f4:	1023883a 	mov	r17,r2
  8037f8:	a0000826 	beq	r20,zero,80381c <_dtoa_r+0xa0c>
  8037fc:	0580070e 	bge	zero,r22,80381c <_dtoa_r+0xa0c>
  803800:	a005883a 	mov	r2,r20
  803804:	b500b916 	blt	r22,r20,803aec <_dtoa_r+0xcdc>
  803808:	d9000817 	ldw	r4,32(sp)
  80380c:	a0a9c83a 	sub	r20,r20,r2
  803810:	b0adc83a 	sub	r22,r22,r2
  803814:	2089c83a 	sub	r4,r4,r2
  803818:	d9000815 	stw	r4,32(sp)
  80381c:	d9800a17 	ldw	r6,40(sp)
  803820:	0181810e 	bge	zero,r6,803e28 <_dtoa_r+0x1018>
  803824:	d9c00b17 	ldw	r7,44(sp)
  803828:	3800b326 	beq	r7,zero,803af8 <_dtoa_r+0xce8>
  80382c:	a800b226 	beq	r21,zero,803af8 <_dtoa_r+0xce8>
  803830:	880b883a 	mov	r5,r17
  803834:	a80d883a 	mov	r6,r21
  803838:	e009883a 	mov	r4,fp
  80383c:	0806bc40 	call	806bc4 <__pow5mult>
  803840:	d9800917 	ldw	r6,36(sp)
  803844:	100b883a 	mov	r5,r2
  803848:	e009883a 	mov	r4,fp
  80384c:	1023883a 	mov	r17,r2
  803850:	08069380 	call	806938 <__multiply>
  803854:	1021883a 	mov	r16,r2
  803858:	d8800a17 	ldw	r2,40(sp)
  80385c:	d9400917 	ldw	r5,36(sp)
  803860:	e009883a 	mov	r4,fp
  803864:	1545c83a 	sub	r2,r2,r21
  803868:	d8800a15 	stw	r2,40(sp)
  80386c:	08065700 	call	806570 <_Bfree>
  803870:	d8c00a17 	ldw	r3,40(sp)
  803874:	18009f1e 	bne	r3,zero,803af4 <_dtoa_r+0xce4>
  803878:	05c00044 	movi	r23,1
  80387c:	e009883a 	mov	r4,fp
  803880:	b80b883a 	mov	r5,r23
  803884:	08068fc0 	call	8068fc <__i2b>
  803888:	d9000d17 	ldw	r4,52(sp)
  80388c:	102b883a 	mov	r21,r2
  803890:	2000ce26 	beq	r4,zero,803bcc <_dtoa_r+0xdbc>
  803894:	200d883a 	mov	r6,r4
  803898:	100b883a 	mov	r5,r2
  80389c:	e009883a 	mov	r4,fp
  8038a0:	0806bc40 	call	806bc4 <__pow5mult>
  8038a4:	d9800317 	ldw	r6,12(sp)
  8038a8:	102b883a 	mov	r21,r2
  8038ac:	b981810e 	bge	r23,r6,803eb4 <_dtoa_r+0x10a4>
  8038b0:	0027883a 	mov	r19,zero
  8038b4:	a8800417 	ldw	r2,16(r21)
  8038b8:	05c00804 	movi	r23,32
  8038bc:	10800104 	addi	r2,r2,4
  8038c0:	1085883a 	add	r2,r2,r2
  8038c4:	1085883a 	add	r2,r2,r2
  8038c8:	a885883a 	add	r2,r21,r2
  8038cc:	11000017 	ldw	r4,0(r2)
  8038d0:	08067e40 	call	8067e4 <__hi0bits>
  8038d4:	b885c83a 	sub	r2,r23,r2
  8038d8:	1585883a 	add	r2,r2,r22
  8038dc:	108007cc 	andi	r2,r2,31
  8038e0:	1000b326 	beq	r2,zero,803bb0 <_dtoa_r+0xda0>
  8038e4:	00c00804 	movi	r3,32
  8038e8:	1887c83a 	sub	r3,r3,r2
  8038ec:	01000104 	movi	r4,4
  8038f0:	20c2cd0e 	bge	r4,r3,804428 <_dtoa_r+0x1618>
  8038f4:	00c00704 	movi	r3,28
  8038f8:	1885c83a 	sub	r2,r3,r2
  8038fc:	d8c00817 	ldw	r3,32(sp)
  803900:	a0a9883a 	add	r20,r20,r2
  803904:	b0ad883a 	add	r22,r22,r2
  803908:	1887883a 	add	r3,r3,r2
  80390c:	d8c00815 	stw	r3,32(sp)
  803910:	d9800817 	ldw	r6,32(sp)
  803914:	0180040e 	bge	zero,r6,803928 <_dtoa_r+0xb18>
  803918:	800b883a 	mov	r5,r16
  80391c:	e009883a 	mov	r4,fp
  803920:	0806d040 	call	806d04 <__lshift>
  803924:	1021883a 	mov	r16,r2
  803928:	0580050e 	bge	zero,r22,803940 <_dtoa_r+0xb30>
  80392c:	a80b883a 	mov	r5,r21
  803930:	b00d883a 	mov	r6,r22
  803934:	e009883a 	mov	r4,fp
  803938:	0806d040 	call	806d04 <__lshift>
  80393c:	102b883a 	mov	r21,r2
  803940:	d9c00e17 	ldw	r7,56(sp)
  803944:	3801211e 	bne	r7,zero,803dcc <_dtoa_r+0xfbc>
  803948:	d9800617 	ldw	r6,24(sp)
  80394c:	0181380e 	bge	zero,r6,803e30 <_dtoa_r+0x1020>
  803950:	d8c00b17 	ldw	r3,44(sp)
  803954:	1800ab1e 	bne	r3,zero,803c04 <_dtoa_r+0xdf4>
  803958:	dc800717 	ldw	r18,28(sp)
  80395c:	dcc00617 	ldw	r19,24(sp)
  803960:	9029883a 	mov	r20,r18
  803964:	00000206 	br	803970 <_dtoa_r+0xb60>
  803968:	08065980 	call	806598 <__multadd>
  80396c:	1021883a 	mov	r16,r2
  803970:	a80b883a 	mov	r5,r21
  803974:	8009883a 	mov	r4,r16
  803978:	0802be80 	call	802be8 <quorem>
  80397c:	10800c04 	addi	r2,r2,48
  803980:	90800005 	stb	r2,0(r18)
  803984:	94800044 	addi	r18,r18,1
  803988:	9507c83a 	sub	r3,r18,r20
  80398c:	000f883a 	mov	r7,zero
  803990:	01800284 	movi	r6,10
  803994:	800b883a 	mov	r5,r16
  803998:	e009883a 	mov	r4,fp
  80399c:	1cfff216 	blt	r3,r19,803968 <__alt_data_end+0xff803968>
  8039a0:	1011883a 	mov	r8,r2
  8039a4:	d8800617 	ldw	r2,24(sp)
  8039a8:	0082370e 	bge	zero,r2,804288 <_dtoa_r+0x1478>
  8039ac:	d9000717 	ldw	r4,28(sp)
  8039b0:	0025883a 	mov	r18,zero
  8039b4:	20af883a 	add	r23,r4,r2
  8039b8:	01800044 	movi	r6,1
  8039bc:	800b883a 	mov	r5,r16
  8039c0:	e009883a 	mov	r4,fp
  8039c4:	da001715 	stw	r8,92(sp)
  8039c8:	0806d040 	call	806d04 <__lshift>
  8039cc:	a80b883a 	mov	r5,r21
  8039d0:	1009883a 	mov	r4,r2
  8039d4:	d8800915 	stw	r2,36(sp)
  8039d8:	0806e4c0 	call	806e4c <__mcmp>
  8039dc:	da001717 	ldw	r8,92(sp)
  8039e0:	0081800e 	bge	zero,r2,803fe4 <_dtoa_r+0x11d4>
  8039e4:	b93fffc3 	ldbu	r4,-1(r23)
  8039e8:	b8bfffc4 	addi	r2,r23,-1
  8039ec:	1007883a 	mov	r3,r2
  8039f0:	01800e44 	movi	r6,57
  8039f4:	d9c00717 	ldw	r7,28(sp)
  8039f8:	00000506 	br	803a10 <_dtoa_r+0xc00>
  8039fc:	18ffffc4 	addi	r3,r3,-1
  803a00:	11c12326 	beq	r2,r7,803e90 <_dtoa_r+0x1080>
  803a04:	19000003 	ldbu	r4,0(r3)
  803a08:	102f883a 	mov	r23,r2
  803a0c:	10bfffc4 	addi	r2,r2,-1
  803a10:	21403fcc 	andi	r5,r4,255
  803a14:	2940201c 	xori	r5,r5,128
  803a18:	297fe004 	addi	r5,r5,-128
  803a1c:	29bff726 	beq	r5,r6,8039fc <__alt_data_end+0xff8039fc>
  803a20:	21000044 	addi	r4,r4,1
  803a24:	11000005 	stb	r4,0(r2)
  803a28:	a80b883a 	mov	r5,r21
  803a2c:	e009883a 	mov	r4,fp
  803a30:	08065700 	call	806570 <_Bfree>
  803a34:	883ea026 	beq	r17,zero,8034b8 <__alt_data_end+0xff8034b8>
  803a38:	90000426 	beq	r18,zero,803a4c <_dtoa_r+0xc3c>
  803a3c:	94400326 	beq	r18,r17,803a4c <_dtoa_r+0xc3c>
  803a40:	900b883a 	mov	r5,r18
  803a44:	e009883a 	mov	r4,fp
  803a48:	08065700 	call	806570 <_Bfree>
  803a4c:	880b883a 	mov	r5,r17
  803a50:	e009883a 	mov	r4,fp
  803a54:	08065700 	call	806570 <_Bfree>
  803a58:	003e9706 	br	8034b8 <__alt_data_end+0xff8034b8>
  803a5c:	01800044 	movi	r6,1
  803a60:	d9800e15 	stw	r6,56(sp)
  803a64:	003d9606 	br	8030c0 <__alt_data_end+0xff8030c0>
  803a68:	d8800817 	ldw	r2,32(sp)
  803a6c:	d8c00517 	ldw	r3,20(sp)
  803a70:	d8000d15 	stw	zero,52(sp)
  803a74:	10c5c83a 	sub	r2,r2,r3
  803a78:	00c9c83a 	sub	r4,zero,r3
  803a7c:	d8800815 	stw	r2,32(sp)
  803a80:	d9000a15 	stw	r4,40(sp)
  803a84:	003d9706 	br	8030e4 <__alt_data_end+0xff8030e4>
  803a88:	05adc83a 	sub	r22,zero,r22
  803a8c:	dd800815 	stw	r22,32(sp)
  803a90:	002d883a 	mov	r22,zero
  803a94:	003d8e06 	br	8030d0 <__alt_data_end+0xff8030d0>
  803a98:	d9000517 	ldw	r4,20(sp)
  803a9c:	080d25c0 	call	80d25c <__floatsidf>
  803aa0:	100d883a 	mov	r6,r2
  803aa4:	180f883a 	mov	r7,r3
  803aa8:	a009883a 	mov	r4,r20
  803aac:	880b883a 	mov	r5,r17
  803ab0:	080be200 	call	80be20 <__eqdf2>
  803ab4:	103d7126 	beq	r2,zero,80307c <__alt_data_end+0xff80307c>
  803ab8:	d9c00517 	ldw	r7,20(sp)
  803abc:	39ffffc4 	addi	r7,r7,-1
  803ac0:	d9c00515 	stw	r7,20(sp)
  803ac4:	003d6d06 	br	80307c <__alt_data_end+0xff80307c>
  803ac8:	dd400a17 	ldw	r21,40(sp)
  803acc:	dd000817 	ldw	r20,32(sp)
  803ad0:	0023883a 	mov	r17,zero
  803ad4:	003f4806 	br	8037f8 <__alt_data_end+0xff8037f8>
  803ad8:	10e3c83a 	sub	r17,r2,r3
  803adc:	9448983a 	sll	r4,r18,r17
  803ae0:	003d3206 	br	802fac <__alt_data_end+0xff802fac>
  803ae4:	d8000e15 	stw	zero,56(sp)
  803ae8:	003d7506 	br	8030c0 <__alt_data_end+0xff8030c0>
  803aec:	b005883a 	mov	r2,r22
  803af0:	003f4506 	br	803808 <__alt_data_end+0xff803808>
  803af4:	dc000915 	stw	r16,36(sp)
  803af8:	d9800a17 	ldw	r6,40(sp)
  803afc:	d9400917 	ldw	r5,36(sp)
  803b00:	e009883a 	mov	r4,fp
  803b04:	0806bc40 	call	806bc4 <__pow5mult>
  803b08:	1021883a 	mov	r16,r2
  803b0c:	003f5a06 	br	803878 <__alt_data_end+0xff803878>
  803b10:	01c00044 	movi	r7,1
  803b14:	d9c00b15 	stw	r7,44(sp)
  803b18:	d8802217 	ldw	r2,136(sp)
  803b1c:	0081280e 	bge	zero,r2,803fc0 <_dtoa_r+0x11b0>
  803b20:	100d883a 	mov	r6,r2
  803b24:	1021883a 	mov	r16,r2
  803b28:	d8800c15 	stw	r2,48(sp)
  803b2c:	d8800615 	stw	r2,24(sp)
  803b30:	003d8806 	br	803154 <__alt_data_end+0xff803154>
  803b34:	d8800617 	ldw	r2,24(sp)
  803b38:	00be9b16 	blt	zero,r2,8035a8 <__alt_data_end+0xff8035a8>
  803b3c:	10010f1e 	bne	r2,zero,803f7c <_dtoa_r+0x116c>
  803b40:	880b883a 	mov	r5,r17
  803b44:	000d883a 	mov	r6,zero
  803b48:	01d00534 	movhi	r7,16404
  803b4c:	8009883a 	mov	r4,r16
  803b50:	080c0780 	call	80c078 <__muldf3>
  803b54:	900d883a 	mov	r6,r18
  803b58:	980f883a 	mov	r7,r19
  803b5c:	1009883a 	mov	r4,r2
  803b60:	180b883a 	mov	r5,r3
  803b64:	080bea80 	call	80bea8 <__gedf2>
  803b68:	002b883a 	mov	r21,zero
  803b6c:	0023883a 	mov	r17,zero
  803b70:	1000bf16 	blt	r2,zero,803e70 <_dtoa_r+0x1060>
  803b74:	d9802217 	ldw	r6,136(sp)
  803b78:	ddc00717 	ldw	r23,28(sp)
  803b7c:	018c303a 	nor	r6,zero,r6
  803b80:	d9800515 	stw	r6,20(sp)
  803b84:	a80b883a 	mov	r5,r21
  803b88:	e009883a 	mov	r4,fp
  803b8c:	08065700 	call	806570 <_Bfree>
  803b90:	883e4926 	beq	r17,zero,8034b8 <__alt_data_end+0xff8034b8>
  803b94:	003fad06 	br	803a4c <__alt_data_end+0xff803a4c>
  803b98:	d9c01117 	ldw	r7,68(sp)
  803b9c:	3801bc26 	beq	r7,zero,804290 <_dtoa_r+0x1480>
  803ba0:	10810cc4 	addi	r2,r2,1075
  803ba4:	dd400a17 	ldw	r21,40(sp)
  803ba8:	dd000817 	ldw	r20,32(sp)
  803bac:	003f0a06 	br	8037d8 <__alt_data_end+0xff8037d8>
  803bb0:	00800704 	movi	r2,28
  803bb4:	d9000817 	ldw	r4,32(sp)
  803bb8:	a0a9883a 	add	r20,r20,r2
  803bbc:	b0ad883a 	add	r22,r22,r2
  803bc0:	2089883a 	add	r4,r4,r2
  803bc4:	d9000815 	stw	r4,32(sp)
  803bc8:	003f5106 	br	803910 <__alt_data_end+0xff803910>
  803bcc:	d8c00317 	ldw	r3,12(sp)
  803bd0:	b8c1fc0e 	bge	r23,r3,8043c4 <_dtoa_r+0x15b4>
  803bd4:	0027883a 	mov	r19,zero
  803bd8:	b805883a 	mov	r2,r23
  803bdc:	003f3e06 	br	8038d8 <__alt_data_end+0xff8038d8>
  803be0:	880b883a 	mov	r5,r17
  803be4:	e009883a 	mov	r4,fp
  803be8:	000f883a 	mov	r7,zero
  803bec:	01800284 	movi	r6,10
  803bf0:	08065980 	call	806598 <__multadd>
  803bf4:	d9000c17 	ldw	r4,48(sp)
  803bf8:	1023883a 	mov	r17,r2
  803bfc:	0102040e 	bge	zero,r4,804410 <_dtoa_r+0x1600>
  803c00:	d9000615 	stw	r4,24(sp)
  803c04:	0500050e 	bge	zero,r20,803c1c <_dtoa_r+0xe0c>
  803c08:	880b883a 	mov	r5,r17
  803c0c:	a00d883a 	mov	r6,r20
  803c10:	e009883a 	mov	r4,fp
  803c14:	0806d040 	call	806d04 <__lshift>
  803c18:	1023883a 	mov	r17,r2
  803c1c:	9801241e 	bne	r19,zero,8040b0 <_dtoa_r+0x12a0>
  803c20:	8829883a 	mov	r20,r17
  803c24:	d9000617 	ldw	r4,24(sp)
  803c28:	dcc00717 	ldw	r19,28(sp)
  803c2c:	9480004c 	andi	r18,r18,1
  803c30:	20bfffc4 	addi	r2,r4,-1
  803c34:	9885883a 	add	r2,r19,r2
  803c38:	d8800415 	stw	r2,16(sp)
  803c3c:	dc800615 	stw	r18,24(sp)
  803c40:	a80b883a 	mov	r5,r21
  803c44:	8009883a 	mov	r4,r16
  803c48:	0802be80 	call	802be8 <quorem>
  803c4c:	880b883a 	mov	r5,r17
  803c50:	8009883a 	mov	r4,r16
  803c54:	102f883a 	mov	r23,r2
  803c58:	0806e4c0 	call	806e4c <__mcmp>
  803c5c:	a80b883a 	mov	r5,r21
  803c60:	a00d883a 	mov	r6,r20
  803c64:	e009883a 	mov	r4,fp
  803c68:	102d883a 	mov	r22,r2
  803c6c:	0806eac0 	call	806eac <__mdiff>
  803c70:	1007883a 	mov	r3,r2
  803c74:	10800317 	ldw	r2,12(r2)
  803c78:	bc800c04 	addi	r18,r23,48
  803c7c:	180b883a 	mov	r5,r3
  803c80:	10004e1e 	bne	r2,zero,803dbc <_dtoa_r+0xfac>
  803c84:	8009883a 	mov	r4,r16
  803c88:	d8c01615 	stw	r3,88(sp)
  803c8c:	0806e4c0 	call	806e4c <__mcmp>
  803c90:	d8c01617 	ldw	r3,88(sp)
  803c94:	e009883a 	mov	r4,fp
  803c98:	d8801615 	stw	r2,88(sp)
  803c9c:	180b883a 	mov	r5,r3
  803ca0:	08065700 	call	806570 <_Bfree>
  803ca4:	d8801617 	ldw	r2,88(sp)
  803ca8:	1000041e 	bne	r2,zero,803cbc <_dtoa_r+0xeac>
  803cac:	d9800317 	ldw	r6,12(sp)
  803cb0:	3000021e 	bne	r6,zero,803cbc <_dtoa_r+0xeac>
  803cb4:	d8c00617 	ldw	r3,24(sp)
  803cb8:	18003726 	beq	r3,zero,803d98 <_dtoa_r+0xf88>
  803cbc:	b0002016 	blt	r22,zero,803d40 <_dtoa_r+0xf30>
  803cc0:	b000041e 	bne	r22,zero,803cd4 <_dtoa_r+0xec4>
  803cc4:	d9000317 	ldw	r4,12(sp)
  803cc8:	2000021e 	bne	r4,zero,803cd4 <_dtoa_r+0xec4>
  803ccc:	d8c00617 	ldw	r3,24(sp)
  803cd0:	18001b26 	beq	r3,zero,803d40 <_dtoa_r+0xf30>
  803cd4:	00810716 	blt	zero,r2,8040f4 <_dtoa_r+0x12e4>
  803cd8:	d8c00417 	ldw	r3,16(sp)
  803cdc:	9d800044 	addi	r22,r19,1
  803ce0:	9c800005 	stb	r18,0(r19)
  803ce4:	b02f883a 	mov	r23,r22
  803ce8:	98c10626 	beq	r19,r3,804104 <_dtoa_r+0x12f4>
  803cec:	800b883a 	mov	r5,r16
  803cf0:	000f883a 	mov	r7,zero
  803cf4:	01800284 	movi	r6,10
  803cf8:	e009883a 	mov	r4,fp
  803cfc:	08065980 	call	806598 <__multadd>
  803d00:	1021883a 	mov	r16,r2
  803d04:	000f883a 	mov	r7,zero
  803d08:	01800284 	movi	r6,10
  803d0c:	880b883a 	mov	r5,r17
  803d10:	e009883a 	mov	r4,fp
  803d14:	8d002526 	beq	r17,r20,803dac <_dtoa_r+0xf9c>
  803d18:	08065980 	call	806598 <__multadd>
  803d1c:	a00b883a 	mov	r5,r20
  803d20:	000f883a 	mov	r7,zero
  803d24:	01800284 	movi	r6,10
  803d28:	e009883a 	mov	r4,fp
  803d2c:	1023883a 	mov	r17,r2
  803d30:	08065980 	call	806598 <__multadd>
  803d34:	1029883a 	mov	r20,r2
  803d38:	b027883a 	mov	r19,r22
  803d3c:	003fc006 	br	803c40 <__alt_data_end+0xff803c40>
  803d40:	9011883a 	mov	r8,r18
  803d44:	00800e0e 	bge	zero,r2,803d80 <_dtoa_r+0xf70>
  803d48:	800b883a 	mov	r5,r16
  803d4c:	01800044 	movi	r6,1
  803d50:	e009883a 	mov	r4,fp
  803d54:	da001715 	stw	r8,92(sp)
  803d58:	0806d040 	call	806d04 <__lshift>
  803d5c:	a80b883a 	mov	r5,r21
  803d60:	1009883a 	mov	r4,r2
  803d64:	1021883a 	mov	r16,r2
  803d68:	0806e4c0 	call	806e4c <__mcmp>
  803d6c:	da001717 	ldw	r8,92(sp)
  803d70:	0081960e 	bge	zero,r2,8043cc <_dtoa_r+0x15bc>
  803d74:	00800e44 	movi	r2,57
  803d78:	40817026 	beq	r8,r2,80433c <_dtoa_r+0x152c>
  803d7c:	ba000c44 	addi	r8,r23,49
  803d80:	8825883a 	mov	r18,r17
  803d84:	9dc00044 	addi	r23,r19,1
  803d88:	9a000005 	stb	r8,0(r19)
  803d8c:	a023883a 	mov	r17,r20
  803d90:	dc000915 	stw	r16,36(sp)
  803d94:	003f2406 	br	803a28 <__alt_data_end+0xff803a28>
  803d98:	00800e44 	movi	r2,57
  803d9c:	9011883a 	mov	r8,r18
  803da0:	90816626 	beq	r18,r2,80433c <_dtoa_r+0x152c>
  803da4:	05bff516 	blt	zero,r22,803d7c <__alt_data_end+0xff803d7c>
  803da8:	003ff506 	br	803d80 <__alt_data_end+0xff803d80>
  803dac:	08065980 	call	806598 <__multadd>
  803db0:	1023883a 	mov	r17,r2
  803db4:	1029883a 	mov	r20,r2
  803db8:	003fdf06 	br	803d38 <__alt_data_end+0xff803d38>
  803dbc:	e009883a 	mov	r4,fp
  803dc0:	08065700 	call	806570 <_Bfree>
  803dc4:	00800044 	movi	r2,1
  803dc8:	003fbc06 	br	803cbc <__alt_data_end+0xff803cbc>
  803dcc:	a80b883a 	mov	r5,r21
  803dd0:	8009883a 	mov	r4,r16
  803dd4:	0806e4c0 	call	806e4c <__mcmp>
  803dd8:	103edb0e 	bge	r2,zero,803948 <__alt_data_end+0xff803948>
  803ddc:	800b883a 	mov	r5,r16
  803de0:	000f883a 	mov	r7,zero
  803de4:	01800284 	movi	r6,10
  803de8:	e009883a 	mov	r4,fp
  803dec:	08065980 	call	806598 <__multadd>
  803df0:	1021883a 	mov	r16,r2
  803df4:	d8800517 	ldw	r2,20(sp)
  803df8:	d8c00b17 	ldw	r3,44(sp)
  803dfc:	10bfffc4 	addi	r2,r2,-1
  803e00:	d8800515 	stw	r2,20(sp)
  803e04:	183f761e 	bne	r3,zero,803be0 <__alt_data_end+0xff803be0>
  803e08:	d9000c17 	ldw	r4,48(sp)
  803e0c:	0101730e 	bge	zero,r4,8043dc <_dtoa_r+0x15cc>
  803e10:	d9000615 	stw	r4,24(sp)
  803e14:	003ed006 	br	803958 <__alt_data_end+0xff803958>
  803e18:	00800084 	movi	r2,2
  803e1c:	3081861e 	bne	r6,r2,804438 <_dtoa_r+0x1628>
  803e20:	d8000b15 	stw	zero,44(sp)
  803e24:	003f3c06 	br	803b18 <__alt_data_end+0xff803b18>
  803e28:	dc000917 	ldw	r16,36(sp)
  803e2c:	003e9206 	br	803878 <__alt_data_end+0xff803878>
  803e30:	d9c00317 	ldw	r7,12(sp)
  803e34:	00800084 	movi	r2,2
  803e38:	11fec50e 	bge	r2,r7,803950 <__alt_data_end+0xff803950>
  803e3c:	d9000617 	ldw	r4,24(sp)
  803e40:	20013c1e 	bne	r4,zero,804334 <_dtoa_r+0x1524>
  803e44:	a80b883a 	mov	r5,r21
  803e48:	000f883a 	mov	r7,zero
  803e4c:	01800144 	movi	r6,5
  803e50:	e009883a 	mov	r4,fp
  803e54:	08065980 	call	806598 <__multadd>
  803e58:	100b883a 	mov	r5,r2
  803e5c:	8009883a 	mov	r4,r16
  803e60:	102b883a 	mov	r21,r2
  803e64:	0806e4c0 	call	806e4c <__mcmp>
  803e68:	dc000915 	stw	r16,36(sp)
  803e6c:	00bf410e 	bge	zero,r2,803b74 <__alt_data_end+0xff803b74>
  803e70:	d9c00717 	ldw	r7,28(sp)
  803e74:	00800c44 	movi	r2,49
  803e78:	38800005 	stb	r2,0(r7)
  803e7c:	d8800517 	ldw	r2,20(sp)
  803e80:	3dc00044 	addi	r23,r7,1
  803e84:	10800044 	addi	r2,r2,1
  803e88:	d8800515 	stw	r2,20(sp)
  803e8c:	003f3d06 	br	803b84 <__alt_data_end+0xff803b84>
  803e90:	d9800517 	ldw	r6,20(sp)
  803e94:	d9c00717 	ldw	r7,28(sp)
  803e98:	00800c44 	movi	r2,49
  803e9c:	31800044 	addi	r6,r6,1
  803ea0:	d9800515 	stw	r6,20(sp)
  803ea4:	38800005 	stb	r2,0(r7)
  803ea8:	003edf06 	br	803a28 <__alt_data_end+0xff803a28>
  803eac:	d8000b15 	stw	zero,44(sp)
  803eb0:	003c9f06 	br	803130 <__alt_data_end+0xff803130>
  803eb4:	903e7e1e 	bne	r18,zero,8038b0 <__alt_data_end+0xff8038b0>
  803eb8:	00800434 	movhi	r2,16
  803ebc:	10bfffc4 	addi	r2,r2,-1
  803ec0:	9884703a 	and	r2,r19,r2
  803ec4:	1000ea1e 	bne	r2,zero,804270 <_dtoa_r+0x1460>
  803ec8:	9cdffc2c 	andhi	r19,r19,32752
  803ecc:	9800e826 	beq	r19,zero,804270 <_dtoa_r+0x1460>
  803ed0:	d9c00817 	ldw	r7,32(sp)
  803ed4:	b5800044 	addi	r22,r22,1
  803ed8:	04c00044 	movi	r19,1
  803edc:	39c00044 	addi	r7,r7,1
  803ee0:	d9c00815 	stw	r7,32(sp)
  803ee4:	d8800d17 	ldw	r2,52(sp)
  803ee8:	103e721e 	bne	r2,zero,8038b4 <__alt_data_end+0xff8038b4>
  803eec:	00800044 	movi	r2,1
  803ef0:	003e7906 	br	8038d8 <__alt_data_end+0xff8038d8>
  803ef4:	8009883a 	mov	r4,r16
  803ef8:	080d25c0 	call	80d25c <__floatsidf>
  803efc:	d9800f17 	ldw	r6,60(sp)
  803f00:	d9c01017 	ldw	r7,64(sp)
  803f04:	1009883a 	mov	r4,r2
  803f08:	180b883a 	mov	r5,r3
  803f0c:	080c0780 	call	80c078 <__muldf3>
  803f10:	000d883a 	mov	r6,zero
  803f14:	01d00734 	movhi	r7,16412
  803f18:	1009883a 	mov	r4,r2
  803f1c:	180b883a 	mov	r5,r3
  803f20:	080aba40 	call	80aba4 <__adddf3>
  803f24:	047f3034 	movhi	r17,64704
  803f28:	1021883a 	mov	r16,r2
  803f2c:	1c63883a 	add	r17,r3,r17
  803f30:	d9000f17 	ldw	r4,60(sp)
  803f34:	d9401017 	ldw	r5,64(sp)
  803f38:	000d883a 	mov	r6,zero
  803f3c:	01d00534 	movhi	r7,16404
  803f40:	080c8e00 	call	80c8e0 <__subdf3>
  803f44:	800d883a 	mov	r6,r16
  803f48:	880f883a 	mov	r7,r17
  803f4c:	1009883a 	mov	r4,r2
  803f50:	180b883a 	mov	r5,r3
  803f54:	102b883a 	mov	r21,r2
  803f58:	1829883a 	mov	r20,r3
  803f5c:	080bea80 	call	80bea8 <__gedf2>
  803f60:	00806c16 	blt	zero,r2,804114 <_dtoa_r+0x1304>
  803f64:	89e0003c 	xorhi	r7,r17,32768
  803f68:	800d883a 	mov	r6,r16
  803f6c:	a809883a 	mov	r4,r21
  803f70:	a00b883a 	mov	r5,r20
  803f74:	080bf840 	call	80bf84 <__ledf2>
  803f78:	103d7e0e 	bge	r2,zero,803574 <__alt_data_end+0xff803574>
  803f7c:	002b883a 	mov	r21,zero
  803f80:	0023883a 	mov	r17,zero
  803f84:	003efb06 	br	803b74 <__alt_data_end+0xff803b74>
  803f88:	d8800717 	ldw	r2,28(sp)
  803f8c:	003bd006 	br	802ed0 <__alt_data_end+0xff802ed0>
  803f90:	d9000a17 	ldw	r4,40(sp)
  803f94:	d9800d17 	ldw	r6,52(sp)
  803f98:	dd400a15 	stw	r21,40(sp)
  803f9c:	a905c83a 	sub	r2,r21,r4
  803fa0:	308d883a 	add	r6,r6,r2
  803fa4:	d9800d15 	stw	r6,52(sp)
  803fa8:	002b883a 	mov	r21,zero
  803fac:	003e0606 	br	8037c8 <__alt_data_end+0xff8037c8>
  803fb0:	9023883a 	mov	r17,r18
  803fb4:	9829883a 	mov	r20,r19
  803fb8:	04000084 	movi	r16,2
  803fbc:	003c9206 	br	803208 <__alt_data_end+0xff803208>
  803fc0:	04000044 	movi	r16,1
  803fc4:	dc000c15 	stw	r16,48(sp)
  803fc8:	dc000615 	stw	r16,24(sp)
  803fcc:	dc002215 	stw	r16,136(sp)
  803fd0:	e0001115 	stw	zero,68(fp)
  803fd4:	000b883a 	mov	r5,zero
  803fd8:	003c6906 	br	803180 <__alt_data_end+0xff803180>
  803fdc:	3021883a 	mov	r16,r6
  803fe0:	003ffb06 	br	803fd0 <__alt_data_end+0xff803fd0>
  803fe4:	1000021e 	bne	r2,zero,803ff0 <_dtoa_r+0x11e0>
  803fe8:	4200004c 	andi	r8,r8,1
  803fec:	403e7d1e 	bne	r8,zero,8039e4 <__alt_data_end+0xff8039e4>
  803ff0:	01000c04 	movi	r4,48
  803ff4:	00000106 	br	803ffc <_dtoa_r+0x11ec>
  803ff8:	102f883a 	mov	r23,r2
  803ffc:	b8bfffc4 	addi	r2,r23,-1
  804000:	10c00007 	ldb	r3,0(r2)
  804004:	193ffc26 	beq	r3,r4,803ff8 <__alt_data_end+0xff803ff8>
  804008:	003e8706 	br	803a28 <__alt_data_end+0xff803a28>
  80400c:	d8800517 	ldw	r2,20(sp)
  804010:	00a3c83a 	sub	r17,zero,r2
  804014:	8800a426 	beq	r17,zero,8042a8 <_dtoa_r+0x1498>
  804018:	888003cc 	andi	r2,r17,15
  80401c:	100490fa 	slli	r2,r2,3
  804020:	00c02074 	movhi	r3,129
  804024:	18ffaf04 	addi	r3,r3,-324
  804028:	1885883a 	add	r2,r3,r2
  80402c:	11800017 	ldw	r6,0(r2)
  804030:	11c00117 	ldw	r7,4(r2)
  804034:	9009883a 	mov	r4,r18
  804038:	980b883a 	mov	r5,r19
  80403c:	8823d13a 	srai	r17,r17,4
  804040:	080c0780 	call	80c078 <__muldf3>
  804044:	d8800f15 	stw	r2,60(sp)
  804048:	d8c01015 	stw	r3,64(sp)
  80404c:	8800e826 	beq	r17,zero,8043f0 <_dtoa_r+0x15e0>
  804050:	05002074 	movhi	r20,129
  804054:	a53fa504 	addi	r20,r20,-364
  804058:	04000084 	movi	r16,2
  80405c:	8980004c 	andi	r6,r17,1
  804060:	1009883a 	mov	r4,r2
  804064:	8823d07a 	srai	r17,r17,1
  804068:	180b883a 	mov	r5,r3
  80406c:	30000426 	beq	r6,zero,804080 <_dtoa_r+0x1270>
  804070:	a1800017 	ldw	r6,0(r20)
  804074:	a1c00117 	ldw	r7,4(r20)
  804078:	84000044 	addi	r16,r16,1
  80407c:	080c0780 	call	80c078 <__muldf3>
  804080:	a5000204 	addi	r20,r20,8
  804084:	883ff51e 	bne	r17,zero,80405c <__alt_data_end+0xff80405c>
  804088:	d8800f15 	stw	r2,60(sp)
  80408c:	d8c01015 	stw	r3,64(sp)
  804090:	003c7606 	br	80326c <__alt_data_end+0xff80326c>
  804094:	00c00c04 	movi	r3,48
  804098:	10c00005 	stb	r3,0(r2)
  80409c:	d8c00517 	ldw	r3,20(sp)
  8040a0:	bd3fffc3 	ldbu	r20,-1(r23)
  8040a4:	18c00044 	addi	r3,r3,1
  8040a8:	d8c00515 	stw	r3,20(sp)
  8040ac:	003db906 	br	803794 <__alt_data_end+0xff803794>
  8040b0:	89400117 	ldw	r5,4(r17)
  8040b4:	e009883a 	mov	r4,fp
  8040b8:	08064c80 	call	8064c8 <_Balloc>
  8040bc:	89800417 	ldw	r6,16(r17)
  8040c0:	89400304 	addi	r5,r17,12
  8040c4:	11000304 	addi	r4,r2,12
  8040c8:	31800084 	addi	r6,r6,2
  8040cc:	318d883a 	add	r6,r6,r6
  8040d0:	318d883a 	add	r6,r6,r6
  8040d4:	1027883a 	mov	r19,r2
  8040d8:	08060fc0 	call	8060fc <memcpy>
  8040dc:	01800044 	movi	r6,1
  8040e0:	980b883a 	mov	r5,r19
  8040e4:	e009883a 	mov	r4,fp
  8040e8:	0806d040 	call	806d04 <__lshift>
  8040ec:	1029883a 	mov	r20,r2
  8040f0:	003ecc06 	br	803c24 <__alt_data_end+0xff803c24>
  8040f4:	00800e44 	movi	r2,57
  8040f8:	90809026 	beq	r18,r2,80433c <_dtoa_r+0x152c>
  8040fc:	92000044 	addi	r8,r18,1
  804100:	003f1f06 	br	803d80 <__alt_data_end+0xff803d80>
  804104:	9011883a 	mov	r8,r18
  804108:	8825883a 	mov	r18,r17
  80410c:	a023883a 	mov	r17,r20
  804110:	003e2906 	br	8039b8 <__alt_data_end+0xff8039b8>
  804114:	002b883a 	mov	r21,zero
  804118:	0023883a 	mov	r17,zero
  80411c:	003f5406 	br	803e70 <__alt_data_end+0xff803e70>
  804120:	61bfffc4 	addi	r6,r12,-1
  804124:	300490fa 	slli	r2,r6,3
  804128:	00c02074 	movhi	r3,129
  80412c:	18ffaf04 	addi	r3,r3,-324
  804130:	1885883a 	add	r2,r3,r2
  804134:	11000017 	ldw	r4,0(r2)
  804138:	11400117 	ldw	r5,4(r2)
  80413c:	d8800717 	ldw	r2,28(sp)
  804140:	880f883a 	mov	r7,r17
  804144:	d9801215 	stw	r6,72(sp)
  804148:	800d883a 	mov	r6,r16
  80414c:	db001615 	stw	r12,88(sp)
  804150:	15c00044 	addi	r23,r2,1
  804154:	080c0780 	call	80c078 <__muldf3>
  804158:	d9401017 	ldw	r5,64(sp)
  80415c:	d9000f17 	ldw	r4,60(sp)
  804160:	d8c01515 	stw	r3,84(sp)
  804164:	d8801415 	stw	r2,80(sp)
  804168:	080d1dc0 	call	80d1dc <__fixdfsi>
  80416c:	1009883a 	mov	r4,r2
  804170:	1021883a 	mov	r16,r2
  804174:	080d25c0 	call	80d25c <__floatsidf>
  804178:	d9000f17 	ldw	r4,60(sp)
  80417c:	d9401017 	ldw	r5,64(sp)
  804180:	100d883a 	mov	r6,r2
  804184:	180f883a 	mov	r7,r3
  804188:	080c8e00 	call	80c8e0 <__subdf3>
  80418c:	1829883a 	mov	r20,r3
  804190:	d8c00717 	ldw	r3,28(sp)
  804194:	84000c04 	addi	r16,r16,48
  804198:	1023883a 	mov	r17,r2
  80419c:	1c000005 	stb	r16,0(r3)
  8041a0:	db001617 	ldw	r12,88(sp)
  8041a4:	00800044 	movi	r2,1
  8041a8:	60802226 	beq	r12,r2,804234 <_dtoa_r+0x1424>
  8041ac:	d9c00717 	ldw	r7,28(sp)
  8041b0:	8805883a 	mov	r2,r17
  8041b4:	b82b883a 	mov	r21,r23
  8041b8:	3b19883a 	add	r12,r7,r12
  8041bc:	6023883a 	mov	r17,r12
  8041c0:	a007883a 	mov	r3,r20
  8041c4:	dc800f15 	stw	r18,60(sp)
  8041c8:	000d883a 	mov	r6,zero
  8041cc:	01d00934 	movhi	r7,16420
  8041d0:	1009883a 	mov	r4,r2
  8041d4:	180b883a 	mov	r5,r3
  8041d8:	080c0780 	call	80c078 <__muldf3>
  8041dc:	180b883a 	mov	r5,r3
  8041e0:	1009883a 	mov	r4,r2
  8041e4:	1829883a 	mov	r20,r3
  8041e8:	1025883a 	mov	r18,r2
  8041ec:	080d1dc0 	call	80d1dc <__fixdfsi>
  8041f0:	1009883a 	mov	r4,r2
  8041f4:	1021883a 	mov	r16,r2
  8041f8:	080d25c0 	call	80d25c <__floatsidf>
  8041fc:	100d883a 	mov	r6,r2
  804200:	180f883a 	mov	r7,r3
  804204:	9009883a 	mov	r4,r18
  804208:	a00b883a 	mov	r5,r20
  80420c:	84000c04 	addi	r16,r16,48
  804210:	080c8e00 	call	80c8e0 <__subdf3>
  804214:	ad400044 	addi	r21,r21,1
  804218:	ac3fffc5 	stb	r16,-1(r21)
  80421c:	ac7fea1e 	bne	r21,r17,8041c8 <__alt_data_end+0xff8041c8>
  804220:	1023883a 	mov	r17,r2
  804224:	d8801217 	ldw	r2,72(sp)
  804228:	dc800f17 	ldw	r18,60(sp)
  80422c:	1829883a 	mov	r20,r3
  804230:	b8af883a 	add	r23,r23,r2
  804234:	d9001417 	ldw	r4,80(sp)
  804238:	d9401517 	ldw	r5,84(sp)
  80423c:	000d883a 	mov	r6,zero
  804240:	01cff834 	movhi	r7,16352
  804244:	080aba40 	call	80aba4 <__adddf3>
  804248:	880d883a 	mov	r6,r17
  80424c:	a00f883a 	mov	r7,r20
  804250:	1009883a 	mov	r4,r2
  804254:	180b883a 	mov	r5,r3
  804258:	080bf840 	call	80bf84 <__ledf2>
  80425c:	10003e0e 	bge	r2,zero,804358 <_dtoa_r+0x1548>
  804260:	d9001317 	ldw	r4,76(sp)
  804264:	bd3fffc3 	ldbu	r20,-1(r23)
  804268:	d9000515 	stw	r4,20(sp)
  80426c:	003d3b06 	br	80375c <__alt_data_end+0xff80375c>
  804270:	0027883a 	mov	r19,zero
  804274:	003f1b06 	br	803ee4 <__alt_data_end+0xff803ee4>
  804278:	d8800817 	ldw	r2,32(sp)
  80427c:	11e9c83a 	sub	r20,r2,r7
  804280:	0005883a 	mov	r2,zero
  804284:	003d5406 	br	8037d8 <__alt_data_end+0xff8037d8>
  804288:	00800044 	movi	r2,1
  80428c:	003dc706 	br	8039ac <__alt_data_end+0xff8039ac>
  804290:	d8c00217 	ldw	r3,8(sp)
  804294:	00800d84 	movi	r2,54
  804298:	dd400a17 	ldw	r21,40(sp)
  80429c:	10c5c83a 	sub	r2,r2,r3
  8042a0:	dd000817 	ldw	r20,32(sp)
  8042a4:	003d4c06 	br	8037d8 <__alt_data_end+0xff8037d8>
  8042a8:	dc800f15 	stw	r18,60(sp)
  8042ac:	dcc01015 	stw	r19,64(sp)
  8042b0:	04000084 	movi	r16,2
  8042b4:	003bed06 	br	80326c <__alt_data_end+0xff80326c>
  8042b8:	d9000617 	ldw	r4,24(sp)
  8042bc:	203f0d26 	beq	r4,zero,803ef4 <__alt_data_end+0xff803ef4>
  8042c0:	d9800c17 	ldw	r6,48(sp)
  8042c4:	01bcab0e 	bge	zero,r6,803574 <__alt_data_end+0xff803574>
  8042c8:	d9401017 	ldw	r5,64(sp)
  8042cc:	d9000f17 	ldw	r4,60(sp)
  8042d0:	000d883a 	mov	r6,zero
  8042d4:	01d00934 	movhi	r7,16420
  8042d8:	080c0780 	call	80c078 <__muldf3>
  8042dc:	81000044 	addi	r4,r16,1
  8042e0:	d8800f15 	stw	r2,60(sp)
  8042e4:	d8c01015 	stw	r3,64(sp)
  8042e8:	080d25c0 	call	80d25c <__floatsidf>
  8042ec:	d9800f17 	ldw	r6,60(sp)
  8042f0:	d9c01017 	ldw	r7,64(sp)
  8042f4:	1009883a 	mov	r4,r2
  8042f8:	180b883a 	mov	r5,r3
  8042fc:	080c0780 	call	80c078 <__muldf3>
  804300:	01d00734 	movhi	r7,16412
  804304:	000d883a 	mov	r6,zero
  804308:	1009883a 	mov	r4,r2
  80430c:	180b883a 	mov	r5,r3
  804310:	080aba40 	call	80aba4 <__adddf3>
  804314:	d9c00517 	ldw	r7,20(sp)
  804318:	047f3034 	movhi	r17,64704
  80431c:	1021883a 	mov	r16,r2
  804320:	39ffffc4 	addi	r7,r7,-1
  804324:	d9c01315 	stw	r7,76(sp)
  804328:	1c63883a 	add	r17,r3,r17
  80432c:	db000c17 	ldw	r12,48(sp)
  804330:	003bea06 	br	8032dc <__alt_data_end+0xff8032dc>
  804334:	dc000915 	stw	r16,36(sp)
  804338:	003e0e06 	br	803b74 <__alt_data_end+0xff803b74>
  80433c:	01000e44 	movi	r4,57
  804340:	8825883a 	mov	r18,r17
  804344:	9dc00044 	addi	r23,r19,1
  804348:	99000005 	stb	r4,0(r19)
  80434c:	a023883a 	mov	r17,r20
  804350:	dc000915 	stw	r16,36(sp)
  804354:	003da406 	br	8039e8 <__alt_data_end+0xff8039e8>
  804358:	d9801417 	ldw	r6,80(sp)
  80435c:	d9c01517 	ldw	r7,84(sp)
  804360:	0009883a 	mov	r4,zero
  804364:	014ff834 	movhi	r5,16352
  804368:	080c8e00 	call	80c8e0 <__subdf3>
  80436c:	880d883a 	mov	r6,r17
  804370:	a00f883a 	mov	r7,r20
  804374:	1009883a 	mov	r4,r2
  804378:	180b883a 	mov	r5,r3
  80437c:	080bea80 	call	80bea8 <__gedf2>
  804380:	00bc7c0e 	bge	zero,r2,803574 <__alt_data_end+0xff803574>
  804384:	01000c04 	movi	r4,48
  804388:	00000106 	br	804390 <_dtoa_r+0x1580>
  80438c:	102f883a 	mov	r23,r2
  804390:	b8bfffc4 	addi	r2,r23,-1
  804394:	10c00007 	ldb	r3,0(r2)
  804398:	193ffc26 	beq	r3,r4,80438c <__alt_data_end+0xff80438c>
  80439c:	d9801317 	ldw	r6,76(sp)
  8043a0:	d9800515 	stw	r6,20(sp)
  8043a4:	003c4406 	br	8034b8 <__alt_data_end+0xff8034b8>
  8043a8:	d9801317 	ldw	r6,76(sp)
  8043ac:	d9800515 	stw	r6,20(sp)
  8043b0:	003cea06 	br	80375c <__alt_data_end+0xff80375c>
  8043b4:	dd800f17 	ldw	r22,60(sp)
  8043b8:	dcc01017 	ldw	r19,64(sp)
  8043bc:	dc801217 	ldw	r18,72(sp)
  8043c0:	003c6c06 	br	803574 <__alt_data_end+0xff803574>
  8043c4:	903e031e 	bne	r18,zero,803bd4 <__alt_data_end+0xff803bd4>
  8043c8:	003ebb06 	br	803eb8 <__alt_data_end+0xff803eb8>
  8043cc:	103e6c1e 	bne	r2,zero,803d80 <__alt_data_end+0xff803d80>
  8043d0:	4080004c 	andi	r2,r8,1
  8043d4:	103e6a26 	beq	r2,zero,803d80 <__alt_data_end+0xff803d80>
  8043d8:	003e6606 	br	803d74 <__alt_data_end+0xff803d74>
  8043dc:	d8c00317 	ldw	r3,12(sp)
  8043e0:	00800084 	movi	r2,2
  8043e4:	10c02916 	blt	r2,r3,80448c <_dtoa_r+0x167c>
  8043e8:	d9000c17 	ldw	r4,48(sp)
  8043ec:	003e8806 	br	803e10 <__alt_data_end+0xff803e10>
  8043f0:	04000084 	movi	r16,2
  8043f4:	003b9d06 	br	80326c <__alt_data_end+0xff80326c>
  8043f8:	d9001317 	ldw	r4,76(sp)
  8043fc:	d9000515 	stw	r4,20(sp)
  804400:	003cd606 	br	80375c <__alt_data_end+0xff80375c>
  804404:	d8801317 	ldw	r2,76(sp)
  804408:	d8800515 	stw	r2,20(sp)
  80440c:	003c2a06 	br	8034b8 <__alt_data_end+0xff8034b8>
  804410:	d9800317 	ldw	r6,12(sp)
  804414:	00800084 	movi	r2,2
  804418:	11801516 	blt	r2,r6,804470 <_dtoa_r+0x1660>
  80441c:	d9c00c17 	ldw	r7,48(sp)
  804420:	d9c00615 	stw	r7,24(sp)
  804424:	003df706 	br	803c04 <__alt_data_end+0xff803c04>
  804428:	193d3926 	beq	r3,r4,803910 <__alt_data_end+0xff803910>
  80442c:	00c00f04 	movi	r3,60
  804430:	1885c83a 	sub	r2,r3,r2
  804434:	003ddf06 	br	803bb4 <__alt_data_end+0xff803bb4>
  804438:	e009883a 	mov	r4,fp
  80443c:	e0001115 	stw	zero,68(fp)
  804440:	000b883a 	mov	r5,zero
  804444:	08064c80 	call	8064c8 <_Balloc>
  804448:	d8800715 	stw	r2,28(sp)
  80444c:	d8c00717 	ldw	r3,28(sp)
  804450:	00bfffc4 	movi	r2,-1
  804454:	01000044 	movi	r4,1
  804458:	d8800c15 	stw	r2,48(sp)
  80445c:	e0c01015 	stw	r3,64(fp)
  804460:	d9000b15 	stw	r4,44(sp)
  804464:	d8800615 	stw	r2,24(sp)
  804468:	d8002215 	stw	zero,136(sp)
  80446c:	003c4106 	br	803574 <__alt_data_end+0xff803574>
  804470:	d8c00c17 	ldw	r3,48(sp)
  804474:	d8c00615 	stw	r3,24(sp)
  804478:	003e7006 	br	803e3c <__alt_data_end+0xff803e3c>
  80447c:	04400044 	movi	r17,1
  804480:	003b2006 	br	803104 <__alt_data_end+0xff803104>
  804484:	000b883a 	mov	r5,zero
  804488:	003b3d06 	br	803180 <__alt_data_end+0xff803180>
  80448c:	d8800c17 	ldw	r2,48(sp)
  804490:	d8800615 	stw	r2,24(sp)
  804494:	003e6906 	br	803e3c <__alt_data_end+0xff803e3c>

00804498 <__sflush_r>:
  804498:	2880030b 	ldhu	r2,12(r5)
  80449c:	defffb04 	addi	sp,sp,-20
  8044a0:	dcc00315 	stw	r19,12(sp)
  8044a4:	dc400115 	stw	r17,4(sp)
  8044a8:	dfc00415 	stw	ra,16(sp)
  8044ac:	dc800215 	stw	r18,8(sp)
  8044b0:	dc000015 	stw	r16,0(sp)
  8044b4:	10c0020c 	andi	r3,r2,8
  8044b8:	2823883a 	mov	r17,r5
  8044bc:	2027883a 	mov	r19,r4
  8044c0:	1800311e 	bne	r3,zero,804588 <__sflush_r+0xf0>
  8044c4:	28c00117 	ldw	r3,4(r5)
  8044c8:	10820014 	ori	r2,r2,2048
  8044cc:	2880030d 	sth	r2,12(r5)
  8044d0:	00c04b0e 	bge	zero,r3,804600 <__sflush_r+0x168>
  8044d4:	8a000a17 	ldw	r8,40(r17)
  8044d8:	40002326 	beq	r8,zero,804568 <__sflush_r+0xd0>
  8044dc:	9c000017 	ldw	r16,0(r19)
  8044e0:	10c4000c 	andi	r3,r2,4096
  8044e4:	98000015 	stw	zero,0(r19)
  8044e8:	18004826 	beq	r3,zero,80460c <__sflush_r+0x174>
  8044ec:	89801417 	ldw	r6,80(r17)
  8044f0:	10c0010c 	andi	r3,r2,4
  8044f4:	18000626 	beq	r3,zero,804510 <__sflush_r+0x78>
  8044f8:	88c00117 	ldw	r3,4(r17)
  8044fc:	88800c17 	ldw	r2,48(r17)
  804500:	30cdc83a 	sub	r6,r6,r3
  804504:	10000226 	beq	r2,zero,804510 <__sflush_r+0x78>
  804508:	88800f17 	ldw	r2,60(r17)
  80450c:	308dc83a 	sub	r6,r6,r2
  804510:	89400717 	ldw	r5,28(r17)
  804514:	000f883a 	mov	r7,zero
  804518:	9809883a 	mov	r4,r19
  80451c:	403ee83a 	callr	r8
  804520:	00ffffc4 	movi	r3,-1
  804524:	10c04426 	beq	r2,r3,804638 <__sflush_r+0x1a0>
  804528:	88c0030b 	ldhu	r3,12(r17)
  80452c:	89000417 	ldw	r4,16(r17)
  804530:	88000115 	stw	zero,4(r17)
  804534:	197dffcc 	andi	r5,r3,63487
  804538:	8940030d 	sth	r5,12(r17)
  80453c:	89000015 	stw	r4,0(r17)
  804540:	18c4000c 	andi	r3,r3,4096
  804544:	18002c1e 	bne	r3,zero,8045f8 <__sflush_r+0x160>
  804548:	89400c17 	ldw	r5,48(r17)
  80454c:	9c000015 	stw	r16,0(r19)
  804550:	28000526 	beq	r5,zero,804568 <__sflush_r+0xd0>
  804554:	88801004 	addi	r2,r17,64
  804558:	28800226 	beq	r5,r2,804564 <__sflush_r+0xcc>
  80455c:	9809883a 	mov	r4,r19
  804560:	0804c140 	call	804c14 <_free_r>
  804564:	88000c15 	stw	zero,48(r17)
  804568:	0005883a 	mov	r2,zero
  80456c:	dfc00417 	ldw	ra,16(sp)
  804570:	dcc00317 	ldw	r19,12(sp)
  804574:	dc800217 	ldw	r18,8(sp)
  804578:	dc400117 	ldw	r17,4(sp)
  80457c:	dc000017 	ldw	r16,0(sp)
  804580:	dec00504 	addi	sp,sp,20
  804584:	f800283a 	ret
  804588:	2c800417 	ldw	r18,16(r5)
  80458c:	903ff626 	beq	r18,zero,804568 <__alt_data_end+0xff804568>
  804590:	2c000017 	ldw	r16,0(r5)
  804594:	108000cc 	andi	r2,r2,3
  804598:	2c800015 	stw	r18,0(r5)
  80459c:	84a1c83a 	sub	r16,r16,r18
  8045a0:	1000131e 	bne	r2,zero,8045f0 <__sflush_r+0x158>
  8045a4:	28800517 	ldw	r2,20(r5)
  8045a8:	88800215 	stw	r2,8(r17)
  8045ac:	04000316 	blt	zero,r16,8045bc <__sflush_r+0x124>
  8045b0:	003fed06 	br	804568 <__alt_data_end+0xff804568>
  8045b4:	90a5883a 	add	r18,r18,r2
  8045b8:	043feb0e 	bge	zero,r16,804568 <__alt_data_end+0xff804568>
  8045bc:	88800917 	ldw	r2,36(r17)
  8045c0:	89400717 	ldw	r5,28(r17)
  8045c4:	800f883a 	mov	r7,r16
  8045c8:	900d883a 	mov	r6,r18
  8045cc:	9809883a 	mov	r4,r19
  8045d0:	103ee83a 	callr	r2
  8045d4:	80a1c83a 	sub	r16,r16,r2
  8045d8:	00bff616 	blt	zero,r2,8045b4 <__alt_data_end+0xff8045b4>
  8045dc:	88c0030b 	ldhu	r3,12(r17)
  8045e0:	00bfffc4 	movi	r2,-1
  8045e4:	18c01014 	ori	r3,r3,64
  8045e8:	88c0030d 	sth	r3,12(r17)
  8045ec:	003fdf06 	br	80456c <__alt_data_end+0xff80456c>
  8045f0:	0005883a 	mov	r2,zero
  8045f4:	003fec06 	br	8045a8 <__alt_data_end+0xff8045a8>
  8045f8:	88801415 	stw	r2,80(r17)
  8045fc:	003fd206 	br	804548 <__alt_data_end+0xff804548>
  804600:	28c00f17 	ldw	r3,60(r5)
  804604:	00ffb316 	blt	zero,r3,8044d4 <__alt_data_end+0xff8044d4>
  804608:	003fd706 	br	804568 <__alt_data_end+0xff804568>
  80460c:	89400717 	ldw	r5,28(r17)
  804610:	000d883a 	mov	r6,zero
  804614:	01c00044 	movi	r7,1
  804618:	9809883a 	mov	r4,r19
  80461c:	403ee83a 	callr	r8
  804620:	100d883a 	mov	r6,r2
  804624:	00bfffc4 	movi	r2,-1
  804628:	30801426 	beq	r6,r2,80467c <__sflush_r+0x1e4>
  80462c:	8880030b 	ldhu	r2,12(r17)
  804630:	8a000a17 	ldw	r8,40(r17)
  804634:	003fae06 	br	8044f0 <__alt_data_end+0xff8044f0>
  804638:	98c00017 	ldw	r3,0(r19)
  80463c:	183fba26 	beq	r3,zero,804528 <__alt_data_end+0xff804528>
  804640:	01000744 	movi	r4,29
  804644:	19000626 	beq	r3,r4,804660 <__sflush_r+0x1c8>
  804648:	01000584 	movi	r4,22
  80464c:	19000426 	beq	r3,r4,804660 <__sflush_r+0x1c8>
  804650:	88c0030b 	ldhu	r3,12(r17)
  804654:	18c01014 	ori	r3,r3,64
  804658:	88c0030d 	sth	r3,12(r17)
  80465c:	003fc306 	br	80456c <__alt_data_end+0xff80456c>
  804660:	8880030b 	ldhu	r2,12(r17)
  804664:	88c00417 	ldw	r3,16(r17)
  804668:	88000115 	stw	zero,4(r17)
  80466c:	10bdffcc 	andi	r2,r2,63487
  804670:	8880030d 	sth	r2,12(r17)
  804674:	88c00015 	stw	r3,0(r17)
  804678:	003fb306 	br	804548 <__alt_data_end+0xff804548>
  80467c:	98800017 	ldw	r2,0(r19)
  804680:	103fea26 	beq	r2,zero,80462c <__alt_data_end+0xff80462c>
  804684:	00c00744 	movi	r3,29
  804688:	10c00226 	beq	r2,r3,804694 <__sflush_r+0x1fc>
  80468c:	00c00584 	movi	r3,22
  804690:	10c0031e 	bne	r2,r3,8046a0 <__sflush_r+0x208>
  804694:	9c000015 	stw	r16,0(r19)
  804698:	0005883a 	mov	r2,zero
  80469c:	003fb306 	br	80456c <__alt_data_end+0xff80456c>
  8046a0:	88c0030b 	ldhu	r3,12(r17)
  8046a4:	3005883a 	mov	r2,r6
  8046a8:	18c01014 	ori	r3,r3,64
  8046ac:	88c0030d 	sth	r3,12(r17)
  8046b0:	003fae06 	br	80456c <__alt_data_end+0xff80456c>

008046b4 <_fflush_r>:
  8046b4:	defffd04 	addi	sp,sp,-12
  8046b8:	dc000115 	stw	r16,4(sp)
  8046bc:	dfc00215 	stw	ra,8(sp)
  8046c0:	2021883a 	mov	r16,r4
  8046c4:	20000226 	beq	r4,zero,8046d0 <_fflush_r+0x1c>
  8046c8:	20800e17 	ldw	r2,56(r4)
  8046cc:	10000c26 	beq	r2,zero,804700 <_fflush_r+0x4c>
  8046d0:	2880030f 	ldh	r2,12(r5)
  8046d4:	1000051e 	bne	r2,zero,8046ec <_fflush_r+0x38>
  8046d8:	0005883a 	mov	r2,zero
  8046dc:	dfc00217 	ldw	ra,8(sp)
  8046e0:	dc000117 	ldw	r16,4(sp)
  8046e4:	dec00304 	addi	sp,sp,12
  8046e8:	f800283a 	ret
  8046ec:	8009883a 	mov	r4,r16
  8046f0:	dfc00217 	ldw	ra,8(sp)
  8046f4:	dc000117 	ldw	r16,4(sp)
  8046f8:	dec00304 	addi	sp,sp,12
  8046fc:	08044981 	jmpi	804498 <__sflush_r>
  804700:	d9400015 	stw	r5,0(sp)
  804704:	0804aa00 	call	804aa0 <__sinit>
  804708:	d9400017 	ldw	r5,0(sp)
  80470c:	003ff006 	br	8046d0 <__alt_data_end+0xff8046d0>

00804710 <fflush>:
  804710:	20000526 	beq	r4,zero,804728 <fflush+0x18>
  804714:	00802074 	movhi	r2,129
  804718:	1086a004 	addi	r2,r2,6784
  80471c:	200b883a 	mov	r5,r4
  804720:	11000017 	ldw	r4,0(r2)
  804724:	08046b41 	jmpi	8046b4 <_fflush_r>
  804728:	00802074 	movhi	r2,129
  80472c:	10869f04 	addi	r2,r2,6780
  804730:	11000017 	ldw	r4,0(r2)
  804734:	01402034 	movhi	r5,128
  804738:	2951ad04 	addi	r5,r5,18100
  80473c:	08054b01 	jmpi	8054b0 <_fwalk_reent>

00804740 <__fp_unlock>:
  804740:	0005883a 	mov	r2,zero
  804744:	f800283a 	ret

00804748 <_cleanup_r>:
  804748:	01402074 	movhi	r5,129
  80474c:	29659304 	addi	r5,r5,-27060
  804750:	08054b01 	jmpi	8054b0 <_fwalk_reent>

00804754 <__sinit.part.1>:
  804754:	defff704 	addi	sp,sp,-36
  804758:	00c02034 	movhi	r3,128
  80475c:	dfc00815 	stw	ra,32(sp)
  804760:	ddc00715 	stw	r23,28(sp)
  804764:	dd800615 	stw	r22,24(sp)
  804768:	dd400515 	stw	r21,20(sp)
  80476c:	dd000415 	stw	r20,16(sp)
  804770:	dcc00315 	stw	r19,12(sp)
  804774:	dc800215 	stw	r18,8(sp)
  804778:	dc400115 	stw	r17,4(sp)
  80477c:	dc000015 	stw	r16,0(sp)
  804780:	18d1d204 	addi	r3,r3,18248
  804784:	24000117 	ldw	r16,4(r4)
  804788:	20c00f15 	stw	r3,60(r4)
  80478c:	2080bb04 	addi	r2,r4,748
  804790:	00c000c4 	movi	r3,3
  804794:	20c0b915 	stw	r3,740(r4)
  804798:	2080ba15 	stw	r2,744(r4)
  80479c:	2000b815 	stw	zero,736(r4)
  8047a0:	05c00204 	movi	r23,8
  8047a4:	00800104 	movi	r2,4
  8047a8:	2025883a 	mov	r18,r4
  8047ac:	b80d883a 	mov	r6,r23
  8047b0:	81001704 	addi	r4,r16,92
  8047b4:	000b883a 	mov	r5,zero
  8047b8:	80000015 	stw	zero,0(r16)
  8047bc:	80000115 	stw	zero,4(r16)
  8047c0:	80000215 	stw	zero,8(r16)
  8047c4:	8080030d 	sth	r2,12(r16)
  8047c8:	80001915 	stw	zero,100(r16)
  8047cc:	8000038d 	sth	zero,14(r16)
  8047d0:	80000415 	stw	zero,16(r16)
  8047d4:	80000515 	stw	zero,20(r16)
  8047d8:	80000615 	stw	zero,24(r16)
  8047dc:	08063a00 	call	8063a0 <memset>
  8047e0:	05802034 	movhi	r22,128
  8047e4:	94400217 	ldw	r17,8(r18)
  8047e8:	05402034 	movhi	r21,128
  8047ec:	05002034 	movhi	r20,128
  8047f0:	04c02034 	movhi	r19,128
  8047f4:	b59eeb04 	addi	r22,r22,31660
  8047f8:	ad5f0204 	addi	r21,r21,31752
  8047fc:	a51f2104 	addi	r20,r20,31876
  804800:	9cdf3804 	addi	r19,r19,31968
  804804:	85800815 	stw	r22,32(r16)
  804808:	85400915 	stw	r21,36(r16)
  80480c:	85000a15 	stw	r20,40(r16)
  804810:	84c00b15 	stw	r19,44(r16)
  804814:	84000715 	stw	r16,28(r16)
  804818:	00800284 	movi	r2,10
  80481c:	8880030d 	sth	r2,12(r17)
  804820:	00800044 	movi	r2,1
  804824:	b80d883a 	mov	r6,r23
  804828:	89001704 	addi	r4,r17,92
  80482c:	000b883a 	mov	r5,zero
  804830:	88000015 	stw	zero,0(r17)
  804834:	88000115 	stw	zero,4(r17)
  804838:	88000215 	stw	zero,8(r17)
  80483c:	88001915 	stw	zero,100(r17)
  804840:	8880038d 	sth	r2,14(r17)
  804844:	88000415 	stw	zero,16(r17)
  804848:	88000515 	stw	zero,20(r17)
  80484c:	88000615 	stw	zero,24(r17)
  804850:	08063a00 	call	8063a0 <memset>
  804854:	94000317 	ldw	r16,12(r18)
  804858:	00800484 	movi	r2,18
  80485c:	8c400715 	stw	r17,28(r17)
  804860:	8d800815 	stw	r22,32(r17)
  804864:	8d400915 	stw	r21,36(r17)
  804868:	8d000a15 	stw	r20,40(r17)
  80486c:	8cc00b15 	stw	r19,44(r17)
  804870:	8080030d 	sth	r2,12(r16)
  804874:	00800084 	movi	r2,2
  804878:	80000015 	stw	zero,0(r16)
  80487c:	80000115 	stw	zero,4(r16)
  804880:	80000215 	stw	zero,8(r16)
  804884:	80001915 	stw	zero,100(r16)
  804888:	8080038d 	sth	r2,14(r16)
  80488c:	80000415 	stw	zero,16(r16)
  804890:	80000515 	stw	zero,20(r16)
  804894:	80000615 	stw	zero,24(r16)
  804898:	b80d883a 	mov	r6,r23
  80489c:	000b883a 	mov	r5,zero
  8048a0:	81001704 	addi	r4,r16,92
  8048a4:	08063a00 	call	8063a0 <memset>
  8048a8:	00800044 	movi	r2,1
  8048ac:	84000715 	stw	r16,28(r16)
  8048b0:	85800815 	stw	r22,32(r16)
  8048b4:	85400915 	stw	r21,36(r16)
  8048b8:	85000a15 	stw	r20,40(r16)
  8048bc:	84c00b15 	stw	r19,44(r16)
  8048c0:	90800e15 	stw	r2,56(r18)
  8048c4:	dfc00817 	ldw	ra,32(sp)
  8048c8:	ddc00717 	ldw	r23,28(sp)
  8048cc:	dd800617 	ldw	r22,24(sp)
  8048d0:	dd400517 	ldw	r21,20(sp)
  8048d4:	dd000417 	ldw	r20,16(sp)
  8048d8:	dcc00317 	ldw	r19,12(sp)
  8048dc:	dc800217 	ldw	r18,8(sp)
  8048e0:	dc400117 	ldw	r17,4(sp)
  8048e4:	dc000017 	ldw	r16,0(sp)
  8048e8:	dec00904 	addi	sp,sp,36
  8048ec:	f800283a 	ret

008048f0 <__fp_lock>:
  8048f0:	0005883a 	mov	r2,zero
  8048f4:	f800283a 	ret

008048f8 <__sfmoreglue>:
  8048f8:	defffc04 	addi	sp,sp,-16
  8048fc:	dc800215 	stw	r18,8(sp)
  804900:	2825883a 	mov	r18,r5
  804904:	dc000015 	stw	r16,0(sp)
  804908:	01401a04 	movi	r5,104
  80490c:	2021883a 	mov	r16,r4
  804910:	913fffc4 	addi	r4,r18,-1
  804914:	dfc00315 	stw	ra,12(sp)
  804918:	dc400115 	stw	r17,4(sp)
  80491c:	080ab7c0 	call	80ab7c <__mulsi3>
  804920:	8009883a 	mov	r4,r16
  804924:	11401d04 	addi	r5,r2,116
  804928:	1023883a 	mov	r17,r2
  80492c:	080580c0 	call	80580c <_malloc_r>
  804930:	1021883a 	mov	r16,r2
  804934:	10000726 	beq	r2,zero,804954 <__sfmoreglue+0x5c>
  804938:	11000304 	addi	r4,r2,12
  80493c:	10000015 	stw	zero,0(r2)
  804940:	14800115 	stw	r18,4(r2)
  804944:	11000215 	stw	r4,8(r2)
  804948:	89801a04 	addi	r6,r17,104
  80494c:	000b883a 	mov	r5,zero
  804950:	08063a00 	call	8063a0 <memset>
  804954:	8005883a 	mov	r2,r16
  804958:	dfc00317 	ldw	ra,12(sp)
  80495c:	dc800217 	ldw	r18,8(sp)
  804960:	dc400117 	ldw	r17,4(sp)
  804964:	dc000017 	ldw	r16,0(sp)
  804968:	dec00404 	addi	sp,sp,16
  80496c:	f800283a 	ret

00804970 <__sfp>:
  804970:	defffb04 	addi	sp,sp,-20
  804974:	dc000015 	stw	r16,0(sp)
  804978:	04002074 	movhi	r16,129
  80497c:	84069f04 	addi	r16,r16,6780
  804980:	dcc00315 	stw	r19,12(sp)
  804984:	2027883a 	mov	r19,r4
  804988:	81000017 	ldw	r4,0(r16)
  80498c:	dfc00415 	stw	ra,16(sp)
  804990:	dc800215 	stw	r18,8(sp)
  804994:	20800e17 	ldw	r2,56(r4)
  804998:	dc400115 	stw	r17,4(sp)
  80499c:	1000021e 	bne	r2,zero,8049a8 <__sfp+0x38>
  8049a0:	08047540 	call	804754 <__sinit.part.1>
  8049a4:	81000017 	ldw	r4,0(r16)
  8049a8:	2480b804 	addi	r18,r4,736
  8049ac:	047fffc4 	movi	r17,-1
  8049b0:	91000117 	ldw	r4,4(r18)
  8049b4:	94000217 	ldw	r16,8(r18)
  8049b8:	213fffc4 	addi	r4,r4,-1
  8049bc:	20000a16 	blt	r4,zero,8049e8 <__sfp+0x78>
  8049c0:	8080030f 	ldh	r2,12(r16)
  8049c4:	10000c26 	beq	r2,zero,8049f8 <__sfp+0x88>
  8049c8:	80c01d04 	addi	r3,r16,116
  8049cc:	00000206 	br	8049d8 <__sfp+0x68>
  8049d0:	18bfe60f 	ldh	r2,-104(r3)
  8049d4:	10000826 	beq	r2,zero,8049f8 <__sfp+0x88>
  8049d8:	213fffc4 	addi	r4,r4,-1
  8049dc:	1c3ffd04 	addi	r16,r3,-12
  8049e0:	18c01a04 	addi	r3,r3,104
  8049e4:	247ffa1e 	bne	r4,r17,8049d0 <__alt_data_end+0xff8049d0>
  8049e8:	90800017 	ldw	r2,0(r18)
  8049ec:	10001d26 	beq	r2,zero,804a64 <__sfp+0xf4>
  8049f0:	1025883a 	mov	r18,r2
  8049f4:	003fee06 	br	8049b0 <__alt_data_end+0xff8049b0>
  8049f8:	00bfffc4 	movi	r2,-1
  8049fc:	8080038d 	sth	r2,14(r16)
  804a00:	00800044 	movi	r2,1
  804a04:	8080030d 	sth	r2,12(r16)
  804a08:	80001915 	stw	zero,100(r16)
  804a0c:	80000015 	stw	zero,0(r16)
  804a10:	80000215 	stw	zero,8(r16)
  804a14:	80000115 	stw	zero,4(r16)
  804a18:	80000415 	stw	zero,16(r16)
  804a1c:	80000515 	stw	zero,20(r16)
  804a20:	80000615 	stw	zero,24(r16)
  804a24:	01800204 	movi	r6,8
  804a28:	000b883a 	mov	r5,zero
  804a2c:	81001704 	addi	r4,r16,92
  804a30:	08063a00 	call	8063a0 <memset>
  804a34:	8005883a 	mov	r2,r16
  804a38:	80000c15 	stw	zero,48(r16)
  804a3c:	80000d15 	stw	zero,52(r16)
  804a40:	80001115 	stw	zero,68(r16)
  804a44:	80001215 	stw	zero,72(r16)
  804a48:	dfc00417 	ldw	ra,16(sp)
  804a4c:	dcc00317 	ldw	r19,12(sp)
  804a50:	dc800217 	ldw	r18,8(sp)
  804a54:	dc400117 	ldw	r17,4(sp)
  804a58:	dc000017 	ldw	r16,0(sp)
  804a5c:	dec00504 	addi	sp,sp,20
  804a60:	f800283a 	ret
  804a64:	01400104 	movi	r5,4
  804a68:	9809883a 	mov	r4,r19
  804a6c:	08048f80 	call	8048f8 <__sfmoreglue>
  804a70:	90800015 	stw	r2,0(r18)
  804a74:	103fde1e 	bne	r2,zero,8049f0 <__alt_data_end+0xff8049f0>
  804a78:	00800304 	movi	r2,12
  804a7c:	98800015 	stw	r2,0(r19)
  804a80:	0005883a 	mov	r2,zero
  804a84:	003ff006 	br	804a48 <__alt_data_end+0xff804a48>

00804a88 <_cleanup>:
  804a88:	00802074 	movhi	r2,129
  804a8c:	10869f04 	addi	r2,r2,6780
  804a90:	11000017 	ldw	r4,0(r2)
  804a94:	01402074 	movhi	r5,129
  804a98:	29659304 	addi	r5,r5,-27060
  804a9c:	08054b01 	jmpi	8054b0 <_fwalk_reent>

00804aa0 <__sinit>:
  804aa0:	20800e17 	ldw	r2,56(r4)
  804aa4:	10000126 	beq	r2,zero,804aac <__sinit+0xc>
  804aa8:	f800283a 	ret
  804aac:	08047541 	jmpi	804754 <__sinit.part.1>

00804ab0 <__sfp_lock_acquire>:
  804ab0:	f800283a 	ret

00804ab4 <__sfp_lock_release>:
  804ab4:	f800283a 	ret

00804ab8 <__sinit_lock_acquire>:
  804ab8:	f800283a 	ret

00804abc <__sinit_lock_release>:
  804abc:	f800283a 	ret

00804ac0 <__fp_lock_all>:
  804ac0:	00802074 	movhi	r2,129
  804ac4:	1086a004 	addi	r2,r2,6784
  804ac8:	11000017 	ldw	r4,0(r2)
  804acc:	01402034 	movhi	r5,128
  804ad0:	29523c04 	addi	r5,r5,18672
  804ad4:	08053ec1 	jmpi	8053ec <_fwalk>

00804ad8 <__fp_unlock_all>:
  804ad8:	00802074 	movhi	r2,129
  804adc:	1086a004 	addi	r2,r2,6784
  804ae0:	11000017 	ldw	r4,0(r2)
  804ae4:	01402034 	movhi	r5,128
  804ae8:	2951d004 	addi	r5,r5,18240
  804aec:	08053ec1 	jmpi	8053ec <_fwalk>

00804af0 <_malloc_trim_r>:
  804af0:	defffb04 	addi	sp,sp,-20
  804af4:	dcc00315 	stw	r19,12(sp)
  804af8:	04c02074 	movhi	r19,129
  804afc:	dc800215 	stw	r18,8(sp)
  804b00:	dc400115 	stw	r17,4(sp)
  804b04:	dc000015 	stw	r16,0(sp)
  804b08:	dfc00415 	stw	ra,16(sp)
  804b0c:	2821883a 	mov	r16,r5
  804b10:	9cc11b04 	addi	r19,r19,1132
  804b14:	2025883a 	mov	r18,r4
  804b18:	080d9cc0 	call	80d9cc <__malloc_lock>
  804b1c:	98800217 	ldw	r2,8(r19)
  804b20:	14400117 	ldw	r17,4(r2)
  804b24:	00bfff04 	movi	r2,-4
  804b28:	88a2703a 	and	r17,r17,r2
  804b2c:	8c21c83a 	sub	r16,r17,r16
  804b30:	8403fbc4 	addi	r16,r16,4079
  804b34:	8020d33a 	srli	r16,r16,12
  804b38:	0083ffc4 	movi	r2,4095
  804b3c:	843fffc4 	addi	r16,r16,-1
  804b40:	8020933a 	slli	r16,r16,12
  804b44:	1400060e 	bge	r2,r16,804b60 <_malloc_trim_r+0x70>
  804b48:	000b883a 	mov	r5,zero
  804b4c:	9009883a 	mov	r4,r18
  804b50:	0807b580 	call	807b58 <_sbrk_r>
  804b54:	98c00217 	ldw	r3,8(r19)
  804b58:	1c47883a 	add	r3,r3,r17
  804b5c:	10c00a26 	beq	r2,r3,804b88 <_malloc_trim_r+0x98>
  804b60:	9009883a 	mov	r4,r18
  804b64:	080d9f00 	call	80d9f0 <__malloc_unlock>
  804b68:	0005883a 	mov	r2,zero
  804b6c:	dfc00417 	ldw	ra,16(sp)
  804b70:	dcc00317 	ldw	r19,12(sp)
  804b74:	dc800217 	ldw	r18,8(sp)
  804b78:	dc400117 	ldw	r17,4(sp)
  804b7c:	dc000017 	ldw	r16,0(sp)
  804b80:	dec00504 	addi	sp,sp,20
  804b84:	f800283a 	ret
  804b88:	040bc83a 	sub	r5,zero,r16
  804b8c:	9009883a 	mov	r4,r18
  804b90:	0807b580 	call	807b58 <_sbrk_r>
  804b94:	00ffffc4 	movi	r3,-1
  804b98:	10c00d26 	beq	r2,r3,804bd0 <_malloc_trim_r+0xe0>
  804b9c:	00c02074 	movhi	r3,129
  804ba0:	18cd7704 	addi	r3,r3,13788
  804ba4:	18800017 	ldw	r2,0(r3)
  804ba8:	99000217 	ldw	r4,8(r19)
  804bac:	8c23c83a 	sub	r17,r17,r16
  804bb0:	8c400054 	ori	r17,r17,1
  804bb4:	1421c83a 	sub	r16,r2,r16
  804bb8:	24400115 	stw	r17,4(r4)
  804bbc:	9009883a 	mov	r4,r18
  804bc0:	1c000015 	stw	r16,0(r3)
  804bc4:	080d9f00 	call	80d9f0 <__malloc_unlock>
  804bc8:	00800044 	movi	r2,1
  804bcc:	003fe706 	br	804b6c <__alt_data_end+0xff804b6c>
  804bd0:	000b883a 	mov	r5,zero
  804bd4:	9009883a 	mov	r4,r18
  804bd8:	0807b580 	call	807b58 <_sbrk_r>
  804bdc:	99000217 	ldw	r4,8(r19)
  804be0:	014003c4 	movi	r5,15
  804be4:	1107c83a 	sub	r3,r2,r4
  804be8:	28ffdd0e 	bge	r5,r3,804b60 <__alt_data_end+0xff804b60>
  804bec:	01402074 	movhi	r5,129
  804bf0:	2946a204 	addi	r5,r5,6792
  804bf4:	29400017 	ldw	r5,0(r5)
  804bf8:	18c00054 	ori	r3,r3,1
  804bfc:	20c00115 	stw	r3,4(r4)
  804c00:	00c02074 	movhi	r3,129
  804c04:	1145c83a 	sub	r2,r2,r5
  804c08:	18cd7704 	addi	r3,r3,13788
  804c0c:	18800015 	stw	r2,0(r3)
  804c10:	003fd306 	br	804b60 <__alt_data_end+0xff804b60>

00804c14 <_free_r>:
  804c14:	28004126 	beq	r5,zero,804d1c <_free_r+0x108>
  804c18:	defffd04 	addi	sp,sp,-12
  804c1c:	dc400115 	stw	r17,4(sp)
  804c20:	dc000015 	stw	r16,0(sp)
  804c24:	2023883a 	mov	r17,r4
  804c28:	2821883a 	mov	r16,r5
  804c2c:	dfc00215 	stw	ra,8(sp)
  804c30:	080d9cc0 	call	80d9cc <__malloc_lock>
  804c34:	81ffff17 	ldw	r7,-4(r16)
  804c38:	00bfff84 	movi	r2,-2
  804c3c:	01002074 	movhi	r4,129
  804c40:	81bffe04 	addi	r6,r16,-8
  804c44:	3884703a 	and	r2,r7,r2
  804c48:	21011b04 	addi	r4,r4,1132
  804c4c:	308b883a 	add	r5,r6,r2
  804c50:	2a400117 	ldw	r9,4(r5)
  804c54:	22000217 	ldw	r8,8(r4)
  804c58:	00ffff04 	movi	r3,-4
  804c5c:	48c6703a 	and	r3,r9,r3
  804c60:	2a005726 	beq	r5,r8,804dc0 <_free_r+0x1ac>
  804c64:	28c00115 	stw	r3,4(r5)
  804c68:	39c0004c 	andi	r7,r7,1
  804c6c:	3800091e 	bne	r7,zero,804c94 <_free_r+0x80>
  804c70:	823ffe17 	ldw	r8,-8(r16)
  804c74:	22400204 	addi	r9,r4,8
  804c78:	320dc83a 	sub	r6,r6,r8
  804c7c:	31c00217 	ldw	r7,8(r6)
  804c80:	1205883a 	add	r2,r2,r8
  804c84:	3a406526 	beq	r7,r9,804e1c <_free_r+0x208>
  804c88:	32000317 	ldw	r8,12(r6)
  804c8c:	3a000315 	stw	r8,12(r7)
  804c90:	41c00215 	stw	r7,8(r8)
  804c94:	28cf883a 	add	r7,r5,r3
  804c98:	39c00117 	ldw	r7,4(r7)
  804c9c:	39c0004c 	andi	r7,r7,1
  804ca0:	38003a26 	beq	r7,zero,804d8c <_free_r+0x178>
  804ca4:	10c00054 	ori	r3,r2,1
  804ca8:	30c00115 	stw	r3,4(r6)
  804cac:	3087883a 	add	r3,r6,r2
  804cb0:	18800015 	stw	r2,0(r3)
  804cb4:	00c07fc4 	movi	r3,511
  804cb8:	18801936 	bltu	r3,r2,804d20 <_free_r+0x10c>
  804cbc:	1004d0fa 	srli	r2,r2,3
  804cc0:	01c00044 	movi	r7,1
  804cc4:	21400117 	ldw	r5,4(r4)
  804cc8:	10c00044 	addi	r3,r2,1
  804ccc:	18c7883a 	add	r3,r3,r3
  804cd0:	1005d0ba 	srai	r2,r2,2
  804cd4:	18c7883a 	add	r3,r3,r3
  804cd8:	18c7883a 	add	r3,r3,r3
  804cdc:	1907883a 	add	r3,r3,r4
  804ce0:	3884983a 	sll	r2,r7,r2
  804ce4:	19c00017 	ldw	r7,0(r3)
  804ce8:	1a3ffe04 	addi	r8,r3,-8
  804cec:	1144b03a 	or	r2,r2,r5
  804cf0:	32000315 	stw	r8,12(r6)
  804cf4:	31c00215 	stw	r7,8(r6)
  804cf8:	20800115 	stw	r2,4(r4)
  804cfc:	19800015 	stw	r6,0(r3)
  804d00:	39800315 	stw	r6,12(r7)
  804d04:	8809883a 	mov	r4,r17
  804d08:	dfc00217 	ldw	ra,8(sp)
  804d0c:	dc400117 	ldw	r17,4(sp)
  804d10:	dc000017 	ldw	r16,0(sp)
  804d14:	dec00304 	addi	sp,sp,12
  804d18:	080d9f01 	jmpi	80d9f0 <__malloc_unlock>
  804d1c:	f800283a 	ret
  804d20:	100ad27a 	srli	r5,r2,9
  804d24:	00c00104 	movi	r3,4
  804d28:	19404a36 	bltu	r3,r5,804e54 <_free_r+0x240>
  804d2c:	100ad1ba 	srli	r5,r2,6
  804d30:	28c00e44 	addi	r3,r5,57
  804d34:	18c7883a 	add	r3,r3,r3
  804d38:	29400e04 	addi	r5,r5,56
  804d3c:	18c7883a 	add	r3,r3,r3
  804d40:	18c7883a 	add	r3,r3,r3
  804d44:	1909883a 	add	r4,r3,r4
  804d48:	20c00017 	ldw	r3,0(r4)
  804d4c:	01c02074 	movhi	r7,129
  804d50:	213ffe04 	addi	r4,r4,-8
  804d54:	39c11b04 	addi	r7,r7,1132
  804d58:	20c04426 	beq	r4,r3,804e6c <_free_r+0x258>
  804d5c:	01ffff04 	movi	r7,-4
  804d60:	19400117 	ldw	r5,4(r3)
  804d64:	29ca703a 	and	r5,r5,r7
  804d68:	1140022e 	bgeu	r2,r5,804d74 <_free_r+0x160>
  804d6c:	18c00217 	ldw	r3,8(r3)
  804d70:	20fffb1e 	bne	r4,r3,804d60 <__alt_data_end+0xff804d60>
  804d74:	19000317 	ldw	r4,12(r3)
  804d78:	31000315 	stw	r4,12(r6)
  804d7c:	30c00215 	stw	r3,8(r6)
  804d80:	21800215 	stw	r6,8(r4)
  804d84:	19800315 	stw	r6,12(r3)
  804d88:	003fde06 	br	804d04 <__alt_data_end+0xff804d04>
  804d8c:	29c00217 	ldw	r7,8(r5)
  804d90:	10c5883a 	add	r2,r2,r3
  804d94:	00c02074 	movhi	r3,129
  804d98:	18c11d04 	addi	r3,r3,1140
  804d9c:	38c03b26 	beq	r7,r3,804e8c <_free_r+0x278>
  804da0:	2a000317 	ldw	r8,12(r5)
  804da4:	11400054 	ori	r5,r2,1
  804da8:	3087883a 	add	r3,r6,r2
  804dac:	3a000315 	stw	r8,12(r7)
  804db0:	41c00215 	stw	r7,8(r8)
  804db4:	31400115 	stw	r5,4(r6)
  804db8:	18800015 	stw	r2,0(r3)
  804dbc:	003fbd06 	br	804cb4 <__alt_data_end+0xff804cb4>
  804dc0:	39c0004c 	andi	r7,r7,1
  804dc4:	10c5883a 	add	r2,r2,r3
  804dc8:	3800071e 	bne	r7,zero,804de8 <_free_r+0x1d4>
  804dcc:	81fffe17 	ldw	r7,-8(r16)
  804dd0:	31cdc83a 	sub	r6,r6,r7
  804dd4:	30c00317 	ldw	r3,12(r6)
  804dd8:	31400217 	ldw	r5,8(r6)
  804ddc:	11c5883a 	add	r2,r2,r7
  804de0:	28c00315 	stw	r3,12(r5)
  804de4:	19400215 	stw	r5,8(r3)
  804de8:	10c00054 	ori	r3,r2,1
  804dec:	30c00115 	stw	r3,4(r6)
  804df0:	00c02074 	movhi	r3,129
  804df4:	18c6a304 	addi	r3,r3,6796
  804df8:	18c00017 	ldw	r3,0(r3)
  804dfc:	21800215 	stw	r6,8(r4)
  804e00:	10ffc036 	bltu	r2,r3,804d04 <__alt_data_end+0xff804d04>
  804e04:	00802074 	movhi	r2,129
  804e08:	108d6f04 	addi	r2,r2,13756
  804e0c:	11400017 	ldw	r5,0(r2)
  804e10:	8809883a 	mov	r4,r17
  804e14:	0804af00 	call	804af0 <_malloc_trim_r>
  804e18:	003fba06 	br	804d04 <__alt_data_end+0xff804d04>
  804e1c:	28c9883a 	add	r4,r5,r3
  804e20:	21000117 	ldw	r4,4(r4)
  804e24:	2100004c 	andi	r4,r4,1
  804e28:	2000391e 	bne	r4,zero,804f10 <_free_r+0x2fc>
  804e2c:	29c00217 	ldw	r7,8(r5)
  804e30:	29000317 	ldw	r4,12(r5)
  804e34:	1885883a 	add	r2,r3,r2
  804e38:	10c00054 	ori	r3,r2,1
  804e3c:	39000315 	stw	r4,12(r7)
  804e40:	21c00215 	stw	r7,8(r4)
  804e44:	30c00115 	stw	r3,4(r6)
  804e48:	308d883a 	add	r6,r6,r2
  804e4c:	30800015 	stw	r2,0(r6)
  804e50:	003fac06 	br	804d04 <__alt_data_end+0xff804d04>
  804e54:	00c00504 	movi	r3,20
  804e58:	19401536 	bltu	r3,r5,804eb0 <_free_r+0x29c>
  804e5c:	28c01704 	addi	r3,r5,92
  804e60:	18c7883a 	add	r3,r3,r3
  804e64:	294016c4 	addi	r5,r5,91
  804e68:	003fb406 	br	804d3c <__alt_data_end+0xff804d3c>
  804e6c:	280bd0ba 	srai	r5,r5,2
  804e70:	00c00044 	movi	r3,1
  804e74:	38800117 	ldw	r2,4(r7)
  804e78:	194a983a 	sll	r5,r3,r5
  804e7c:	2007883a 	mov	r3,r4
  804e80:	2884b03a 	or	r2,r5,r2
  804e84:	38800115 	stw	r2,4(r7)
  804e88:	003fbb06 	br	804d78 <__alt_data_end+0xff804d78>
  804e8c:	21800515 	stw	r6,20(r4)
  804e90:	21800415 	stw	r6,16(r4)
  804e94:	10c00054 	ori	r3,r2,1
  804e98:	31c00315 	stw	r7,12(r6)
  804e9c:	31c00215 	stw	r7,8(r6)
  804ea0:	30c00115 	stw	r3,4(r6)
  804ea4:	308d883a 	add	r6,r6,r2
  804ea8:	30800015 	stw	r2,0(r6)
  804eac:	003f9506 	br	804d04 <__alt_data_end+0xff804d04>
  804eb0:	00c01504 	movi	r3,84
  804eb4:	19400536 	bltu	r3,r5,804ecc <_free_r+0x2b8>
  804eb8:	100ad33a 	srli	r5,r2,12
  804ebc:	28c01bc4 	addi	r3,r5,111
  804ec0:	18c7883a 	add	r3,r3,r3
  804ec4:	29401b84 	addi	r5,r5,110
  804ec8:	003f9c06 	br	804d3c <__alt_data_end+0xff804d3c>
  804ecc:	00c05504 	movi	r3,340
  804ed0:	19400536 	bltu	r3,r5,804ee8 <_free_r+0x2d4>
  804ed4:	100ad3fa 	srli	r5,r2,15
  804ed8:	28c01e04 	addi	r3,r5,120
  804edc:	18c7883a 	add	r3,r3,r3
  804ee0:	29401dc4 	addi	r5,r5,119
  804ee4:	003f9506 	br	804d3c <__alt_data_end+0xff804d3c>
  804ee8:	00c15504 	movi	r3,1364
  804eec:	19400536 	bltu	r3,r5,804f04 <_free_r+0x2f0>
  804ef0:	100ad4ba 	srli	r5,r2,18
  804ef4:	28c01f44 	addi	r3,r5,125
  804ef8:	18c7883a 	add	r3,r3,r3
  804efc:	29401f04 	addi	r5,r5,124
  804f00:	003f8e06 	br	804d3c <__alt_data_end+0xff804d3c>
  804f04:	00c03f84 	movi	r3,254
  804f08:	01401f84 	movi	r5,126
  804f0c:	003f8b06 	br	804d3c <__alt_data_end+0xff804d3c>
  804f10:	10c00054 	ori	r3,r2,1
  804f14:	30c00115 	stw	r3,4(r6)
  804f18:	308d883a 	add	r6,r6,r2
  804f1c:	30800015 	stw	r2,0(r6)
  804f20:	003f7806 	br	804d04 <__alt_data_end+0xff804d04>

00804f24 <__sfvwrite_r>:
  804f24:	30800217 	ldw	r2,8(r6)
  804f28:	10006726 	beq	r2,zero,8050c8 <__sfvwrite_r+0x1a4>
  804f2c:	28c0030b 	ldhu	r3,12(r5)
  804f30:	defff404 	addi	sp,sp,-48
  804f34:	dd400715 	stw	r21,28(sp)
  804f38:	dd000615 	stw	r20,24(sp)
  804f3c:	dc000215 	stw	r16,8(sp)
  804f40:	dfc00b15 	stw	ra,44(sp)
  804f44:	df000a15 	stw	fp,40(sp)
  804f48:	ddc00915 	stw	r23,36(sp)
  804f4c:	dd800815 	stw	r22,32(sp)
  804f50:	dcc00515 	stw	r19,20(sp)
  804f54:	dc800415 	stw	r18,16(sp)
  804f58:	dc400315 	stw	r17,12(sp)
  804f5c:	1880020c 	andi	r2,r3,8
  804f60:	2821883a 	mov	r16,r5
  804f64:	202b883a 	mov	r21,r4
  804f68:	3029883a 	mov	r20,r6
  804f6c:	10002726 	beq	r2,zero,80500c <__sfvwrite_r+0xe8>
  804f70:	28800417 	ldw	r2,16(r5)
  804f74:	10002526 	beq	r2,zero,80500c <__sfvwrite_r+0xe8>
  804f78:	1880008c 	andi	r2,r3,2
  804f7c:	a4400017 	ldw	r17,0(r20)
  804f80:	10002a26 	beq	r2,zero,80502c <__sfvwrite_r+0x108>
  804f84:	05a00034 	movhi	r22,32768
  804f88:	0027883a 	mov	r19,zero
  804f8c:	0025883a 	mov	r18,zero
  804f90:	b5bf0004 	addi	r22,r22,-1024
  804f94:	980d883a 	mov	r6,r19
  804f98:	a809883a 	mov	r4,r21
  804f9c:	90004626 	beq	r18,zero,8050b8 <__sfvwrite_r+0x194>
  804fa0:	900f883a 	mov	r7,r18
  804fa4:	b480022e 	bgeu	r22,r18,804fb0 <__sfvwrite_r+0x8c>
  804fa8:	01e00034 	movhi	r7,32768
  804fac:	39ff0004 	addi	r7,r7,-1024
  804fb0:	80800917 	ldw	r2,36(r16)
  804fb4:	81400717 	ldw	r5,28(r16)
  804fb8:	103ee83a 	callr	r2
  804fbc:	00805a0e 	bge	zero,r2,805128 <__sfvwrite_r+0x204>
  804fc0:	a0c00217 	ldw	r3,8(r20)
  804fc4:	98a7883a 	add	r19,r19,r2
  804fc8:	90a5c83a 	sub	r18,r18,r2
  804fcc:	1885c83a 	sub	r2,r3,r2
  804fd0:	a0800215 	stw	r2,8(r20)
  804fd4:	103fef1e 	bne	r2,zero,804f94 <__alt_data_end+0xff804f94>
  804fd8:	0005883a 	mov	r2,zero
  804fdc:	dfc00b17 	ldw	ra,44(sp)
  804fe0:	df000a17 	ldw	fp,40(sp)
  804fe4:	ddc00917 	ldw	r23,36(sp)
  804fe8:	dd800817 	ldw	r22,32(sp)
  804fec:	dd400717 	ldw	r21,28(sp)
  804ff0:	dd000617 	ldw	r20,24(sp)
  804ff4:	dcc00517 	ldw	r19,20(sp)
  804ff8:	dc800417 	ldw	r18,16(sp)
  804ffc:	dc400317 	ldw	r17,12(sp)
  805000:	dc000217 	ldw	r16,8(sp)
  805004:	dec00c04 	addi	sp,sp,48
  805008:	f800283a 	ret
  80500c:	800b883a 	mov	r5,r16
  805010:	a809883a 	mov	r4,r21
  805014:	0802a940 	call	802a94 <__swsetup_r>
  805018:	1000ee1e 	bne	r2,zero,8053d4 <__sfvwrite_r+0x4b0>
  80501c:	80c0030b 	ldhu	r3,12(r16)
  805020:	a4400017 	ldw	r17,0(r20)
  805024:	1880008c 	andi	r2,r3,2
  805028:	103fd61e 	bne	r2,zero,804f84 <__alt_data_end+0xff804f84>
  80502c:	1880004c 	andi	r2,r3,1
  805030:	1000421e 	bne	r2,zero,80513c <__sfvwrite_r+0x218>
  805034:	0039883a 	mov	fp,zero
  805038:	0025883a 	mov	r18,zero
  80503c:	90001a26 	beq	r18,zero,8050a8 <__sfvwrite_r+0x184>
  805040:	1880800c 	andi	r2,r3,512
  805044:	84c00217 	ldw	r19,8(r16)
  805048:	10002126 	beq	r2,zero,8050d0 <__sfvwrite_r+0x1ac>
  80504c:	982f883a 	mov	r23,r19
  805050:	94c09636 	bltu	r18,r19,8052ac <__sfvwrite_r+0x388>
  805054:	1881200c 	andi	r2,r3,1152
  805058:	1000a11e 	bne	r2,zero,8052e0 <__sfvwrite_r+0x3bc>
  80505c:	81000017 	ldw	r4,0(r16)
  805060:	b80d883a 	mov	r6,r23
  805064:	e00b883a 	mov	r5,fp
  805068:	08062440 	call	806244 <memmove>
  80506c:	80c00217 	ldw	r3,8(r16)
  805070:	81000017 	ldw	r4,0(r16)
  805074:	9005883a 	mov	r2,r18
  805078:	1ce7c83a 	sub	r19,r3,r19
  80507c:	25cf883a 	add	r7,r4,r23
  805080:	84c00215 	stw	r19,8(r16)
  805084:	81c00015 	stw	r7,0(r16)
  805088:	a0c00217 	ldw	r3,8(r20)
  80508c:	e0b9883a 	add	fp,fp,r2
  805090:	90a5c83a 	sub	r18,r18,r2
  805094:	18a7c83a 	sub	r19,r3,r2
  805098:	a4c00215 	stw	r19,8(r20)
  80509c:	983fce26 	beq	r19,zero,804fd8 <__alt_data_end+0xff804fd8>
  8050a0:	80c0030b 	ldhu	r3,12(r16)
  8050a4:	903fe61e 	bne	r18,zero,805040 <__alt_data_end+0xff805040>
  8050a8:	8f000017 	ldw	fp,0(r17)
  8050ac:	8c800117 	ldw	r18,4(r17)
  8050b0:	8c400204 	addi	r17,r17,8
  8050b4:	003fe106 	br	80503c <__alt_data_end+0xff80503c>
  8050b8:	8cc00017 	ldw	r19,0(r17)
  8050bc:	8c800117 	ldw	r18,4(r17)
  8050c0:	8c400204 	addi	r17,r17,8
  8050c4:	003fb306 	br	804f94 <__alt_data_end+0xff804f94>
  8050c8:	0005883a 	mov	r2,zero
  8050cc:	f800283a 	ret
  8050d0:	81000017 	ldw	r4,0(r16)
  8050d4:	80800417 	ldw	r2,16(r16)
  8050d8:	11005a36 	bltu	r2,r4,805244 <__sfvwrite_r+0x320>
  8050dc:	85c00517 	ldw	r23,20(r16)
  8050e0:	95c05836 	bltu	r18,r23,805244 <__sfvwrite_r+0x320>
  8050e4:	00a00034 	movhi	r2,32768
  8050e8:	10bfffc4 	addi	r2,r2,-1
  8050ec:	9009883a 	mov	r4,r18
  8050f0:	1480012e 	bgeu	r2,r18,8050f8 <__sfvwrite_r+0x1d4>
  8050f4:	1009883a 	mov	r4,r2
  8050f8:	b80b883a 	mov	r5,r23
  8050fc:	080a9c80 	call	80a9c8 <__divsi3>
  805100:	b80b883a 	mov	r5,r23
  805104:	1009883a 	mov	r4,r2
  805108:	080ab7c0 	call	80ab7c <__mulsi3>
  80510c:	81400717 	ldw	r5,28(r16)
  805110:	80c00917 	ldw	r3,36(r16)
  805114:	100f883a 	mov	r7,r2
  805118:	e00d883a 	mov	r6,fp
  80511c:	a809883a 	mov	r4,r21
  805120:	183ee83a 	callr	r3
  805124:	00bfd816 	blt	zero,r2,805088 <__alt_data_end+0xff805088>
  805128:	8080030b 	ldhu	r2,12(r16)
  80512c:	10801014 	ori	r2,r2,64
  805130:	8080030d 	sth	r2,12(r16)
  805134:	00bfffc4 	movi	r2,-1
  805138:	003fa806 	br	804fdc <__alt_data_end+0xff804fdc>
  80513c:	0027883a 	mov	r19,zero
  805140:	0011883a 	mov	r8,zero
  805144:	0039883a 	mov	fp,zero
  805148:	0025883a 	mov	r18,zero
  80514c:	90001f26 	beq	r18,zero,8051cc <__sfvwrite_r+0x2a8>
  805150:	40005a26 	beq	r8,zero,8052bc <__sfvwrite_r+0x398>
  805154:	982d883a 	mov	r22,r19
  805158:	94c0012e 	bgeu	r18,r19,805160 <__sfvwrite_r+0x23c>
  80515c:	902d883a 	mov	r22,r18
  805160:	81000017 	ldw	r4,0(r16)
  805164:	80800417 	ldw	r2,16(r16)
  805168:	b02f883a 	mov	r23,r22
  80516c:	81c00517 	ldw	r7,20(r16)
  805170:	1100032e 	bgeu	r2,r4,805180 <__sfvwrite_r+0x25c>
  805174:	80c00217 	ldw	r3,8(r16)
  805178:	38c7883a 	add	r3,r7,r3
  80517c:	1d801816 	blt	r3,r22,8051e0 <__sfvwrite_r+0x2bc>
  805180:	b1c03e16 	blt	r22,r7,80527c <__sfvwrite_r+0x358>
  805184:	80800917 	ldw	r2,36(r16)
  805188:	81400717 	ldw	r5,28(r16)
  80518c:	e00d883a 	mov	r6,fp
  805190:	da000115 	stw	r8,4(sp)
  805194:	a809883a 	mov	r4,r21
  805198:	103ee83a 	callr	r2
  80519c:	102f883a 	mov	r23,r2
  8051a0:	da000117 	ldw	r8,4(sp)
  8051a4:	00bfe00e 	bge	zero,r2,805128 <__alt_data_end+0xff805128>
  8051a8:	9de7c83a 	sub	r19,r19,r23
  8051ac:	98001f26 	beq	r19,zero,80522c <__sfvwrite_r+0x308>
  8051b0:	a0800217 	ldw	r2,8(r20)
  8051b4:	e5f9883a 	add	fp,fp,r23
  8051b8:	95e5c83a 	sub	r18,r18,r23
  8051bc:	15efc83a 	sub	r23,r2,r23
  8051c0:	a5c00215 	stw	r23,8(r20)
  8051c4:	b83f8426 	beq	r23,zero,804fd8 <__alt_data_end+0xff804fd8>
  8051c8:	903fe11e 	bne	r18,zero,805150 <__alt_data_end+0xff805150>
  8051cc:	8f000017 	ldw	fp,0(r17)
  8051d0:	8c800117 	ldw	r18,4(r17)
  8051d4:	0011883a 	mov	r8,zero
  8051d8:	8c400204 	addi	r17,r17,8
  8051dc:	003fdb06 	br	80514c <__alt_data_end+0xff80514c>
  8051e0:	180d883a 	mov	r6,r3
  8051e4:	e00b883a 	mov	r5,fp
  8051e8:	da000115 	stw	r8,4(sp)
  8051ec:	d8c00015 	stw	r3,0(sp)
  8051f0:	08062440 	call	806244 <memmove>
  8051f4:	d8c00017 	ldw	r3,0(sp)
  8051f8:	80800017 	ldw	r2,0(r16)
  8051fc:	800b883a 	mov	r5,r16
  805200:	a809883a 	mov	r4,r21
  805204:	10c5883a 	add	r2,r2,r3
  805208:	80800015 	stw	r2,0(r16)
  80520c:	d8c00015 	stw	r3,0(sp)
  805210:	08046b40 	call	8046b4 <_fflush_r>
  805214:	d8c00017 	ldw	r3,0(sp)
  805218:	da000117 	ldw	r8,4(sp)
  80521c:	103fc21e 	bne	r2,zero,805128 <__alt_data_end+0xff805128>
  805220:	182f883a 	mov	r23,r3
  805224:	9de7c83a 	sub	r19,r19,r23
  805228:	983fe11e 	bne	r19,zero,8051b0 <__alt_data_end+0xff8051b0>
  80522c:	800b883a 	mov	r5,r16
  805230:	a809883a 	mov	r4,r21
  805234:	08046b40 	call	8046b4 <_fflush_r>
  805238:	103fbb1e 	bne	r2,zero,805128 <__alt_data_end+0xff805128>
  80523c:	0011883a 	mov	r8,zero
  805240:	003fdb06 	br	8051b0 <__alt_data_end+0xff8051b0>
  805244:	94c0012e 	bgeu	r18,r19,80524c <__sfvwrite_r+0x328>
  805248:	9027883a 	mov	r19,r18
  80524c:	980d883a 	mov	r6,r19
  805250:	e00b883a 	mov	r5,fp
  805254:	08062440 	call	806244 <memmove>
  805258:	80800217 	ldw	r2,8(r16)
  80525c:	80c00017 	ldw	r3,0(r16)
  805260:	14c5c83a 	sub	r2,r2,r19
  805264:	1cc7883a 	add	r3,r3,r19
  805268:	80800215 	stw	r2,8(r16)
  80526c:	80c00015 	stw	r3,0(r16)
  805270:	10004326 	beq	r2,zero,805380 <__sfvwrite_r+0x45c>
  805274:	9805883a 	mov	r2,r19
  805278:	003f8306 	br	805088 <__alt_data_end+0xff805088>
  80527c:	b00d883a 	mov	r6,r22
  805280:	e00b883a 	mov	r5,fp
  805284:	da000115 	stw	r8,4(sp)
  805288:	08062440 	call	806244 <memmove>
  80528c:	80800217 	ldw	r2,8(r16)
  805290:	80c00017 	ldw	r3,0(r16)
  805294:	da000117 	ldw	r8,4(sp)
  805298:	1585c83a 	sub	r2,r2,r22
  80529c:	1dad883a 	add	r22,r3,r22
  8052a0:	80800215 	stw	r2,8(r16)
  8052a4:	85800015 	stw	r22,0(r16)
  8052a8:	003fbf06 	br	8051a8 <__alt_data_end+0xff8051a8>
  8052ac:	81000017 	ldw	r4,0(r16)
  8052b0:	9027883a 	mov	r19,r18
  8052b4:	902f883a 	mov	r23,r18
  8052b8:	003f6906 	br	805060 <__alt_data_end+0xff805060>
  8052bc:	900d883a 	mov	r6,r18
  8052c0:	01400284 	movi	r5,10
  8052c4:	e009883a 	mov	r4,fp
  8052c8:	08060180 	call	806018 <memchr>
  8052cc:	10003e26 	beq	r2,zero,8053c8 <__sfvwrite_r+0x4a4>
  8052d0:	10800044 	addi	r2,r2,1
  8052d4:	1727c83a 	sub	r19,r2,fp
  8052d8:	02000044 	movi	r8,1
  8052dc:	003f9d06 	br	805154 <__alt_data_end+0xff805154>
  8052e0:	80800517 	ldw	r2,20(r16)
  8052e4:	81400417 	ldw	r5,16(r16)
  8052e8:	81c00017 	ldw	r7,0(r16)
  8052ec:	10a7883a 	add	r19,r2,r2
  8052f0:	9885883a 	add	r2,r19,r2
  8052f4:	1026d7fa 	srli	r19,r2,31
  8052f8:	396dc83a 	sub	r22,r7,r5
  8052fc:	b1000044 	addi	r4,r22,1
  805300:	9885883a 	add	r2,r19,r2
  805304:	1027d07a 	srai	r19,r2,1
  805308:	2485883a 	add	r2,r4,r18
  80530c:	980d883a 	mov	r6,r19
  805310:	9880022e 	bgeu	r19,r2,80531c <__sfvwrite_r+0x3f8>
  805314:	1027883a 	mov	r19,r2
  805318:	100d883a 	mov	r6,r2
  80531c:	18c1000c 	andi	r3,r3,1024
  805320:	18001c26 	beq	r3,zero,805394 <__sfvwrite_r+0x470>
  805324:	300b883a 	mov	r5,r6
  805328:	a809883a 	mov	r4,r21
  80532c:	080580c0 	call	80580c <_malloc_r>
  805330:	102f883a 	mov	r23,r2
  805334:	10002926 	beq	r2,zero,8053dc <__sfvwrite_r+0x4b8>
  805338:	81400417 	ldw	r5,16(r16)
  80533c:	b00d883a 	mov	r6,r22
  805340:	1009883a 	mov	r4,r2
  805344:	08060fc0 	call	8060fc <memcpy>
  805348:	8080030b 	ldhu	r2,12(r16)
  80534c:	00fedfc4 	movi	r3,-1153
  805350:	10c4703a 	and	r2,r2,r3
  805354:	10802014 	ori	r2,r2,128
  805358:	8080030d 	sth	r2,12(r16)
  80535c:	bd89883a 	add	r4,r23,r22
  805360:	9d8fc83a 	sub	r7,r19,r22
  805364:	85c00415 	stw	r23,16(r16)
  805368:	84c00515 	stw	r19,20(r16)
  80536c:	81000015 	stw	r4,0(r16)
  805370:	9027883a 	mov	r19,r18
  805374:	81c00215 	stw	r7,8(r16)
  805378:	902f883a 	mov	r23,r18
  80537c:	003f3806 	br	805060 <__alt_data_end+0xff805060>
  805380:	800b883a 	mov	r5,r16
  805384:	a809883a 	mov	r4,r21
  805388:	08046b40 	call	8046b4 <_fflush_r>
  80538c:	103fb926 	beq	r2,zero,805274 <__alt_data_end+0xff805274>
  805390:	003f6506 	br	805128 <__alt_data_end+0xff805128>
  805394:	a809883a 	mov	r4,r21
  805398:	08075800 	call	807580 <_realloc_r>
  80539c:	102f883a 	mov	r23,r2
  8053a0:	103fee1e 	bne	r2,zero,80535c <__alt_data_end+0xff80535c>
  8053a4:	81400417 	ldw	r5,16(r16)
  8053a8:	a809883a 	mov	r4,r21
  8053ac:	0804c140 	call	804c14 <_free_r>
  8053b0:	8080030b 	ldhu	r2,12(r16)
  8053b4:	00ffdfc4 	movi	r3,-129
  8053b8:	1884703a 	and	r2,r3,r2
  8053bc:	00c00304 	movi	r3,12
  8053c0:	a8c00015 	stw	r3,0(r21)
  8053c4:	003f5906 	br	80512c <__alt_data_end+0xff80512c>
  8053c8:	94c00044 	addi	r19,r18,1
  8053cc:	02000044 	movi	r8,1
  8053d0:	003f6006 	br	805154 <__alt_data_end+0xff805154>
  8053d4:	00bfffc4 	movi	r2,-1
  8053d8:	003f0006 	br	804fdc <__alt_data_end+0xff804fdc>
  8053dc:	00800304 	movi	r2,12
  8053e0:	a8800015 	stw	r2,0(r21)
  8053e4:	8080030b 	ldhu	r2,12(r16)
  8053e8:	003f5006 	br	80512c <__alt_data_end+0xff80512c>

008053ec <_fwalk>:
  8053ec:	defff704 	addi	sp,sp,-36
  8053f0:	dd000415 	stw	r20,16(sp)
  8053f4:	dfc00815 	stw	ra,32(sp)
  8053f8:	ddc00715 	stw	r23,28(sp)
  8053fc:	dd800615 	stw	r22,24(sp)
  805400:	dd400515 	stw	r21,20(sp)
  805404:	dcc00315 	stw	r19,12(sp)
  805408:	dc800215 	stw	r18,8(sp)
  80540c:	dc400115 	stw	r17,4(sp)
  805410:	dc000015 	stw	r16,0(sp)
  805414:	2500b804 	addi	r20,r4,736
  805418:	a0002326 	beq	r20,zero,8054a8 <_fwalk+0xbc>
  80541c:	282b883a 	mov	r21,r5
  805420:	002f883a 	mov	r23,zero
  805424:	05800044 	movi	r22,1
  805428:	04ffffc4 	movi	r19,-1
  80542c:	a4400117 	ldw	r17,4(r20)
  805430:	a4800217 	ldw	r18,8(r20)
  805434:	8c7fffc4 	addi	r17,r17,-1
  805438:	88000d16 	blt	r17,zero,805470 <_fwalk+0x84>
  80543c:	94000304 	addi	r16,r18,12
  805440:	94800384 	addi	r18,r18,14
  805444:	8080000b 	ldhu	r2,0(r16)
  805448:	8c7fffc4 	addi	r17,r17,-1
  80544c:	813ffd04 	addi	r4,r16,-12
  805450:	b080042e 	bgeu	r22,r2,805464 <_fwalk+0x78>
  805454:	9080000f 	ldh	r2,0(r18)
  805458:	14c00226 	beq	r2,r19,805464 <_fwalk+0x78>
  80545c:	a83ee83a 	callr	r21
  805460:	b8aeb03a 	or	r23,r23,r2
  805464:	84001a04 	addi	r16,r16,104
  805468:	94801a04 	addi	r18,r18,104
  80546c:	8cfff51e 	bne	r17,r19,805444 <__alt_data_end+0xff805444>
  805470:	a5000017 	ldw	r20,0(r20)
  805474:	a03fed1e 	bne	r20,zero,80542c <__alt_data_end+0xff80542c>
  805478:	b805883a 	mov	r2,r23
  80547c:	dfc00817 	ldw	ra,32(sp)
  805480:	ddc00717 	ldw	r23,28(sp)
  805484:	dd800617 	ldw	r22,24(sp)
  805488:	dd400517 	ldw	r21,20(sp)
  80548c:	dd000417 	ldw	r20,16(sp)
  805490:	dcc00317 	ldw	r19,12(sp)
  805494:	dc800217 	ldw	r18,8(sp)
  805498:	dc400117 	ldw	r17,4(sp)
  80549c:	dc000017 	ldw	r16,0(sp)
  8054a0:	dec00904 	addi	sp,sp,36
  8054a4:	f800283a 	ret
  8054a8:	002f883a 	mov	r23,zero
  8054ac:	003ff206 	br	805478 <__alt_data_end+0xff805478>

008054b0 <_fwalk_reent>:
  8054b0:	defff704 	addi	sp,sp,-36
  8054b4:	dd000415 	stw	r20,16(sp)
  8054b8:	dfc00815 	stw	ra,32(sp)
  8054bc:	ddc00715 	stw	r23,28(sp)
  8054c0:	dd800615 	stw	r22,24(sp)
  8054c4:	dd400515 	stw	r21,20(sp)
  8054c8:	dcc00315 	stw	r19,12(sp)
  8054cc:	dc800215 	stw	r18,8(sp)
  8054d0:	dc400115 	stw	r17,4(sp)
  8054d4:	dc000015 	stw	r16,0(sp)
  8054d8:	2500b804 	addi	r20,r4,736
  8054dc:	a0002326 	beq	r20,zero,80556c <_fwalk_reent+0xbc>
  8054e0:	282b883a 	mov	r21,r5
  8054e4:	2027883a 	mov	r19,r4
  8054e8:	002f883a 	mov	r23,zero
  8054ec:	05800044 	movi	r22,1
  8054f0:	04bfffc4 	movi	r18,-1
  8054f4:	a4400117 	ldw	r17,4(r20)
  8054f8:	a4000217 	ldw	r16,8(r20)
  8054fc:	8c7fffc4 	addi	r17,r17,-1
  805500:	88000c16 	blt	r17,zero,805534 <_fwalk_reent+0x84>
  805504:	84000304 	addi	r16,r16,12
  805508:	8080000b 	ldhu	r2,0(r16)
  80550c:	8c7fffc4 	addi	r17,r17,-1
  805510:	817ffd04 	addi	r5,r16,-12
  805514:	b080052e 	bgeu	r22,r2,80552c <_fwalk_reent+0x7c>
  805518:	8080008f 	ldh	r2,2(r16)
  80551c:	9809883a 	mov	r4,r19
  805520:	14800226 	beq	r2,r18,80552c <_fwalk_reent+0x7c>
  805524:	a83ee83a 	callr	r21
  805528:	b8aeb03a 	or	r23,r23,r2
  80552c:	84001a04 	addi	r16,r16,104
  805530:	8cbff51e 	bne	r17,r18,805508 <__alt_data_end+0xff805508>
  805534:	a5000017 	ldw	r20,0(r20)
  805538:	a03fee1e 	bne	r20,zero,8054f4 <__alt_data_end+0xff8054f4>
  80553c:	b805883a 	mov	r2,r23
  805540:	dfc00817 	ldw	ra,32(sp)
  805544:	ddc00717 	ldw	r23,28(sp)
  805548:	dd800617 	ldw	r22,24(sp)
  80554c:	dd400517 	ldw	r21,20(sp)
  805550:	dd000417 	ldw	r20,16(sp)
  805554:	dcc00317 	ldw	r19,12(sp)
  805558:	dc800217 	ldw	r18,8(sp)
  80555c:	dc400117 	ldw	r17,4(sp)
  805560:	dc000017 	ldw	r16,0(sp)
  805564:	dec00904 	addi	sp,sp,36
  805568:	f800283a 	ret
  80556c:	002f883a 	mov	r23,zero
  805570:	003ff206 	br	80553c <__alt_data_end+0xff80553c>

00805574 <_setlocale_r>:
  805574:	30001b26 	beq	r6,zero,8055e4 <_setlocale_r+0x70>
  805578:	01402074 	movhi	r5,129
  80557c:	defffe04 	addi	sp,sp,-8
  805580:	297f9504 	addi	r5,r5,-428
  805584:	3009883a 	mov	r4,r6
  805588:	dc000015 	stw	r16,0(sp)
  80558c:	dfc00115 	stw	ra,4(sp)
  805590:	3021883a 	mov	r16,r6
  805594:	0807ce80 	call	807ce8 <strcmp>
  805598:	1000061e 	bne	r2,zero,8055b4 <_setlocale_r+0x40>
  80559c:	00802074 	movhi	r2,129
  8055a0:	10bf9404 	addi	r2,r2,-432
  8055a4:	dfc00117 	ldw	ra,4(sp)
  8055a8:	dc000017 	ldw	r16,0(sp)
  8055ac:	dec00204 	addi	sp,sp,8
  8055b0:	f800283a 	ret
  8055b4:	01402074 	movhi	r5,129
  8055b8:	297f9404 	addi	r5,r5,-432
  8055bc:	8009883a 	mov	r4,r16
  8055c0:	0807ce80 	call	807ce8 <strcmp>
  8055c4:	103ff526 	beq	r2,zero,80559c <__alt_data_end+0xff80559c>
  8055c8:	01402074 	movhi	r5,129
  8055cc:	297f7f04 	addi	r5,r5,-516
  8055d0:	8009883a 	mov	r4,r16
  8055d4:	0807ce80 	call	807ce8 <strcmp>
  8055d8:	103ff026 	beq	r2,zero,80559c <__alt_data_end+0xff80559c>
  8055dc:	0005883a 	mov	r2,zero
  8055e0:	003ff006 	br	8055a4 <__alt_data_end+0xff8055a4>
  8055e4:	00802074 	movhi	r2,129
  8055e8:	10bf9404 	addi	r2,r2,-432
  8055ec:	f800283a 	ret

008055f0 <__locale_charset>:
  8055f0:	00802074 	movhi	r2,129
  8055f4:	10810504 	addi	r2,r2,1044
  8055f8:	f800283a 	ret

008055fc <__locale_mb_cur_max>:
  8055fc:	00802074 	movhi	r2,129
  805600:	1086a104 	addi	r2,r2,6788
  805604:	10800017 	ldw	r2,0(r2)
  805608:	f800283a 	ret

0080560c <__locale_msgcharset>:
  80560c:	00802074 	movhi	r2,129
  805610:	1080fd04 	addi	r2,r2,1012
  805614:	f800283a 	ret

00805618 <__locale_cjk_lang>:
  805618:	0005883a 	mov	r2,zero
  80561c:	f800283a 	ret

00805620 <_localeconv_r>:
  805620:	00802074 	movhi	r2,129
  805624:	10810d04 	addi	r2,r2,1076
  805628:	f800283a 	ret

0080562c <setlocale>:
  80562c:	00802074 	movhi	r2,129
  805630:	1086a004 	addi	r2,r2,6784
  805634:	280d883a 	mov	r6,r5
  805638:	200b883a 	mov	r5,r4
  80563c:	11000017 	ldw	r4,0(r2)
  805640:	08055741 	jmpi	805574 <_setlocale_r>

00805644 <localeconv>:
  805644:	00802074 	movhi	r2,129
  805648:	10810d04 	addi	r2,r2,1076
  80564c:	f800283a 	ret

00805650 <__smakebuf_r>:
  805650:	2880030b 	ldhu	r2,12(r5)
  805654:	10c0008c 	andi	r3,r2,2
  805658:	1800411e 	bne	r3,zero,805760 <__smakebuf_r+0x110>
  80565c:	deffec04 	addi	sp,sp,-80
  805660:	dc000f15 	stw	r16,60(sp)
  805664:	2821883a 	mov	r16,r5
  805668:	2940038f 	ldh	r5,14(r5)
  80566c:	dc401015 	stw	r17,64(sp)
  805670:	dfc01315 	stw	ra,76(sp)
  805674:	dcc01215 	stw	r19,72(sp)
  805678:	dc801115 	stw	r18,68(sp)
  80567c:	2023883a 	mov	r17,r4
  805680:	28001c16 	blt	r5,zero,8056f4 <__smakebuf_r+0xa4>
  805684:	d80d883a 	mov	r6,sp
  805688:	08099580 	call	809958 <_fstat_r>
  80568c:	10001816 	blt	r2,zero,8056f0 <__smakebuf_r+0xa0>
  805690:	d8800117 	ldw	r2,4(sp)
  805694:	00e00014 	movui	r3,32768
  805698:	10bc000c 	andi	r2,r2,61440
  80569c:	14c80020 	cmpeqi	r19,r2,8192
  8056a0:	10c03726 	beq	r2,r3,805780 <__smakebuf_r+0x130>
  8056a4:	80c0030b 	ldhu	r3,12(r16)
  8056a8:	18c20014 	ori	r3,r3,2048
  8056ac:	80c0030d 	sth	r3,12(r16)
  8056b0:	00c80004 	movi	r3,8192
  8056b4:	10c0521e 	bne	r2,r3,805800 <__smakebuf_r+0x1b0>
  8056b8:	8140038f 	ldh	r5,14(r16)
  8056bc:	8809883a 	mov	r4,r17
  8056c0:	08099b40 	call	8099b4 <_isatty_r>
  8056c4:	10004c26 	beq	r2,zero,8057f8 <__smakebuf_r+0x1a8>
  8056c8:	8080030b 	ldhu	r2,12(r16)
  8056cc:	80c010c4 	addi	r3,r16,67
  8056d0:	80c00015 	stw	r3,0(r16)
  8056d4:	10800054 	ori	r2,r2,1
  8056d8:	8080030d 	sth	r2,12(r16)
  8056dc:	00800044 	movi	r2,1
  8056e0:	80c00415 	stw	r3,16(r16)
  8056e4:	80800515 	stw	r2,20(r16)
  8056e8:	04810004 	movi	r18,1024
  8056ec:	00000706 	br	80570c <__smakebuf_r+0xbc>
  8056f0:	8080030b 	ldhu	r2,12(r16)
  8056f4:	10c0200c 	andi	r3,r2,128
  8056f8:	18001f1e 	bne	r3,zero,805778 <__smakebuf_r+0x128>
  8056fc:	04810004 	movi	r18,1024
  805700:	10820014 	ori	r2,r2,2048
  805704:	8080030d 	sth	r2,12(r16)
  805708:	0027883a 	mov	r19,zero
  80570c:	900b883a 	mov	r5,r18
  805710:	8809883a 	mov	r4,r17
  805714:	080580c0 	call	80580c <_malloc_r>
  805718:	10002c26 	beq	r2,zero,8057cc <__smakebuf_r+0x17c>
  80571c:	80c0030b 	ldhu	r3,12(r16)
  805720:	01002034 	movhi	r4,128
  805724:	2111d204 	addi	r4,r4,18248
  805728:	89000f15 	stw	r4,60(r17)
  80572c:	18c02014 	ori	r3,r3,128
  805730:	80c0030d 	sth	r3,12(r16)
  805734:	80800015 	stw	r2,0(r16)
  805738:	80800415 	stw	r2,16(r16)
  80573c:	84800515 	stw	r18,20(r16)
  805740:	98001a1e 	bne	r19,zero,8057ac <__smakebuf_r+0x15c>
  805744:	dfc01317 	ldw	ra,76(sp)
  805748:	dcc01217 	ldw	r19,72(sp)
  80574c:	dc801117 	ldw	r18,68(sp)
  805750:	dc401017 	ldw	r17,64(sp)
  805754:	dc000f17 	ldw	r16,60(sp)
  805758:	dec01404 	addi	sp,sp,80
  80575c:	f800283a 	ret
  805760:	288010c4 	addi	r2,r5,67
  805764:	28800015 	stw	r2,0(r5)
  805768:	28800415 	stw	r2,16(r5)
  80576c:	00800044 	movi	r2,1
  805770:	28800515 	stw	r2,20(r5)
  805774:	f800283a 	ret
  805778:	04801004 	movi	r18,64
  80577c:	003fe006 	br	805700 <__alt_data_end+0xff805700>
  805780:	81000a17 	ldw	r4,40(r16)
  805784:	00c02034 	movhi	r3,128
  805788:	18df2104 	addi	r3,r3,31876
  80578c:	20ffc51e 	bne	r4,r3,8056a4 <__alt_data_end+0xff8056a4>
  805790:	8080030b 	ldhu	r2,12(r16)
  805794:	04810004 	movi	r18,1024
  805798:	84801315 	stw	r18,76(r16)
  80579c:	1484b03a 	or	r2,r2,r18
  8057a0:	8080030d 	sth	r2,12(r16)
  8057a4:	0027883a 	mov	r19,zero
  8057a8:	003fd806 	br	80570c <__alt_data_end+0xff80570c>
  8057ac:	8140038f 	ldh	r5,14(r16)
  8057b0:	8809883a 	mov	r4,r17
  8057b4:	08099b40 	call	8099b4 <_isatty_r>
  8057b8:	103fe226 	beq	r2,zero,805744 <__alt_data_end+0xff805744>
  8057bc:	8080030b 	ldhu	r2,12(r16)
  8057c0:	10800054 	ori	r2,r2,1
  8057c4:	8080030d 	sth	r2,12(r16)
  8057c8:	003fde06 	br	805744 <__alt_data_end+0xff805744>
  8057cc:	8080030b 	ldhu	r2,12(r16)
  8057d0:	10c0800c 	andi	r3,r2,512
  8057d4:	183fdb1e 	bne	r3,zero,805744 <__alt_data_end+0xff805744>
  8057d8:	10800094 	ori	r2,r2,2
  8057dc:	80c010c4 	addi	r3,r16,67
  8057e0:	8080030d 	sth	r2,12(r16)
  8057e4:	00800044 	movi	r2,1
  8057e8:	80c00015 	stw	r3,0(r16)
  8057ec:	80c00415 	stw	r3,16(r16)
  8057f0:	80800515 	stw	r2,20(r16)
  8057f4:	003fd306 	br	805744 <__alt_data_end+0xff805744>
  8057f8:	04810004 	movi	r18,1024
  8057fc:	003fc306 	br	80570c <__alt_data_end+0xff80570c>
  805800:	0027883a 	mov	r19,zero
  805804:	04810004 	movi	r18,1024
  805808:	003fc006 	br	80570c <__alt_data_end+0xff80570c>

0080580c <_malloc_r>:
  80580c:	defff504 	addi	sp,sp,-44
  805810:	dc800315 	stw	r18,12(sp)
  805814:	dfc00a15 	stw	ra,40(sp)
  805818:	df000915 	stw	fp,36(sp)
  80581c:	ddc00815 	stw	r23,32(sp)
  805820:	dd800715 	stw	r22,28(sp)
  805824:	dd400615 	stw	r21,24(sp)
  805828:	dd000515 	stw	r20,20(sp)
  80582c:	dcc00415 	stw	r19,16(sp)
  805830:	dc400215 	stw	r17,8(sp)
  805834:	dc000115 	stw	r16,4(sp)
  805838:	288002c4 	addi	r2,r5,11
  80583c:	00c00584 	movi	r3,22
  805840:	2025883a 	mov	r18,r4
  805844:	18807f2e 	bgeu	r3,r2,805a44 <_malloc_r+0x238>
  805848:	047ffe04 	movi	r17,-8
  80584c:	1462703a 	and	r17,r2,r17
  805850:	8800a316 	blt	r17,zero,805ae0 <_malloc_r+0x2d4>
  805854:	8940a236 	bltu	r17,r5,805ae0 <_malloc_r+0x2d4>
  805858:	080d9cc0 	call	80d9cc <__malloc_lock>
  80585c:	00807dc4 	movi	r2,503
  805860:	1441e92e 	bgeu	r2,r17,806008 <_malloc_r+0x7fc>
  805864:	8804d27a 	srli	r2,r17,9
  805868:	1000a126 	beq	r2,zero,805af0 <_malloc_r+0x2e4>
  80586c:	00c00104 	movi	r3,4
  805870:	18811e36 	bltu	r3,r2,805cec <_malloc_r+0x4e0>
  805874:	8804d1ba 	srli	r2,r17,6
  805878:	12000e44 	addi	r8,r2,57
  80587c:	11c00e04 	addi	r7,r2,56
  805880:	4209883a 	add	r4,r8,r8
  805884:	04c02074 	movhi	r19,129
  805888:	2109883a 	add	r4,r4,r4
  80588c:	9cc11b04 	addi	r19,r19,1132
  805890:	2109883a 	add	r4,r4,r4
  805894:	9909883a 	add	r4,r19,r4
  805898:	24000117 	ldw	r16,4(r4)
  80589c:	213ffe04 	addi	r4,r4,-8
  8058a0:	24009726 	beq	r4,r16,805b00 <_malloc_r+0x2f4>
  8058a4:	80800117 	ldw	r2,4(r16)
  8058a8:	01bfff04 	movi	r6,-4
  8058ac:	014003c4 	movi	r5,15
  8058b0:	1184703a 	and	r2,r2,r6
  8058b4:	1447c83a 	sub	r3,r2,r17
  8058b8:	28c00716 	blt	r5,r3,8058d8 <_malloc_r+0xcc>
  8058bc:	1800920e 	bge	r3,zero,805b08 <_malloc_r+0x2fc>
  8058c0:	84000317 	ldw	r16,12(r16)
  8058c4:	24008e26 	beq	r4,r16,805b00 <_malloc_r+0x2f4>
  8058c8:	80800117 	ldw	r2,4(r16)
  8058cc:	1184703a 	and	r2,r2,r6
  8058d0:	1447c83a 	sub	r3,r2,r17
  8058d4:	28fff90e 	bge	r5,r3,8058bc <__alt_data_end+0xff8058bc>
  8058d8:	3809883a 	mov	r4,r7
  8058dc:	01802074 	movhi	r6,129
  8058e0:	9c000417 	ldw	r16,16(r19)
  8058e4:	31811b04 	addi	r6,r6,1132
  8058e8:	32000204 	addi	r8,r6,8
  8058ec:	82013426 	beq	r16,r8,805dc0 <_malloc_r+0x5b4>
  8058f0:	80c00117 	ldw	r3,4(r16)
  8058f4:	00bfff04 	movi	r2,-4
  8058f8:	188e703a 	and	r7,r3,r2
  8058fc:	3c45c83a 	sub	r2,r7,r17
  805900:	00c003c4 	movi	r3,15
  805904:	18811f16 	blt	r3,r2,805d84 <_malloc_r+0x578>
  805908:	32000515 	stw	r8,20(r6)
  80590c:	32000415 	stw	r8,16(r6)
  805910:	10007f0e 	bge	r2,zero,805b10 <_malloc_r+0x304>
  805914:	00807fc4 	movi	r2,511
  805918:	11c0fd36 	bltu	r2,r7,805d10 <_malloc_r+0x504>
  80591c:	3806d0fa 	srli	r3,r7,3
  805920:	01c00044 	movi	r7,1
  805924:	30800117 	ldw	r2,4(r6)
  805928:	19400044 	addi	r5,r3,1
  80592c:	294b883a 	add	r5,r5,r5
  805930:	1807d0ba 	srai	r3,r3,2
  805934:	294b883a 	add	r5,r5,r5
  805938:	294b883a 	add	r5,r5,r5
  80593c:	298b883a 	add	r5,r5,r6
  805940:	38c6983a 	sll	r3,r7,r3
  805944:	29c00017 	ldw	r7,0(r5)
  805948:	2a7ffe04 	addi	r9,r5,-8
  80594c:	1886b03a 	or	r3,r3,r2
  805950:	82400315 	stw	r9,12(r16)
  805954:	81c00215 	stw	r7,8(r16)
  805958:	30c00115 	stw	r3,4(r6)
  80595c:	2c000015 	stw	r16,0(r5)
  805960:	3c000315 	stw	r16,12(r7)
  805964:	2005d0ba 	srai	r2,r4,2
  805968:	01400044 	movi	r5,1
  80596c:	288a983a 	sll	r5,r5,r2
  805970:	19406f36 	bltu	r3,r5,805b30 <_malloc_r+0x324>
  805974:	28c4703a 	and	r2,r5,r3
  805978:	10000a1e 	bne	r2,zero,8059a4 <_malloc_r+0x198>
  80597c:	00bfff04 	movi	r2,-4
  805980:	294b883a 	add	r5,r5,r5
  805984:	2088703a 	and	r4,r4,r2
  805988:	28c4703a 	and	r2,r5,r3
  80598c:	21000104 	addi	r4,r4,4
  805990:	1000041e 	bne	r2,zero,8059a4 <_malloc_r+0x198>
  805994:	294b883a 	add	r5,r5,r5
  805998:	28c4703a 	and	r2,r5,r3
  80599c:	21000104 	addi	r4,r4,4
  8059a0:	103ffc26 	beq	r2,zero,805994 <__alt_data_end+0xff805994>
  8059a4:	02bfff04 	movi	r10,-4
  8059a8:	024003c4 	movi	r9,15
  8059ac:	21800044 	addi	r6,r4,1
  8059b0:	318d883a 	add	r6,r6,r6
  8059b4:	318d883a 	add	r6,r6,r6
  8059b8:	318d883a 	add	r6,r6,r6
  8059bc:	998d883a 	add	r6,r19,r6
  8059c0:	333ffe04 	addi	r12,r6,-8
  8059c4:	2017883a 	mov	r11,r4
  8059c8:	31800104 	addi	r6,r6,4
  8059cc:	34000017 	ldw	r16,0(r6)
  8059d0:	31fffd04 	addi	r7,r6,-12
  8059d4:	81c0041e 	bne	r16,r7,8059e8 <_malloc_r+0x1dc>
  8059d8:	0000fb06 	br	805dc8 <_malloc_r+0x5bc>
  8059dc:	1801030e 	bge	r3,zero,805dec <_malloc_r+0x5e0>
  8059e0:	84000317 	ldw	r16,12(r16)
  8059e4:	81c0f826 	beq	r16,r7,805dc8 <_malloc_r+0x5bc>
  8059e8:	80800117 	ldw	r2,4(r16)
  8059ec:	1284703a 	and	r2,r2,r10
  8059f0:	1447c83a 	sub	r3,r2,r17
  8059f4:	48fff90e 	bge	r9,r3,8059dc <__alt_data_end+0xff8059dc>
  8059f8:	80800317 	ldw	r2,12(r16)
  8059fc:	81000217 	ldw	r4,8(r16)
  805a00:	89400054 	ori	r5,r17,1
  805a04:	81400115 	stw	r5,4(r16)
  805a08:	20800315 	stw	r2,12(r4)
  805a0c:	11000215 	stw	r4,8(r2)
  805a10:	8463883a 	add	r17,r16,r17
  805a14:	9c400515 	stw	r17,20(r19)
  805a18:	9c400415 	stw	r17,16(r19)
  805a1c:	18800054 	ori	r2,r3,1
  805a20:	88800115 	stw	r2,4(r17)
  805a24:	8a000315 	stw	r8,12(r17)
  805a28:	8a000215 	stw	r8,8(r17)
  805a2c:	88e3883a 	add	r17,r17,r3
  805a30:	88c00015 	stw	r3,0(r17)
  805a34:	9009883a 	mov	r4,r18
  805a38:	080d9f00 	call	80d9f0 <__malloc_unlock>
  805a3c:	80800204 	addi	r2,r16,8
  805a40:	00001b06 	br	805ab0 <_malloc_r+0x2a4>
  805a44:	04400404 	movi	r17,16
  805a48:	89402536 	bltu	r17,r5,805ae0 <_malloc_r+0x2d4>
  805a4c:	080d9cc0 	call	80d9cc <__malloc_lock>
  805a50:	00800184 	movi	r2,6
  805a54:	01000084 	movi	r4,2
  805a58:	04c02074 	movhi	r19,129
  805a5c:	1085883a 	add	r2,r2,r2
  805a60:	9cc11b04 	addi	r19,r19,1132
  805a64:	1085883a 	add	r2,r2,r2
  805a68:	9885883a 	add	r2,r19,r2
  805a6c:	14000117 	ldw	r16,4(r2)
  805a70:	10fffe04 	addi	r3,r2,-8
  805a74:	80c0d926 	beq	r16,r3,805ddc <_malloc_r+0x5d0>
  805a78:	80c00117 	ldw	r3,4(r16)
  805a7c:	81000317 	ldw	r4,12(r16)
  805a80:	00bfff04 	movi	r2,-4
  805a84:	1884703a 	and	r2,r3,r2
  805a88:	81400217 	ldw	r5,8(r16)
  805a8c:	8085883a 	add	r2,r16,r2
  805a90:	10c00117 	ldw	r3,4(r2)
  805a94:	29000315 	stw	r4,12(r5)
  805a98:	21400215 	stw	r5,8(r4)
  805a9c:	18c00054 	ori	r3,r3,1
  805aa0:	10c00115 	stw	r3,4(r2)
  805aa4:	9009883a 	mov	r4,r18
  805aa8:	080d9f00 	call	80d9f0 <__malloc_unlock>
  805aac:	80800204 	addi	r2,r16,8
  805ab0:	dfc00a17 	ldw	ra,40(sp)
  805ab4:	df000917 	ldw	fp,36(sp)
  805ab8:	ddc00817 	ldw	r23,32(sp)
  805abc:	dd800717 	ldw	r22,28(sp)
  805ac0:	dd400617 	ldw	r21,24(sp)
  805ac4:	dd000517 	ldw	r20,20(sp)
  805ac8:	dcc00417 	ldw	r19,16(sp)
  805acc:	dc800317 	ldw	r18,12(sp)
  805ad0:	dc400217 	ldw	r17,8(sp)
  805ad4:	dc000117 	ldw	r16,4(sp)
  805ad8:	dec00b04 	addi	sp,sp,44
  805adc:	f800283a 	ret
  805ae0:	00800304 	movi	r2,12
  805ae4:	90800015 	stw	r2,0(r18)
  805ae8:	0005883a 	mov	r2,zero
  805aec:	003ff006 	br	805ab0 <__alt_data_end+0xff805ab0>
  805af0:	01002004 	movi	r4,128
  805af4:	02001004 	movi	r8,64
  805af8:	01c00fc4 	movi	r7,63
  805afc:	003f6106 	br	805884 <__alt_data_end+0xff805884>
  805b00:	4009883a 	mov	r4,r8
  805b04:	003f7506 	br	8058dc <__alt_data_end+0xff8058dc>
  805b08:	81000317 	ldw	r4,12(r16)
  805b0c:	003fde06 	br	805a88 <__alt_data_end+0xff805a88>
  805b10:	81c5883a 	add	r2,r16,r7
  805b14:	11400117 	ldw	r5,4(r2)
  805b18:	9009883a 	mov	r4,r18
  805b1c:	29400054 	ori	r5,r5,1
  805b20:	11400115 	stw	r5,4(r2)
  805b24:	080d9f00 	call	80d9f0 <__malloc_unlock>
  805b28:	80800204 	addi	r2,r16,8
  805b2c:	003fe006 	br	805ab0 <__alt_data_end+0xff805ab0>
  805b30:	9c000217 	ldw	r16,8(r19)
  805b34:	00bfff04 	movi	r2,-4
  805b38:	85800117 	ldw	r22,4(r16)
  805b3c:	b0ac703a 	and	r22,r22,r2
  805b40:	b4400336 	bltu	r22,r17,805b50 <_malloc_r+0x344>
  805b44:	b445c83a 	sub	r2,r22,r17
  805b48:	00c003c4 	movi	r3,15
  805b4c:	18805d16 	blt	r3,r2,805cc4 <_malloc_r+0x4b8>
  805b50:	05c02074 	movhi	r23,129
  805b54:	00802074 	movhi	r2,129
  805b58:	108d6f04 	addi	r2,r2,13756
  805b5c:	bdc6a204 	addi	r23,r23,6792
  805b60:	15400017 	ldw	r21,0(r2)
  805b64:	b8c00017 	ldw	r3,0(r23)
  805b68:	00bfffc4 	movi	r2,-1
  805b6c:	858d883a 	add	r6,r16,r22
  805b70:	8d6b883a 	add	r21,r17,r21
  805b74:	1880ea26 	beq	r3,r2,805f20 <_malloc_r+0x714>
  805b78:	ad4403c4 	addi	r21,r21,4111
  805b7c:	00bc0004 	movi	r2,-4096
  805b80:	a8aa703a 	and	r21,r21,r2
  805b84:	a80b883a 	mov	r5,r21
  805b88:	9009883a 	mov	r4,r18
  805b8c:	d9800015 	stw	r6,0(sp)
  805b90:	0807b580 	call	807b58 <_sbrk_r>
  805b94:	1029883a 	mov	r20,r2
  805b98:	00bfffc4 	movi	r2,-1
  805b9c:	d9800017 	ldw	r6,0(sp)
  805ba0:	a080e826 	beq	r20,r2,805f44 <_malloc_r+0x738>
  805ba4:	a180a636 	bltu	r20,r6,805e40 <_malloc_r+0x634>
  805ba8:	07002074 	movhi	fp,129
  805bac:	e70d7704 	addi	fp,fp,13788
  805bb0:	e0800017 	ldw	r2,0(fp)
  805bb4:	a887883a 	add	r3,r21,r2
  805bb8:	e0c00015 	stw	r3,0(fp)
  805bbc:	3500e626 	beq	r6,r20,805f58 <_malloc_r+0x74c>
  805bc0:	b9000017 	ldw	r4,0(r23)
  805bc4:	00bfffc4 	movi	r2,-1
  805bc8:	2080ee26 	beq	r4,r2,805f84 <_malloc_r+0x778>
  805bcc:	a185c83a 	sub	r2,r20,r6
  805bd0:	10c5883a 	add	r2,r2,r3
  805bd4:	e0800015 	stw	r2,0(fp)
  805bd8:	a0c001cc 	andi	r3,r20,7
  805bdc:	1800bc26 	beq	r3,zero,805ed0 <_malloc_r+0x6c4>
  805be0:	a0e9c83a 	sub	r20,r20,r3
  805be4:	00840204 	movi	r2,4104
  805be8:	a5000204 	addi	r20,r20,8
  805bec:	10c7c83a 	sub	r3,r2,r3
  805bf0:	a545883a 	add	r2,r20,r21
  805bf4:	1083ffcc 	andi	r2,r2,4095
  805bf8:	18abc83a 	sub	r21,r3,r2
  805bfc:	a80b883a 	mov	r5,r21
  805c00:	9009883a 	mov	r4,r18
  805c04:	0807b580 	call	807b58 <_sbrk_r>
  805c08:	00ffffc4 	movi	r3,-1
  805c0c:	10c0e126 	beq	r2,r3,805f94 <_malloc_r+0x788>
  805c10:	1505c83a 	sub	r2,r2,r20
  805c14:	1545883a 	add	r2,r2,r21
  805c18:	10800054 	ori	r2,r2,1
  805c1c:	e0c00017 	ldw	r3,0(fp)
  805c20:	9d000215 	stw	r20,8(r19)
  805c24:	a0800115 	stw	r2,4(r20)
  805c28:	a8c7883a 	add	r3,r21,r3
  805c2c:	e0c00015 	stw	r3,0(fp)
  805c30:	84c00e26 	beq	r16,r19,805c6c <_malloc_r+0x460>
  805c34:	018003c4 	movi	r6,15
  805c38:	3580a72e 	bgeu	r6,r22,805ed8 <_malloc_r+0x6cc>
  805c3c:	81400117 	ldw	r5,4(r16)
  805c40:	013ffe04 	movi	r4,-8
  805c44:	b0bffd04 	addi	r2,r22,-12
  805c48:	1104703a 	and	r2,r2,r4
  805c4c:	2900004c 	andi	r4,r5,1
  805c50:	2088b03a 	or	r4,r4,r2
  805c54:	81000115 	stw	r4,4(r16)
  805c58:	01400144 	movi	r5,5
  805c5c:	8089883a 	add	r4,r16,r2
  805c60:	21400115 	stw	r5,4(r4)
  805c64:	21400215 	stw	r5,8(r4)
  805c68:	3080cd36 	bltu	r6,r2,805fa0 <_malloc_r+0x794>
  805c6c:	00802074 	movhi	r2,129
  805c70:	108d6e04 	addi	r2,r2,13752
  805c74:	11000017 	ldw	r4,0(r2)
  805c78:	20c0012e 	bgeu	r4,r3,805c80 <_malloc_r+0x474>
  805c7c:	10c00015 	stw	r3,0(r2)
  805c80:	00802074 	movhi	r2,129
  805c84:	108d6d04 	addi	r2,r2,13748
  805c88:	11000017 	ldw	r4,0(r2)
  805c8c:	9c000217 	ldw	r16,8(r19)
  805c90:	20c0012e 	bgeu	r4,r3,805c98 <_malloc_r+0x48c>
  805c94:	10c00015 	stw	r3,0(r2)
  805c98:	80c00117 	ldw	r3,4(r16)
  805c9c:	00bfff04 	movi	r2,-4
  805ca0:	1886703a 	and	r3,r3,r2
  805ca4:	1c45c83a 	sub	r2,r3,r17
  805ca8:	1c400236 	bltu	r3,r17,805cb4 <_malloc_r+0x4a8>
  805cac:	00c003c4 	movi	r3,15
  805cb0:	18800416 	blt	r3,r2,805cc4 <_malloc_r+0x4b8>
  805cb4:	9009883a 	mov	r4,r18
  805cb8:	080d9f00 	call	80d9f0 <__malloc_unlock>
  805cbc:	0005883a 	mov	r2,zero
  805cc0:	003f7b06 	br	805ab0 <__alt_data_end+0xff805ab0>
  805cc4:	88c00054 	ori	r3,r17,1
  805cc8:	80c00115 	stw	r3,4(r16)
  805ccc:	8463883a 	add	r17,r16,r17
  805cd0:	10800054 	ori	r2,r2,1
  805cd4:	9c400215 	stw	r17,8(r19)
  805cd8:	88800115 	stw	r2,4(r17)
  805cdc:	9009883a 	mov	r4,r18
  805ce0:	080d9f00 	call	80d9f0 <__malloc_unlock>
  805ce4:	80800204 	addi	r2,r16,8
  805ce8:	003f7106 	br	805ab0 <__alt_data_end+0xff805ab0>
  805cec:	00c00504 	movi	r3,20
  805cf0:	18804a2e 	bgeu	r3,r2,805e1c <_malloc_r+0x610>
  805cf4:	00c01504 	movi	r3,84
  805cf8:	18806e36 	bltu	r3,r2,805eb4 <_malloc_r+0x6a8>
  805cfc:	8804d33a 	srli	r2,r17,12
  805d00:	12001bc4 	addi	r8,r2,111
  805d04:	11c01b84 	addi	r7,r2,110
  805d08:	4209883a 	add	r4,r8,r8
  805d0c:	003edd06 	br	805884 <__alt_data_end+0xff805884>
  805d10:	3804d27a 	srli	r2,r7,9
  805d14:	00c00104 	movi	r3,4
  805d18:	1880442e 	bgeu	r3,r2,805e2c <_malloc_r+0x620>
  805d1c:	00c00504 	movi	r3,20
  805d20:	18808136 	bltu	r3,r2,805f28 <_malloc_r+0x71c>
  805d24:	11401704 	addi	r5,r2,92
  805d28:	10c016c4 	addi	r3,r2,91
  805d2c:	294b883a 	add	r5,r5,r5
  805d30:	294b883a 	add	r5,r5,r5
  805d34:	294b883a 	add	r5,r5,r5
  805d38:	994b883a 	add	r5,r19,r5
  805d3c:	28800017 	ldw	r2,0(r5)
  805d40:	01802074 	movhi	r6,129
  805d44:	297ffe04 	addi	r5,r5,-8
  805d48:	31811b04 	addi	r6,r6,1132
  805d4c:	28806526 	beq	r5,r2,805ee4 <_malloc_r+0x6d8>
  805d50:	01bfff04 	movi	r6,-4
  805d54:	10c00117 	ldw	r3,4(r2)
  805d58:	1986703a 	and	r3,r3,r6
  805d5c:	38c0022e 	bgeu	r7,r3,805d68 <_malloc_r+0x55c>
  805d60:	10800217 	ldw	r2,8(r2)
  805d64:	28bffb1e 	bne	r5,r2,805d54 <__alt_data_end+0xff805d54>
  805d68:	11400317 	ldw	r5,12(r2)
  805d6c:	98c00117 	ldw	r3,4(r19)
  805d70:	81400315 	stw	r5,12(r16)
  805d74:	80800215 	stw	r2,8(r16)
  805d78:	2c000215 	stw	r16,8(r5)
  805d7c:	14000315 	stw	r16,12(r2)
  805d80:	003ef806 	br	805964 <__alt_data_end+0xff805964>
  805d84:	88c00054 	ori	r3,r17,1
  805d88:	80c00115 	stw	r3,4(r16)
  805d8c:	8463883a 	add	r17,r16,r17
  805d90:	34400515 	stw	r17,20(r6)
  805d94:	34400415 	stw	r17,16(r6)
  805d98:	10c00054 	ori	r3,r2,1
  805d9c:	8a000315 	stw	r8,12(r17)
  805da0:	8a000215 	stw	r8,8(r17)
  805da4:	88c00115 	stw	r3,4(r17)
  805da8:	88a3883a 	add	r17,r17,r2
  805dac:	88800015 	stw	r2,0(r17)
  805db0:	9009883a 	mov	r4,r18
  805db4:	080d9f00 	call	80d9f0 <__malloc_unlock>
  805db8:	80800204 	addi	r2,r16,8
  805dbc:	003f3c06 	br	805ab0 <__alt_data_end+0xff805ab0>
  805dc0:	30c00117 	ldw	r3,4(r6)
  805dc4:	003ee706 	br	805964 <__alt_data_end+0xff805964>
  805dc8:	5ac00044 	addi	r11,r11,1
  805dcc:	588000cc 	andi	r2,r11,3
  805dd0:	31800204 	addi	r6,r6,8
  805dd4:	103efd1e 	bne	r2,zero,8059cc <__alt_data_end+0xff8059cc>
  805dd8:	00002406 	br	805e6c <_malloc_r+0x660>
  805ddc:	14000317 	ldw	r16,12(r2)
  805de0:	143f251e 	bne	r2,r16,805a78 <__alt_data_end+0xff805a78>
  805de4:	21000084 	addi	r4,r4,2
  805de8:	003ebc06 	br	8058dc <__alt_data_end+0xff8058dc>
  805dec:	8085883a 	add	r2,r16,r2
  805df0:	10c00117 	ldw	r3,4(r2)
  805df4:	81000317 	ldw	r4,12(r16)
  805df8:	81400217 	ldw	r5,8(r16)
  805dfc:	18c00054 	ori	r3,r3,1
  805e00:	10c00115 	stw	r3,4(r2)
  805e04:	29000315 	stw	r4,12(r5)
  805e08:	21400215 	stw	r5,8(r4)
  805e0c:	9009883a 	mov	r4,r18
  805e10:	080d9f00 	call	80d9f0 <__malloc_unlock>
  805e14:	80800204 	addi	r2,r16,8
  805e18:	003f2506 	br	805ab0 <__alt_data_end+0xff805ab0>
  805e1c:	12001704 	addi	r8,r2,92
  805e20:	11c016c4 	addi	r7,r2,91
  805e24:	4209883a 	add	r4,r8,r8
  805e28:	003e9606 	br	805884 <__alt_data_end+0xff805884>
  805e2c:	3804d1ba 	srli	r2,r7,6
  805e30:	11400e44 	addi	r5,r2,57
  805e34:	10c00e04 	addi	r3,r2,56
  805e38:	294b883a 	add	r5,r5,r5
  805e3c:	003fbc06 	br	805d30 <__alt_data_end+0xff805d30>
  805e40:	84ff5926 	beq	r16,r19,805ba8 <__alt_data_end+0xff805ba8>
  805e44:	00802074 	movhi	r2,129
  805e48:	10811b04 	addi	r2,r2,1132
  805e4c:	14000217 	ldw	r16,8(r2)
  805e50:	00bfff04 	movi	r2,-4
  805e54:	80c00117 	ldw	r3,4(r16)
  805e58:	1886703a 	and	r3,r3,r2
  805e5c:	003f9106 	br	805ca4 <__alt_data_end+0xff805ca4>
  805e60:	60800217 	ldw	r2,8(r12)
  805e64:	213fffc4 	addi	r4,r4,-1
  805e68:	1300651e 	bne	r2,r12,806000 <_malloc_r+0x7f4>
  805e6c:	208000cc 	andi	r2,r4,3
  805e70:	633ffe04 	addi	r12,r12,-8
  805e74:	103ffa1e 	bne	r2,zero,805e60 <__alt_data_end+0xff805e60>
  805e78:	98800117 	ldw	r2,4(r19)
  805e7c:	0146303a 	nor	r3,zero,r5
  805e80:	1884703a 	and	r2,r3,r2
  805e84:	98800115 	stw	r2,4(r19)
  805e88:	294b883a 	add	r5,r5,r5
  805e8c:	117f2836 	bltu	r2,r5,805b30 <__alt_data_end+0xff805b30>
  805e90:	283f2726 	beq	r5,zero,805b30 <__alt_data_end+0xff805b30>
  805e94:	2886703a 	and	r3,r5,r2
  805e98:	5809883a 	mov	r4,r11
  805e9c:	183ec31e 	bne	r3,zero,8059ac <__alt_data_end+0xff8059ac>
  805ea0:	294b883a 	add	r5,r5,r5
  805ea4:	2886703a 	and	r3,r5,r2
  805ea8:	21000104 	addi	r4,r4,4
  805eac:	183ffc26 	beq	r3,zero,805ea0 <__alt_data_end+0xff805ea0>
  805eb0:	003ebe06 	br	8059ac <__alt_data_end+0xff8059ac>
  805eb4:	00c05504 	movi	r3,340
  805eb8:	18801236 	bltu	r3,r2,805f04 <_malloc_r+0x6f8>
  805ebc:	8804d3fa 	srli	r2,r17,15
  805ec0:	12001e04 	addi	r8,r2,120
  805ec4:	11c01dc4 	addi	r7,r2,119
  805ec8:	4209883a 	add	r4,r8,r8
  805ecc:	003e6d06 	br	805884 <__alt_data_end+0xff805884>
  805ed0:	00c40004 	movi	r3,4096
  805ed4:	003f4606 	br	805bf0 <__alt_data_end+0xff805bf0>
  805ed8:	00800044 	movi	r2,1
  805edc:	a0800115 	stw	r2,4(r20)
  805ee0:	003f7406 	br	805cb4 <__alt_data_end+0xff805cb4>
  805ee4:	1805d0ba 	srai	r2,r3,2
  805ee8:	01c00044 	movi	r7,1
  805eec:	30c00117 	ldw	r3,4(r6)
  805ef0:	388e983a 	sll	r7,r7,r2
  805ef4:	2805883a 	mov	r2,r5
  805ef8:	38c6b03a 	or	r3,r7,r3
  805efc:	30c00115 	stw	r3,4(r6)
  805f00:	003f9b06 	br	805d70 <__alt_data_end+0xff805d70>
  805f04:	00c15504 	movi	r3,1364
  805f08:	18801a36 	bltu	r3,r2,805f74 <_malloc_r+0x768>
  805f0c:	8804d4ba 	srli	r2,r17,18
  805f10:	12001f44 	addi	r8,r2,125
  805f14:	11c01f04 	addi	r7,r2,124
  805f18:	4209883a 	add	r4,r8,r8
  805f1c:	003e5906 	br	805884 <__alt_data_end+0xff805884>
  805f20:	ad400404 	addi	r21,r21,16
  805f24:	003f1706 	br	805b84 <__alt_data_end+0xff805b84>
  805f28:	00c01504 	movi	r3,84
  805f2c:	18802336 	bltu	r3,r2,805fbc <_malloc_r+0x7b0>
  805f30:	3804d33a 	srli	r2,r7,12
  805f34:	11401bc4 	addi	r5,r2,111
  805f38:	10c01b84 	addi	r3,r2,110
  805f3c:	294b883a 	add	r5,r5,r5
  805f40:	003f7b06 	br	805d30 <__alt_data_end+0xff805d30>
  805f44:	9c000217 	ldw	r16,8(r19)
  805f48:	00bfff04 	movi	r2,-4
  805f4c:	80c00117 	ldw	r3,4(r16)
  805f50:	1886703a 	and	r3,r3,r2
  805f54:	003f5306 	br	805ca4 <__alt_data_end+0xff805ca4>
  805f58:	3083ffcc 	andi	r2,r6,4095
  805f5c:	103f181e 	bne	r2,zero,805bc0 <__alt_data_end+0xff805bc0>
  805f60:	99000217 	ldw	r4,8(r19)
  805f64:	b545883a 	add	r2,r22,r21
  805f68:	10800054 	ori	r2,r2,1
  805f6c:	20800115 	stw	r2,4(r4)
  805f70:	003f3e06 	br	805c6c <__alt_data_end+0xff805c6c>
  805f74:	01003f84 	movi	r4,254
  805f78:	02001fc4 	movi	r8,127
  805f7c:	01c01f84 	movi	r7,126
  805f80:	003e4006 	br	805884 <__alt_data_end+0xff805884>
  805f84:	00802074 	movhi	r2,129
  805f88:	1086a204 	addi	r2,r2,6792
  805f8c:	15000015 	stw	r20,0(r2)
  805f90:	003f1106 	br	805bd8 <__alt_data_end+0xff805bd8>
  805f94:	00800044 	movi	r2,1
  805f98:	002b883a 	mov	r21,zero
  805f9c:	003f1f06 	br	805c1c <__alt_data_end+0xff805c1c>
  805fa0:	81400204 	addi	r5,r16,8
  805fa4:	9009883a 	mov	r4,r18
  805fa8:	0804c140 	call	804c14 <_free_r>
  805fac:	00802074 	movhi	r2,129
  805fb0:	108d7704 	addi	r2,r2,13788
  805fb4:	10c00017 	ldw	r3,0(r2)
  805fb8:	003f2c06 	br	805c6c <__alt_data_end+0xff805c6c>
  805fbc:	00c05504 	movi	r3,340
  805fc0:	18800536 	bltu	r3,r2,805fd8 <_malloc_r+0x7cc>
  805fc4:	3804d3fa 	srli	r2,r7,15
  805fc8:	11401e04 	addi	r5,r2,120
  805fcc:	10c01dc4 	addi	r3,r2,119
  805fd0:	294b883a 	add	r5,r5,r5
  805fd4:	003f5606 	br	805d30 <__alt_data_end+0xff805d30>
  805fd8:	00c15504 	movi	r3,1364
  805fdc:	18800536 	bltu	r3,r2,805ff4 <_malloc_r+0x7e8>
  805fe0:	3804d4ba 	srli	r2,r7,18
  805fe4:	11401f44 	addi	r5,r2,125
  805fe8:	10c01f04 	addi	r3,r2,124
  805fec:	294b883a 	add	r5,r5,r5
  805ff0:	003f4f06 	br	805d30 <__alt_data_end+0xff805d30>
  805ff4:	01403f84 	movi	r5,254
  805ff8:	00c01f84 	movi	r3,126
  805ffc:	003f4c06 	br	805d30 <__alt_data_end+0xff805d30>
  806000:	98800117 	ldw	r2,4(r19)
  806004:	003fa006 	br	805e88 <__alt_data_end+0xff805e88>
  806008:	8808d0fa 	srli	r4,r17,3
  80600c:	20800044 	addi	r2,r4,1
  806010:	1085883a 	add	r2,r2,r2
  806014:	003e9006 	br	805a58 <__alt_data_end+0xff805a58>

00806018 <memchr>:
  806018:	208000cc 	andi	r2,r4,3
  80601c:	280f883a 	mov	r7,r5
  806020:	10003426 	beq	r2,zero,8060f4 <memchr+0xdc>
  806024:	30bfffc4 	addi	r2,r6,-1
  806028:	30001a26 	beq	r6,zero,806094 <memchr+0x7c>
  80602c:	20c00003 	ldbu	r3,0(r4)
  806030:	29803fcc 	andi	r6,r5,255
  806034:	30c0051e 	bne	r6,r3,80604c <memchr+0x34>
  806038:	00001806 	br	80609c <memchr+0x84>
  80603c:	10001526 	beq	r2,zero,806094 <memchr+0x7c>
  806040:	20c00003 	ldbu	r3,0(r4)
  806044:	10bfffc4 	addi	r2,r2,-1
  806048:	30c01426 	beq	r6,r3,80609c <memchr+0x84>
  80604c:	21000044 	addi	r4,r4,1
  806050:	20c000cc 	andi	r3,r4,3
  806054:	183ff91e 	bne	r3,zero,80603c <__alt_data_end+0xff80603c>
  806058:	020000c4 	movi	r8,3
  80605c:	40801136 	bltu	r8,r2,8060a4 <memchr+0x8c>
  806060:	10000c26 	beq	r2,zero,806094 <memchr+0x7c>
  806064:	20c00003 	ldbu	r3,0(r4)
  806068:	29403fcc 	andi	r5,r5,255
  80606c:	28c00b26 	beq	r5,r3,80609c <memchr+0x84>
  806070:	20c00044 	addi	r3,r4,1
  806074:	39803fcc 	andi	r6,r7,255
  806078:	2089883a 	add	r4,r4,r2
  80607c:	00000306 	br	80608c <memchr+0x74>
  806080:	18c00044 	addi	r3,r3,1
  806084:	197fffc3 	ldbu	r5,-1(r3)
  806088:	31400526 	beq	r6,r5,8060a0 <memchr+0x88>
  80608c:	1805883a 	mov	r2,r3
  806090:	20fffb1e 	bne	r4,r3,806080 <__alt_data_end+0xff806080>
  806094:	0005883a 	mov	r2,zero
  806098:	f800283a 	ret
  80609c:	2005883a 	mov	r2,r4
  8060a0:	f800283a 	ret
  8060a4:	28c03fcc 	andi	r3,r5,255
  8060a8:	1812923a 	slli	r9,r3,8
  8060ac:	02ffbff4 	movhi	r11,65279
  8060b0:	02a02074 	movhi	r10,32897
  8060b4:	48d2b03a 	or	r9,r9,r3
  8060b8:	4806943a 	slli	r3,r9,16
  8060bc:	5affbfc4 	addi	r11,r11,-257
  8060c0:	52a02004 	addi	r10,r10,-32640
  8060c4:	48d2b03a 	or	r9,r9,r3
  8060c8:	20c00017 	ldw	r3,0(r4)
  8060cc:	48c6f03a 	xor	r3,r9,r3
  8060d0:	1acd883a 	add	r6,r3,r11
  8060d4:	00c6303a 	nor	r3,zero,r3
  8060d8:	30c6703a 	and	r3,r6,r3
  8060dc:	1a86703a 	and	r3,r3,r10
  8060e0:	183fe01e 	bne	r3,zero,806064 <__alt_data_end+0xff806064>
  8060e4:	10bfff04 	addi	r2,r2,-4
  8060e8:	21000104 	addi	r4,r4,4
  8060ec:	40bff636 	bltu	r8,r2,8060c8 <__alt_data_end+0xff8060c8>
  8060f0:	003fdb06 	br	806060 <__alt_data_end+0xff806060>
  8060f4:	3005883a 	mov	r2,r6
  8060f8:	003fd706 	br	806058 <__alt_data_end+0xff806058>

008060fc <memcpy>:
  8060fc:	defffd04 	addi	sp,sp,-12
  806100:	dfc00215 	stw	ra,8(sp)
  806104:	dc400115 	stw	r17,4(sp)
  806108:	dc000015 	stw	r16,0(sp)
  80610c:	00c003c4 	movi	r3,15
  806110:	2005883a 	mov	r2,r4
  806114:	1980452e 	bgeu	r3,r6,80622c <memcpy+0x130>
  806118:	2906b03a 	or	r3,r5,r4
  80611c:	18c000cc 	andi	r3,r3,3
  806120:	1800441e 	bne	r3,zero,806234 <memcpy+0x138>
  806124:	347ffc04 	addi	r17,r6,-16
  806128:	8822d13a 	srli	r17,r17,4
  80612c:	28c00104 	addi	r3,r5,4
  806130:	23400104 	addi	r13,r4,4
  806134:	8820913a 	slli	r16,r17,4
  806138:	2b000204 	addi	r12,r5,8
  80613c:	22c00204 	addi	r11,r4,8
  806140:	84000504 	addi	r16,r16,20
  806144:	2a800304 	addi	r10,r5,12
  806148:	22400304 	addi	r9,r4,12
  80614c:	2c21883a 	add	r16,r5,r16
  806150:	2811883a 	mov	r8,r5
  806154:	200f883a 	mov	r7,r4
  806158:	41000017 	ldw	r4,0(r8)
  80615c:	1fc00017 	ldw	ra,0(r3)
  806160:	63c00017 	ldw	r15,0(r12)
  806164:	39000015 	stw	r4,0(r7)
  806168:	53800017 	ldw	r14,0(r10)
  80616c:	6fc00015 	stw	ra,0(r13)
  806170:	5bc00015 	stw	r15,0(r11)
  806174:	4b800015 	stw	r14,0(r9)
  806178:	18c00404 	addi	r3,r3,16
  80617c:	39c00404 	addi	r7,r7,16
  806180:	42000404 	addi	r8,r8,16
  806184:	6b400404 	addi	r13,r13,16
  806188:	63000404 	addi	r12,r12,16
  80618c:	5ac00404 	addi	r11,r11,16
  806190:	52800404 	addi	r10,r10,16
  806194:	4a400404 	addi	r9,r9,16
  806198:	1c3fef1e 	bne	r3,r16,806158 <__alt_data_end+0xff806158>
  80619c:	89c00044 	addi	r7,r17,1
  8061a0:	380e913a 	slli	r7,r7,4
  8061a4:	310003cc 	andi	r4,r6,15
  8061a8:	02c000c4 	movi	r11,3
  8061ac:	11c7883a 	add	r3,r2,r7
  8061b0:	29cb883a 	add	r5,r5,r7
  8061b4:	5900212e 	bgeu	r11,r4,80623c <memcpy+0x140>
  8061b8:	1813883a 	mov	r9,r3
  8061bc:	2811883a 	mov	r8,r5
  8061c0:	200f883a 	mov	r7,r4
  8061c4:	42800017 	ldw	r10,0(r8)
  8061c8:	4a400104 	addi	r9,r9,4
  8061cc:	39ffff04 	addi	r7,r7,-4
  8061d0:	4abfff15 	stw	r10,-4(r9)
  8061d4:	42000104 	addi	r8,r8,4
  8061d8:	59fffa36 	bltu	r11,r7,8061c4 <__alt_data_end+0xff8061c4>
  8061dc:	213fff04 	addi	r4,r4,-4
  8061e0:	2008d0ba 	srli	r4,r4,2
  8061e4:	318000cc 	andi	r6,r6,3
  8061e8:	21000044 	addi	r4,r4,1
  8061ec:	2109883a 	add	r4,r4,r4
  8061f0:	2109883a 	add	r4,r4,r4
  8061f4:	1907883a 	add	r3,r3,r4
  8061f8:	290b883a 	add	r5,r5,r4
  8061fc:	30000626 	beq	r6,zero,806218 <memcpy+0x11c>
  806200:	198d883a 	add	r6,r3,r6
  806204:	29c00003 	ldbu	r7,0(r5)
  806208:	18c00044 	addi	r3,r3,1
  80620c:	29400044 	addi	r5,r5,1
  806210:	19ffffc5 	stb	r7,-1(r3)
  806214:	19bffb1e 	bne	r3,r6,806204 <__alt_data_end+0xff806204>
  806218:	dfc00217 	ldw	ra,8(sp)
  80621c:	dc400117 	ldw	r17,4(sp)
  806220:	dc000017 	ldw	r16,0(sp)
  806224:	dec00304 	addi	sp,sp,12
  806228:	f800283a 	ret
  80622c:	2007883a 	mov	r3,r4
  806230:	003ff206 	br	8061fc <__alt_data_end+0xff8061fc>
  806234:	2007883a 	mov	r3,r4
  806238:	003ff106 	br	806200 <__alt_data_end+0xff806200>
  80623c:	200d883a 	mov	r6,r4
  806240:	003fee06 	br	8061fc <__alt_data_end+0xff8061fc>

00806244 <memmove>:
  806244:	2005883a 	mov	r2,r4
  806248:	29000b2e 	bgeu	r5,r4,806278 <memmove+0x34>
  80624c:	298f883a 	add	r7,r5,r6
  806250:	21c0092e 	bgeu	r4,r7,806278 <memmove+0x34>
  806254:	2187883a 	add	r3,r4,r6
  806258:	198bc83a 	sub	r5,r3,r6
  80625c:	30004826 	beq	r6,zero,806380 <memmove+0x13c>
  806260:	39ffffc4 	addi	r7,r7,-1
  806264:	39000003 	ldbu	r4,0(r7)
  806268:	18ffffc4 	addi	r3,r3,-1
  80626c:	19000005 	stb	r4,0(r3)
  806270:	28fffb1e 	bne	r5,r3,806260 <__alt_data_end+0xff806260>
  806274:	f800283a 	ret
  806278:	00c003c4 	movi	r3,15
  80627c:	1980412e 	bgeu	r3,r6,806384 <memmove+0x140>
  806280:	2886b03a 	or	r3,r5,r2
  806284:	18c000cc 	andi	r3,r3,3
  806288:	1800401e 	bne	r3,zero,80638c <memmove+0x148>
  80628c:	33fffc04 	addi	r15,r6,-16
  806290:	781ed13a 	srli	r15,r15,4
  806294:	28c00104 	addi	r3,r5,4
  806298:	13400104 	addi	r13,r2,4
  80629c:	781c913a 	slli	r14,r15,4
  8062a0:	2b000204 	addi	r12,r5,8
  8062a4:	12c00204 	addi	r11,r2,8
  8062a8:	73800504 	addi	r14,r14,20
  8062ac:	2a800304 	addi	r10,r5,12
  8062b0:	12400304 	addi	r9,r2,12
  8062b4:	2b9d883a 	add	r14,r5,r14
  8062b8:	2811883a 	mov	r8,r5
  8062bc:	100f883a 	mov	r7,r2
  8062c0:	41000017 	ldw	r4,0(r8)
  8062c4:	39c00404 	addi	r7,r7,16
  8062c8:	18c00404 	addi	r3,r3,16
  8062cc:	393ffc15 	stw	r4,-16(r7)
  8062d0:	193ffc17 	ldw	r4,-16(r3)
  8062d4:	6b400404 	addi	r13,r13,16
  8062d8:	5ac00404 	addi	r11,r11,16
  8062dc:	693ffc15 	stw	r4,-16(r13)
  8062e0:	61000017 	ldw	r4,0(r12)
  8062e4:	4a400404 	addi	r9,r9,16
  8062e8:	42000404 	addi	r8,r8,16
  8062ec:	593ffc15 	stw	r4,-16(r11)
  8062f0:	51000017 	ldw	r4,0(r10)
  8062f4:	63000404 	addi	r12,r12,16
  8062f8:	52800404 	addi	r10,r10,16
  8062fc:	493ffc15 	stw	r4,-16(r9)
  806300:	1bbfef1e 	bne	r3,r14,8062c0 <__alt_data_end+0xff8062c0>
  806304:	79000044 	addi	r4,r15,1
  806308:	2008913a 	slli	r4,r4,4
  80630c:	328003cc 	andi	r10,r6,15
  806310:	02c000c4 	movi	r11,3
  806314:	1107883a 	add	r3,r2,r4
  806318:	290b883a 	add	r5,r5,r4
  80631c:	5a801e2e 	bgeu	r11,r10,806398 <memmove+0x154>
  806320:	1813883a 	mov	r9,r3
  806324:	2811883a 	mov	r8,r5
  806328:	500f883a 	mov	r7,r10
  80632c:	41000017 	ldw	r4,0(r8)
  806330:	4a400104 	addi	r9,r9,4
  806334:	39ffff04 	addi	r7,r7,-4
  806338:	493fff15 	stw	r4,-4(r9)
  80633c:	42000104 	addi	r8,r8,4
  806340:	59fffa36 	bltu	r11,r7,80632c <__alt_data_end+0xff80632c>
  806344:	513fff04 	addi	r4,r10,-4
  806348:	2008d0ba 	srli	r4,r4,2
  80634c:	318000cc 	andi	r6,r6,3
  806350:	21000044 	addi	r4,r4,1
  806354:	2109883a 	add	r4,r4,r4
  806358:	2109883a 	add	r4,r4,r4
  80635c:	1907883a 	add	r3,r3,r4
  806360:	290b883a 	add	r5,r5,r4
  806364:	30000b26 	beq	r6,zero,806394 <memmove+0x150>
  806368:	198d883a 	add	r6,r3,r6
  80636c:	29c00003 	ldbu	r7,0(r5)
  806370:	18c00044 	addi	r3,r3,1
  806374:	29400044 	addi	r5,r5,1
  806378:	19ffffc5 	stb	r7,-1(r3)
  80637c:	19bffb1e 	bne	r3,r6,80636c <__alt_data_end+0xff80636c>
  806380:	f800283a 	ret
  806384:	1007883a 	mov	r3,r2
  806388:	003ff606 	br	806364 <__alt_data_end+0xff806364>
  80638c:	1007883a 	mov	r3,r2
  806390:	003ff506 	br	806368 <__alt_data_end+0xff806368>
  806394:	f800283a 	ret
  806398:	500d883a 	mov	r6,r10
  80639c:	003ff106 	br	806364 <__alt_data_end+0xff806364>

008063a0 <memset>:
  8063a0:	20c000cc 	andi	r3,r4,3
  8063a4:	2005883a 	mov	r2,r4
  8063a8:	18004426 	beq	r3,zero,8064bc <memset+0x11c>
  8063ac:	31ffffc4 	addi	r7,r6,-1
  8063b0:	30004026 	beq	r6,zero,8064b4 <memset+0x114>
  8063b4:	2813883a 	mov	r9,r5
  8063b8:	200d883a 	mov	r6,r4
  8063bc:	2007883a 	mov	r3,r4
  8063c0:	00000406 	br	8063d4 <memset+0x34>
  8063c4:	3a3fffc4 	addi	r8,r7,-1
  8063c8:	31800044 	addi	r6,r6,1
  8063cc:	38003926 	beq	r7,zero,8064b4 <memset+0x114>
  8063d0:	400f883a 	mov	r7,r8
  8063d4:	18c00044 	addi	r3,r3,1
  8063d8:	32400005 	stb	r9,0(r6)
  8063dc:	1a0000cc 	andi	r8,r3,3
  8063e0:	403ff81e 	bne	r8,zero,8063c4 <__alt_data_end+0xff8063c4>
  8063e4:	010000c4 	movi	r4,3
  8063e8:	21c02d2e 	bgeu	r4,r7,8064a0 <memset+0x100>
  8063ec:	29003fcc 	andi	r4,r5,255
  8063f0:	200c923a 	slli	r6,r4,8
  8063f4:	3108b03a 	or	r4,r6,r4
  8063f8:	200c943a 	slli	r6,r4,16
  8063fc:	218cb03a 	or	r6,r4,r6
  806400:	010003c4 	movi	r4,15
  806404:	21c0182e 	bgeu	r4,r7,806468 <memset+0xc8>
  806408:	3b3ffc04 	addi	r12,r7,-16
  80640c:	6018d13a 	srli	r12,r12,4
  806410:	1a000104 	addi	r8,r3,4
  806414:	1ac00204 	addi	r11,r3,8
  806418:	6008913a 	slli	r4,r12,4
  80641c:	1a800304 	addi	r10,r3,12
  806420:	1813883a 	mov	r9,r3
  806424:	21000504 	addi	r4,r4,20
  806428:	1909883a 	add	r4,r3,r4
  80642c:	49800015 	stw	r6,0(r9)
  806430:	41800015 	stw	r6,0(r8)
  806434:	59800015 	stw	r6,0(r11)
  806438:	51800015 	stw	r6,0(r10)
  80643c:	42000404 	addi	r8,r8,16
  806440:	4a400404 	addi	r9,r9,16
  806444:	5ac00404 	addi	r11,r11,16
  806448:	52800404 	addi	r10,r10,16
  80644c:	413ff71e 	bne	r8,r4,80642c <__alt_data_end+0xff80642c>
  806450:	63000044 	addi	r12,r12,1
  806454:	6018913a 	slli	r12,r12,4
  806458:	39c003cc 	andi	r7,r7,15
  80645c:	010000c4 	movi	r4,3
  806460:	1b07883a 	add	r3,r3,r12
  806464:	21c00e2e 	bgeu	r4,r7,8064a0 <memset+0x100>
  806468:	1813883a 	mov	r9,r3
  80646c:	3811883a 	mov	r8,r7
  806470:	010000c4 	movi	r4,3
  806474:	49800015 	stw	r6,0(r9)
  806478:	423fff04 	addi	r8,r8,-4
  80647c:	4a400104 	addi	r9,r9,4
  806480:	223ffc36 	bltu	r4,r8,806474 <__alt_data_end+0xff806474>
  806484:	393fff04 	addi	r4,r7,-4
  806488:	2008d0ba 	srli	r4,r4,2
  80648c:	39c000cc 	andi	r7,r7,3
  806490:	21000044 	addi	r4,r4,1
  806494:	2109883a 	add	r4,r4,r4
  806498:	2109883a 	add	r4,r4,r4
  80649c:	1907883a 	add	r3,r3,r4
  8064a0:	38000526 	beq	r7,zero,8064b8 <memset+0x118>
  8064a4:	19cf883a 	add	r7,r3,r7
  8064a8:	19400005 	stb	r5,0(r3)
  8064ac:	18c00044 	addi	r3,r3,1
  8064b0:	38fffd1e 	bne	r7,r3,8064a8 <__alt_data_end+0xff8064a8>
  8064b4:	f800283a 	ret
  8064b8:	f800283a 	ret
  8064bc:	2007883a 	mov	r3,r4
  8064c0:	300f883a 	mov	r7,r6
  8064c4:	003fc706 	br	8063e4 <__alt_data_end+0xff8063e4>

008064c8 <_Balloc>:
  8064c8:	20801317 	ldw	r2,76(r4)
  8064cc:	defffc04 	addi	sp,sp,-16
  8064d0:	dc400115 	stw	r17,4(sp)
  8064d4:	dc000015 	stw	r16,0(sp)
  8064d8:	dfc00315 	stw	ra,12(sp)
  8064dc:	dc800215 	stw	r18,8(sp)
  8064e0:	2023883a 	mov	r17,r4
  8064e4:	2821883a 	mov	r16,r5
  8064e8:	10000f26 	beq	r2,zero,806528 <_Balloc+0x60>
  8064ec:	8407883a 	add	r3,r16,r16
  8064f0:	18c7883a 	add	r3,r3,r3
  8064f4:	10c7883a 	add	r3,r2,r3
  8064f8:	18800017 	ldw	r2,0(r3)
  8064fc:	10001126 	beq	r2,zero,806544 <_Balloc+0x7c>
  806500:	11000017 	ldw	r4,0(r2)
  806504:	19000015 	stw	r4,0(r3)
  806508:	10000415 	stw	zero,16(r2)
  80650c:	10000315 	stw	zero,12(r2)
  806510:	dfc00317 	ldw	ra,12(sp)
  806514:	dc800217 	ldw	r18,8(sp)
  806518:	dc400117 	ldw	r17,4(sp)
  80651c:	dc000017 	ldw	r16,0(sp)
  806520:	dec00404 	addi	sp,sp,16
  806524:	f800283a 	ret
  806528:	01800844 	movi	r6,33
  80652c:	01400104 	movi	r5,4
  806530:	08095700 	call	809570 <_calloc_r>
  806534:	88801315 	stw	r2,76(r17)
  806538:	103fec1e 	bne	r2,zero,8064ec <__alt_data_end+0xff8064ec>
  80653c:	0005883a 	mov	r2,zero
  806540:	003ff306 	br	806510 <__alt_data_end+0xff806510>
  806544:	01400044 	movi	r5,1
  806548:	2c24983a 	sll	r18,r5,r16
  80654c:	8809883a 	mov	r4,r17
  806550:	91800144 	addi	r6,r18,5
  806554:	318d883a 	add	r6,r6,r6
  806558:	318d883a 	add	r6,r6,r6
  80655c:	08095700 	call	809570 <_calloc_r>
  806560:	103ff626 	beq	r2,zero,80653c <__alt_data_end+0xff80653c>
  806564:	14000115 	stw	r16,4(r2)
  806568:	14800215 	stw	r18,8(r2)
  80656c:	003fe606 	br	806508 <__alt_data_end+0xff806508>

00806570 <_Bfree>:
  806570:	28000826 	beq	r5,zero,806594 <_Bfree+0x24>
  806574:	28c00117 	ldw	r3,4(r5)
  806578:	20801317 	ldw	r2,76(r4)
  80657c:	18c7883a 	add	r3,r3,r3
  806580:	18c7883a 	add	r3,r3,r3
  806584:	10c5883a 	add	r2,r2,r3
  806588:	10c00017 	ldw	r3,0(r2)
  80658c:	28c00015 	stw	r3,0(r5)
  806590:	11400015 	stw	r5,0(r2)
  806594:	f800283a 	ret

00806598 <__multadd>:
  806598:	defff704 	addi	sp,sp,-36
  80659c:	dc800215 	stw	r18,8(sp)
  8065a0:	2c800417 	ldw	r18,16(r5)
  8065a4:	dd800615 	stw	r22,24(sp)
  8065a8:	dd400515 	stw	r21,20(sp)
  8065ac:	dd000415 	stw	r20,16(sp)
  8065b0:	dcc00315 	stw	r19,12(sp)
  8065b4:	dc400115 	stw	r17,4(sp)
  8065b8:	dc000015 	stw	r16,0(sp)
  8065bc:	dfc00815 	stw	ra,32(sp)
  8065c0:	ddc00715 	stw	r23,28(sp)
  8065c4:	2827883a 	mov	r19,r5
  8065c8:	2029883a 	mov	r20,r4
  8065cc:	3023883a 	mov	r17,r6
  8065d0:	3821883a 	mov	r16,r7
  8065d4:	2d400504 	addi	r21,r5,20
  8065d8:	002d883a 	mov	r22,zero
  8065dc:	adc00017 	ldw	r23,0(r21)
  8065e0:	880b883a 	mov	r5,r17
  8065e4:	ad400104 	addi	r21,r21,4
  8065e8:	b93fffcc 	andi	r4,r23,65535
  8065ec:	080ab7c0 	call	80ab7c <__mulsi3>
  8065f0:	b808d43a 	srli	r4,r23,16
  8065f4:	880b883a 	mov	r5,r17
  8065f8:	1421883a 	add	r16,r2,r16
  8065fc:	080ab7c0 	call	80ab7c <__mulsi3>
  806600:	800ed43a 	srli	r7,r16,16
  806604:	80ffffcc 	andi	r3,r16,65535
  806608:	b5800044 	addi	r22,r22,1
  80660c:	11c5883a 	add	r2,r2,r7
  806610:	100e943a 	slli	r7,r2,16
  806614:	1020d43a 	srli	r16,r2,16
  806618:	38c7883a 	add	r3,r7,r3
  80661c:	a8ffff15 	stw	r3,-4(r21)
  806620:	b4bfee16 	blt	r22,r18,8065dc <__alt_data_end+0xff8065dc>
  806624:	80000926 	beq	r16,zero,80664c <__multadd+0xb4>
  806628:	98800217 	ldw	r2,8(r19)
  80662c:	9080130e 	bge	r18,r2,80667c <__multadd+0xe4>
  806630:	90800144 	addi	r2,r18,5
  806634:	1085883a 	add	r2,r2,r2
  806638:	1085883a 	add	r2,r2,r2
  80663c:	9885883a 	add	r2,r19,r2
  806640:	14000015 	stw	r16,0(r2)
  806644:	94800044 	addi	r18,r18,1
  806648:	9c800415 	stw	r18,16(r19)
  80664c:	9805883a 	mov	r2,r19
  806650:	dfc00817 	ldw	ra,32(sp)
  806654:	ddc00717 	ldw	r23,28(sp)
  806658:	dd800617 	ldw	r22,24(sp)
  80665c:	dd400517 	ldw	r21,20(sp)
  806660:	dd000417 	ldw	r20,16(sp)
  806664:	dcc00317 	ldw	r19,12(sp)
  806668:	dc800217 	ldw	r18,8(sp)
  80666c:	dc400117 	ldw	r17,4(sp)
  806670:	dc000017 	ldw	r16,0(sp)
  806674:	dec00904 	addi	sp,sp,36
  806678:	f800283a 	ret
  80667c:	99400117 	ldw	r5,4(r19)
  806680:	a009883a 	mov	r4,r20
  806684:	29400044 	addi	r5,r5,1
  806688:	08064c80 	call	8064c8 <_Balloc>
  80668c:	99800417 	ldw	r6,16(r19)
  806690:	99400304 	addi	r5,r19,12
  806694:	11000304 	addi	r4,r2,12
  806698:	31800084 	addi	r6,r6,2
  80669c:	318d883a 	add	r6,r6,r6
  8066a0:	318d883a 	add	r6,r6,r6
  8066a4:	1023883a 	mov	r17,r2
  8066a8:	08060fc0 	call	8060fc <memcpy>
  8066ac:	98000a26 	beq	r19,zero,8066d8 <__multadd+0x140>
  8066b0:	98c00117 	ldw	r3,4(r19)
  8066b4:	a0801317 	ldw	r2,76(r20)
  8066b8:	18c7883a 	add	r3,r3,r3
  8066bc:	18c7883a 	add	r3,r3,r3
  8066c0:	10c5883a 	add	r2,r2,r3
  8066c4:	10c00017 	ldw	r3,0(r2)
  8066c8:	98c00015 	stw	r3,0(r19)
  8066cc:	14c00015 	stw	r19,0(r2)
  8066d0:	8827883a 	mov	r19,r17
  8066d4:	003fd606 	br	806630 <__alt_data_end+0xff806630>
  8066d8:	8827883a 	mov	r19,r17
  8066dc:	003fd406 	br	806630 <__alt_data_end+0xff806630>

008066e0 <__s2b>:
  8066e0:	defff904 	addi	sp,sp,-28
  8066e4:	dc400115 	stw	r17,4(sp)
  8066e8:	dc000015 	stw	r16,0(sp)
  8066ec:	2023883a 	mov	r17,r4
  8066f0:	2821883a 	mov	r16,r5
  8066f4:	39000204 	addi	r4,r7,8
  8066f8:	01400244 	movi	r5,9
  8066fc:	dcc00315 	stw	r19,12(sp)
  806700:	dc800215 	stw	r18,8(sp)
  806704:	dfc00615 	stw	ra,24(sp)
  806708:	dd400515 	stw	r21,20(sp)
  80670c:	dd000415 	stw	r20,16(sp)
  806710:	3825883a 	mov	r18,r7
  806714:	3027883a 	mov	r19,r6
  806718:	080a9c80 	call	80a9c8 <__divsi3>
  80671c:	00c00044 	movi	r3,1
  806720:	000b883a 	mov	r5,zero
  806724:	1880030e 	bge	r3,r2,806734 <__s2b+0x54>
  806728:	18c7883a 	add	r3,r3,r3
  80672c:	29400044 	addi	r5,r5,1
  806730:	18bffd16 	blt	r3,r2,806728 <__alt_data_end+0xff806728>
  806734:	8809883a 	mov	r4,r17
  806738:	08064c80 	call	8064c8 <_Balloc>
  80673c:	d8c00717 	ldw	r3,28(sp)
  806740:	10c00515 	stw	r3,20(r2)
  806744:	00c00044 	movi	r3,1
  806748:	10c00415 	stw	r3,16(r2)
  80674c:	00c00244 	movi	r3,9
  806750:	1cc0210e 	bge	r3,r19,8067d8 <__s2b+0xf8>
  806754:	80eb883a 	add	r21,r16,r3
  806758:	a829883a 	mov	r20,r21
  80675c:	84e1883a 	add	r16,r16,r19
  806760:	a1c00007 	ldb	r7,0(r20)
  806764:	01800284 	movi	r6,10
  806768:	a5000044 	addi	r20,r20,1
  80676c:	100b883a 	mov	r5,r2
  806770:	39fff404 	addi	r7,r7,-48
  806774:	8809883a 	mov	r4,r17
  806778:	08065980 	call	806598 <__multadd>
  80677c:	a43ff81e 	bne	r20,r16,806760 <__alt_data_end+0xff806760>
  806780:	ace1883a 	add	r16,r21,r19
  806784:	843ffe04 	addi	r16,r16,-8
  806788:	9c800a0e 	bge	r19,r18,8067b4 <__s2b+0xd4>
  80678c:	94e5c83a 	sub	r18,r18,r19
  806790:	84a5883a 	add	r18,r16,r18
  806794:	81c00007 	ldb	r7,0(r16)
  806798:	01800284 	movi	r6,10
  80679c:	84000044 	addi	r16,r16,1
  8067a0:	100b883a 	mov	r5,r2
  8067a4:	39fff404 	addi	r7,r7,-48
  8067a8:	8809883a 	mov	r4,r17
  8067ac:	08065980 	call	806598 <__multadd>
  8067b0:	84bff81e 	bne	r16,r18,806794 <__alt_data_end+0xff806794>
  8067b4:	dfc00617 	ldw	ra,24(sp)
  8067b8:	dd400517 	ldw	r21,20(sp)
  8067bc:	dd000417 	ldw	r20,16(sp)
  8067c0:	dcc00317 	ldw	r19,12(sp)
  8067c4:	dc800217 	ldw	r18,8(sp)
  8067c8:	dc400117 	ldw	r17,4(sp)
  8067cc:	dc000017 	ldw	r16,0(sp)
  8067d0:	dec00704 	addi	sp,sp,28
  8067d4:	f800283a 	ret
  8067d8:	84000284 	addi	r16,r16,10
  8067dc:	1827883a 	mov	r19,r3
  8067e0:	003fe906 	br	806788 <__alt_data_end+0xff806788>

008067e4 <__hi0bits>:
  8067e4:	20bfffec 	andhi	r2,r4,65535
  8067e8:	1000141e 	bne	r2,zero,80683c <__hi0bits+0x58>
  8067ec:	2008943a 	slli	r4,r4,16
  8067f0:	00800404 	movi	r2,16
  8067f4:	20ffc02c 	andhi	r3,r4,65280
  8067f8:	1800021e 	bne	r3,zero,806804 <__hi0bits+0x20>
  8067fc:	2008923a 	slli	r4,r4,8
  806800:	10800204 	addi	r2,r2,8
  806804:	20fc002c 	andhi	r3,r4,61440
  806808:	1800021e 	bne	r3,zero,806814 <__hi0bits+0x30>
  80680c:	2008913a 	slli	r4,r4,4
  806810:	10800104 	addi	r2,r2,4
  806814:	20f0002c 	andhi	r3,r4,49152
  806818:	1800031e 	bne	r3,zero,806828 <__hi0bits+0x44>
  80681c:	2109883a 	add	r4,r4,r4
  806820:	10800084 	addi	r2,r2,2
  806824:	2109883a 	add	r4,r4,r4
  806828:	20000316 	blt	r4,zero,806838 <__hi0bits+0x54>
  80682c:	2110002c 	andhi	r4,r4,16384
  806830:	2000041e 	bne	r4,zero,806844 <__hi0bits+0x60>
  806834:	00800804 	movi	r2,32
  806838:	f800283a 	ret
  80683c:	0005883a 	mov	r2,zero
  806840:	003fec06 	br	8067f4 <__alt_data_end+0xff8067f4>
  806844:	10800044 	addi	r2,r2,1
  806848:	f800283a 	ret

0080684c <__lo0bits>:
  80684c:	20c00017 	ldw	r3,0(r4)
  806850:	188001cc 	andi	r2,r3,7
  806854:	10000826 	beq	r2,zero,806878 <__lo0bits+0x2c>
  806858:	1880004c 	andi	r2,r3,1
  80685c:	1000211e 	bne	r2,zero,8068e4 <__lo0bits+0x98>
  806860:	1880008c 	andi	r2,r3,2
  806864:	1000211e 	bne	r2,zero,8068ec <__lo0bits+0xa0>
  806868:	1806d0ba 	srli	r3,r3,2
  80686c:	00800084 	movi	r2,2
  806870:	20c00015 	stw	r3,0(r4)
  806874:	f800283a 	ret
  806878:	18bfffcc 	andi	r2,r3,65535
  80687c:	10001326 	beq	r2,zero,8068cc <__lo0bits+0x80>
  806880:	0005883a 	mov	r2,zero
  806884:	19403fcc 	andi	r5,r3,255
  806888:	2800021e 	bne	r5,zero,806894 <__lo0bits+0x48>
  80688c:	1806d23a 	srli	r3,r3,8
  806890:	10800204 	addi	r2,r2,8
  806894:	194003cc 	andi	r5,r3,15
  806898:	2800021e 	bne	r5,zero,8068a4 <__lo0bits+0x58>
  80689c:	1806d13a 	srli	r3,r3,4
  8068a0:	10800104 	addi	r2,r2,4
  8068a4:	194000cc 	andi	r5,r3,3
  8068a8:	2800021e 	bne	r5,zero,8068b4 <__lo0bits+0x68>
  8068ac:	1806d0ba 	srli	r3,r3,2
  8068b0:	10800084 	addi	r2,r2,2
  8068b4:	1940004c 	andi	r5,r3,1
  8068b8:	2800081e 	bne	r5,zero,8068dc <__lo0bits+0x90>
  8068bc:	1806d07a 	srli	r3,r3,1
  8068c0:	1800051e 	bne	r3,zero,8068d8 <__lo0bits+0x8c>
  8068c4:	00800804 	movi	r2,32
  8068c8:	f800283a 	ret
  8068cc:	1806d43a 	srli	r3,r3,16
  8068d0:	00800404 	movi	r2,16
  8068d4:	003feb06 	br	806884 <__alt_data_end+0xff806884>
  8068d8:	10800044 	addi	r2,r2,1
  8068dc:	20c00015 	stw	r3,0(r4)
  8068e0:	f800283a 	ret
  8068e4:	0005883a 	mov	r2,zero
  8068e8:	f800283a 	ret
  8068ec:	1806d07a 	srli	r3,r3,1
  8068f0:	00800044 	movi	r2,1
  8068f4:	20c00015 	stw	r3,0(r4)
  8068f8:	f800283a 	ret

008068fc <__i2b>:
  8068fc:	defffd04 	addi	sp,sp,-12
  806900:	dc000015 	stw	r16,0(sp)
  806904:	04000044 	movi	r16,1
  806908:	dc400115 	stw	r17,4(sp)
  80690c:	2823883a 	mov	r17,r5
  806910:	800b883a 	mov	r5,r16
  806914:	dfc00215 	stw	ra,8(sp)
  806918:	08064c80 	call	8064c8 <_Balloc>
  80691c:	14400515 	stw	r17,20(r2)
  806920:	14000415 	stw	r16,16(r2)
  806924:	dfc00217 	ldw	ra,8(sp)
  806928:	dc400117 	ldw	r17,4(sp)
  80692c:	dc000017 	ldw	r16,0(sp)
  806930:	dec00304 	addi	sp,sp,12
  806934:	f800283a 	ret

00806938 <__multiply>:
  806938:	deffef04 	addi	sp,sp,-68
  80693c:	dc400815 	stw	r17,32(sp)
  806940:	dc000715 	stw	r16,28(sp)
  806944:	34400417 	ldw	r17,16(r6)
  806948:	2c000417 	ldw	r16,16(r5)
  80694c:	dd800d15 	stw	r22,52(sp)
  806950:	dc800915 	stw	r18,36(sp)
  806954:	dfc01015 	stw	ra,64(sp)
  806958:	df000f15 	stw	fp,60(sp)
  80695c:	ddc00e15 	stw	r23,56(sp)
  806960:	dd400c15 	stw	r21,48(sp)
  806964:	dd000b15 	stw	r20,44(sp)
  806968:	dcc00a15 	stw	r19,40(sp)
  80696c:	2825883a 	mov	r18,r5
  806970:	302d883a 	mov	r22,r6
  806974:	8440050e 	bge	r16,r17,80698c <__multiply+0x54>
  806978:	8007883a 	mov	r3,r16
  80697c:	3025883a 	mov	r18,r6
  806980:	8821883a 	mov	r16,r17
  806984:	282d883a 	mov	r22,r5
  806988:	1823883a 	mov	r17,r3
  80698c:	90800217 	ldw	r2,8(r18)
  806990:	8447883a 	add	r3,r16,r17
  806994:	d8c00215 	stw	r3,8(sp)
  806998:	91400117 	ldw	r5,4(r18)
  80699c:	10c0010e 	bge	r2,r3,8069a4 <__multiply+0x6c>
  8069a0:	29400044 	addi	r5,r5,1
  8069a4:	08064c80 	call	8064c8 <_Balloc>
  8069a8:	d8c00217 	ldw	r3,8(sp)
  8069ac:	d8800615 	stw	r2,24(sp)
  8069b0:	18eb883a 	add	r21,r3,r3
  8069b4:	ad6b883a 	add	r21,r21,r21
  8069b8:	10c00504 	addi	r3,r2,20
  8069bc:	1d6b883a 	add	r21,r3,r21
  8069c0:	d8c00115 	stw	r3,4(sp)
  8069c4:	dd400315 	stw	r21,12(sp)
  8069c8:	1805883a 	mov	r2,r3
  8069cc:	1d40042e 	bgeu	r3,r21,8069e0 <__multiply+0xa8>
  8069d0:	d8c00317 	ldw	r3,12(sp)
  8069d4:	10000015 	stw	zero,0(r2)
  8069d8:	10800104 	addi	r2,r2,4
  8069dc:	10fffc36 	bltu	r2,r3,8069d0 <__alt_data_end+0xff8069d0>
  8069e0:	8c63883a 	add	r17,r17,r17
  8069e4:	b5800504 	addi	r22,r22,20
  8069e8:	8c63883a 	add	r17,r17,r17
  8069ec:	94800504 	addi	r18,r18,20
  8069f0:	8421883a 	add	r16,r16,r16
  8069f4:	b463883a 	add	r17,r22,r17
  8069f8:	8421883a 	add	r16,r16,r16
  8069fc:	dd800015 	stw	r22,0(sp)
  806a00:	dc800415 	stw	r18,16(sp)
  806a04:	dc400515 	stw	r17,20(sp)
  806a08:	9429883a 	add	r20,r18,r16
  806a0c:	b4404f2e 	bgeu	r22,r17,806b4c <__multiply+0x214>
  806a10:	d8c00017 	ldw	r3,0(sp)
  806a14:	1c800017 	ldw	r18,0(r3)
  806a18:	947fffcc 	andi	r17,r18,65535
  806a1c:	88001e26 	beq	r17,zero,806a98 <__multiply+0x160>
  806a20:	dd800117 	ldw	r22,4(sp)
  806a24:	dd400417 	ldw	r21,16(sp)
  806a28:	0027883a 	mov	r19,zero
  806a2c:	ac800017 	ldw	r18,0(r21)
  806a30:	b4000017 	ldw	r16,0(r22)
  806a34:	880b883a 	mov	r5,r17
  806a38:	913fffcc 	andi	r4,r18,65535
  806a3c:	080ab7c0 	call	80ab7c <__mulsi3>
  806a40:	9008d43a 	srli	r4,r18,16
  806a44:	84bfffcc 	andi	r18,r16,65535
  806a48:	1485883a 	add	r2,r2,r18
  806a4c:	14e5883a 	add	r18,r2,r19
  806a50:	8020d43a 	srli	r16,r16,16
  806a54:	9026d43a 	srli	r19,r18,16
  806a58:	880b883a 	mov	r5,r17
  806a5c:	080ab7c0 	call	80ab7c <__mulsi3>
  806a60:	1405883a 	add	r2,r2,r16
  806a64:	14e1883a 	add	r16,r2,r19
  806a68:	90ffffcc 	andi	r3,r18,65535
  806a6c:	8024943a 	slli	r18,r16,16
  806a70:	ad400104 	addi	r21,r21,4
  806a74:	b005883a 	mov	r2,r22
  806a78:	90c6b03a 	or	r3,r18,r3
  806a7c:	b0c00015 	stw	r3,0(r22)
  806a80:	8026d43a 	srli	r19,r16,16
  806a84:	b5800104 	addi	r22,r22,4
  806a88:	ad3fe836 	bltu	r21,r20,806a2c <__alt_data_end+0xff806a2c>
  806a8c:	d8c00017 	ldw	r3,0(sp)
  806a90:	14c00115 	stw	r19,4(r2)
  806a94:	1c800017 	ldw	r18,0(r3)
  806a98:	9024d43a 	srli	r18,r18,16
  806a9c:	90002226 	beq	r18,zero,806b28 <__multiply+0x1f0>
  806aa0:	d8c00117 	ldw	r3,4(sp)
  806aa4:	dd800417 	ldw	r22,16(sp)
  806aa8:	002f883a 	mov	r23,zero
  806aac:	1f000017 	ldw	fp,0(r3)
  806ab0:	1823883a 	mov	r17,r3
  806ab4:	182b883a 	mov	r21,r3
  806ab8:	e021883a 	mov	r16,fp
  806abc:	00000106 	br	806ac4 <__multiply+0x18c>
  806ac0:	982b883a 	mov	r21,r19
  806ac4:	b100000b 	ldhu	r4,0(r22)
  806ac8:	8020d43a 	srli	r16,r16,16
  806acc:	900b883a 	mov	r5,r18
  806ad0:	080ab7c0 	call	80ab7c <__mulsi3>
  806ad4:	1405883a 	add	r2,r2,r16
  806ad8:	15ef883a 	add	r23,r2,r23
  806adc:	b804943a 	slli	r2,r23,16
  806ae0:	e0ffffcc 	andi	r3,fp,65535
  806ae4:	8c400104 	addi	r17,r17,4
  806ae8:	10c6b03a 	or	r3,r2,r3
  806aec:	88ffff15 	stw	r3,-4(r17)
  806af0:	b5800104 	addi	r22,r22,4
  806af4:	b13fff17 	ldw	r4,-4(r22)
  806af8:	acc00104 	addi	r19,r21,4
  806afc:	900b883a 	mov	r5,r18
  806b00:	2008d43a 	srli	r4,r4,16
  806b04:	9c000017 	ldw	r16,0(r19)
  806b08:	080ab7c0 	call	80ab7c <__mulsi3>
  806b0c:	b806d43a 	srli	r3,r23,16
  806b10:	813fffcc 	andi	r4,r16,65535
  806b14:	1105883a 	add	r2,r2,r4
  806b18:	10f9883a 	add	fp,r2,r3
  806b1c:	e02ed43a 	srli	r23,fp,16
  806b20:	b53fe736 	bltu	r22,r20,806ac0 <__alt_data_end+0xff806ac0>
  806b24:	af000115 	stw	fp,4(r21)
  806b28:	d8c00017 	ldw	r3,0(sp)
  806b2c:	d9000517 	ldw	r4,20(sp)
  806b30:	18c00104 	addi	r3,r3,4
  806b34:	d8c00015 	stw	r3,0(sp)
  806b38:	d8c00117 	ldw	r3,4(sp)
  806b3c:	18c00104 	addi	r3,r3,4
  806b40:	d8c00115 	stw	r3,4(sp)
  806b44:	d8c00017 	ldw	r3,0(sp)
  806b48:	193fb136 	bltu	r3,r4,806a10 <__alt_data_end+0xff806a10>
  806b4c:	d8c00217 	ldw	r3,8(sp)
  806b50:	00c00c0e 	bge	zero,r3,806b84 <__multiply+0x24c>
  806b54:	d8c00317 	ldw	r3,12(sp)
  806b58:	18bfff17 	ldw	r2,-4(r3)
  806b5c:	1d7fff04 	addi	r21,r3,-4
  806b60:	10000326 	beq	r2,zero,806b70 <__multiply+0x238>
  806b64:	00000706 	br	806b84 <__multiply+0x24c>
  806b68:	a8800017 	ldw	r2,0(r21)
  806b6c:	1000051e 	bne	r2,zero,806b84 <__multiply+0x24c>
  806b70:	d8c00217 	ldw	r3,8(sp)
  806b74:	ad7fff04 	addi	r21,r21,-4
  806b78:	18ffffc4 	addi	r3,r3,-1
  806b7c:	d8c00215 	stw	r3,8(sp)
  806b80:	183ff91e 	bne	r3,zero,806b68 <__alt_data_end+0xff806b68>
  806b84:	d8c00617 	ldw	r3,24(sp)
  806b88:	d9000217 	ldw	r4,8(sp)
  806b8c:	1805883a 	mov	r2,r3
  806b90:	19000415 	stw	r4,16(r3)
  806b94:	dfc01017 	ldw	ra,64(sp)
  806b98:	df000f17 	ldw	fp,60(sp)
  806b9c:	ddc00e17 	ldw	r23,56(sp)
  806ba0:	dd800d17 	ldw	r22,52(sp)
  806ba4:	dd400c17 	ldw	r21,48(sp)
  806ba8:	dd000b17 	ldw	r20,44(sp)
  806bac:	dcc00a17 	ldw	r19,40(sp)
  806bb0:	dc800917 	ldw	r18,36(sp)
  806bb4:	dc400817 	ldw	r17,32(sp)
  806bb8:	dc000717 	ldw	r16,28(sp)
  806bbc:	dec01104 	addi	sp,sp,68
  806bc0:	f800283a 	ret

00806bc4 <__pow5mult>:
  806bc4:	defffa04 	addi	sp,sp,-24
  806bc8:	dcc00315 	stw	r19,12(sp)
  806bcc:	dc000015 	stw	r16,0(sp)
  806bd0:	dfc00515 	stw	ra,20(sp)
  806bd4:	dd000415 	stw	r20,16(sp)
  806bd8:	dc800215 	stw	r18,8(sp)
  806bdc:	dc400115 	stw	r17,4(sp)
  806be0:	308000cc 	andi	r2,r6,3
  806be4:	3021883a 	mov	r16,r6
  806be8:	2027883a 	mov	r19,r4
  806bec:	10002f1e 	bne	r2,zero,806cac <__pow5mult+0xe8>
  806bf0:	2825883a 	mov	r18,r5
  806bf4:	8021d0ba 	srai	r16,r16,2
  806bf8:	80001a26 	beq	r16,zero,806c64 <__pow5mult+0xa0>
  806bfc:	9c401217 	ldw	r17,72(r19)
  806c00:	8800061e 	bne	r17,zero,806c1c <__pow5mult+0x58>
  806c04:	00003406 	br	806cd8 <__pow5mult+0x114>
  806c08:	8021d07a 	srai	r16,r16,1
  806c0c:	80001526 	beq	r16,zero,806c64 <__pow5mult+0xa0>
  806c10:	88800017 	ldw	r2,0(r17)
  806c14:	10001c26 	beq	r2,zero,806c88 <__pow5mult+0xc4>
  806c18:	1023883a 	mov	r17,r2
  806c1c:	8080004c 	andi	r2,r16,1
  806c20:	103ff926 	beq	r2,zero,806c08 <__alt_data_end+0xff806c08>
  806c24:	880d883a 	mov	r6,r17
  806c28:	900b883a 	mov	r5,r18
  806c2c:	9809883a 	mov	r4,r19
  806c30:	08069380 	call	806938 <__multiply>
  806c34:	90001b26 	beq	r18,zero,806ca4 <__pow5mult+0xe0>
  806c38:	91000117 	ldw	r4,4(r18)
  806c3c:	98c01317 	ldw	r3,76(r19)
  806c40:	8021d07a 	srai	r16,r16,1
  806c44:	2109883a 	add	r4,r4,r4
  806c48:	2109883a 	add	r4,r4,r4
  806c4c:	1907883a 	add	r3,r3,r4
  806c50:	19000017 	ldw	r4,0(r3)
  806c54:	91000015 	stw	r4,0(r18)
  806c58:	1c800015 	stw	r18,0(r3)
  806c5c:	1025883a 	mov	r18,r2
  806c60:	803feb1e 	bne	r16,zero,806c10 <__alt_data_end+0xff806c10>
  806c64:	9005883a 	mov	r2,r18
  806c68:	dfc00517 	ldw	ra,20(sp)
  806c6c:	dd000417 	ldw	r20,16(sp)
  806c70:	dcc00317 	ldw	r19,12(sp)
  806c74:	dc800217 	ldw	r18,8(sp)
  806c78:	dc400117 	ldw	r17,4(sp)
  806c7c:	dc000017 	ldw	r16,0(sp)
  806c80:	dec00604 	addi	sp,sp,24
  806c84:	f800283a 	ret
  806c88:	880d883a 	mov	r6,r17
  806c8c:	880b883a 	mov	r5,r17
  806c90:	9809883a 	mov	r4,r19
  806c94:	08069380 	call	806938 <__multiply>
  806c98:	88800015 	stw	r2,0(r17)
  806c9c:	10000015 	stw	zero,0(r2)
  806ca0:	003fdd06 	br	806c18 <__alt_data_end+0xff806c18>
  806ca4:	1025883a 	mov	r18,r2
  806ca8:	003fd706 	br	806c08 <__alt_data_end+0xff806c08>
  806cac:	10bfffc4 	addi	r2,r2,-1
  806cb0:	1085883a 	add	r2,r2,r2
  806cb4:	00c02074 	movhi	r3,129
  806cb8:	18ff9804 	addi	r3,r3,-416
  806cbc:	1085883a 	add	r2,r2,r2
  806cc0:	1885883a 	add	r2,r3,r2
  806cc4:	11800017 	ldw	r6,0(r2)
  806cc8:	000f883a 	mov	r7,zero
  806ccc:	08065980 	call	806598 <__multadd>
  806cd0:	1025883a 	mov	r18,r2
  806cd4:	003fc706 	br	806bf4 <__alt_data_end+0xff806bf4>
  806cd8:	05000044 	movi	r20,1
  806cdc:	a00b883a 	mov	r5,r20
  806ce0:	9809883a 	mov	r4,r19
  806ce4:	08064c80 	call	8064c8 <_Balloc>
  806ce8:	1023883a 	mov	r17,r2
  806cec:	00809c44 	movi	r2,625
  806cf0:	88800515 	stw	r2,20(r17)
  806cf4:	8d000415 	stw	r20,16(r17)
  806cf8:	9c401215 	stw	r17,72(r19)
  806cfc:	88000015 	stw	zero,0(r17)
  806d00:	003fc606 	br	806c1c <__alt_data_end+0xff806c1c>

00806d04 <__lshift>:
  806d04:	defff904 	addi	sp,sp,-28
  806d08:	dd400515 	stw	r21,20(sp)
  806d0c:	dcc00315 	stw	r19,12(sp)
  806d10:	302bd17a 	srai	r21,r6,5
  806d14:	2cc00417 	ldw	r19,16(r5)
  806d18:	28800217 	ldw	r2,8(r5)
  806d1c:	dd000415 	stw	r20,16(sp)
  806d20:	ace7883a 	add	r19,r21,r19
  806d24:	dc800215 	stw	r18,8(sp)
  806d28:	dc400115 	stw	r17,4(sp)
  806d2c:	dc000015 	stw	r16,0(sp)
  806d30:	dfc00615 	stw	ra,24(sp)
  806d34:	9c000044 	addi	r16,r19,1
  806d38:	2823883a 	mov	r17,r5
  806d3c:	3029883a 	mov	r20,r6
  806d40:	2025883a 	mov	r18,r4
  806d44:	29400117 	ldw	r5,4(r5)
  806d48:	1400030e 	bge	r2,r16,806d58 <__lshift+0x54>
  806d4c:	1085883a 	add	r2,r2,r2
  806d50:	29400044 	addi	r5,r5,1
  806d54:	143ffd16 	blt	r2,r16,806d4c <__alt_data_end+0xff806d4c>
  806d58:	9009883a 	mov	r4,r18
  806d5c:	08064c80 	call	8064c8 <_Balloc>
  806d60:	10c00504 	addi	r3,r2,20
  806d64:	0540070e 	bge	zero,r21,806d84 <__lshift+0x80>
  806d68:	ad6b883a 	add	r21,r21,r21
  806d6c:	ad6b883a 	add	r21,r21,r21
  806d70:	1809883a 	mov	r4,r3
  806d74:	1d47883a 	add	r3,r3,r21
  806d78:	20000015 	stw	zero,0(r4)
  806d7c:	21000104 	addi	r4,r4,4
  806d80:	193ffd1e 	bne	r3,r4,806d78 <__alt_data_end+0xff806d78>
  806d84:	8a000417 	ldw	r8,16(r17)
  806d88:	89000504 	addi	r4,r17,20
  806d8c:	a18007cc 	andi	r6,r20,31
  806d90:	4211883a 	add	r8,r8,r8
  806d94:	4211883a 	add	r8,r8,r8
  806d98:	2211883a 	add	r8,r4,r8
  806d9c:	30002326 	beq	r6,zero,806e2c <__lshift+0x128>
  806da0:	02400804 	movi	r9,32
  806da4:	4993c83a 	sub	r9,r9,r6
  806da8:	000b883a 	mov	r5,zero
  806dac:	21c00017 	ldw	r7,0(r4)
  806db0:	1815883a 	mov	r10,r3
  806db4:	18c00104 	addi	r3,r3,4
  806db8:	398e983a 	sll	r7,r7,r6
  806dbc:	21000104 	addi	r4,r4,4
  806dc0:	394ab03a 	or	r5,r7,r5
  806dc4:	197fff15 	stw	r5,-4(r3)
  806dc8:	217fff17 	ldw	r5,-4(r4)
  806dcc:	2a4ad83a 	srl	r5,r5,r9
  806dd0:	223ff636 	bltu	r4,r8,806dac <__alt_data_end+0xff806dac>
  806dd4:	51400115 	stw	r5,4(r10)
  806dd8:	28001a1e 	bne	r5,zero,806e44 <__lshift+0x140>
  806ddc:	843fffc4 	addi	r16,r16,-1
  806de0:	14000415 	stw	r16,16(r2)
  806de4:	88000826 	beq	r17,zero,806e08 <__lshift+0x104>
  806de8:	89000117 	ldw	r4,4(r17)
  806dec:	90c01317 	ldw	r3,76(r18)
  806df0:	2109883a 	add	r4,r4,r4
  806df4:	2109883a 	add	r4,r4,r4
  806df8:	1907883a 	add	r3,r3,r4
  806dfc:	19000017 	ldw	r4,0(r3)
  806e00:	89000015 	stw	r4,0(r17)
  806e04:	1c400015 	stw	r17,0(r3)
  806e08:	dfc00617 	ldw	ra,24(sp)
  806e0c:	dd400517 	ldw	r21,20(sp)
  806e10:	dd000417 	ldw	r20,16(sp)
  806e14:	dcc00317 	ldw	r19,12(sp)
  806e18:	dc800217 	ldw	r18,8(sp)
  806e1c:	dc400117 	ldw	r17,4(sp)
  806e20:	dc000017 	ldw	r16,0(sp)
  806e24:	dec00704 	addi	sp,sp,28
  806e28:	f800283a 	ret
  806e2c:	21400017 	ldw	r5,0(r4)
  806e30:	18c00104 	addi	r3,r3,4
  806e34:	21000104 	addi	r4,r4,4
  806e38:	197fff15 	stw	r5,-4(r3)
  806e3c:	223ffb36 	bltu	r4,r8,806e2c <__alt_data_end+0xff806e2c>
  806e40:	003fe606 	br	806ddc <__alt_data_end+0xff806ddc>
  806e44:	9c000084 	addi	r16,r19,2
  806e48:	003fe406 	br	806ddc <__alt_data_end+0xff806ddc>

00806e4c <__mcmp>:
  806e4c:	20800417 	ldw	r2,16(r4)
  806e50:	28c00417 	ldw	r3,16(r5)
  806e54:	10c5c83a 	sub	r2,r2,r3
  806e58:	1000111e 	bne	r2,zero,806ea0 <__mcmp+0x54>
  806e5c:	18c7883a 	add	r3,r3,r3
  806e60:	18c7883a 	add	r3,r3,r3
  806e64:	21000504 	addi	r4,r4,20
  806e68:	29400504 	addi	r5,r5,20
  806e6c:	20c5883a 	add	r2,r4,r3
  806e70:	28cb883a 	add	r5,r5,r3
  806e74:	00000106 	br	806e7c <__mcmp+0x30>
  806e78:	20800a2e 	bgeu	r4,r2,806ea4 <__mcmp+0x58>
  806e7c:	10bfff04 	addi	r2,r2,-4
  806e80:	297fff04 	addi	r5,r5,-4
  806e84:	11800017 	ldw	r6,0(r2)
  806e88:	28c00017 	ldw	r3,0(r5)
  806e8c:	30fffa26 	beq	r6,r3,806e78 <__alt_data_end+0xff806e78>
  806e90:	30c00236 	bltu	r6,r3,806e9c <__mcmp+0x50>
  806e94:	00800044 	movi	r2,1
  806e98:	f800283a 	ret
  806e9c:	00bfffc4 	movi	r2,-1
  806ea0:	f800283a 	ret
  806ea4:	0005883a 	mov	r2,zero
  806ea8:	f800283a 	ret

00806eac <__mdiff>:
  806eac:	28c00417 	ldw	r3,16(r5)
  806eb0:	30800417 	ldw	r2,16(r6)
  806eb4:	defffa04 	addi	sp,sp,-24
  806eb8:	dcc00315 	stw	r19,12(sp)
  806ebc:	dc800215 	stw	r18,8(sp)
  806ec0:	dfc00515 	stw	ra,20(sp)
  806ec4:	dd000415 	stw	r20,16(sp)
  806ec8:	dc400115 	stw	r17,4(sp)
  806ecc:	dc000015 	stw	r16,0(sp)
  806ed0:	1887c83a 	sub	r3,r3,r2
  806ed4:	2825883a 	mov	r18,r5
  806ed8:	3027883a 	mov	r19,r6
  806edc:	1800141e 	bne	r3,zero,806f30 <__mdiff+0x84>
  806ee0:	1085883a 	add	r2,r2,r2
  806ee4:	1085883a 	add	r2,r2,r2
  806ee8:	2a000504 	addi	r8,r5,20
  806eec:	34000504 	addi	r16,r6,20
  806ef0:	4087883a 	add	r3,r8,r2
  806ef4:	8085883a 	add	r2,r16,r2
  806ef8:	00000106 	br	806f00 <__mdiff+0x54>
  806efc:	40c0592e 	bgeu	r8,r3,807064 <__mdiff+0x1b8>
  806f00:	18ffff04 	addi	r3,r3,-4
  806f04:	10bfff04 	addi	r2,r2,-4
  806f08:	19c00017 	ldw	r7,0(r3)
  806f0c:	11400017 	ldw	r5,0(r2)
  806f10:	397ffa26 	beq	r7,r5,806efc <__alt_data_end+0xff806efc>
  806f14:	3940592e 	bgeu	r7,r5,80707c <__mdiff+0x1d0>
  806f18:	9005883a 	mov	r2,r18
  806f1c:	4023883a 	mov	r17,r8
  806f20:	9825883a 	mov	r18,r19
  806f24:	05000044 	movi	r20,1
  806f28:	1027883a 	mov	r19,r2
  806f2c:	00000406 	br	806f40 <__mdiff+0x94>
  806f30:	18005616 	blt	r3,zero,80708c <__mdiff+0x1e0>
  806f34:	34400504 	addi	r17,r6,20
  806f38:	2c000504 	addi	r16,r5,20
  806f3c:	0029883a 	mov	r20,zero
  806f40:	91400117 	ldw	r5,4(r18)
  806f44:	08064c80 	call	8064c8 <_Balloc>
  806f48:	92400417 	ldw	r9,16(r18)
  806f4c:	9b000417 	ldw	r12,16(r19)
  806f50:	12c00504 	addi	r11,r2,20
  806f54:	4a51883a 	add	r8,r9,r9
  806f58:	6319883a 	add	r12,r12,r12
  806f5c:	4211883a 	add	r8,r8,r8
  806f60:	6319883a 	add	r12,r12,r12
  806f64:	15000315 	stw	r20,12(r2)
  806f68:	8211883a 	add	r8,r16,r8
  806f6c:	8b19883a 	add	r12,r17,r12
  806f70:	0007883a 	mov	r3,zero
  806f74:	81400017 	ldw	r5,0(r16)
  806f78:	89c00017 	ldw	r7,0(r17)
  806f7c:	59800104 	addi	r6,r11,4
  806f80:	293fffcc 	andi	r4,r5,65535
  806f84:	20c7883a 	add	r3,r4,r3
  806f88:	393fffcc 	andi	r4,r7,65535
  806f8c:	1909c83a 	sub	r4,r3,r4
  806f90:	280ad43a 	srli	r5,r5,16
  806f94:	380ed43a 	srli	r7,r7,16
  806f98:	2007d43a 	srai	r3,r4,16
  806f9c:	213fffcc 	andi	r4,r4,65535
  806fa0:	29cbc83a 	sub	r5,r5,r7
  806fa4:	28c7883a 	add	r3,r5,r3
  806fa8:	180a943a 	slli	r5,r3,16
  806fac:	8c400104 	addi	r17,r17,4
  806fb0:	84000104 	addi	r16,r16,4
  806fb4:	2908b03a 	or	r4,r5,r4
  806fb8:	59000015 	stw	r4,0(r11)
  806fbc:	1807d43a 	srai	r3,r3,16
  806fc0:	3015883a 	mov	r10,r6
  806fc4:	3017883a 	mov	r11,r6
  806fc8:	8b3fea36 	bltu	r17,r12,806f74 <__alt_data_end+0xff806f74>
  806fcc:	8200162e 	bgeu	r16,r8,807028 <__mdiff+0x17c>
  806fd0:	8017883a 	mov	r11,r16
  806fd4:	59400017 	ldw	r5,0(r11)
  806fd8:	31800104 	addi	r6,r6,4
  806fdc:	5ac00104 	addi	r11,r11,4
  806fe0:	293fffcc 	andi	r4,r5,65535
  806fe4:	20c7883a 	add	r3,r4,r3
  806fe8:	280ed43a 	srli	r7,r5,16
  806fec:	180bd43a 	srai	r5,r3,16
  806ff0:	193fffcc 	andi	r4,r3,65535
  806ff4:	3947883a 	add	r3,r7,r5
  806ff8:	180a943a 	slli	r5,r3,16
  806ffc:	1807d43a 	srai	r3,r3,16
  807000:	2908b03a 	or	r4,r5,r4
  807004:	313fff15 	stw	r4,-4(r6)
  807008:	5a3ff236 	bltu	r11,r8,806fd4 <__alt_data_end+0xff806fd4>
  80700c:	0406303a 	nor	r3,zero,r16
  807010:	1a07883a 	add	r3,r3,r8
  807014:	1806d0ba 	srli	r3,r3,2
  807018:	18c00044 	addi	r3,r3,1
  80701c:	18c7883a 	add	r3,r3,r3
  807020:	18c7883a 	add	r3,r3,r3
  807024:	50d5883a 	add	r10,r10,r3
  807028:	50ffff04 	addi	r3,r10,-4
  80702c:	2000041e 	bne	r4,zero,807040 <__mdiff+0x194>
  807030:	18ffff04 	addi	r3,r3,-4
  807034:	19000017 	ldw	r4,0(r3)
  807038:	4a7fffc4 	addi	r9,r9,-1
  80703c:	203ffc26 	beq	r4,zero,807030 <__alt_data_end+0xff807030>
  807040:	12400415 	stw	r9,16(r2)
  807044:	dfc00517 	ldw	ra,20(sp)
  807048:	dd000417 	ldw	r20,16(sp)
  80704c:	dcc00317 	ldw	r19,12(sp)
  807050:	dc800217 	ldw	r18,8(sp)
  807054:	dc400117 	ldw	r17,4(sp)
  807058:	dc000017 	ldw	r16,0(sp)
  80705c:	dec00604 	addi	sp,sp,24
  807060:	f800283a 	ret
  807064:	000b883a 	mov	r5,zero
  807068:	08064c80 	call	8064c8 <_Balloc>
  80706c:	00c00044 	movi	r3,1
  807070:	10c00415 	stw	r3,16(r2)
  807074:	10000515 	stw	zero,20(r2)
  807078:	003ff206 	br	807044 <__alt_data_end+0xff807044>
  80707c:	8023883a 	mov	r17,r16
  807080:	0029883a 	mov	r20,zero
  807084:	4021883a 	mov	r16,r8
  807088:	003fad06 	br	806f40 <__alt_data_end+0xff806f40>
  80708c:	9005883a 	mov	r2,r18
  807090:	94400504 	addi	r17,r18,20
  807094:	9c000504 	addi	r16,r19,20
  807098:	9825883a 	mov	r18,r19
  80709c:	05000044 	movi	r20,1
  8070a0:	1027883a 	mov	r19,r2
  8070a4:	003fa606 	br	806f40 <__alt_data_end+0xff806f40>

008070a8 <__ulp>:
  8070a8:	295ffc2c 	andhi	r5,r5,32752
  8070ac:	00bf3034 	movhi	r2,64704
  8070b0:	2887883a 	add	r3,r5,r2
  8070b4:	00c0020e 	bge	zero,r3,8070c0 <__ulp+0x18>
  8070b8:	0005883a 	mov	r2,zero
  8070bc:	f800283a 	ret
  8070c0:	00c7c83a 	sub	r3,zero,r3
  8070c4:	1807d53a 	srai	r3,r3,20
  8070c8:	008004c4 	movi	r2,19
  8070cc:	10c00b0e 	bge	r2,r3,8070fc <__ulp+0x54>
  8070d0:	18bffb04 	addi	r2,r3,-20
  8070d4:	01000784 	movi	r4,30
  8070d8:	0007883a 	mov	r3,zero
  8070dc:	20800516 	blt	r4,r2,8070f4 <__ulp+0x4c>
  8070e0:	010007c4 	movi	r4,31
  8070e4:	2089c83a 	sub	r4,r4,r2
  8070e8:	00800044 	movi	r2,1
  8070ec:	1104983a 	sll	r2,r2,r4
  8070f0:	f800283a 	ret
  8070f4:	00800044 	movi	r2,1
  8070f8:	f800283a 	ret
  8070fc:	01400234 	movhi	r5,8
  807100:	28c7d83a 	sra	r3,r5,r3
  807104:	0005883a 	mov	r2,zero
  807108:	f800283a 	ret

0080710c <__b2d>:
  80710c:	defffa04 	addi	sp,sp,-24
  807110:	dc000015 	stw	r16,0(sp)
  807114:	24000417 	ldw	r16,16(r4)
  807118:	dc400115 	stw	r17,4(sp)
  80711c:	24400504 	addi	r17,r4,20
  807120:	8421883a 	add	r16,r16,r16
  807124:	8421883a 	add	r16,r16,r16
  807128:	8c21883a 	add	r16,r17,r16
  80712c:	dc800215 	stw	r18,8(sp)
  807130:	84bfff17 	ldw	r18,-4(r16)
  807134:	dd000415 	stw	r20,16(sp)
  807138:	dcc00315 	stw	r19,12(sp)
  80713c:	9009883a 	mov	r4,r18
  807140:	2829883a 	mov	r20,r5
  807144:	dfc00515 	stw	ra,20(sp)
  807148:	08067e40 	call	8067e4 <__hi0bits>
  80714c:	00c00804 	movi	r3,32
  807150:	1889c83a 	sub	r4,r3,r2
  807154:	a1000015 	stw	r4,0(r20)
  807158:	01000284 	movi	r4,10
  80715c:	84ffff04 	addi	r19,r16,-4
  807160:	20801216 	blt	r4,r2,8071ac <__b2d+0xa0>
  807164:	018002c4 	movi	r6,11
  807168:	308dc83a 	sub	r6,r6,r2
  80716c:	9186d83a 	srl	r3,r18,r6
  807170:	18cffc34 	orhi	r3,r3,16368
  807174:	8cc0212e 	bgeu	r17,r19,8071fc <__b2d+0xf0>
  807178:	813ffe17 	ldw	r4,-8(r16)
  80717c:	218cd83a 	srl	r6,r4,r6
  807180:	10800544 	addi	r2,r2,21
  807184:	9084983a 	sll	r2,r18,r2
  807188:	1184b03a 	or	r2,r2,r6
  80718c:	dfc00517 	ldw	ra,20(sp)
  807190:	dd000417 	ldw	r20,16(sp)
  807194:	dcc00317 	ldw	r19,12(sp)
  807198:	dc800217 	ldw	r18,8(sp)
  80719c:	dc400117 	ldw	r17,4(sp)
  8071a0:	dc000017 	ldw	r16,0(sp)
  8071a4:	dec00604 	addi	sp,sp,24
  8071a8:	f800283a 	ret
  8071ac:	8cc00f2e 	bgeu	r17,r19,8071ec <__b2d+0xe0>
  8071b0:	117ffd44 	addi	r5,r2,-11
  8071b4:	80bffe17 	ldw	r2,-8(r16)
  8071b8:	28000e26 	beq	r5,zero,8071f4 <__b2d+0xe8>
  8071bc:	1949c83a 	sub	r4,r3,r5
  8071c0:	9164983a 	sll	r18,r18,r5
  8071c4:	1106d83a 	srl	r3,r2,r4
  8071c8:	81bffe04 	addi	r6,r16,-8
  8071cc:	948ffc34 	orhi	r18,r18,16368
  8071d0:	90c6b03a 	or	r3,r18,r3
  8071d4:	89800e2e 	bgeu	r17,r6,807210 <__b2d+0x104>
  8071d8:	81bffd17 	ldw	r6,-12(r16)
  8071dc:	1144983a 	sll	r2,r2,r5
  8071e0:	310ad83a 	srl	r5,r6,r4
  8071e4:	2884b03a 	or	r2,r5,r2
  8071e8:	003fe806 	br	80718c <__alt_data_end+0xff80718c>
  8071ec:	10bffd44 	addi	r2,r2,-11
  8071f0:	1000041e 	bne	r2,zero,807204 <__b2d+0xf8>
  8071f4:	90cffc34 	orhi	r3,r18,16368
  8071f8:	003fe406 	br	80718c <__alt_data_end+0xff80718c>
  8071fc:	000d883a 	mov	r6,zero
  807200:	003fdf06 	br	807180 <__alt_data_end+0xff807180>
  807204:	90a4983a 	sll	r18,r18,r2
  807208:	0005883a 	mov	r2,zero
  80720c:	003ff906 	br	8071f4 <__alt_data_end+0xff8071f4>
  807210:	1144983a 	sll	r2,r2,r5
  807214:	003fdd06 	br	80718c <__alt_data_end+0xff80718c>

00807218 <__d2b>:
  807218:	defff804 	addi	sp,sp,-32
  80721c:	dc000215 	stw	r16,8(sp)
  807220:	3021883a 	mov	r16,r6
  807224:	dc400315 	stw	r17,12(sp)
  807228:	8022907a 	slli	r17,r16,1
  80722c:	dd000615 	stw	r20,24(sp)
  807230:	2829883a 	mov	r20,r5
  807234:	01400044 	movi	r5,1
  807238:	dcc00515 	stw	r19,20(sp)
  80723c:	dc800415 	stw	r18,16(sp)
  807240:	dfc00715 	stw	ra,28(sp)
  807244:	3825883a 	mov	r18,r7
  807248:	8822d57a 	srli	r17,r17,21
  80724c:	08064c80 	call	8064c8 <_Balloc>
  807250:	1027883a 	mov	r19,r2
  807254:	00800434 	movhi	r2,16
  807258:	10bfffc4 	addi	r2,r2,-1
  80725c:	808c703a 	and	r6,r16,r2
  807260:	88000126 	beq	r17,zero,807268 <__d2b+0x50>
  807264:	31800434 	orhi	r6,r6,16
  807268:	d9800015 	stw	r6,0(sp)
  80726c:	a0002426 	beq	r20,zero,807300 <__d2b+0xe8>
  807270:	d9000104 	addi	r4,sp,4
  807274:	dd000115 	stw	r20,4(sp)
  807278:	080684c0 	call	80684c <__lo0bits>
  80727c:	d8c00017 	ldw	r3,0(sp)
  807280:	10002f1e 	bne	r2,zero,807340 <__d2b+0x128>
  807284:	d9000117 	ldw	r4,4(sp)
  807288:	99000515 	stw	r4,20(r19)
  80728c:	1821003a 	cmpeq	r16,r3,zero
  807290:	01000084 	movi	r4,2
  807294:	2421c83a 	sub	r16,r4,r16
  807298:	98c00615 	stw	r3,24(r19)
  80729c:	9c000415 	stw	r16,16(r19)
  8072a0:	88001f1e 	bne	r17,zero,807320 <__d2b+0x108>
  8072a4:	10bef384 	addi	r2,r2,-1074
  8072a8:	90800015 	stw	r2,0(r18)
  8072ac:	00900034 	movhi	r2,16384
  8072b0:	10bfffc4 	addi	r2,r2,-1
  8072b4:	8085883a 	add	r2,r16,r2
  8072b8:	1085883a 	add	r2,r2,r2
  8072bc:	1085883a 	add	r2,r2,r2
  8072c0:	9885883a 	add	r2,r19,r2
  8072c4:	11000517 	ldw	r4,20(r2)
  8072c8:	8020917a 	slli	r16,r16,5
  8072cc:	08067e40 	call	8067e4 <__hi0bits>
  8072d0:	d8c00817 	ldw	r3,32(sp)
  8072d4:	8085c83a 	sub	r2,r16,r2
  8072d8:	18800015 	stw	r2,0(r3)
  8072dc:	9805883a 	mov	r2,r19
  8072e0:	dfc00717 	ldw	ra,28(sp)
  8072e4:	dd000617 	ldw	r20,24(sp)
  8072e8:	dcc00517 	ldw	r19,20(sp)
  8072ec:	dc800417 	ldw	r18,16(sp)
  8072f0:	dc400317 	ldw	r17,12(sp)
  8072f4:	dc000217 	ldw	r16,8(sp)
  8072f8:	dec00804 	addi	sp,sp,32
  8072fc:	f800283a 	ret
  807300:	d809883a 	mov	r4,sp
  807304:	080684c0 	call	80684c <__lo0bits>
  807308:	d8c00017 	ldw	r3,0(sp)
  80730c:	04000044 	movi	r16,1
  807310:	9c000415 	stw	r16,16(r19)
  807314:	98c00515 	stw	r3,20(r19)
  807318:	10800804 	addi	r2,r2,32
  80731c:	883fe126 	beq	r17,zero,8072a4 <__alt_data_end+0xff8072a4>
  807320:	00c00d44 	movi	r3,53
  807324:	8c7ef344 	addi	r17,r17,-1075
  807328:	88a3883a 	add	r17,r17,r2
  80732c:	1885c83a 	sub	r2,r3,r2
  807330:	d8c00817 	ldw	r3,32(sp)
  807334:	94400015 	stw	r17,0(r18)
  807338:	18800015 	stw	r2,0(r3)
  80733c:	003fe706 	br	8072dc <__alt_data_end+0xff8072dc>
  807340:	01000804 	movi	r4,32
  807344:	2089c83a 	sub	r4,r4,r2
  807348:	1908983a 	sll	r4,r3,r4
  80734c:	d9400117 	ldw	r5,4(sp)
  807350:	1886d83a 	srl	r3,r3,r2
  807354:	2148b03a 	or	r4,r4,r5
  807358:	99000515 	stw	r4,20(r19)
  80735c:	d8c00015 	stw	r3,0(sp)
  807360:	003fca06 	br	80728c <__alt_data_end+0xff80728c>

00807364 <__ratio>:
  807364:	defff904 	addi	sp,sp,-28
  807368:	dc400315 	stw	r17,12(sp)
  80736c:	2823883a 	mov	r17,r5
  807370:	d9400104 	addi	r5,sp,4
  807374:	dfc00615 	stw	ra,24(sp)
  807378:	dcc00515 	stw	r19,20(sp)
  80737c:	dc800415 	stw	r18,16(sp)
  807380:	2027883a 	mov	r19,r4
  807384:	dc000215 	stw	r16,8(sp)
  807388:	080710c0 	call	80710c <__b2d>
  80738c:	d80b883a 	mov	r5,sp
  807390:	8809883a 	mov	r4,r17
  807394:	1025883a 	mov	r18,r2
  807398:	1821883a 	mov	r16,r3
  80739c:	080710c0 	call	80710c <__b2d>
  8073a0:	8a000417 	ldw	r8,16(r17)
  8073a4:	99000417 	ldw	r4,16(r19)
  8073a8:	d9400117 	ldw	r5,4(sp)
  8073ac:	2209c83a 	sub	r4,r4,r8
  8073b0:	2010917a 	slli	r8,r4,5
  8073b4:	d9000017 	ldw	r4,0(sp)
  8073b8:	2909c83a 	sub	r4,r5,r4
  8073bc:	4109883a 	add	r4,r8,r4
  8073c0:	01000e0e 	bge	zero,r4,8073fc <__ratio+0x98>
  8073c4:	2008953a 	slli	r4,r4,20
  8073c8:	2421883a 	add	r16,r4,r16
  8073cc:	100d883a 	mov	r6,r2
  8073d0:	180f883a 	mov	r7,r3
  8073d4:	9009883a 	mov	r4,r18
  8073d8:	800b883a 	mov	r5,r16
  8073dc:	080b4500 	call	80b450 <__divdf3>
  8073e0:	dfc00617 	ldw	ra,24(sp)
  8073e4:	dcc00517 	ldw	r19,20(sp)
  8073e8:	dc800417 	ldw	r18,16(sp)
  8073ec:	dc400317 	ldw	r17,12(sp)
  8073f0:	dc000217 	ldw	r16,8(sp)
  8073f4:	dec00704 	addi	sp,sp,28
  8073f8:	f800283a 	ret
  8073fc:	2008953a 	slli	r4,r4,20
  807400:	1907c83a 	sub	r3,r3,r4
  807404:	003ff106 	br	8073cc <__alt_data_end+0xff8073cc>

00807408 <_mprec_log10>:
  807408:	defffe04 	addi	sp,sp,-8
  80740c:	dc000015 	stw	r16,0(sp)
  807410:	dfc00115 	stw	ra,4(sp)
  807414:	008005c4 	movi	r2,23
  807418:	2021883a 	mov	r16,r4
  80741c:	11000d0e 	bge	r2,r4,807454 <_mprec_log10+0x4c>
  807420:	0005883a 	mov	r2,zero
  807424:	00cffc34 	movhi	r3,16368
  807428:	843fffc4 	addi	r16,r16,-1
  80742c:	000d883a 	mov	r6,zero
  807430:	01d00934 	movhi	r7,16420
  807434:	1009883a 	mov	r4,r2
  807438:	180b883a 	mov	r5,r3
  80743c:	080c0780 	call	80c078 <__muldf3>
  807440:	803ff91e 	bne	r16,zero,807428 <__alt_data_end+0xff807428>
  807444:	dfc00117 	ldw	ra,4(sp)
  807448:	dc000017 	ldw	r16,0(sp)
  80744c:	dec00204 	addi	sp,sp,8
  807450:	f800283a 	ret
  807454:	202090fa 	slli	r16,r4,3
  807458:	00802074 	movhi	r2,129
  80745c:	10bfaf04 	addi	r2,r2,-324
  807460:	1421883a 	add	r16,r2,r16
  807464:	80800017 	ldw	r2,0(r16)
  807468:	80c00117 	ldw	r3,4(r16)
  80746c:	dfc00117 	ldw	ra,4(sp)
  807470:	dc000017 	ldw	r16,0(sp)
  807474:	dec00204 	addi	sp,sp,8
  807478:	f800283a 	ret

0080747c <__copybits>:
  80747c:	297fffc4 	addi	r5,r5,-1
  807480:	280fd17a 	srai	r7,r5,5
  807484:	30c00417 	ldw	r3,16(r6)
  807488:	30800504 	addi	r2,r6,20
  80748c:	39c00044 	addi	r7,r7,1
  807490:	18c7883a 	add	r3,r3,r3
  807494:	39cf883a 	add	r7,r7,r7
  807498:	18c7883a 	add	r3,r3,r3
  80749c:	39cf883a 	add	r7,r7,r7
  8074a0:	10c7883a 	add	r3,r2,r3
  8074a4:	21cf883a 	add	r7,r4,r7
  8074a8:	10c00d2e 	bgeu	r2,r3,8074e0 <__copybits+0x64>
  8074ac:	200b883a 	mov	r5,r4
  8074b0:	12000017 	ldw	r8,0(r2)
  8074b4:	29400104 	addi	r5,r5,4
  8074b8:	10800104 	addi	r2,r2,4
  8074bc:	2a3fff15 	stw	r8,-4(r5)
  8074c0:	10fffb36 	bltu	r2,r3,8074b0 <__alt_data_end+0xff8074b0>
  8074c4:	1985c83a 	sub	r2,r3,r6
  8074c8:	10bffac4 	addi	r2,r2,-21
  8074cc:	1004d0ba 	srli	r2,r2,2
  8074d0:	10800044 	addi	r2,r2,1
  8074d4:	1085883a 	add	r2,r2,r2
  8074d8:	1085883a 	add	r2,r2,r2
  8074dc:	2089883a 	add	r4,r4,r2
  8074e0:	21c0032e 	bgeu	r4,r7,8074f0 <__copybits+0x74>
  8074e4:	20000015 	stw	zero,0(r4)
  8074e8:	21000104 	addi	r4,r4,4
  8074ec:	21fffd36 	bltu	r4,r7,8074e4 <__alt_data_end+0xff8074e4>
  8074f0:	f800283a 	ret

008074f4 <__any_on>:
  8074f4:	20c00417 	ldw	r3,16(r4)
  8074f8:	2805d17a 	srai	r2,r5,5
  8074fc:	21000504 	addi	r4,r4,20
  807500:	18800d0e 	bge	r3,r2,807538 <__any_on+0x44>
  807504:	18c7883a 	add	r3,r3,r3
  807508:	18c7883a 	add	r3,r3,r3
  80750c:	20c7883a 	add	r3,r4,r3
  807510:	20c0192e 	bgeu	r4,r3,807578 <__any_on+0x84>
  807514:	18bfff17 	ldw	r2,-4(r3)
  807518:	18ffff04 	addi	r3,r3,-4
  80751c:	1000041e 	bne	r2,zero,807530 <__any_on+0x3c>
  807520:	20c0142e 	bgeu	r4,r3,807574 <__any_on+0x80>
  807524:	18ffff04 	addi	r3,r3,-4
  807528:	19400017 	ldw	r5,0(r3)
  80752c:	283ffc26 	beq	r5,zero,807520 <__alt_data_end+0xff807520>
  807530:	00800044 	movi	r2,1
  807534:	f800283a 	ret
  807538:	10c00a0e 	bge	r2,r3,807564 <__any_on+0x70>
  80753c:	1085883a 	add	r2,r2,r2
  807540:	1085883a 	add	r2,r2,r2
  807544:	294007cc 	andi	r5,r5,31
  807548:	2087883a 	add	r3,r4,r2
  80754c:	283ff026 	beq	r5,zero,807510 <__alt_data_end+0xff807510>
  807550:	19800017 	ldw	r6,0(r3)
  807554:	3144d83a 	srl	r2,r6,r5
  807558:	114a983a 	sll	r5,r2,r5
  80755c:	317ff41e 	bne	r6,r5,807530 <__alt_data_end+0xff807530>
  807560:	003feb06 	br	807510 <__alt_data_end+0xff807510>
  807564:	1085883a 	add	r2,r2,r2
  807568:	1085883a 	add	r2,r2,r2
  80756c:	2087883a 	add	r3,r4,r2
  807570:	003fe706 	br	807510 <__alt_data_end+0xff807510>
  807574:	f800283a 	ret
  807578:	0005883a 	mov	r2,zero
  80757c:	f800283a 	ret

00807580 <_realloc_r>:
  807580:	defff604 	addi	sp,sp,-40
  807584:	dc400115 	stw	r17,4(sp)
  807588:	dfc00915 	stw	ra,36(sp)
  80758c:	df000815 	stw	fp,32(sp)
  807590:	ddc00715 	stw	r23,28(sp)
  807594:	dd800615 	stw	r22,24(sp)
  807598:	dd400515 	stw	r21,20(sp)
  80759c:	dd000415 	stw	r20,16(sp)
  8075a0:	dcc00315 	stw	r19,12(sp)
  8075a4:	dc800215 	stw	r18,8(sp)
  8075a8:	dc000015 	stw	r16,0(sp)
  8075ac:	3023883a 	mov	r17,r6
  8075b0:	2800b626 	beq	r5,zero,80788c <_realloc_r+0x30c>
  8075b4:	2829883a 	mov	r20,r5
  8075b8:	2025883a 	mov	r18,r4
  8075bc:	080d9cc0 	call	80d9cc <__malloc_lock>
  8075c0:	a0ffff17 	ldw	r3,-4(r20)
  8075c4:	043fff04 	movi	r16,-4
  8075c8:	888002c4 	addi	r2,r17,11
  8075cc:	01000584 	movi	r4,22
  8075d0:	a57ffe04 	addi	r21,r20,-8
  8075d4:	1c20703a 	and	r16,r3,r16
  8075d8:	2080332e 	bgeu	r4,r2,8076a8 <_realloc_r+0x128>
  8075dc:	05bffe04 	movi	r22,-8
  8075e0:	15ac703a 	and	r22,r2,r22
  8075e4:	b005883a 	mov	r2,r22
  8075e8:	b0005716 	blt	r22,zero,807748 <_realloc_r+0x1c8>
  8075ec:	b4405636 	bltu	r22,r17,807748 <_realloc_r+0x1c8>
  8075f0:	8080300e 	bge	r16,r2,8076b4 <_realloc_r+0x134>
  8075f4:	07002074 	movhi	fp,129
  8075f8:	e7011b04 	addi	fp,fp,1132
  8075fc:	e2000217 	ldw	r8,8(fp)
  807600:	ac09883a 	add	r4,r21,r16
  807604:	22006126 	beq	r4,r8,80778c <_realloc_r+0x20c>
  807608:	22400117 	ldw	r9,4(r4)
  80760c:	01ffff84 	movi	r7,-2
  807610:	49ce703a 	and	r7,r9,r7
  807614:	21cf883a 	add	r7,r4,r7
  807618:	39800117 	ldw	r6,4(r7)
  80761c:	3180004c 	andi	r6,r6,1
  807620:	30003e26 	beq	r6,zero,80771c <_realloc_r+0x19c>
  807624:	18c0004c 	andi	r3,r3,1
  807628:	18008126 	beq	r3,zero,807830 <_realloc_r+0x2b0>
  80762c:	880b883a 	mov	r5,r17
  807630:	9009883a 	mov	r4,r18
  807634:	080580c0 	call	80580c <_malloc_r>
  807638:	1023883a 	mov	r17,r2
  80763c:	10011e26 	beq	r2,zero,807ab8 <_realloc_r+0x538>
  807640:	a0ffff17 	ldw	r3,-4(r20)
  807644:	113ffe04 	addi	r4,r2,-8
  807648:	00bfff84 	movi	r2,-2
  80764c:	1884703a 	and	r2,r3,r2
  807650:	a885883a 	add	r2,r21,r2
  807654:	2080ee26 	beq	r4,r2,807a10 <_realloc_r+0x490>
  807658:	81bfff04 	addi	r6,r16,-4
  80765c:	00800904 	movi	r2,36
  807660:	1180b836 	bltu	r2,r6,807944 <_realloc_r+0x3c4>
  807664:	00c004c4 	movi	r3,19
  807668:	19809536 	bltu	r3,r6,8078c0 <_realloc_r+0x340>
  80766c:	8805883a 	mov	r2,r17
  807670:	a007883a 	mov	r3,r20
  807674:	19000017 	ldw	r4,0(r3)
  807678:	11000015 	stw	r4,0(r2)
  80767c:	19000117 	ldw	r4,4(r3)
  807680:	11000115 	stw	r4,4(r2)
  807684:	18c00217 	ldw	r3,8(r3)
  807688:	10c00215 	stw	r3,8(r2)
  80768c:	a00b883a 	mov	r5,r20
  807690:	9009883a 	mov	r4,r18
  807694:	0804c140 	call	804c14 <_free_r>
  807698:	9009883a 	mov	r4,r18
  80769c:	080d9f00 	call	80d9f0 <__malloc_unlock>
  8076a0:	8805883a 	mov	r2,r17
  8076a4:	00001106 	br	8076ec <_realloc_r+0x16c>
  8076a8:	00800404 	movi	r2,16
  8076ac:	102d883a 	mov	r22,r2
  8076b0:	003fce06 	br	8075ec <__alt_data_end+0xff8075ec>
  8076b4:	a023883a 	mov	r17,r20
  8076b8:	858fc83a 	sub	r7,r16,r22
  8076bc:	008003c4 	movi	r2,15
  8076c0:	18c0004c 	andi	r3,r3,1
  8076c4:	11c02436 	bltu	r2,r7,807758 <_realloc_r+0x1d8>
  8076c8:	1c06b03a 	or	r3,r3,r16
  8076cc:	a8c00115 	stw	r3,4(r21)
  8076d0:	ac21883a 	add	r16,r21,r16
  8076d4:	80800117 	ldw	r2,4(r16)
  8076d8:	10800054 	ori	r2,r2,1
  8076dc:	80800115 	stw	r2,4(r16)
  8076e0:	9009883a 	mov	r4,r18
  8076e4:	080d9f00 	call	80d9f0 <__malloc_unlock>
  8076e8:	8805883a 	mov	r2,r17
  8076ec:	dfc00917 	ldw	ra,36(sp)
  8076f0:	df000817 	ldw	fp,32(sp)
  8076f4:	ddc00717 	ldw	r23,28(sp)
  8076f8:	dd800617 	ldw	r22,24(sp)
  8076fc:	dd400517 	ldw	r21,20(sp)
  807700:	dd000417 	ldw	r20,16(sp)
  807704:	dcc00317 	ldw	r19,12(sp)
  807708:	dc800217 	ldw	r18,8(sp)
  80770c:	dc400117 	ldw	r17,4(sp)
  807710:	dc000017 	ldw	r16,0(sp)
  807714:	dec00a04 	addi	sp,sp,40
  807718:	f800283a 	ret
  80771c:	017fff04 	movi	r5,-4
  807720:	494a703a 	and	r5,r9,r5
  807724:	814d883a 	add	r6,r16,r5
  807728:	30801e16 	blt	r6,r2,8077a4 <_realloc_r+0x224>
  80772c:	20800317 	ldw	r2,12(r4)
  807730:	21000217 	ldw	r4,8(r4)
  807734:	a023883a 	mov	r17,r20
  807738:	3021883a 	mov	r16,r6
  80773c:	20800315 	stw	r2,12(r4)
  807740:	11000215 	stw	r4,8(r2)
  807744:	003fdc06 	br	8076b8 <__alt_data_end+0xff8076b8>
  807748:	00800304 	movi	r2,12
  80774c:	90800015 	stw	r2,0(r18)
  807750:	0005883a 	mov	r2,zero
  807754:	003fe506 	br	8076ec <__alt_data_end+0xff8076ec>
  807758:	1d86b03a 	or	r3,r3,r22
  80775c:	a8c00115 	stw	r3,4(r21)
  807760:	ad8b883a 	add	r5,r21,r22
  807764:	38c00054 	ori	r3,r7,1
  807768:	28c00115 	stw	r3,4(r5)
  80776c:	29cf883a 	add	r7,r5,r7
  807770:	38c00117 	ldw	r3,4(r7)
  807774:	29400204 	addi	r5,r5,8
  807778:	9009883a 	mov	r4,r18
  80777c:	18800054 	ori	r2,r3,1
  807780:	38800115 	stw	r2,4(r7)
  807784:	0804c140 	call	804c14 <_free_r>
  807788:	003fd506 	br	8076e0 <__alt_data_end+0xff8076e0>
  80778c:	21c00117 	ldw	r7,4(r4)
  807790:	017fff04 	movi	r5,-4
  807794:	b1800404 	addi	r6,r22,16
  807798:	394a703a 	and	r5,r7,r5
  80779c:	814f883a 	add	r7,r16,r5
  8077a0:	39805b0e 	bge	r7,r6,807910 <_realloc_r+0x390>
  8077a4:	18c0004c 	andi	r3,r3,1
  8077a8:	183fa01e 	bne	r3,zero,80762c <__alt_data_end+0xff80762c>
  8077ac:	a4fffe17 	ldw	r19,-8(r20)
  8077b0:	00ffff04 	movi	r3,-4
  8077b4:	ace7c83a 	sub	r19,r21,r19
  8077b8:	99800117 	ldw	r6,4(r19)
  8077bc:	30c6703a 	and	r3,r6,r3
  8077c0:	20002026 	beq	r4,zero,807844 <_realloc_r+0x2c4>
  8077c4:	80ef883a 	add	r23,r16,r3
  8077c8:	b96f883a 	add	r23,r23,r5
  8077cc:	22006126 	beq	r4,r8,807954 <_realloc_r+0x3d4>
  8077d0:	b8801c16 	blt	r23,r2,807844 <_realloc_r+0x2c4>
  8077d4:	20800317 	ldw	r2,12(r4)
  8077d8:	20c00217 	ldw	r3,8(r4)
  8077dc:	81bfff04 	addi	r6,r16,-4
  8077e0:	01000904 	movi	r4,36
  8077e4:	18800315 	stw	r2,12(r3)
  8077e8:	10c00215 	stw	r3,8(r2)
  8077ec:	98c00217 	ldw	r3,8(r19)
  8077f0:	98800317 	ldw	r2,12(r19)
  8077f4:	9c400204 	addi	r17,r19,8
  8077f8:	18800315 	stw	r2,12(r3)
  8077fc:	10c00215 	stw	r3,8(r2)
  807800:	21801b36 	bltu	r4,r6,807870 <_realloc_r+0x2f0>
  807804:	008004c4 	movi	r2,19
  807808:	1180362e 	bgeu	r2,r6,8078e4 <_realloc_r+0x364>
  80780c:	a0800017 	ldw	r2,0(r20)
  807810:	98800215 	stw	r2,8(r19)
  807814:	a0800117 	ldw	r2,4(r20)
  807818:	98800315 	stw	r2,12(r19)
  80781c:	008006c4 	movi	r2,27
  807820:	11808136 	bltu	r2,r6,807a28 <_realloc_r+0x4a8>
  807824:	98800404 	addi	r2,r19,16
  807828:	a5000204 	addi	r20,r20,8
  80782c:	00002e06 	br	8078e8 <_realloc_r+0x368>
  807830:	a4fffe17 	ldw	r19,-8(r20)
  807834:	00ffff04 	movi	r3,-4
  807838:	ace7c83a 	sub	r19,r21,r19
  80783c:	99000117 	ldw	r4,4(r19)
  807840:	20c6703a 	and	r3,r4,r3
  807844:	983f7926 	beq	r19,zero,80762c <__alt_data_end+0xff80762c>
  807848:	80ef883a 	add	r23,r16,r3
  80784c:	b8bf7716 	blt	r23,r2,80762c <__alt_data_end+0xff80762c>
  807850:	98800317 	ldw	r2,12(r19)
  807854:	98c00217 	ldw	r3,8(r19)
  807858:	81bfff04 	addi	r6,r16,-4
  80785c:	01000904 	movi	r4,36
  807860:	18800315 	stw	r2,12(r3)
  807864:	10c00215 	stw	r3,8(r2)
  807868:	9c400204 	addi	r17,r19,8
  80786c:	21bfe52e 	bgeu	r4,r6,807804 <__alt_data_end+0xff807804>
  807870:	a00b883a 	mov	r5,r20
  807874:	8809883a 	mov	r4,r17
  807878:	08062440 	call	806244 <memmove>
  80787c:	98c00117 	ldw	r3,4(r19)
  807880:	b821883a 	mov	r16,r23
  807884:	982b883a 	mov	r21,r19
  807888:	003f8b06 	br	8076b8 <__alt_data_end+0xff8076b8>
  80788c:	300b883a 	mov	r5,r6
  807890:	dfc00917 	ldw	ra,36(sp)
  807894:	df000817 	ldw	fp,32(sp)
  807898:	ddc00717 	ldw	r23,28(sp)
  80789c:	dd800617 	ldw	r22,24(sp)
  8078a0:	dd400517 	ldw	r21,20(sp)
  8078a4:	dd000417 	ldw	r20,16(sp)
  8078a8:	dcc00317 	ldw	r19,12(sp)
  8078ac:	dc800217 	ldw	r18,8(sp)
  8078b0:	dc400117 	ldw	r17,4(sp)
  8078b4:	dc000017 	ldw	r16,0(sp)
  8078b8:	dec00a04 	addi	sp,sp,40
  8078bc:	080580c1 	jmpi	80580c <_malloc_r>
  8078c0:	a0c00017 	ldw	r3,0(r20)
  8078c4:	88c00015 	stw	r3,0(r17)
  8078c8:	a0c00117 	ldw	r3,4(r20)
  8078cc:	88c00115 	stw	r3,4(r17)
  8078d0:	00c006c4 	movi	r3,27
  8078d4:	19804636 	bltu	r3,r6,8079f0 <_realloc_r+0x470>
  8078d8:	88800204 	addi	r2,r17,8
  8078dc:	a0c00204 	addi	r3,r20,8
  8078e0:	003f6406 	br	807674 <__alt_data_end+0xff807674>
  8078e4:	8805883a 	mov	r2,r17
  8078e8:	a0c00017 	ldw	r3,0(r20)
  8078ec:	b821883a 	mov	r16,r23
  8078f0:	982b883a 	mov	r21,r19
  8078f4:	10c00015 	stw	r3,0(r2)
  8078f8:	a0c00117 	ldw	r3,4(r20)
  8078fc:	10c00115 	stw	r3,4(r2)
  807900:	a0c00217 	ldw	r3,8(r20)
  807904:	10c00215 	stw	r3,8(r2)
  807908:	98c00117 	ldw	r3,4(r19)
  80790c:	003f6a06 	br	8076b8 <__alt_data_end+0xff8076b8>
  807910:	adab883a 	add	r21,r21,r22
  807914:	3d85c83a 	sub	r2,r7,r22
  807918:	e5400215 	stw	r21,8(fp)
  80791c:	10800054 	ori	r2,r2,1
  807920:	a8800115 	stw	r2,4(r21)
  807924:	a0bfff17 	ldw	r2,-4(r20)
  807928:	9009883a 	mov	r4,r18
  80792c:	1080004c 	andi	r2,r2,1
  807930:	1584b03a 	or	r2,r2,r22
  807934:	a0bfff15 	stw	r2,-4(r20)
  807938:	080d9f00 	call	80d9f0 <__malloc_unlock>
  80793c:	a005883a 	mov	r2,r20
  807940:	003f6a06 	br	8076ec <__alt_data_end+0xff8076ec>
  807944:	a00b883a 	mov	r5,r20
  807948:	8809883a 	mov	r4,r17
  80794c:	08062440 	call	806244 <memmove>
  807950:	003f4e06 	br	80768c <__alt_data_end+0xff80768c>
  807954:	b1000404 	addi	r4,r22,16
  807958:	b93fba16 	blt	r23,r4,807844 <__alt_data_end+0xff807844>
  80795c:	98800317 	ldw	r2,12(r19)
  807960:	98c00217 	ldw	r3,8(r19)
  807964:	81bfff04 	addi	r6,r16,-4
  807968:	01000904 	movi	r4,36
  80796c:	18800315 	stw	r2,12(r3)
  807970:	10c00215 	stw	r3,8(r2)
  807974:	9c400204 	addi	r17,r19,8
  807978:	21804336 	bltu	r4,r6,807a88 <_realloc_r+0x508>
  80797c:	008004c4 	movi	r2,19
  807980:	11803f2e 	bgeu	r2,r6,807a80 <_realloc_r+0x500>
  807984:	a0800017 	ldw	r2,0(r20)
  807988:	98800215 	stw	r2,8(r19)
  80798c:	a0800117 	ldw	r2,4(r20)
  807990:	98800315 	stw	r2,12(r19)
  807994:	008006c4 	movi	r2,27
  807998:	11803f36 	bltu	r2,r6,807a98 <_realloc_r+0x518>
  80799c:	98800404 	addi	r2,r19,16
  8079a0:	a5000204 	addi	r20,r20,8
  8079a4:	a0c00017 	ldw	r3,0(r20)
  8079a8:	10c00015 	stw	r3,0(r2)
  8079ac:	a0c00117 	ldw	r3,4(r20)
  8079b0:	10c00115 	stw	r3,4(r2)
  8079b4:	a0c00217 	ldw	r3,8(r20)
  8079b8:	10c00215 	stw	r3,8(r2)
  8079bc:	9d87883a 	add	r3,r19,r22
  8079c0:	bd85c83a 	sub	r2,r23,r22
  8079c4:	e0c00215 	stw	r3,8(fp)
  8079c8:	10800054 	ori	r2,r2,1
  8079cc:	18800115 	stw	r2,4(r3)
  8079d0:	98800117 	ldw	r2,4(r19)
  8079d4:	9009883a 	mov	r4,r18
  8079d8:	1080004c 	andi	r2,r2,1
  8079dc:	1584b03a 	or	r2,r2,r22
  8079e0:	98800115 	stw	r2,4(r19)
  8079e4:	080d9f00 	call	80d9f0 <__malloc_unlock>
  8079e8:	8805883a 	mov	r2,r17
  8079ec:	003f3f06 	br	8076ec <__alt_data_end+0xff8076ec>
  8079f0:	a0c00217 	ldw	r3,8(r20)
  8079f4:	88c00215 	stw	r3,8(r17)
  8079f8:	a0c00317 	ldw	r3,12(r20)
  8079fc:	88c00315 	stw	r3,12(r17)
  807a00:	30801126 	beq	r6,r2,807a48 <_realloc_r+0x4c8>
  807a04:	88800404 	addi	r2,r17,16
  807a08:	a0c00404 	addi	r3,r20,16
  807a0c:	003f1906 	br	807674 <__alt_data_end+0xff807674>
  807a10:	893fff17 	ldw	r4,-4(r17)
  807a14:	00bfff04 	movi	r2,-4
  807a18:	a023883a 	mov	r17,r20
  807a1c:	2084703a 	and	r2,r4,r2
  807a20:	80a1883a 	add	r16,r16,r2
  807a24:	003f2406 	br	8076b8 <__alt_data_end+0xff8076b8>
  807a28:	a0800217 	ldw	r2,8(r20)
  807a2c:	98800415 	stw	r2,16(r19)
  807a30:	a0800317 	ldw	r2,12(r20)
  807a34:	98800515 	stw	r2,20(r19)
  807a38:	31000a26 	beq	r6,r4,807a64 <_realloc_r+0x4e4>
  807a3c:	98800604 	addi	r2,r19,24
  807a40:	a5000404 	addi	r20,r20,16
  807a44:	003fa806 	br	8078e8 <__alt_data_end+0xff8078e8>
  807a48:	a1000417 	ldw	r4,16(r20)
  807a4c:	88800604 	addi	r2,r17,24
  807a50:	a0c00604 	addi	r3,r20,24
  807a54:	89000415 	stw	r4,16(r17)
  807a58:	a1000517 	ldw	r4,20(r20)
  807a5c:	89000515 	stw	r4,20(r17)
  807a60:	003f0406 	br	807674 <__alt_data_end+0xff807674>
  807a64:	a0c00417 	ldw	r3,16(r20)
  807a68:	a5000604 	addi	r20,r20,24
  807a6c:	98800804 	addi	r2,r19,32
  807a70:	98c00615 	stw	r3,24(r19)
  807a74:	a0ffff17 	ldw	r3,-4(r20)
  807a78:	98c00715 	stw	r3,28(r19)
  807a7c:	003f9a06 	br	8078e8 <__alt_data_end+0xff8078e8>
  807a80:	8805883a 	mov	r2,r17
  807a84:	003fc706 	br	8079a4 <__alt_data_end+0xff8079a4>
  807a88:	a00b883a 	mov	r5,r20
  807a8c:	8809883a 	mov	r4,r17
  807a90:	08062440 	call	806244 <memmove>
  807a94:	003fc906 	br	8079bc <__alt_data_end+0xff8079bc>
  807a98:	a0800217 	ldw	r2,8(r20)
  807a9c:	98800415 	stw	r2,16(r19)
  807aa0:	a0800317 	ldw	r2,12(r20)
  807aa4:	98800515 	stw	r2,20(r19)
  807aa8:	31000726 	beq	r6,r4,807ac8 <_realloc_r+0x548>
  807aac:	98800604 	addi	r2,r19,24
  807ab0:	a5000404 	addi	r20,r20,16
  807ab4:	003fbb06 	br	8079a4 <__alt_data_end+0xff8079a4>
  807ab8:	9009883a 	mov	r4,r18
  807abc:	080d9f00 	call	80d9f0 <__malloc_unlock>
  807ac0:	0005883a 	mov	r2,zero
  807ac4:	003f0906 	br	8076ec <__alt_data_end+0xff8076ec>
  807ac8:	a0c00417 	ldw	r3,16(r20)
  807acc:	a5000604 	addi	r20,r20,24
  807ad0:	98800804 	addi	r2,r19,32
  807ad4:	98c00615 	stw	r3,24(r19)
  807ad8:	a0ffff17 	ldw	r3,-4(r20)
  807adc:	98c00715 	stw	r3,28(r19)
  807ae0:	003fb006 	br	8079a4 <__alt_data_end+0xff8079a4>

00807ae4 <__fpclassifyd>:
  807ae4:	00a00034 	movhi	r2,32768
  807ae8:	10bfffc4 	addi	r2,r2,-1
  807aec:	2884703a 	and	r2,r5,r2
  807af0:	10000726 	beq	r2,zero,807b10 <__fpclassifyd+0x2c>
  807af4:	00fffc34 	movhi	r3,65520
  807af8:	019ff834 	movhi	r6,32736
  807afc:	28c7883a 	add	r3,r5,r3
  807b00:	31bfffc4 	addi	r6,r6,-1
  807b04:	30c00536 	bltu	r6,r3,807b1c <__fpclassifyd+0x38>
  807b08:	00800104 	movi	r2,4
  807b0c:	f800283a 	ret
  807b10:	2000021e 	bne	r4,zero,807b1c <__fpclassifyd+0x38>
  807b14:	00800084 	movi	r2,2
  807b18:	f800283a 	ret
  807b1c:	00dffc34 	movhi	r3,32752
  807b20:	019ff834 	movhi	r6,32736
  807b24:	28cb883a 	add	r5,r5,r3
  807b28:	31bfffc4 	addi	r6,r6,-1
  807b2c:	317ff62e 	bgeu	r6,r5,807b08 <__alt_data_end+0xff807b08>
  807b30:	01400434 	movhi	r5,16
  807b34:	297fffc4 	addi	r5,r5,-1
  807b38:	28800236 	bltu	r5,r2,807b44 <__fpclassifyd+0x60>
  807b3c:	008000c4 	movi	r2,3
  807b40:	f800283a 	ret
  807b44:	10c00226 	beq	r2,r3,807b50 <__fpclassifyd+0x6c>
  807b48:	0005883a 	mov	r2,zero
  807b4c:	f800283a 	ret
  807b50:	2005003a 	cmpeq	r2,r4,zero
  807b54:	f800283a 	ret

00807b58 <_sbrk_r>:
  807b58:	defffd04 	addi	sp,sp,-12
  807b5c:	dc000015 	stw	r16,0(sp)
  807b60:	04002074 	movhi	r16,129
  807b64:	dc400115 	stw	r17,4(sp)
  807b68:	840d7004 	addi	r16,r16,13760
  807b6c:	2023883a 	mov	r17,r4
  807b70:	2809883a 	mov	r4,r5
  807b74:	dfc00215 	stw	ra,8(sp)
  807b78:	80000015 	stw	zero,0(r16)
  807b7c:	080dbec0 	call	80dbec <sbrk>
  807b80:	00ffffc4 	movi	r3,-1
  807b84:	10c00526 	beq	r2,r3,807b9c <_sbrk_r+0x44>
  807b88:	dfc00217 	ldw	ra,8(sp)
  807b8c:	dc400117 	ldw	r17,4(sp)
  807b90:	dc000017 	ldw	r16,0(sp)
  807b94:	dec00304 	addi	sp,sp,12
  807b98:	f800283a 	ret
  807b9c:	80c00017 	ldw	r3,0(r16)
  807ba0:	183ff926 	beq	r3,zero,807b88 <__alt_data_end+0xff807b88>
  807ba4:	88c00015 	stw	r3,0(r17)
  807ba8:	003ff706 	br	807b88 <__alt_data_end+0xff807b88>

00807bac <__sread>:
  807bac:	defffe04 	addi	sp,sp,-8
  807bb0:	dc000015 	stw	r16,0(sp)
  807bb4:	2821883a 	mov	r16,r5
  807bb8:	2940038f 	ldh	r5,14(r5)
  807bbc:	dfc00115 	stw	ra,4(sp)
  807bc0:	0809a680 	call	809a68 <_read_r>
  807bc4:	10000716 	blt	r2,zero,807be4 <__sread+0x38>
  807bc8:	80c01417 	ldw	r3,80(r16)
  807bcc:	1887883a 	add	r3,r3,r2
  807bd0:	80c01415 	stw	r3,80(r16)
  807bd4:	dfc00117 	ldw	ra,4(sp)
  807bd8:	dc000017 	ldw	r16,0(sp)
  807bdc:	dec00204 	addi	sp,sp,8
  807be0:	f800283a 	ret
  807be4:	80c0030b 	ldhu	r3,12(r16)
  807be8:	18fbffcc 	andi	r3,r3,61439
  807bec:	80c0030d 	sth	r3,12(r16)
  807bf0:	dfc00117 	ldw	ra,4(sp)
  807bf4:	dc000017 	ldw	r16,0(sp)
  807bf8:	dec00204 	addi	sp,sp,8
  807bfc:	f800283a 	ret

00807c00 <__seofread>:
  807c00:	0005883a 	mov	r2,zero
  807c04:	f800283a 	ret

00807c08 <__swrite>:
  807c08:	2880030b 	ldhu	r2,12(r5)
  807c0c:	defffb04 	addi	sp,sp,-20
  807c10:	dcc00315 	stw	r19,12(sp)
  807c14:	dc800215 	stw	r18,8(sp)
  807c18:	dc400115 	stw	r17,4(sp)
  807c1c:	dc000015 	stw	r16,0(sp)
  807c20:	dfc00415 	stw	ra,16(sp)
  807c24:	10c0400c 	andi	r3,r2,256
  807c28:	2821883a 	mov	r16,r5
  807c2c:	2023883a 	mov	r17,r4
  807c30:	3025883a 	mov	r18,r6
  807c34:	3827883a 	mov	r19,r7
  807c38:	18000526 	beq	r3,zero,807c50 <__swrite+0x48>
  807c3c:	2940038f 	ldh	r5,14(r5)
  807c40:	01c00084 	movi	r7,2
  807c44:	000d883a 	mov	r6,zero
  807c48:	0809a080 	call	809a08 <_lseek_r>
  807c4c:	8080030b 	ldhu	r2,12(r16)
  807c50:	8140038f 	ldh	r5,14(r16)
  807c54:	10bbffcc 	andi	r2,r2,61439
  807c58:	980f883a 	mov	r7,r19
  807c5c:	900d883a 	mov	r6,r18
  807c60:	8809883a 	mov	r4,r17
  807c64:	8080030d 	sth	r2,12(r16)
  807c68:	dfc00417 	ldw	ra,16(sp)
  807c6c:	dcc00317 	ldw	r19,12(sp)
  807c70:	dc800217 	ldw	r18,8(sp)
  807c74:	dc400117 	ldw	r17,4(sp)
  807c78:	dc000017 	ldw	r16,0(sp)
  807c7c:	dec00504 	addi	sp,sp,20
  807c80:	08094bc1 	jmpi	8094bc <_write_r>

00807c84 <__sseek>:
  807c84:	defffe04 	addi	sp,sp,-8
  807c88:	dc000015 	stw	r16,0(sp)
  807c8c:	2821883a 	mov	r16,r5
  807c90:	2940038f 	ldh	r5,14(r5)
  807c94:	dfc00115 	stw	ra,4(sp)
  807c98:	0809a080 	call	809a08 <_lseek_r>
  807c9c:	00ffffc4 	movi	r3,-1
  807ca0:	10c00826 	beq	r2,r3,807cc4 <__sseek+0x40>
  807ca4:	80c0030b 	ldhu	r3,12(r16)
  807ca8:	80801415 	stw	r2,80(r16)
  807cac:	18c40014 	ori	r3,r3,4096
  807cb0:	80c0030d 	sth	r3,12(r16)
  807cb4:	dfc00117 	ldw	ra,4(sp)
  807cb8:	dc000017 	ldw	r16,0(sp)
  807cbc:	dec00204 	addi	sp,sp,8
  807cc0:	f800283a 	ret
  807cc4:	80c0030b 	ldhu	r3,12(r16)
  807cc8:	18fbffcc 	andi	r3,r3,61439
  807ccc:	80c0030d 	sth	r3,12(r16)
  807cd0:	dfc00117 	ldw	ra,4(sp)
  807cd4:	dc000017 	ldw	r16,0(sp)
  807cd8:	dec00204 	addi	sp,sp,8
  807cdc:	f800283a 	ret

00807ce0 <__sclose>:
  807ce0:	2940038f 	ldh	r5,14(r5)
  807ce4:	080951c1 	jmpi	80951c <_close_r>

00807ce8 <strcmp>:
  807ce8:	2144b03a 	or	r2,r4,r5
  807cec:	108000cc 	andi	r2,r2,3
  807cf0:	1000171e 	bne	r2,zero,807d50 <strcmp+0x68>
  807cf4:	20800017 	ldw	r2,0(r4)
  807cf8:	28c00017 	ldw	r3,0(r5)
  807cfc:	10c0141e 	bne	r2,r3,807d50 <strcmp+0x68>
  807d00:	027fbff4 	movhi	r9,65279
  807d04:	4a7fbfc4 	addi	r9,r9,-257
  807d08:	0086303a 	nor	r3,zero,r2
  807d0c:	02202074 	movhi	r8,32897
  807d10:	1245883a 	add	r2,r2,r9
  807d14:	42202004 	addi	r8,r8,-32640
  807d18:	10c4703a 	and	r2,r2,r3
  807d1c:	1204703a 	and	r2,r2,r8
  807d20:	10000226 	beq	r2,zero,807d2c <strcmp+0x44>
  807d24:	00002306 	br	807db4 <strcmp+0xcc>
  807d28:	1000221e 	bne	r2,zero,807db4 <strcmp+0xcc>
  807d2c:	21000104 	addi	r4,r4,4
  807d30:	20c00017 	ldw	r3,0(r4)
  807d34:	29400104 	addi	r5,r5,4
  807d38:	29800017 	ldw	r6,0(r5)
  807d3c:	1a4f883a 	add	r7,r3,r9
  807d40:	00c4303a 	nor	r2,zero,r3
  807d44:	3884703a 	and	r2,r7,r2
  807d48:	1204703a 	and	r2,r2,r8
  807d4c:	19bff626 	beq	r3,r6,807d28 <__alt_data_end+0xff807d28>
  807d50:	20800003 	ldbu	r2,0(r4)
  807d54:	10c03fcc 	andi	r3,r2,255
  807d58:	18c0201c 	xori	r3,r3,128
  807d5c:	18ffe004 	addi	r3,r3,-128
  807d60:	18000c26 	beq	r3,zero,807d94 <strcmp+0xac>
  807d64:	29800007 	ldb	r6,0(r5)
  807d68:	19800326 	beq	r3,r6,807d78 <strcmp+0x90>
  807d6c:	00001306 	br	807dbc <strcmp+0xd4>
  807d70:	29800007 	ldb	r6,0(r5)
  807d74:	11800b1e 	bne	r2,r6,807da4 <strcmp+0xbc>
  807d78:	21000044 	addi	r4,r4,1
  807d7c:	20c00003 	ldbu	r3,0(r4)
  807d80:	29400044 	addi	r5,r5,1
  807d84:	18803fcc 	andi	r2,r3,255
  807d88:	1080201c 	xori	r2,r2,128
  807d8c:	10bfe004 	addi	r2,r2,-128
  807d90:	103ff71e 	bne	r2,zero,807d70 <__alt_data_end+0xff807d70>
  807d94:	0007883a 	mov	r3,zero
  807d98:	28800003 	ldbu	r2,0(r5)
  807d9c:	1885c83a 	sub	r2,r3,r2
  807da0:	f800283a 	ret
  807da4:	28800003 	ldbu	r2,0(r5)
  807da8:	18c03fcc 	andi	r3,r3,255
  807dac:	1885c83a 	sub	r2,r3,r2
  807db0:	f800283a 	ret
  807db4:	0005883a 	mov	r2,zero
  807db8:	f800283a 	ret
  807dbc:	10c03fcc 	andi	r3,r2,255
  807dc0:	003ff506 	br	807d98 <__alt_data_end+0xff807d98>

00807dc4 <__sprint_r.part.0>:
  807dc4:	28801917 	ldw	r2,100(r5)
  807dc8:	defff604 	addi	sp,sp,-40
  807dcc:	dd400515 	stw	r21,20(sp)
  807dd0:	dfc00915 	stw	ra,36(sp)
  807dd4:	df000815 	stw	fp,32(sp)
  807dd8:	ddc00715 	stw	r23,28(sp)
  807ddc:	dd800615 	stw	r22,24(sp)
  807de0:	dd000415 	stw	r20,16(sp)
  807de4:	dcc00315 	stw	r19,12(sp)
  807de8:	dc800215 	stw	r18,8(sp)
  807dec:	dc400115 	stw	r17,4(sp)
  807df0:	dc000015 	stw	r16,0(sp)
  807df4:	1088000c 	andi	r2,r2,8192
  807df8:	302b883a 	mov	r21,r6
  807dfc:	10002e26 	beq	r2,zero,807eb8 <__sprint_r.part.0+0xf4>
  807e00:	30800217 	ldw	r2,8(r6)
  807e04:	35800017 	ldw	r22,0(r6)
  807e08:	10002926 	beq	r2,zero,807eb0 <__sprint_r.part.0+0xec>
  807e0c:	2827883a 	mov	r19,r5
  807e10:	2029883a 	mov	r20,r4
  807e14:	b5c00104 	addi	r23,r22,4
  807e18:	04bfffc4 	movi	r18,-1
  807e1c:	bc400017 	ldw	r17,0(r23)
  807e20:	b4000017 	ldw	r16,0(r22)
  807e24:	0039883a 	mov	fp,zero
  807e28:	8822d0ba 	srli	r17,r17,2
  807e2c:	8800031e 	bne	r17,zero,807e3c <__sprint_r.part.0+0x78>
  807e30:	00001806 	br	807e94 <__sprint_r.part.0+0xd0>
  807e34:	84000104 	addi	r16,r16,4
  807e38:	8f001526 	beq	r17,fp,807e90 <__sprint_r.part.0+0xcc>
  807e3c:	81400017 	ldw	r5,0(r16)
  807e40:	980d883a 	mov	r6,r19
  807e44:	a009883a 	mov	r4,r20
  807e48:	08098b40 	call	8098b4 <_fputwc_r>
  807e4c:	e7000044 	addi	fp,fp,1
  807e50:	14bff81e 	bne	r2,r18,807e34 <__alt_data_end+0xff807e34>
  807e54:	9005883a 	mov	r2,r18
  807e58:	a8000215 	stw	zero,8(r21)
  807e5c:	a8000115 	stw	zero,4(r21)
  807e60:	dfc00917 	ldw	ra,36(sp)
  807e64:	df000817 	ldw	fp,32(sp)
  807e68:	ddc00717 	ldw	r23,28(sp)
  807e6c:	dd800617 	ldw	r22,24(sp)
  807e70:	dd400517 	ldw	r21,20(sp)
  807e74:	dd000417 	ldw	r20,16(sp)
  807e78:	dcc00317 	ldw	r19,12(sp)
  807e7c:	dc800217 	ldw	r18,8(sp)
  807e80:	dc400117 	ldw	r17,4(sp)
  807e84:	dc000017 	ldw	r16,0(sp)
  807e88:	dec00a04 	addi	sp,sp,40
  807e8c:	f800283a 	ret
  807e90:	a8800217 	ldw	r2,8(r21)
  807e94:	8c63883a 	add	r17,r17,r17
  807e98:	8c63883a 	add	r17,r17,r17
  807e9c:	1445c83a 	sub	r2,r2,r17
  807ea0:	a8800215 	stw	r2,8(r21)
  807ea4:	b5800204 	addi	r22,r22,8
  807ea8:	bdc00204 	addi	r23,r23,8
  807eac:	103fdb1e 	bne	r2,zero,807e1c <__alt_data_end+0xff807e1c>
  807eb0:	0005883a 	mov	r2,zero
  807eb4:	003fe806 	br	807e58 <__alt_data_end+0xff807e58>
  807eb8:	0804f240 	call	804f24 <__sfvwrite_r>
  807ebc:	003fe606 	br	807e58 <__alt_data_end+0xff807e58>

00807ec0 <__sprint_r>:
  807ec0:	30c00217 	ldw	r3,8(r6)
  807ec4:	18000126 	beq	r3,zero,807ecc <__sprint_r+0xc>
  807ec8:	0807dc41 	jmpi	807dc4 <__sprint_r.part.0>
  807ecc:	30000115 	stw	zero,4(r6)
  807ed0:	0005883a 	mov	r2,zero
  807ed4:	f800283a 	ret

00807ed8 <___vfiprintf_internal_r>:
  807ed8:	deffca04 	addi	sp,sp,-216
  807edc:	dd403115 	stw	r21,196(sp)
  807ee0:	dfc03515 	stw	ra,212(sp)
  807ee4:	df003415 	stw	fp,208(sp)
  807ee8:	ddc03315 	stw	r23,204(sp)
  807eec:	dd803215 	stw	r22,200(sp)
  807ef0:	dd003015 	stw	r20,192(sp)
  807ef4:	dcc02f15 	stw	r19,188(sp)
  807ef8:	dc802e15 	stw	r18,184(sp)
  807efc:	dc402d15 	stw	r17,180(sp)
  807f00:	dc002c15 	stw	r16,176(sp)
  807f04:	d9002115 	stw	r4,132(sp)
  807f08:	d9402015 	stw	r5,128(sp)
  807f0c:	d9c02215 	stw	r7,136(sp)
  807f10:	302b883a 	mov	r21,r6
  807f14:	20000226 	beq	r4,zero,807f20 <___vfiprintf_internal_r+0x48>
  807f18:	20800e17 	ldw	r2,56(r4)
  807f1c:	1000cf26 	beq	r2,zero,80825c <___vfiprintf_internal_r+0x384>
  807f20:	d8c02017 	ldw	r3,128(sp)
  807f24:	1880030b 	ldhu	r2,12(r3)
  807f28:	10c8000c 	andi	r3,r2,8192
  807f2c:	1800071e 	bne	r3,zero,807f4c <___vfiprintf_internal_r+0x74>
  807f30:	d9402017 	ldw	r5,128(sp)
  807f34:	00f7ffc4 	movi	r3,-8193
  807f38:	10880014 	ori	r2,r2,8192
  807f3c:	29001917 	ldw	r4,100(r5)
  807f40:	2880030d 	sth	r2,12(r5)
  807f44:	20c6703a 	and	r3,r4,r3
  807f48:	28c01915 	stw	r3,100(r5)
  807f4c:	10c0020c 	andi	r3,r2,8
  807f50:	1800a526 	beq	r3,zero,8081e8 <___vfiprintf_internal_r+0x310>
  807f54:	d9002017 	ldw	r4,128(sp)
  807f58:	20c00417 	ldw	r3,16(r4)
  807f5c:	1800a226 	beq	r3,zero,8081e8 <___vfiprintf_internal_r+0x310>
  807f60:	1080068c 	andi	r2,r2,26
  807f64:	00c00284 	movi	r3,10
  807f68:	10c0a826 	beq	r2,r3,80820c <___vfiprintf_internal_r+0x334>
  807f6c:	d9001a04 	addi	r4,sp,104
  807f70:	d94019c4 	addi	r5,sp,103
  807f74:	04802074 	movhi	r18,129
  807f78:	2145c83a 	sub	r2,r4,r5
  807f7c:	94bfe104 	addi	r18,r18,-124
  807f80:	d9001e15 	stw	r4,120(sp)
  807f84:	d9401f15 	stw	r5,124(sp)
  807f88:	dec01a15 	stw	sp,104(sp)
  807f8c:	d8001c15 	stw	zero,112(sp)
  807f90:	d8001b15 	stw	zero,108(sp)
  807f94:	d811883a 	mov	r8,sp
  807f98:	d8002615 	stw	zero,152(sp)
  807f9c:	d8002415 	stw	zero,144(sp)
  807fa0:	d8802815 	stw	r2,160(sp)
  807fa4:	a82d883a 	mov	r22,r21
  807fa8:	b0800007 	ldb	r2,0(r22)
  807fac:	10040d26 	beq	r2,zero,808fe4 <___vfiprintf_internal_r+0x110c>
  807fb0:	00c00944 	movi	r3,37
  807fb4:	b029883a 	mov	r20,r22
  807fb8:	10c0021e 	bne	r2,r3,807fc4 <___vfiprintf_internal_r+0xec>
  807fbc:	00001606 	br	808018 <___vfiprintf_internal_r+0x140>
  807fc0:	10c00326 	beq	r2,r3,807fd0 <___vfiprintf_internal_r+0xf8>
  807fc4:	a5000044 	addi	r20,r20,1
  807fc8:	a0800007 	ldb	r2,0(r20)
  807fcc:	103ffc1e 	bne	r2,zero,807fc0 <__alt_data_end+0xff807fc0>
  807fd0:	a5a1c83a 	sub	r16,r20,r22
  807fd4:	80001026 	beq	r16,zero,808018 <___vfiprintf_internal_r+0x140>
  807fd8:	d8c01c17 	ldw	r3,112(sp)
  807fdc:	d8801b17 	ldw	r2,108(sp)
  807fe0:	45800015 	stw	r22,0(r8)
  807fe4:	80c7883a 	add	r3,r16,r3
  807fe8:	10800044 	addi	r2,r2,1
  807fec:	44000115 	stw	r16,4(r8)
  807ff0:	d8c01c15 	stw	r3,112(sp)
  807ff4:	d8801b15 	stw	r2,108(sp)
  807ff8:	010001c4 	movi	r4,7
  807ffc:	2080750e 	bge	r4,r2,8081d4 <___vfiprintf_internal_r+0x2fc>
  808000:	1803951e 	bne	r3,zero,808e58 <___vfiprintf_internal_r+0xf80>
  808004:	d8c02417 	ldw	r3,144(sp)
  808008:	d8001b15 	stw	zero,108(sp)
  80800c:	d811883a 	mov	r8,sp
  808010:	1c07883a 	add	r3,r3,r16
  808014:	d8c02415 	stw	r3,144(sp)
  808018:	a0800007 	ldb	r2,0(r20)
  80801c:	1002e026 	beq	r2,zero,808ba0 <___vfiprintf_internal_r+0xcc8>
  808020:	a5800044 	addi	r22,r20,1
  808024:	a0c00047 	ldb	r3,1(r20)
  808028:	d8001d85 	stb	zero,118(sp)
  80802c:	0027883a 	mov	r19,zero
  808030:	d8002305 	stb	zero,140(sp)
  808034:	043fffc4 	movi	r16,-1
  808038:	d8002515 	stw	zero,148(sp)
  80803c:	0023883a 	mov	r17,zero
  808040:	05001604 	movi	r20,88
  808044:	05400244 	movi	r21,9
  808048:	402f883a 	mov	r23,r8
  80804c:	b5800044 	addi	r22,r22,1
  808050:	18bff804 	addi	r2,r3,-32
  808054:	a0827736 	bltu	r20,r2,808a34 <___vfiprintf_internal_r+0xb5c>
  808058:	100490ba 	slli	r2,r2,2
  80805c:	01002074 	movhi	r4,129
  808060:	21201c04 	addi	r4,r4,-32656
  808064:	1105883a 	add	r2,r2,r4
  808068:	10800017 	ldw	r2,0(r2)
  80806c:	1000683a 	jmp	r2
  808070:	00808734 	movhi	r2,540
  808074:	00808a34 	movhi	r2,552
  808078:	00808a34 	movhi	r2,552
  80807c:	00808750 	cmplti	r2,zero,541
  808080:	00808a34 	movhi	r2,552
  808084:	00808a34 	movhi	r2,552
  808088:	00808a34 	movhi	r2,552
  80808c:	00808a34 	movhi	r2,552
  808090:	00808a34 	movhi	r2,552
  808094:	00808a34 	movhi	r2,552
  808098:	00808958 	cmpnei	r2,zero,549
  80809c:	0080897c 	xorhi	r2,zero,549
  8080a0:	00808a34 	movhi	r2,552
  8080a4:	00808274 	movhi	r2,521
  8080a8:	00808990 	cmplti	r2,zero,550
  8080ac:	00808a34 	movhi	r2,552
  8080b0:	0080875c 	xori	r2,zero,541
  8080b4:	00808768 	cmpgeui	r2,zero,541
  8080b8:	00808768 	cmpgeui	r2,zero,541
  8080bc:	00808768 	cmpgeui	r2,zero,541
  8080c0:	00808768 	cmpgeui	r2,zero,541
  8080c4:	00808768 	cmpgeui	r2,zero,541
  8080c8:	00808768 	cmpgeui	r2,zero,541
  8080cc:	00808768 	cmpgeui	r2,zero,541
  8080d0:	00808768 	cmpgeui	r2,zero,541
  8080d4:	00808768 	cmpgeui	r2,zero,541
  8080d8:	00808a34 	movhi	r2,552
  8080dc:	00808a34 	movhi	r2,552
  8080e0:	00808a34 	movhi	r2,552
  8080e4:	00808a34 	movhi	r2,552
  8080e8:	00808a34 	movhi	r2,552
  8080ec:	00808a34 	movhi	r2,552
  8080f0:	00808a34 	movhi	r2,552
  8080f4:	00808a34 	movhi	r2,552
  8080f8:	00808a34 	movhi	r2,552
  8080fc:	00808a34 	movhi	r2,552
  808100:	008087a8 	cmpgeui	r2,zero,542
  808104:	00808a34 	movhi	r2,552
  808108:	00808a34 	movhi	r2,552
  80810c:	00808a34 	movhi	r2,552
  808110:	00808a34 	movhi	r2,552
  808114:	00808a34 	movhi	r2,552
  808118:	00808a34 	movhi	r2,552
  80811c:	00808a34 	movhi	r2,552
  808120:	00808a34 	movhi	r2,552
  808124:	00808a34 	movhi	r2,552
  808128:	00808a34 	movhi	r2,552
  80812c:	008087e4 	muli	r2,zero,543
  808130:	00808a34 	movhi	r2,552
  808134:	00808a34 	movhi	r2,552
  808138:	00808a34 	movhi	r2,552
  80813c:	00808a34 	movhi	r2,552
  808140:	00808a34 	movhi	r2,552
  808144:	00808840 	call	80884 <__reset-0x77f77c>
  808148:	00808a34 	movhi	r2,552
  80814c:	00808a34 	movhi	r2,552
  808150:	008088b4 	movhi	r2,546
  808154:	00808a34 	movhi	r2,552
  808158:	00808a34 	movhi	r2,552
  80815c:	00808a34 	movhi	r2,552
  808160:	00808a34 	movhi	r2,552
  808164:	00808a34 	movhi	r2,552
  808168:	00808a34 	movhi	r2,552
  80816c:	00808a34 	movhi	r2,552
  808170:	00808a34 	movhi	r2,552
  808174:	00808a34 	movhi	r2,552
  808178:	00808a34 	movhi	r2,552
  80817c:	0080865c 	xori	r2,zero,537
  808180:	0080868c 	andi	r2,zero,538
  808184:	00808a34 	movhi	r2,552
  808188:	00808a34 	movhi	r2,552
  80818c:	00808a34 	movhi	r2,552
  808190:	008089dc 	xori	r2,zero,551
  808194:	0080868c 	andi	r2,zero,538
  808198:	00808a34 	movhi	r2,552
  80819c:	00808a34 	movhi	r2,552
  8081a0:	00808534 	movhi	r2,532
  8081a4:	00808a34 	movhi	r2,552
  8081a8:	00808548 	cmpgei	r2,zero,533
  8081ac:	00808580 	call	80858 <__reset-0x77f7a8>
  8081b0:	00808280 	call	80828 <__reset-0x77f7d8>
  8081b4:	00808528 	cmpgeui	r2,zero,532
  8081b8:	00808a34 	movhi	r2,552
  8081bc:	008088f4 	movhi	r2,547
  8081c0:	00808a34 	movhi	r2,552
  8081c4:	00808940 	call	80894 <__reset-0x77f76c>
  8081c8:	00808a34 	movhi	r2,552
  8081cc:	00808a34 	movhi	r2,552
  8081d0:	00808604 	movi	r2,536
  8081d4:	42000204 	addi	r8,r8,8
  8081d8:	d8c02417 	ldw	r3,144(sp)
  8081dc:	1c07883a 	add	r3,r3,r16
  8081e0:	d8c02415 	stw	r3,144(sp)
  8081e4:	003f8c06 	br	808018 <__alt_data_end+0xff808018>
  8081e8:	d9402017 	ldw	r5,128(sp)
  8081ec:	d9002117 	ldw	r4,132(sp)
  8081f0:	0802a940 	call	802a94 <__swsetup_r>
  8081f4:	1003c11e 	bne	r2,zero,8090fc <___vfiprintf_internal_r+0x1224>
  8081f8:	d9402017 	ldw	r5,128(sp)
  8081fc:	00c00284 	movi	r3,10
  808200:	2880030b 	ldhu	r2,12(r5)
  808204:	1080068c 	andi	r2,r2,26
  808208:	10ff581e 	bne	r2,r3,807f6c <__alt_data_end+0xff807f6c>
  80820c:	d8c02017 	ldw	r3,128(sp)
  808210:	1880038f 	ldh	r2,14(r3)
  808214:	103f5516 	blt	r2,zero,807f6c <__alt_data_end+0xff807f6c>
  808218:	d9c02217 	ldw	r7,136(sp)
  80821c:	d9002117 	ldw	r4,132(sp)
  808220:	a80d883a 	mov	r6,r21
  808224:	180b883a 	mov	r5,r3
  808228:	08094000 	call	809400 <__sbprintf>
  80822c:	dfc03517 	ldw	ra,212(sp)
  808230:	df003417 	ldw	fp,208(sp)
  808234:	ddc03317 	ldw	r23,204(sp)
  808238:	dd803217 	ldw	r22,200(sp)
  80823c:	dd403117 	ldw	r21,196(sp)
  808240:	dd003017 	ldw	r20,192(sp)
  808244:	dcc02f17 	ldw	r19,188(sp)
  808248:	dc802e17 	ldw	r18,184(sp)
  80824c:	dc402d17 	ldw	r17,180(sp)
  808250:	dc002c17 	ldw	r16,176(sp)
  808254:	dec03604 	addi	sp,sp,216
  808258:	f800283a 	ret
  80825c:	0804aa00 	call	804aa0 <__sinit>
  808260:	003f2f06 	br	807f20 <__alt_data_end+0xff807f20>
  808264:	d8c02517 	ldw	r3,148(sp)
  808268:	d8802215 	stw	r2,136(sp)
  80826c:	00c7c83a 	sub	r3,zero,r3
  808270:	d8c02515 	stw	r3,148(sp)
  808274:	8c400114 	ori	r17,r17,4
  808278:	b0c00007 	ldb	r3,0(r22)
  80827c:	003f7306 	br	80804c <__alt_data_end+0xff80804c>
  808280:	00800c04 	movi	r2,48
  808284:	d9402217 	ldw	r5,136(sp)
  808288:	d8801d05 	stb	r2,116(sp)
  80828c:	00801e04 	movi	r2,120
  808290:	d8801d45 	stb	r2,117(sp)
  808294:	d8001d85 	stb	zero,118(sp)
  808298:	b811883a 	mov	r8,r23
  80829c:	28c00104 	addi	r3,r5,4
  8082a0:	2cc00017 	ldw	r19,0(r5)
  8082a4:	0029883a 	mov	r20,zero
  8082a8:	88800094 	ori	r2,r17,2
  8082ac:	80032516 	blt	r16,zero,808f44 <___vfiprintf_internal_r+0x106c>
  8082b0:	00bfdfc4 	movi	r2,-129
  8082b4:	88a2703a 	and	r17,r17,r2
  8082b8:	d8c02215 	stw	r3,136(sp)
  8082bc:	8c400094 	ori	r17,r17,2
  8082c0:	98032a1e 	bne	r19,zero,808f6c <___vfiprintf_internal_r+0x1094>
  8082c4:	00802074 	movhi	r2,129
  8082c8:	10bf8004 	addi	r2,r2,-512
  8082cc:	d8802615 	stw	r2,152(sp)
  8082d0:	002b883a 	mov	r21,zero
  8082d4:	8001741e 	bne	r16,zero,8088a8 <___vfiprintf_internal_r+0x9d0>
  8082d8:	0021883a 	mov	r16,zero
  8082dc:	0029883a 	mov	r20,zero
  8082e0:	ddc01a04 	addi	r23,sp,104
  8082e4:	8027883a 	mov	r19,r16
  8082e8:	8500010e 	bge	r16,r20,8082f0 <___vfiprintf_internal_r+0x418>
  8082ec:	a027883a 	mov	r19,r20
  8082f0:	ad403fcc 	andi	r21,r21,255
  8082f4:	ad40201c 	xori	r21,r21,128
  8082f8:	ad7fe004 	addi	r21,r21,-128
  8082fc:	a8000126 	beq	r21,zero,808304 <___vfiprintf_internal_r+0x42c>
  808300:	9cc00044 	addi	r19,r19,1
  808304:	89c0008c 	andi	r7,r17,2
  808308:	38000126 	beq	r7,zero,808310 <___vfiprintf_internal_r+0x438>
  80830c:	9cc00084 	addi	r19,r19,2
  808310:	88c0210c 	andi	r3,r17,132
  808314:	1801dd1e 	bne	r3,zero,808a8c <___vfiprintf_internal_r+0xbb4>
  808318:	d9402517 	ldw	r5,148(sp)
  80831c:	2cebc83a 	sub	r21,r5,r19
  808320:	0541da0e 	bge	zero,r21,808a8c <___vfiprintf_internal_r+0xbb4>
  808324:	07000404 	movi	fp,16
  808328:	d8801c17 	ldw	r2,112(sp)
  80832c:	e543be0e 	bge	fp,r21,809228 <___vfiprintf_internal_r+0x1350>
  808330:	01402074 	movhi	r5,129
  808334:	297fe504 	addi	r5,r5,-108
  808338:	dc002715 	stw	r16,156(sp)
  80833c:	d9801b17 	ldw	r6,108(sp)
  808340:	a821883a 	mov	r16,r21
  808344:	d9402315 	stw	r5,140(sp)
  808348:	028001c4 	movi	r10,7
  80834c:	d9c02915 	stw	r7,164(sp)
  808350:	182b883a 	mov	r21,r3
  808354:	00000506 	br	80836c <___vfiprintf_internal_r+0x494>
  808358:	31000084 	addi	r4,r6,2
  80835c:	42000204 	addi	r8,r8,8
  808360:	180d883a 	mov	r6,r3
  808364:	843ffc04 	addi	r16,r16,-16
  808368:	e4000f0e 	bge	fp,r16,8083a8 <___vfiprintf_internal_r+0x4d0>
  80836c:	01002074 	movhi	r4,129
  808370:	10800404 	addi	r2,r2,16
  808374:	30c00044 	addi	r3,r6,1
  808378:	213fe504 	addi	r4,r4,-108
  80837c:	41000015 	stw	r4,0(r8)
  808380:	47000115 	stw	fp,4(r8)
  808384:	d8801c15 	stw	r2,112(sp)
  808388:	d8c01b15 	stw	r3,108(sp)
  80838c:	50fff20e 	bge	r10,r3,808358 <__alt_data_end+0xff808358>
  808390:	1001b21e 	bne	r2,zero,808a5c <___vfiprintf_internal_r+0xb84>
  808394:	843ffc04 	addi	r16,r16,-16
  808398:	000d883a 	mov	r6,zero
  80839c:	01000044 	movi	r4,1
  8083a0:	d811883a 	mov	r8,sp
  8083a4:	e43ff116 	blt	fp,r16,80836c <__alt_data_end+0xff80836c>
  8083a8:	a807883a 	mov	r3,r21
  8083ac:	d9c02917 	ldw	r7,164(sp)
  8083b0:	802b883a 	mov	r21,r16
  8083b4:	dc002717 	ldw	r16,156(sp)
  8083b8:	d9402317 	ldw	r5,140(sp)
  8083bc:	a885883a 	add	r2,r21,r2
  8083c0:	45400115 	stw	r21,4(r8)
  8083c4:	41400015 	stw	r5,0(r8)
  8083c8:	d8801c15 	stw	r2,112(sp)
  8083cc:	d9001b15 	stw	r4,108(sp)
  8083d0:	014001c4 	movi	r5,7
  8083d4:	29026216 	blt	r5,r4,808d60 <___vfiprintf_internal_r+0xe88>
  8083d8:	d9801d87 	ldb	r6,118(sp)
  8083dc:	42000204 	addi	r8,r8,8
  8083e0:	21400044 	addi	r5,r4,1
  8083e4:	3001ae1e 	bne	r6,zero,808aa0 <___vfiprintf_internal_r+0xbc8>
  8083e8:	3801bb26 	beq	r7,zero,808ad8 <___vfiprintf_internal_r+0xc00>
  8083ec:	d9001d04 	addi	r4,sp,116
  8083f0:	10800084 	addi	r2,r2,2
  8083f4:	41000015 	stw	r4,0(r8)
  8083f8:	01000084 	movi	r4,2
  8083fc:	41000115 	stw	r4,4(r8)
  808400:	d8801c15 	stw	r2,112(sp)
  808404:	d9401b15 	stw	r5,108(sp)
  808408:	010001c4 	movi	r4,7
  80840c:	2142680e 	bge	r4,r5,808db0 <___vfiprintf_internal_r+0xed8>
  808410:	1002b11e 	bne	r2,zero,808ed8 <___vfiprintf_internal_r+0x1000>
  808414:	01802004 	movi	r6,128
  808418:	01400044 	movi	r5,1
  80841c:	0009883a 	mov	r4,zero
  808420:	d811883a 	mov	r8,sp
  808424:	1981ae1e 	bne	r3,r6,808ae0 <___vfiprintf_internal_r+0xc08>
  808428:	d8c02517 	ldw	r3,148(sp)
  80842c:	1cf9c83a 	sub	fp,r3,r19
  808430:	0701ab0e 	bge	zero,fp,808ae0 <___vfiprintf_internal_r+0xc08>
  808434:	05400404 	movi	r21,16
  808438:	af03a90e 	bge	r21,fp,8092e0 <___vfiprintf_internal_r+0x1408>
  80843c:	01402074 	movhi	r5,129
  808440:	297fe104 	addi	r5,r5,-124
  808444:	d9402315 	stw	r5,140(sp)
  808448:	01c001c4 	movi	r7,7
  80844c:	00000506 	br	808464 <___vfiprintf_internal_r+0x58c>
  808450:	21800084 	addi	r6,r4,2
  808454:	42000204 	addi	r8,r8,8
  808458:	1809883a 	mov	r4,r3
  80845c:	e73ffc04 	addi	fp,fp,-16
  808460:	af000d0e 	bge	r21,fp,808498 <___vfiprintf_internal_r+0x5c0>
  808464:	10800404 	addi	r2,r2,16
  808468:	20c00044 	addi	r3,r4,1
  80846c:	44800015 	stw	r18,0(r8)
  808470:	45400115 	stw	r21,4(r8)
  808474:	d8801c15 	stw	r2,112(sp)
  808478:	d8c01b15 	stw	r3,108(sp)
  80847c:	38fff40e 	bge	r7,r3,808450 <__alt_data_end+0xff808450>
  808480:	10022b1e 	bne	r2,zero,808d30 <___vfiprintf_internal_r+0xe58>
  808484:	e73ffc04 	addi	fp,fp,-16
  808488:	01800044 	movi	r6,1
  80848c:	0009883a 	mov	r4,zero
  808490:	d811883a 	mov	r8,sp
  808494:	af3ff316 	blt	r21,fp,808464 <__alt_data_end+0xff808464>
  808498:	d8c02317 	ldw	r3,140(sp)
  80849c:	1705883a 	add	r2,r2,fp
  8084a0:	47000115 	stw	fp,4(r8)
  8084a4:	40c00015 	stw	r3,0(r8)
  8084a8:	d8801c15 	stw	r2,112(sp)
  8084ac:	d9801b15 	stw	r6,108(sp)
  8084b0:	00c001c4 	movi	r3,7
  8084b4:	19829416 	blt	r3,r6,808f08 <___vfiprintf_internal_r+0x1030>
  8084b8:	8521c83a 	sub	r16,r16,r20
  8084bc:	42000204 	addi	r8,r8,8
  8084c0:	31400044 	addi	r5,r6,1
  8084c4:	3009883a 	mov	r4,r6
  8084c8:	04018716 	blt	zero,r16,808ae8 <___vfiprintf_internal_r+0xc10>
  8084cc:	a085883a 	add	r2,r20,r2
  8084d0:	45c00015 	stw	r23,0(r8)
  8084d4:	45000115 	stw	r20,4(r8)
  8084d8:	d8801c15 	stw	r2,112(sp)
  8084dc:	d9401b15 	stw	r5,108(sp)
  8084e0:	00c001c4 	movi	r3,7
  8084e4:	1941c20e 	bge	r3,r5,808bf0 <___vfiprintf_internal_r+0xd18>
  8084e8:	1002531e 	bne	r2,zero,808e38 <___vfiprintf_internal_r+0xf60>
  8084ec:	d8001b15 	stw	zero,108(sp)
  8084f0:	8c40010c 	andi	r17,r17,4
  8084f4:	88023226 	beq	r17,zero,808dc0 <___vfiprintf_internal_r+0xee8>
  8084f8:	d9002517 	ldw	r4,148(sp)
  8084fc:	24e3c83a 	sub	r17,r4,r19
  808500:	04432916 	blt	zero,r17,8091a8 <___vfiprintf_internal_r+0x12d0>
  808504:	d8802517 	ldw	r2,148(sp)
  808508:	14c0010e 	bge	r2,r19,808510 <___vfiprintf_internal_r+0x638>
  80850c:	9805883a 	mov	r2,r19
  808510:	d8c02417 	ldw	r3,144(sp)
  808514:	1887883a 	add	r3,r3,r2
  808518:	d8c02415 	stw	r3,144(sp)
  80851c:	d8001b15 	stw	zero,108(sp)
  808520:	d811883a 	mov	r8,sp
  808524:	003ea006 	br	807fa8 <__alt_data_end+0xff807fa8>
  808528:	8c400814 	ori	r17,r17,32
  80852c:	b0c00007 	ldb	r3,0(r22)
  808530:	003ec606 	br	80804c <__alt_data_end+0xff80804c>
  808534:	b0c00007 	ldb	r3,0(r22)
  808538:	00801b04 	movi	r2,108
  80853c:	18832026 	beq	r3,r2,8091c0 <___vfiprintf_internal_r+0x12e8>
  808540:	8c400414 	ori	r17,r17,16
  808544:	003ec106 	br	80804c <__alt_data_end+0xff80804c>
  808548:	9cc03fcc 	andi	r19,r19,255
  80854c:	b811883a 	mov	r8,r23
  808550:	9803981e 	bne	r19,zero,8093b4 <___vfiprintf_internal_r+0x14dc>
  808554:	8880080c 	andi	r2,r17,32
  808558:	1002be26 	beq	r2,zero,809054 <___vfiprintf_internal_r+0x117c>
  80855c:	d9002217 	ldw	r4,136(sp)
  808560:	d9402417 	ldw	r5,144(sp)
  808564:	20800017 	ldw	r2,0(r4)
  808568:	2807d7fa 	srai	r3,r5,31
  80856c:	21000104 	addi	r4,r4,4
  808570:	d9002215 	stw	r4,136(sp)
  808574:	11400015 	stw	r5,0(r2)
  808578:	10c00115 	stw	r3,4(r2)
  80857c:	003e8a06 	br	807fa8 <__alt_data_end+0xff807fa8>
  808580:	9cc03fcc 	andi	r19,r19,255
  808584:	b811883a 	mov	r8,r23
  808588:	9803871e 	bne	r19,zero,8093a8 <___vfiprintf_internal_r+0x14d0>
  80858c:	8880080c 	andi	r2,r17,32
  808590:	10009a26 	beq	r2,zero,8087fc <___vfiprintf_internal_r+0x924>
  808594:	d9002217 	ldw	r4,136(sp)
  808598:	d8001d85 	stb	zero,118(sp)
  80859c:	20800204 	addi	r2,r4,8
  8085a0:	24c00017 	ldw	r19,0(r4)
  8085a4:	25000117 	ldw	r20,4(r4)
  8085a8:	8002a416 	blt	r16,zero,80903c <___vfiprintf_internal_r+0x1164>
  8085ac:	013fdfc4 	movi	r4,-129
  8085b0:	9d06b03a 	or	r3,r19,r20
  8085b4:	d8802215 	stw	r2,136(sp)
  8085b8:	8922703a 	and	r17,r17,r4
  8085bc:	18009b26 	beq	r3,zero,80882c <___vfiprintf_internal_r+0x954>
  8085c0:	002b883a 	mov	r21,zero
  8085c4:	ddc01a04 	addi	r23,sp,104
  8085c8:	9806d0fa 	srli	r3,r19,3
  8085cc:	a008977a 	slli	r4,r20,29
  8085d0:	a028d0fa 	srli	r20,r20,3
  8085d4:	9cc001cc 	andi	r19,r19,7
  8085d8:	98800c04 	addi	r2,r19,48
  8085dc:	bdffffc4 	addi	r23,r23,-1
  8085e0:	20e6b03a 	or	r19,r4,r3
  8085e4:	b8800005 	stb	r2,0(r23)
  8085e8:	9d06b03a 	or	r3,r19,r20
  8085ec:	183ff61e 	bne	r3,zero,8085c8 <__alt_data_end+0xff8085c8>
  8085f0:	88c0004c 	andi	r3,r17,1
  8085f4:	18021f1e 	bne	r3,zero,808e74 <___vfiprintf_internal_r+0xf9c>
  8085f8:	d9401e17 	ldw	r5,120(sp)
  8085fc:	2de9c83a 	sub	r20,r5,r23
  808600:	003f3806 	br	8082e4 <__alt_data_end+0xff8082e4>
  808604:	9cc03fcc 	andi	r19,r19,255
  808608:	b811883a 	mov	r8,r23
  80860c:	98034f1e 	bne	r19,zero,80934c <___vfiprintf_internal_r+0x1474>
  808610:	00802074 	movhi	r2,129
  808614:	10bf8004 	addi	r2,r2,-512
  808618:	d8802615 	stw	r2,152(sp)
  80861c:	8880080c 	andi	r2,r17,32
  808620:	1000ac26 	beq	r2,zero,8088d4 <___vfiprintf_internal_r+0x9fc>
  808624:	d9002217 	ldw	r4,136(sp)
  808628:	24c00017 	ldw	r19,0(r4)
  80862c:	25000117 	ldw	r20,4(r4)
  808630:	21000204 	addi	r4,r4,8
  808634:	d9002215 	stw	r4,136(sp)
  808638:	8880004c 	andi	r2,r17,1
  80863c:	1001e726 	beq	r2,zero,808ddc <___vfiprintf_internal_r+0xf04>
  808640:	9d04b03a 	or	r2,r19,r20
  808644:	10025c1e 	bne	r2,zero,808fb8 <___vfiprintf_internal_r+0x10e0>
  808648:	d8001d85 	stb	zero,118(sp)
  80864c:	80024416 	blt	r16,zero,808f60 <___vfiprintf_internal_r+0x1088>
  808650:	00bfdfc4 	movi	r2,-129
  808654:	88a2703a 	and	r17,r17,r2
  808658:	003f1d06 	br	8082d0 <__alt_data_end+0xff8082d0>
  80865c:	d8c02217 	ldw	r3,136(sp)
  808660:	04c00044 	movi	r19,1
  808664:	b811883a 	mov	r8,r23
  808668:	18800017 	ldw	r2,0(r3)
  80866c:	18c00104 	addi	r3,r3,4
  808670:	d8001d85 	stb	zero,118(sp)
  808674:	d8801005 	stb	r2,64(sp)
  808678:	d8c02215 	stw	r3,136(sp)
  80867c:	9829883a 	mov	r20,r19
  808680:	ddc01004 	addi	r23,sp,64
  808684:	0021883a 	mov	r16,zero
  808688:	003f1e06 	br	808304 <__alt_data_end+0xff808304>
  80868c:	9cc03fcc 	andi	r19,r19,255
  808690:	b811883a 	mov	r8,r23
  808694:	9803331e 	bne	r19,zero,809364 <___vfiprintf_internal_r+0x148c>
  808698:	8880080c 	andi	r2,r17,32
  80869c:	10004826 	beq	r2,zero,8087c0 <___vfiprintf_internal_r+0x8e8>
  8086a0:	d9002217 	ldw	r4,136(sp)
  8086a4:	20800117 	ldw	r2,4(r4)
  8086a8:	24c00017 	ldw	r19,0(r4)
  8086ac:	21000204 	addi	r4,r4,8
  8086b0:	d9002215 	stw	r4,136(sp)
  8086b4:	1029883a 	mov	r20,r2
  8086b8:	10024c16 	blt	r2,zero,808fec <___vfiprintf_internal_r+0x1114>
  8086bc:	dd401d83 	ldbu	r21,118(sp)
  8086c0:	80007116 	blt	r16,zero,808888 <___vfiprintf_internal_r+0x9b0>
  8086c4:	00ffdfc4 	movi	r3,-129
  8086c8:	9d04b03a 	or	r2,r19,r20
  8086cc:	88e2703a 	and	r17,r17,r3
  8086d0:	1000d126 	beq	r2,zero,808a18 <___vfiprintf_internal_r+0xb40>
  8086d4:	a0023526 	beq	r20,zero,808fac <___vfiprintf_internal_r+0x10d4>
  8086d8:	ddc01a04 	addi	r23,sp,104
  8086dc:	4039883a 	mov	fp,r8
  8086e0:	9809883a 	mov	r4,r19
  8086e4:	a00b883a 	mov	r5,r20
  8086e8:	01800284 	movi	r6,10
  8086ec:	000f883a 	mov	r7,zero
  8086f0:	080a4040 	call	80a404 <__umoddi3>
  8086f4:	10800c04 	addi	r2,r2,48
  8086f8:	bdffffc4 	addi	r23,r23,-1
  8086fc:	9809883a 	mov	r4,r19
  808700:	a00b883a 	mov	r5,r20
  808704:	b8800005 	stb	r2,0(r23)
  808708:	01800284 	movi	r6,10
  80870c:	000f883a 	mov	r7,zero
  808710:	0809e080 	call	809e08 <__udivdi3>
  808714:	1027883a 	mov	r19,r2
  808718:	10c4b03a 	or	r2,r2,r3
  80871c:	1829883a 	mov	r20,r3
  808720:	103fef1e 	bne	r2,zero,8086e0 <__alt_data_end+0xff8086e0>
  808724:	d9001e17 	ldw	r4,120(sp)
  808728:	e011883a 	mov	r8,fp
  80872c:	25e9c83a 	sub	r20,r4,r23
  808730:	003eec06 	br	8082e4 <__alt_data_end+0xff8082e4>
  808734:	d8802307 	ldb	r2,140(sp)
  808738:	1002361e 	bne	r2,zero,809014 <___vfiprintf_internal_r+0x113c>
  80873c:	00c00804 	movi	r3,32
  808740:	d8c02305 	stb	r3,140(sp)
  808744:	04c00044 	movi	r19,1
  808748:	b0c00007 	ldb	r3,0(r22)
  80874c:	003e3f06 	br	80804c <__alt_data_end+0xff80804c>
  808750:	8c400054 	ori	r17,r17,1
  808754:	b0c00007 	ldb	r3,0(r22)
  808758:	003e3c06 	br	80804c <__alt_data_end+0xff80804c>
  80875c:	8c402014 	ori	r17,r17,128
  808760:	b0c00007 	ldb	r3,0(r22)
  808764:	003e3906 	br	80804c <__alt_data_end+0xff80804c>
  808768:	dc002715 	stw	r16,156(sp)
  80876c:	d8002515 	stw	zero,148(sp)
  808770:	1f3ff404 	addi	fp,r3,-48
  808774:	0009883a 	mov	r4,zero
  808778:	b021883a 	mov	r16,r22
  80877c:	01400284 	movi	r5,10
  808780:	080ab7c0 	call	80ab7c <__mulsi3>
  808784:	80c00007 	ldb	r3,0(r16)
  808788:	e089883a 	add	r4,fp,r2
  80878c:	b5800044 	addi	r22,r22,1
  808790:	1f3ff404 	addi	fp,r3,-48
  808794:	b021883a 	mov	r16,r22
  808798:	af3ff82e 	bgeu	r21,fp,80877c <__alt_data_end+0xff80877c>
  80879c:	d9002515 	stw	r4,148(sp)
  8087a0:	dc002717 	ldw	r16,156(sp)
  8087a4:	003e2a06 	br	808050 <__alt_data_end+0xff808050>
  8087a8:	9cc03fcc 	andi	r19,r19,255
  8087ac:	b811883a 	mov	r8,r23
  8087b0:	9802e91e 	bne	r19,zero,809358 <___vfiprintf_internal_r+0x1480>
  8087b4:	8c400414 	ori	r17,r17,16
  8087b8:	8880080c 	andi	r2,r17,32
  8087bc:	103fb81e 	bne	r2,zero,8086a0 <__alt_data_end+0xff8086a0>
  8087c0:	8880040c 	andi	r2,r17,16
  8087c4:	10022e26 	beq	r2,zero,809080 <___vfiprintf_internal_r+0x11a8>
  8087c8:	d9402217 	ldw	r5,136(sp)
  8087cc:	2cc00017 	ldw	r19,0(r5)
  8087d0:	29400104 	addi	r5,r5,4
  8087d4:	d9402215 	stw	r5,136(sp)
  8087d8:	9829d7fa 	srai	r20,r19,31
  8087dc:	a005883a 	mov	r2,r20
  8087e0:	003fb506 	br	8086b8 <__alt_data_end+0xff8086b8>
  8087e4:	9cc03fcc 	andi	r19,r19,255
  8087e8:	b811883a 	mov	r8,r23
  8087ec:	9802fa1e 	bne	r19,zero,8093d8 <___vfiprintf_internal_r+0x1500>
  8087f0:	8c400414 	ori	r17,r17,16
  8087f4:	8880080c 	andi	r2,r17,32
  8087f8:	103f661e 	bne	r2,zero,808594 <__alt_data_end+0xff808594>
  8087fc:	8880040c 	andi	r2,r17,16
  808800:	10020626 	beq	r2,zero,80901c <___vfiprintf_internal_r+0x1144>
  808804:	d9402217 	ldw	r5,136(sp)
  808808:	d8001d85 	stb	zero,118(sp)
  80880c:	0029883a 	mov	r20,zero
  808810:	28800104 	addi	r2,r5,4
  808814:	2cc00017 	ldw	r19,0(r5)
  808818:	80020816 	blt	r16,zero,80903c <___vfiprintf_internal_r+0x1164>
  80881c:	00ffdfc4 	movi	r3,-129
  808820:	d8802215 	stw	r2,136(sp)
  808824:	88e2703a 	and	r17,r17,r3
  808828:	983f651e 	bne	r19,zero,8085c0 <__alt_data_end+0xff8085c0>
  80882c:	002b883a 	mov	r21,zero
  808830:	8002cf26 	beq	r16,zero,809370 <___vfiprintf_internal_r+0x1498>
  808834:	0027883a 	mov	r19,zero
  808838:	0029883a 	mov	r20,zero
  80883c:	003f6106 	br	8085c4 <__alt_data_end+0xff8085c4>
  808840:	9cc03fcc 	andi	r19,r19,255
  808844:	b811883a 	mov	r8,r23
  808848:	9802e01e 	bne	r19,zero,8093cc <___vfiprintf_internal_r+0x14f4>
  80884c:	8c400414 	ori	r17,r17,16
  808850:	8880080c 	andi	r2,r17,32
  808854:	1000641e 	bne	r2,zero,8089e8 <___vfiprintf_internal_r+0xb10>
  808858:	8880040c 	andi	r2,r17,16
  80885c:	1001c81e 	bne	r2,zero,808f80 <___vfiprintf_internal_r+0x10a8>
  808860:	8880100c 	andi	r2,r17,64
  808864:	d8001d85 	stb	zero,118(sp)
  808868:	1002281e 	bne	r2,zero,80910c <___vfiprintf_internal_r+0x1234>
  80886c:	d9002217 	ldw	r4,136(sp)
  808870:	0029883a 	mov	r20,zero
  808874:	20800104 	addi	r2,r4,4
  808878:	24c00017 	ldw	r19,0(r4)
  80887c:	8001c60e 	bge	r16,zero,808f98 <___vfiprintf_internal_r+0x10c0>
  808880:	d8802215 	stw	r2,136(sp)
  808884:	002b883a 	mov	r21,zero
  808888:	9d04b03a 	or	r2,r19,r20
  80888c:	103f911e 	bne	r2,zero,8086d4 <__alt_data_end+0xff8086d4>
  808890:	00800044 	movi	r2,1
  808894:	10803fcc 	andi	r2,r2,255
  808898:	00c00044 	movi	r3,1
  80889c:	10c05f26 	beq	r2,r3,808a1c <___vfiprintf_internal_r+0xb44>
  8088a0:	00c00084 	movi	r3,2
  8088a4:	10ffe31e 	bne	r2,r3,808834 <__alt_data_end+0xff808834>
  8088a8:	0027883a 	mov	r19,zero
  8088ac:	0029883a 	mov	r20,zero
  8088b0:	00015106 	br	808df8 <___vfiprintf_internal_r+0xf20>
  8088b4:	9cc03fcc 	andi	r19,r19,255
  8088b8:	b811883a 	mov	r8,r23
  8088bc:	9802c01e 	bne	r19,zero,8093c0 <___vfiprintf_internal_r+0x14e8>
  8088c0:	01402074 	movhi	r5,129
  8088c4:	297f7b04 	addi	r5,r5,-532
  8088c8:	d9402615 	stw	r5,152(sp)
  8088cc:	8880080c 	andi	r2,r17,32
  8088d0:	103f541e 	bne	r2,zero,808624 <__alt_data_end+0xff808624>
  8088d4:	8880040c 	andi	r2,r17,16
  8088d8:	1001f226 	beq	r2,zero,8090a4 <___vfiprintf_internal_r+0x11cc>
  8088dc:	d9402217 	ldw	r5,136(sp)
  8088e0:	0029883a 	mov	r20,zero
  8088e4:	2cc00017 	ldw	r19,0(r5)
  8088e8:	29400104 	addi	r5,r5,4
  8088ec:	d9402215 	stw	r5,136(sp)
  8088f0:	003f5106 	br	808638 <__alt_data_end+0xff808638>
  8088f4:	d8c02217 	ldw	r3,136(sp)
  8088f8:	b811883a 	mov	r8,r23
  8088fc:	d8001d85 	stb	zero,118(sp)
  808900:	1dc00017 	ldw	r23,0(r3)
  808904:	1f000104 	addi	fp,r3,4
  808908:	b8025926 	beq	r23,zero,809270 <___vfiprintf_internal_r+0x1398>
  80890c:	80023316 	blt	r16,zero,8091dc <___vfiprintf_internal_r+0x1304>
  808910:	800d883a 	mov	r6,r16
  808914:	000b883a 	mov	r5,zero
  808918:	b809883a 	mov	r4,r23
  80891c:	da002a15 	stw	r8,168(sp)
  808920:	08060180 	call	806018 <memchr>
  808924:	da002a17 	ldw	r8,168(sp)
  808928:	10026826 	beq	r2,zero,8092cc <___vfiprintf_internal_r+0x13f4>
  80892c:	15e9c83a 	sub	r20,r2,r23
  808930:	dd401d83 	ldbu	r21,118(sp)
  808934:	df002215 	stw	fp,136(sp)
  808938:	0021883a 	mov	r16,zero
  80893c:	003e6906 	br	8082e4 <__alt_data_end+0xff8082e4>
  808940:	9cc03fcc 	andi	r19,r19,255
  808944:	b811883a 	mov	r8,r23
  808948:	983fc126 	beq	r19,zero,808850 <__alt_data_end+0xff808850>
  80894c:	d8c02303 	ldbu	r3,140(sp)
  808950:	d8c01d85 	stb	r3,118(sp)
  808954:	003fbe06 	br	808850 <__alt_data_end+0xff808850>
  808958:	d9002217 	ldw	r4,136(sp)
  80895c:	d9402217 	ldw	r5,136(sp)
  808960:	21000017 	ldw	r4,0(r4)
  808964:	28800104 	addi	r2,r5,4
  808968:	d9002515 	stw	r4,148(sp)
  80896c:	203e3d16 	blt	r4,zero,808264 <__alt_data_end+0xff808264>
  808970:	d8802215 	stw	r2,136(sp)
  808974:	b0c00007 	ldb	r3,0(r22)
  808978:	003db406 	br	80804c <__alt_data_end+0xff80804c>
  80897c:	00c00ac4 	movi	r3,43
  808980:	d8c02305 	stb	r3,140(sp)
  808984:	04c00044 	movi	r19,1
  808988:	b0c00007 	ldb	r3,0(r22)
  80898c:	003daf06 	br	80804c <__alt_data_end+0xff80804c>
  808990:	b0c00007 	ldb	r3,0(r22)
  808994:	01000a84 	movi	r4,42
  808998:	b4000044 	addi	r16,r22,1
  80899c:	19025e26 	beq	r3,r4,809318 <___vfiprintf_internal_r+0x1440>
  8089a0:	1f3ff404 	addi	fp,r3,-48
  8089a4:	0009883a 	mov	r4,zero
  8089a8:	af025236 	bltu	r21,fp,8092f4 <___vfiprintf_internal_r+0x141c>
  8089ac:	01400284 	movi	r5,10
  8089b0:	080ab7c0 	call	80ab7c <__mulsi3>
  8089b4:	80c00007 	ldb	r3,0(r16)
  8089b8:	1709883a 	add	r4,r2,fp
  8089bc:	85800044 	addi	r22,r16,1
  8089c0:	1f3ff404 	addi	fp,r3,-48
  8089c4:	b021883a 	mov	r16,r22
  8089c8:	af3ff82e 	bgeu	r21,fp,8089ac <__alt_data_end+0xff8089ac>
  8089cc:	2021883a 	mov	r16,r4
  8089d0:	203d9f0e 	bge	r4,zero,808050 <__alt_data_end+0xff808050>
  8089d4:	043fffc4 	movi	r16,-1
  8089d8:	003d9d06 	br	808050 <__alt_data_end+0xff808050>
  8089dc:	8c401014 	ori	r17,r17,64
  8089e0:	b0c00007 	ldb	r3,0(r22)
  8089e4:	003d9906 	br	80804c <__alt_data_end+0xff80804c>
  8089e8:	d9002217 	ldw	r4,136(sp)
  8089ec:	d8001d85 	stb	zero,118(sp)
  8089f0:	20c00204 	addi	r3,r4,8
  8089f4:	24c00017 	ldw	r19,0(r4)
  8089f8:	25000117 	ldw	r20,4(r4)
  8089fc:	8001e716 	blt	r16,zero,80919c <___vfiprintf_internal_r+0x12c4>
  808a00:	013fdfc4 	movi	r4,-129
  808a04:	9d04b03a 	or	r2,r19,r20
  808a08:	d8c02215 	stw	r3,136(sp)
  808a0c:	8922703a 	and	r17,r17,r4
  808a10:	002b883a 	mov	r21,zero
  808a14:	103f2f1e 	bne	r2,zero,8086d4 <__alt_data_end+0xff8086d4>
  808a18:	803e2f26 	beq	r16,zero,8082d8 <__alt_data_end+0xff8082d8>
  808a1c:	0027883a 	mov	r19,zero
  808a20:	9cc00c04 	addi	r19,r19,48
  808a24:	dcc019c5 	stb	r19,103(sp)
  808a28:	dd002817 	ldw	r20,160(sp)
  808a2c:	ddc019c4 	addi	r23,sp,103
  808a30:	003e2c06 	br	8082e4 <__alt_data_end+0xff8082e4>
  808a34:	9cc03fcc 	andi	r19,r19,255
  808a38:	b811883a 	mov	r8,r23
  808a3c:	9802571e 	bne	r19,zero,80939c <___vfiprintf_internal_r+0x14c4>
  808a40:	18005726 	beq	r3,zero,808ba0 <___vfiprintf_internal_r+0xcc8>
  808a44:	04c00044 	movi	r19,1
  808a48:	d8c01005 	stb	r3,64(sp)
  808a4c:	d8001d85 	stb	zero,118(sp)
  808a50:	9829883a 	mov	r20,r19
  808a54:	ddc01004 	addi	r23,sp,64
  808a58:	003f0a06 	br	808684 <__alt_data_end+0xff808684>
  808a5c:	d9402017 	ldw	r5,128(sp)
  808a60:	d9002117 	ldw	r4,132(sp)
  808a64:	d9801a04 	addi	r6,sp,104
  808a68:	da802a15 	stw	r10,168(sp)
  808a6c:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808a70:	da802a17 	ldw	r10,168(sp)
  808a74:	1000501e 	bne	r2,zero,808bb8 <___vfiprintf_internal_r+0xce0>
  808a78:	d9801b17 	ldw	r6,108(sp)
  808a7c:	d8801c17 	ldw	r2,112(sp)
  808a80:	d811883a 	mov	r8,sp
  808a84:	31000044 	addi	r4,r6,1
  808a88:	003e3606 	br	808364 <__alt_data_end+0xff808364>
  808a8c:	d9001b17 	ldw	r4,108(sp)
  808a90:	d8801c17 	ldw	r2,112(sp)
  808a94:	21400044 	addi	r5,r4,1
  808a98:	d9801d87 	ldb	r6,118(sp)
  808a9c:	303e5226 	beq	r6,zero,8083e8 <__alt_data_end+0xff8083e8>
  808aa0:	01800044 	movi	r6,1
  808aa4:	d9001d84 	addi	r4,sp,118
  808aa8:	1185883a 	add	r2,r2,r6
  808aac:	41000015 	stw	r4,0(r8)
  808ab0:	41800115 	stw	r6,4(r8)
  808ab4:	d8801c15 	stw	r2,112(sp)
  808ab8:	d9401b15 	stw	r5,108(sp)
  808abc:	010001c4 	movi	r4,7
  808ac0:	2140b00e 	bge	r4,r5,808d84 <___vfiprintf_internal_r+0xeac>
  808ac4:	1000f61e 	bne	r2,zero,808ea0 <___vfiprintf_internal_r+0xfc8>
  808ac8:	3800b31e 	bne	r7,zero,808d98 <___vfiprintf_internal_r+0xec0>
  808acc:	0009883a 	mov	r4,zero
  808ad0:	300b883a 	mov	r5,r6
  808ad4:	d811883a 	mov	r8,sp
  808ad8:	01802004 	movi	r6,128
  808adc:	19be5226 	beq	r3,r6,808428 <__alt_data_end+0xff808428>
  808ae0:	8521c83a 	sub	r16,r16,r20
  808ae4:	043e790e 	bge	zero,r16,8084cc <__alt_data_end+0xff8084cc>
  808ae8:	05400404 	movi	r21,16
  808aec:	ac01b00e 	bge	r21,r16,8091b0 <___vfiprintf_internal_r+0x12d8>
  808af0:	01402074 	movhi	r5,129
  808af4:	297fe104 	addi	r5,r5,-124
  808af8:	d9402315 	stw	r5,140(sp)
  808afc:	070001c4 	movi	fp,7
  808b00:	00000506 	br	808b18 <___vfiprintf_internal_r+0xc40>
  808b04:	21400084 	addi	r5,r4,2
  808b08:	42000204 	addi	r8,r8,8
  808b0c:	1809883a 	mov	r4,r3
  808b10:	843ffc04 	addi	r16,r16,-16
  808b14:	ac000d0e 	bge	r21,r16,808b4c <___vfiprintf_internal_r+0xc74>
  808b18:	10800404 	addi	r2,r2,16
  808b1c:	20c00044 	addi	r3,r4,1
  808b20:	44800015 	stw	r18,0(r8)
  808b24:	45400115 	stw	r21,4(r8)
  808b28:	d8801c15 	stw	r2,112(sp)
  808b2c:	d8c01b15 	stw	r3,108(sp)
  808b30:	e0fff40e 	bge	fp,r3,808b04 <__alt_data_end+0xff808b04>
  808b34:	1000101e 	bne	r2,zero,808b78 <___vfiprintf_internal_r+0xca0>
  808b38:	843ffc04 	addi	r16,r16,-16
  808b3c:	01400044 	movi	r5,1
  808b40:	0009883a 	mov	r4,zero
  808b44:	d811883a 	mov	r8,sp
  808b48:	ac3ff316 	blt	r21,r16,808b18 <__alt_data_end+0xff808b18>
  808b4c:	d8c02317 	ldw	r3,140(sp)
  808b50:	1405883a 	add	r2,r2,r16
  808b54:	44000115 	stw	r16,4(r8)
  808b58:	40c00015 	stw	r3,0(r8)
  808b5c:	d8801c15 	stw	r2,112(sp)
  808b60:	d9401b15 	stw	r5,108(sp)
  808b64:	00c001c4 	movi	r3,7
  808b68:	19401916 	blt	r3,r5,808bd0 <___vfiprintf_internal_r+0xcf8>
  808b6c:	42000204 	addi	r8,r8,8
  808b70:	29400044 	addi	r5,r5,1
  808b74:	003e5506 	br	8084cc <__alt_data_end+0xff8084cc>
  808b78:	d9402017 	ldw	r5,128(sp)
  808b7c:	d9002117 	ldw	r4,132(sp)
  808b80:	d9801a04 	addi	r6,sp,104
  808b84:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808b88:	10000b1e 	bne	r2,zero,808bb8 <___vfiprintf_internal_r+0xce0>
  808b8c:	d9001b17 	ldw	r4,108(sp)
  808b90:	d8801c17 	ldw	r2,112(sp)
  808b94:	d811883a 	mov	r8,sp
  808b98:	21400044 	addi	r5,r4,1
  808b9c:	003fdc06 	br	808b10 <__alt_data_end+0xff808b10>
  808ba0:	d8801c17 	ldw	r2,112(sp)
  808ba4:	10000426 	beq	r2,zero,808bb8 <___vfiprintf_internal_r+0xce0>
  808ba8:	d9402017 	ldw	r5,128(sp)
  808bac:	d9002117 	ldw	r4,132(sp)
  808bb0:	d9801a04 	addi	r6,sp,104
  808bb4:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808bb8:	d9402017 	ldw	r5,128(sp)
  808bbc:	2880030b 	ldhu	r2,12(r5)
  808bc0:	1080100c 	andi	r2,r2,64
  808bc4:	10014d1e 	bne	r2,zero,8090fc <___vfiprintf_internal_r+0x1224>
  808bc8:	d8802417 	ldw	r2,144(sp)
  808bcc:	003d9706 	br	80822c <__alt_data_end+0xff80822c>
  808bd0:	1000d21e 	bne	r2,zero,808f1c <___vfiprintf_internal_r+0x1044>
  808bd4:	00c00044 	movi	r3,1
  808bd8:	a005883a 	mov	r2,r20
  808bdc:	ddc00015 	stw	r23,0(sp)
  808be0:	dd000115 	stw	r20,4(sp)
  808be4:	dd001c15 	stw	r20,112(sp)
  808be8:	d8c01b15 	stw	r3,108(sp)
  808bec:	d811883a 	mov	r8,sp
  808bf0:	42000204 	addi	r8,r8,8
  808bf4:	8c40010c 	andi	r17,r17,4
  808bf8:	88004026 	beq	r17,zero,808cfc <___vfiprintf_internal_r+0xe24>
  808bfc:	d9002517 	ldw	r4,148(sp)
  808c00:	24e3c83a 	sub	r17,r4,r19
  808c04:	04403d0e 	bge	zero,r17,808cfc <___vfiprintf_internal_r+0xe24>
  808c08:	04000404 	movi	r16,16
  808c0c:	8441a90e 	bge	r16,r17,8092b4 <___vfiprintf_internal_r+0x13dc>
  808c10:	00c02074 	movhi	r3,129
  808c14:	18ffe504 	addi	r3,r3,-108
  808c18:	d9001b17 	ldw	r4,108(sp)
  808c1c:	d8c02315 	stw	r3,140(sp)
  808c20:	050001c4 	movi	r20,7
  808c24:	dd402117 	ldw	r21,132(sp)
  808c28:	ddc02017 	ldw	r23,128(sp)
  808c2c:	00000506 	br	808c44 <___vfiprintf_internal_r+0xd6c>
  808c30:	21400084 	addi	r5,r4,2
  808c34:	42000204 	addi	r8,r8,8
  808c38:	1809883a 	mov	r4,r3
  808c3c:	8c7ffc04 	addi	r17,r17,-16
  808c40:	84400f0e 	bge	r16,r17,808c80 <___vfiprintf_internal_r+0xda8>
  808c44:	01402074 	movhi	r5,129
  808c48:	10800404 	addi	r2,r2,16
  808c4c:	20c00044 	addi	r3,r4,1
  808c50:	297fe504 	addi	r5,r5,-108
  808c54:	41400015 	stw	r5,0(r8)
  808c58:	44000115 	stw	r16,4(r8)
  808c5c:	d8801c15 	stw	r2,112(sp)
  808c60:	d8c01b15 	stw	r3,108(sp)
  808c64:	a0fff20e 	bge	r20,r3,808c30 <__alt_data_end+0xff808c30>
  808c68:	1000141e 	bne	r2,zero,808cbc <___vfiprintf_internal_r+0xde4>
  808c6c:	8c7ffc04 	addi	r17,r17,-16
  808c70:	01400044 	movi	r5,1
  808c74:	0009883a 	mov	r4,zero
  808c78:	d811883a 	mov	r8,sp
  808c7c:	847ff116 	blt	r16,r17,808c44 <__alt_data_end+0xff808c44>
  808c80:	d8c02317 	ldw	r3,140(sp)
  808c84:	1445883a 	add	r2,r2,r17
  808c88:	44400115 	stw	r17,4(r8)
  808c8c:	40c00015 	stw	r3,0(r8)
  808c90:	d8801c15 	stw	r2,112(sp)
  808c94:	d9401b15 	stw	r5,108(sp)
  808c98:	00c001c4 	movi	r3,7
  808c9c:	1940170e 	bge	r3,r5,808cfc <___vfiprintf_internal_r+0xe24>
  808ca0:	1000101e 	bne	r2,zero,808ce4 <___vfiprintf_internal_r+0xe0c>
  808ca4:	d8802517 	ldw	r2,148(sp)
  808ca8:	14c11616 	blt	r2,r19,809104 <___vfiprintf_internal_r+0x122c>
  808cac:	d9002417 	ldw	r4,144(sp)
  808cb0:	2089883a 	add	r4,r4,r2
  808cb4:	d9002415 	stw	r4,144(sp)
  808cb8:	003e1806 	br	80851c <__alt_data_end+0xff80851c>
  808cbc:	d9801a04 	addi	r6,sp,104
  808cc0:	b80b883a 	mov	r5,r23
  808cc4:	a809883a 	mov	r4,r21
  808cc8:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808ccc:	103fba1e 	bne	r2,zero,808bb8 <__alt_data_end+0xff808bb8>
  808cd0:	d9001b17 	ldw	r4,108(sp)
  808cd4:	d8801c17 	ldw	r2,112(sp)
  808cd8:	d811883a 	mov	r8,sp
  808cdc:	21400044 	addi	r5,r4,1
  808ce0:	003fd606 	br	808c3c <__alt_data_end+0xff808c3c>
  808ce4:	d9402017 	ldw	r5,128(sp)
  808ce8:	d9002117 	ldw	r4,132(sp)
  808cec:	d9801a04 	addi	r6,sp,104
  808cf0:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808cf4:	103fb01e 	bne	r2,zero,808bb8 <__alt_data_end+0xff808bb8>
  808cf8:	d8801c17 	ldw	r2,112(sp)
  808cfc:	d8c02517 	ldw	r3,148(sp)
  808d00:	1cc0010e 	bge	r3,r19,808d08 <___vfiprintf_internal_r+0xe30>
  808d04:	9807883a 	mov	r3,r19
  808d08:	d9002417 	ldw	r4,144(sp)
  808d0c:	20c9883a 	add	r4,r4,r3
  808d10:	d9002415 	stw	r4,144(sp)
  808d14:	103e0126 	beq	r2,zero,80851c <__alt_data_end+0xff80851c>
  808d18:	d9402017 	ldw	r5,128(sp)
  808d1c:	d9002117 	ldw	r4,132(sp)
  808d20:	d9801a04 	addi	r6,sp,104
  808d24:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808d28:	103dfc26 	beq	r2,zero,80851c <__alt_data_end+0xff80851c>
  808d2c:	003fa206 	br	808bb8 <__alt_data_end+0xff808bb8>
  808d30:	d9402017 	ldw	r5,128(sp)
  808d34:	d9002117 	ldw	r4,132(sp)
  808d38:	d9801a04 	addi	r6,sp,104
  808d3c:	d9c02b15 	stw	r7,172(sp)
  808d40:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808d44:	d9c02b17 	ldw	r7,172(sp)
  808d48:	103f9b1e 	bne	r2,zero,808bb8 <__alt_data_end+0xff808bb8>
  808d4c:	d9001b17 	ldw	r4,108(sp)
  808d50:	d8801c17 	ldw	r2,112(sp)
  808d54:	d811883a 	mov	r8,sp
  808d58:	21800044 	addi	r6,r4,1
  808d5c:	003dbf06 	br	80845c <__alt_data_end+0xff80845c>
  808d60:	1000d81e 	bne	r2,zero,8090c4 <___vfiprintf_internal_r+0x11ec>
  808d64:	d9001d87 	ldb	r4,118(sp)
  808d68:	20000a26 	beq	r4,zero,808d94 <___vfiprintf_internal_r+0xebc>
  808d6c:	00800044 	movi	r2,1
  808d70:	d9001d84 	addi	r4,sp,118
  808d74:	100b883a 	mov	r5,r2
  808d78:	d9000015 	stw	r4,0(sp)
  808d7c:	d8800115 	stw	r2,4(sp)
  808d80:	d811883a 	mov	r8,sp
  808d84:	2809883a 	mov	r4,r5
  808d88:	42000204 	addi	r8,r8,8
  808d8c:	29400044 	addi	r5,r5,1
  808d90:	003d9506 	br	8083e8 <__alt_data_end+0xff8083e8>
  808d94:	3800fd26 	beq	r7,zero,80918c <___vfiprintf_internal_r+0x12b4>
  808d98:	00800084 	movi	r2,2
  808d9c:	d9001d04 	addi	r4,sp,116
  808da0:	d9000015 	stw	r4,0(sp)
  808da4:	d8800115 	stw	r2,4(sp)
  808da8:	01400044 	movi	r5,1
  808dac:	d811883a 	mov	r8,sp
  808db0:	2809883a 	mov	r4,r5
  808db4:	42000204 	addi	r8,r8,8
  808db8:	29400044 	addi	r5,r5,1
  808dbc:	003f4606 	br	808ad8 <__alt_data_end+0xff808ad8>
  808dc0:	d8802517 	ldw	r2,148(sp)
  808dc4:	14c0010e 	bge	r2,r19,808dcc <___vfiprintf_internal_r+0xef4>
  808dc8:	9805883a 	mov	r2,r19
  808dcc:	d9402417 	ldw	r5,144(sp)
  808dd0:	288b883a 	add	r5,r5,r2
  808dd4:	d9402415 	stw	r5,144(sp)
  808dd8:	003dd006 	br	80851c <__alt_data_end+0xff80851c>
  808ddc:	d8001d85 	stb	zero,118(sp)
  808de0:	80005d16 	blt	r16,zero,808f58 <___vfiprintf_internal_r+0x1080>
  808de4:	00ffdfc4 	movi	r3,-129
  808de8:	9d04b03a 	or	r2,r19,r20
  808dec:	88e2703a 	and	r17,r17,r3
  808df0:	103d3726 	beq	r2,zero,8082d0 <__alt_data_end+0xff8082d0>
  808df4:	002b883a 	mov	r21,zero
  808df8:	d9002617 	ldw	r4,152(sp)
  808dfc:	ddc01a04 	addi	r23,sp,104
  808e00:	988003cc 	andi	r2,r19,15
  808e04:	a006973a 	slli	r3,r20,28
  808e08:	2085883a 	add	r2,r4,r2
  808e0c:	9826d13a 	srli	r19,r19,4
  808e10:	10800003 	ldbu	r2,0(r2)
  808e14:	a028d13a 	srli	r20,r20,4
  808e18:	bdffffc4 	addi	r23,r23,-1
  808e1c:	1ce6b03a 	or	r19,r3,r19
  808e20:	b8800005 	stb	r2,0(r23)
  808e24:	9d04b03a 	or	r2,r19,r20
  808e28:	103ff51e 	bne	r2,zero,808e00 <__alt_data_end+0xff808e00>
  808e2c:	d8801e17 	ldw	r2,120(sp)
  808e30:	15e9c83a 	sub	r20,r2,r23
  808e34:	003d2b06 	br	8082e4 <__alt_data_end+0xff8082e4>
  808e38:	d9402017 	ldw	r5,128(sp)
  808e3c:	d9002117 	ldw	r4,132(sp)
  808e40:	d9801a04 	addi	r6,sp,104
  808e44:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808e48:	103f5b1e 	bne	r2,zero,808bb8 <__alt_data_end+0xff808bb8>
  808e4c:	d8801c17 	ldw	r2,112(sp)
  808e50:	d811883a 	mov	r8,sp
  808e54:	003f6706 	br	808bf4 <__alt_data_end+0xff808bf4>
  808e58:	d9402017 	ldw	r5,128(sp)
  808e5c:	d9002117 	ldw	r4,132(sp)
  808e60:	d9801a04 	addi	r6,sp,104
  808e64:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808e68:	103f531e 	bne	r2,zero,808bb8 <__alt_data_end+0xff808bb8>
  808e6c:	d811883a 	mov	r8,sp
  808e70:	003cd906 	br	8081d8 <__alt_data_end+0xff8081d8>
  808e74:	10803fcc 	andi	r2,r2,255
  808e78:	1080201c 	xori	r2,r2,128
  808e7c:	10bfe004 	addi	r2,r2,-128
  808e80:	00c00c04 	movi	r3,48
  808e84:	10ffe926 	beq	r2,r3,808e2c <__alt_data_end+0xff808e2c>
  808e88:	b8ffffc5 	stb	r3,-1(r23)
  808e8c:	d8c01e17 	ldw	r3,120(sp)
  808e90:	b8bfffc4 	addi	r2,r23,-1
  808e94:	102f883a 	mov	r23,r2
  808e98:	18a9c83a 	sub	r20,r3,r2
  808e9c:	003d1106 	br	8082e4 <__alt_data_end+0xff8082e4>
  808ea0:	d9402017 	ldw	r5,128(sp)
  808ea4:	d9002117 	ldw	r4,132(sp)
  808ea8:	d9801a04 	addi	r6,sp,104
  808eac:	d8c02a15 	stw	r3,168(sp)
  808eb0:	d9c02b15 	stw	r7,172(sp)
  808eb4:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808eb8:	d8c02a17 	ldw	r3,168(sp)
  808ebc:	d9c02b17 	ldw	r7,172(sp)
  808ec0:	103f3d1e 	bne	r2,zero,808bb8 <__alt_data_end+0xff808bb8>
  808ec4:	d9001b17 	ldw	r4,108(sp)
  808ec8:	d8801c17 	ldw	r2,112(sp)
  808ecc:	d811883a 	mov	r8,sp
  808ed0:	21400044 	addi	r5,r4,1
  808ed4:	003d4406 	br	8083e8 <__alt_data_end+0xff8083e8>
  808ed8:	d9402017 	ldw	r5,128(sp)
  808edc:	d9002117 	ldw	r4,132(sp)
  808ee0:	d9801a04 	addi	r6,sp,104
  808ee4:	d8c02a15 	stw	r3,168(sp)
  808ee8:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808eec:	d8c02a17 	ldw	r3,168(sp)
  808ef0:	103f311e 	bne	r2,zero,808bb8 <__alt_data_end+0xff808bb8>
  808ef4:	d9001b17 	ldw	r4,108(sp)
  808ef8:	d8801c17 	ldw	r2,112(sp)
  808efc:	d811883a 	mov	r8,sp
  808f00:	21400044 	addi	r5,r4,1
  808f04:	003ef406 	br	808ad8 <__alt_data_end+0xff808ad8>
  808f08:	1000bd1e 	bne	r2,zero,809200 <___vfiprintf_internal_r+0x1328>
  808f0c:	01400044 	movi	r5,1
  808f10:	0009883a 	mov	r4,zero
  808f14:	d811883a 	mov	r8,sp
  808f18:	003ef106 	br	808ae0 <__alt_data_end+0xff808ae0>
  808f1c:	d9402017 	ldw	r5,128(sp)
  808f20:	d9002117 	ldw	r4,132(sp)
  808f24:	d9801a04 	addi	r6,sp,104
  808f28:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  808f2c:	103f221e 	bne	r2,zero,808bb8 <__alt_data_end+0xff808bb8>
  808f30:	d9401b17 	ldw	r5,108(sp)
  808f34:	d8801c17 	ldw	r2,112(sp)
  808f38:	d811883a 	mov	r8,sp
  808f3c:	29400044 	addi	r5,r5,1
  808f40:	003d6206 	br	8084cc <__alt_data_end+0xff8084cc>
  808f44:	01402074 	movhi	r5,129
  808f48:	297f8004 	addi	r5,r5,-512
  808f4c:	d9402615 	stw	r5,152(sp)
  808f50:	d8c02215 	stw	r3,136(sp)
  808f54:	1023883a 	mov	r17,r2
  808f58:	9d04b03a 	or	r2,r19,r20
  808f5c:	103fa51e 	bne	r2,zero,808df4 <__alt_data_end+0xff808df4>
  808f60:	002b883a 	mov	r21,zero
  808f64:	00800084 	movi	r2,2
  808f68:	003e4a06 	br	808894 <__alt_data_end+0xff808894>
  808f6c:	01402074 	movhi	r5,129
  808f70:	297f8004 	addi	r5,r5,-512
  808f74:	002b883a 	mov	r21,zero
  808f78:	d9402615 	stw	r5,152(sp)
  808f7c:	003f9e06 	br	808df8 <__alt_data_end+0xff808df8>
  808f80:	d9402217 	ldw	r5,136(sp)
  808f84:	d8001d85 	stb	zero,118(sp)
  808f88:	0029883a 	mov	r20,zero
  808f8c:	28800104 	addi	r2,r5,4
  808f90:	2cc00017 	ldw	r19,0(r5)
  808f94:	803e3a16 	blt	r16,zero,808880 <__alt_data_end+0xff808880>
  808f98:	00ffdfc4 	movi	r3,-129
  808f9c:	d8802215 	stw	r2,136(sp)
  808fa0:	88e2703a 	and	r17,r17,r3
  808fa4:	002b883a 	mov	r21,zero
  808fa8:	983e9b26 	beq	r19,zero,808a18 <__alt_data_end+0xff808a18>
  808fac:	00800244 	movi	r2,9
  808fb0:	14fdc936 	bltu	r2,r19,8086d8 <__alt_data_end+0xff8086d8>
  808fb4:	003e9a06 	br	808a20 <__alt_data_end+0xff808a20>
  808fb8:	00800c04 	movi	r2,48
  808fbc:	d8c01d45 	stb	r3,117(sp)
  808fc0:	d8801d05 	stb	r2,116(sp)
  808fc4:	d8001d85 	stb	zero,118(sp)
  808fc8:	88c00094 	ori	r3,r17,2
  808fcc:	80009c16 	blt	r16,zero,809240 <___vfiprintf_internal_r+0x1368>
  808fd0:	00bfdfc4 	movi	r2,-129
  808fd4:	88a2703a 	and	r17,r17,r2
  808fd8:	8c400094 	ori	r17,r17,2
  808fdc:	002b883a 	mov	r21,zero
  808fe0:	003f8506 	br	808df8 <__alt_data_end+0xff808df8>
  808fe4:	b029883a 	mov	r20,r22
  808fe8:	003c0b06 	br	808018 <__alt_data_end+0xff808018>
  808fec:	04e7c83a 	sub	r19,zero,r19
  808ff0:	05400b44 	movi	r21,45
  808ff4:	9804c03a 	cmpne	r2,r19,zero
  808ff8:	0529c83a 	sub	r20,zero,r20
  808ffc:	dd401d85 	stb	r21,118(sp)
  809000:	a0a9c83a 	sub	r20,r20,r2
  809004:	80009716 	blt	r16,zero,809264 <___vfiprintf_internal_r+0x138c>
  809008:	00bfdfc4 	movi	r2,-129
  80900c:	88a2703a 	and	r17,r17,r2
  809010:	003db006 	br	8086d4 <__alt_data_end+0xff8086d4>
  809014:	b0c00007 	ldb	r3,0(r22)
  809018:	003c0c06 	br	80804c <__alt_data_end+0xff80804c>
  80901c:	8880100c 	andi	r2,r17,64
  809020:	d8001d85 	stb	zero,118(sp)
  809024:	1000461e 	bne	r2,zero,809140 <___vfiprintf_internal_r+0x1268>
  809028:	d9002217 	ldw	r4,136(sp)
  80902c:	0029883a 	mov	r20,zero
  809030:	20800104 	addi	r2,r4,4
  809034:	24c00017 	ldw	r19,0(r4)
  809038:	803df80e 	bge	r16,zero,80881c <__alt_data_end+0xff80881c>
  80903c:	9d06b03a 	or	r3,r19,r20
  809040:	d8802215 	stw	r2,136(sp)
  809044:	183d5e1e 	bne	r3,zero,8085c0 <__alt_data_end+0xff8085c0>
  809048:	002b883a 	mov	r21,zero
  80904c:	0005883a 	mov	r2,zero
  809050:	003e1006 	br	808894 <__alt_data_end+0xff808894>
  809054:	8880040c 	andi	r2,r17,16
  809058:	1000321e 	bne	r2,zero,809124 <___vfiprintf_internal_r+0x124c>
  80905c:	8c40100c 	andi	r17,r17,64
  809060:	88008d26 	beq	r17,zero,809298 <___vfiprintf_internal_r+0x13c0>
  809064:	d9402217 	ldw	r5,136(sp)
  809068:	d8c02417 	ldw	r3,144(sp)
  80906c:	28800017 	ldw	r2,0(r5)
  809070:	29400104 	addi	r5,r5,4
  809074:	d9402215 	stw	r5,136(sp)
  809078:	10c0000d 	sth	r3,0(r2)
  80907c:	003bca06 	br	807fa8 <__alt_data_end+0xff807fa8>
  809080:	8880100c 	andi	r2,r17,64
  809084:	10003a26 	beq	r2,zero,809170 <___vfiprintf_internal_r+0x1298>
  809088:	d8802217 	ldw	r2,136(sp)
  80908c:	14c0000f 	ldh	r19,0(r2)
  809090:	10800104 	addi	r2,r2,4
  809094:	d8802215 	stw	r2,136(sp)
  809098:	9829d7fa 	srai	r20,r19,31
  80909c:	a005883a 	mov	r2,r20
  8090a0:	003d8506 	br	8086b8 <__alt_data_end+0xff8086b8>
  8090a4:	8880100c 	andi	r2,r17,64
  8090a8:	10002b26 	beq	r2,zero,809158 <___vfiprintf_internal_r+0x1280>
  8090ac:	d8802217 	ldw	r2,136(sp)
  8090b0:	0029883a 	mov	r20,zero
  8090b4:	14c0000b 	ldhu	r19,0(r2)
  8090b8:	10800104 	addi	r2,r2,4
  8090bc:	d8802215 	stw	r2,136(sp)
  8090c0:	003d5d06 	br	808638 <__alt_data_end+0xff808638>
  8090c4:	d9402017 	ldw	r5,128(sp)
  8090c8:	d9002117 	ldw	r4,132(sp)
  8090cc:	d9801a04 	addi	r6,sp,104
  8090d0:	d8c02a15 	stw	r3,168(sp)
  8090d4:	d9c02b15 	stw	r7,172(sp)
  8090d8:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  8090dc:	d8c02a17 	ldw	r3,168(sp)
  8090e0:	d9c02b17 	ldw	r7,172(sp)
  8090e4:	103eb41e 	bne	r2,zero,808bb8 <__alt_data_end+0xff808bb8>
  8090e8:	d9001b17 	ldw	r4,108(sp)
  8090ec:	d8801c17 	ldw	r2,112(sp)
  8090f0:	d811883a 	mov	r8,sp
  8090f4:	21400044 	addi	r5,r4,1
  8090f8:	003e6706 	br	808a98 <__alt_data_end+0xff808a98>
  8090fc:	00bfffc4 	movi	r2,-1
  809100:	003c4a06 	br	80822c <__alt_data_end+0xff80822c>
  809104:	9805883a 	mov	r2,r19
  809108:	003ee806 	br	808cac <__alt_data_end+0xff808cac>
  80910c:	d8c02217 	ldw	r3,136(sp)
  809110:	0029883a 	mov	r20,zero
  809114:	18800104 	addi	r2,r3,4
  809118:	1cc0000b 	ldhu	r19,0(r3)
  80911c:	803f9e0e 	bge	r16,zero,808f98 <__alt_data_end+0xff808f98>
  809120:	003dd706 	br	808880 <__alt_data_end+0xff808880>
  809124:	d8c02217 	ldw	r3,136(sp)
  809128:	d9002417 	ldw	r4,144(sp)
  80912c:	18800017 	ldw	r2,0(r3)
  809130:	18c00104 	addi	r3,r3,4
  809134:	d8c02215 	stw	r3,136(sp)
  809138:	11000015 	stw	r4,0(r2)
  80913c:	003b9a06 	br	807fa8 <__alt_data_end+0xff807fa8>
  809140:	d8c02217 	ldw	r3,136(sp)
  809144:	0029883a 	mov	r20,zero
  809148:	18800104 	addi	r2,r3,4
  80914c:	1cc0000b 	ldhu	r19,0(r3)
  809150:	803db20e 	bge	r16,zero,80881c <__alt_data_end+0xff80881c>
  809154:	003fb906 	br	80903c <__alt_data_end+0xff80903c>
  809158:	d9002217 	ldw	r4,136(sp)
  80915c:	0029883a 	mov	r20,zero
  809160:	24c00017 	ldw	r19,0(r4)
  809164:	21000104 	addi	r4,r4,4
  809168:	d9002215 	stw	r4,136(sp)
  80916c:	003d3206 	br	808638 <__alt_data_end+0xff808638>
  809170:	d8c02217 	ldw	r3,136(sp)
  809174:	1cc00017 	ldw	r19,0(r3)
  809178:	18c00104 	addi	r3,r3,4
  80917c:	d8c02215 	stw	r3,136(sp)
  809180:	9829d7fa 	srai	r20,r19,31
  809184:	a005883a 	mov	r2,r20
  809188:	003d4b06 	br	8086b8 <__alt_data_end+0xff8086b8>
  80918c:	0009883a 	mov	r4,zero
  809190:	01400044 	movi	r5,1
  809194:	d811883a 	mov	r8,sp
  809198:	003e4f06 	br	808ad8 <__alt_data_end+0xff808ad8>
  80919c:	d8c02215 	stw	r3,136(sp)
  8091a0:	002b883a 	mov	r21,zero
  8091a4:	003db806 	br	808888 <__alt_data_end+0xff808888>
  8091a8:	d811883a 	mov	r8,sp
  8091ac:	003e9606 	br	808c08 <__alt_data_end+0xff808c08>
  8091b0:	01002074 	movhi	r4,129
  8091b4:	213fe104 	addi	r4,r4,-124
  8091b8:	d9002315 	stw	r4,140(sp)
  8091bc:	003e6306 	br	808b4c <__alt_data_end+0xff808b4c>
  8091c0:	b0c00043 	ldbu	r3,1(r22)
  8091c4:	8c400814 	ori	r17,r17,32
  8091c8:	b5800044 	addi	r22,r22,1
  8091cc:	18c03fcc 	andi	r3,r3,255
  8091d0:	18c0201c 	xori	r3,r3,128
  8091d4:	18ffe004 	addi	r3,r3,-128
  8091d8:	003b9c06 	br	80804c <__alt_data_end+0xff80804c>
  8091dc:	b809883a 	mov	r4,r23
  8091e0:	da002a15 	stw	r8,168(sp)
  8091e4:	08006480 	call	800648 <strlen>
  8091e8:	1029883a 	mov	r20,r2
  8091ec:	dd401d83 	ldbu	r21,118(sp)
  8091f0:	df002215 	stw	fp,136(sp)
  8091f4:	0021883a 	mov	r16,zero
  8091f8:	da002a17 	ldw	r8,168(sp)
  8091fc:	003c3906 	br	8082e4 <__alt_data_end+0xff8082e4>
  809200:	d9402017 	ldw	r5,128(sp)
  809204:	d9002117 	ldw	r4,132(sp)
  809208:	d9801a04 	addi	r6,sp,104
  80920c:	0807dc40 	call	807dc4 <__sprint_r.part.0>
  809210:	103e691e 	bne	r2,zero,808bb8 <__alt_data_end+0xff808bb8>
  809214:	d9001b17 	ldw	r4,108(sp)
  809218:	d8801c17 	ldw	r2,112(sp)
  80921c:	d811883a 	mov	r8,sp
  809220:	21400044 	addi	r5,r4,1
  809224:	003e2e06 	br	808ae0 <__alt_data_end+0xff808ae0>
  809228:	01002074 	movhi	r4,129
  80922c:	213fe504 	addi	r4,r4,-108
  809230:	d9002315 	stw	r4,140(sp)
  809234:	d9001b17 	ldw	r4,108(sp)
  809238:	21000044 	addi	r4,r4,1
  80923c:	003c5e06 	br	8083b8 <__alt_data_end+0xff8083b8>
  809240:	002b883a 	mov	r21,zero
  809244:	00800084 	movi	r2,2
  809248:	10803fcc 	andi	r2,r2,255
  80924c:	01000044 	movi	r4,1
  809250:	11002b26 	beq	r2,r4,809300 <___vfiprintf_internal_r+0x1428>
  809254:	01000084 	movi	r4,2
  809258:	11002b1e 	bne	r2,r4,809308 <___vfiprintf_internal_r+0x1430>
  80925c:	1823883a 	mov	r17,r3
  809260:	003ee506 	br	808df8 <__alt_data_end+0xff808df8>
  809264:	8807883a 	mov	r3,r17
  809268:	00800044 	movi	r2,1
  80926c:	003ff606 	br	809248 <__alt_data_end+0xff809248>
  809270:	00800184 	movi	r2,6
  809274:	1400012e 	bgeu	r2,r16,80927c <___vfiprintf_internal_r+0x13a4>
  809278:	1021883a 	mov	r16,r2
  80927c:	8029883a 	mov	r20,r16
  809280:	8027883a 	mov	r19,r16
  809284:	80002216 	blt	r16,zero,809310 <___vfiprintf_internal_r+0x1438>
  809288:	05c02074 	movhi	r23,129
  80928c:	df002215 	stw	fp,136(sp)
  809290:	bdff8504 	addi	r23,r23,-492
  809294:	003cfb06 	br	808684 <__alt_data_end+0xff808684>
  809298:	d9002217 	ldw	r4,136(sp)
  80929c:	d9402417 	ldw	r5,144(sp)
  8092a0:	20800017 	ldw	r2,0(r4)
  8092a4:	21000104 	addi	r4,r4,4
  8092a8:	d9002215 	stw	r4,136(sp)
  8092ac:	11400015 	stw	r5,0(r2)
  8092b0:	003b3d06 	br	807fa8 <__alt_data_end+0xff807fa8>
  8092b4:	01402074 	movhi	r5,129
  8092b8:	297fe504 	addi	r5,r5,-108
  8092bc:	d9402315 	stw	r5,140(sp)
  8092c0:	d9401b17 	ldw	r5,108(sp)
  8092c4:	29400044 	addi	r5,r5,1
  8092c8:	003e6d06 	br	808c80 <__alt_data_end+0xff808c80>
  8092cc:	8029883a 	mov	r20,r16
  8092d0:	dd401d83 	ldbu	r21,118(sp)
  8092d4:	df002215 	stw	fp,136(sp)
  8092d8:	0021883a 	mov	r16,zero
  8092dc:	003c0106 	br	8082e4 <__alt_data_end+0xff8082e4>
  8092e0:	00c02074 	movhi	r3,129
  8092e4:	18ffe104 	addi	r3,r3,-124
  8092e8:	d8c02315 	stw	r3,140(sp)
  8092ec:	280d883a 	mov	r6,r5
  8092f0:	003c6906 	br	808498 <__alt_data_end+0xff808498>
  8092f4:	802d883a 	mov	r22,r16
  8092f8:	0021883a 	mov	r16,zero
  8092fc:	003b5406 	br	808050 <__alt_data_end+0xff808050>
  809300:	1823883a 	mov	r17,r3
  809304:	003cf306 	br	8086d4 <__alt_data_end+0xff8086d4>
  809308:	1823883a 	mov	r17,r3
  80930c:	003cad06 	br	8085c4 <__alt_data_end+0xff8085c4>
  809310:	0027883a 	mov	r19,zero
  809314:	003fdc06 	br	809288 <__alt_data_end+0xff809288>
  809318:	d9402217 	ldw	r5,136(sp)
  80931c:	8005883a 	mov	r2,r16
  809320:	b0c00043 	ldbu	r3,1(r22)
  809324:	2c000017 	ldw	r16,0(r5)
  809328:	29000104 	addi	r4,r5,4
  80932c:	d9002215 	stw	r4,136(sp)
  809330:	102d883a 	mov	r22,r2
  809334:	803fa50e 	bge	r16,zero,8091cc <__alt_data_end+0xff8091cc>
  809338:	18c03fcc 	andi	r3,r3,255
  80933c:	18c0201c 	xori	r3,r3,128
  809340:	043fffc4 	movi	r16,-1
  809344:	18ffe004 	addi	r3,r3,-128
  809348:	003b4006 	br	80804c <__alt_data_end+0xff80804c>
  80934c:	d9402303 	ldbu	r5,140(sp)
  809350:	d9401d85 	stb	r5,118(sp)
  809354:	003cae06 	br	808610 <__alt_data_end+0xff808610>
  809358:	d8c02303 	ldbu	r3,140(sp)
  80935c:	d8c01d85 	stb	r3,118(sp)
  809360:	003d1406 	br	8087b4 <__alt_data_end+0xff8087b4>
  809364:	d8c02303 	ldbu	r3,140(sp)
  809368:	d8c01d85 	stb	r3,118(sp)
  80936c:	003cca06 	br	808698 <__alt_data_end+0xff808698>
  809370:	8880004c 	andi	r2,r17,1
  809374:	002b883a 	mov	r21,zero
  809378:	10000526 	beq	r2,zero,809390 <___vfiprintf_internal_r+0x14b8>
  80937c:	00800c04 	movi	r2,48
  809380:	d88019c5 	stb	r2,103(sp)
  809384:	dd002817 	ldw	r20,160(sp)
  809388:	ddc019c4 	addi	r23,sp,103
  80938c:	003bd506 	br	8082e4 <__alt_data_end+0xff8082e4>
  809390:	0029883a 	mov	r20,zero
  809394:	ddc01a04 	addi	r23,sp,104
  809398:	003bd206 	br	8082e4 <__alt_data_end+0xff8082e4>
  80939c:	d9002303 	ldbu	r4,140(sp)
  8093a0:	d9001d85 	stb	r4,118(sp)
  8093a4:	003da606 	br	808a40 <__alt_data_end+0xff808a40>
  8093a8:	d8c02303 	ldbu	r3,140(sp)
  8093ac:	d8c01d85 	stb	r3,118(sp)
  8093b0:	003c7606 	br	80858c <__alt_data_end+0xff80858c>
  8093b4:	d8c02303 	ldbu	r3,140(sp)
  8093b8:	d8c01d85 	stb	r3,118(sp)
  8093bc:	003c6506 	br	808554 <__alt_data_end+0xff808554>
  8093c0:	d9002303 	ldbu	r4,140(sp)
  8093c4:	d9001d85 	stb	r4,118(sp)
  8093c8:	003d3d06 	br	8088c0 <__alt_data_end+0xff8088c0>
  8093cc:	d8c02303 	ldbu	r3,140(sp)
  8093d0:	d8c01d85 	stb	r3,118(sp)
  8093d4:	003d1d06 	br	80884c <__alt_data_end+0xff80884c>
  8093d8:	d8c02303 	ldbu	r3,140(sp)
  8093dc:	d8c01d85 	stb	r3,118(sp)
  8093e0:	003d0306 	br	8087f0 <__alt_data_end+0xff8087f0>

008093e4 <__vfiprintf_internal>:
  8093e4:	00802074 	movhi	r2,129
  8093e8:	1086a004 	addi	r2,r2,6784
  8093ec:	300f883a 	mov	r7,r6
  8093f0:	280d883a 	mov	r6,r5
  8093f4:	200b883a 	mov	r5,r4
  8093f8:	11000017 	ldw	r4,0(r2)
  8093fc:	0807ed81 	jmpi	807ed8 <___vfiprintf_internal_r>

00809400 <__sbprintf>:
  809400:	2880030b 	ldhu	r2,12(r5)
  809404:	2ac01917 	ldw	r11,100(r5)
  809408:	2a80038b 	ldhu	r10,14(r5)
  80940c:	2a400717 	ldw	r9,28(r5)
  809410:	2a000917 	ldw	r8,36(r5)
  809414:	defee204 	addi	sp,sp,-1144
  809418:	00c10004 	movi	r3,1024
  80941c:	dc011a15 	stw	r16,1128(sp)
  809420:	10bfff4c 	andi	r2,r2,65533
  809424:	2821883a 	mov	r16,r5
  809428:	d8cb883a 	add	r5,sp,r3
  80942c:	dc811c15 	stw	r18,1136(sp)
  809430:	dc411b15 	stw	r17,1132(sp)
  809434:	dfc11d15 	stw	ra,1140(sp)
  809438:	2025883a 	mov	r18,r4
  80943c:	d881030d 	sth	r2,1036(sp)
  809440:	dac11915 	stw	r11,1124(sp)
  809444:	da81038d 	sth	r10,1038(sp)
  809448:	da410715 	stw	r9,1052(sp)
  80944c:	da010915 	stw	r8,1060(sp)
  809450:	dec10015 	stw	sp,1024(sp)
  809454:	dec10415 	stw	sp,1040(sp)
  809458:	d8c10215 	stw	r3,1032(sp)
  80945c:	d8c10515 	stw	r3,1044(sp)
  809460:	d8010615 	stw	zero,1048(sp)
  809464:	0807ed80 	call	807ed8 <___vfiprintf_internal_r>
  809468:	1023883a 	mov	r17,r2
  80946c:	10000416 	blt	r2,zero,809480 <__sbprintf+0x80>
  809470:	d9410004 	addi	r5,sp,1024
  809474:	9009883a 	mov	r4,r18
  809478:	08046b40 	call	8046b4 <_fflush_r>
  80947c:	10000d1e 	bne	r2,zero,8094b4 <__sbprintf+0xb4>
  809480:	d881030b 	ldhu	r2,1036(sp)
  809484:	1080100c 	andi	r2,r2,64
  809488:	10000326 	beq	r2,zero,809498 <__sbprintf+0x98>
  80948c:	8080030b 	ldhu	r2,12(r16)
  809490:	10801014 	ori	r2,r2,64
  809494:	8080030d 	sth	r2,12(r16)
  809498:	8805883a 	mov	r2,r17
  80949c:	dfc11d17 	ldw	ra,1140(sp)
  8094a0:	dc811c17 	ldw	r18,1136(sp)
  8094a4:	dc411b17 	ldw	r17,1132(sp)
  8094a8:	dc011a17 	ldw	r16,1128(sp)
  8094ac:	dec11e04 	addi	sp,sp,1144
  8094b0:	f800283a 	ret
  8094b4:	047fffc4 	movi	r17,-1
  8094b8:	003ff106 	br	809480 <__alt_data_end+0xff809480>

008094bc <_write_r>:
  8094bc:	defffd04 	addi	sp,sp,-12
  8094c0:	2805883a 	mov	r2,r5
  8094c4:	dc000015 	stw	r16,0(sp)
  8094c8:	04002074 	movhi	r16,129
  8094cc:	dc400115 	stw	r17,4(sp)
  8094d0:	300b883a 	mov	r5,r6
  8094d4:	840d7004 	addi	r16,r16,13760
  8094d8:	2023883a 	mov	r17,r4
  8094dc:	380d883a 	mov	r6,r7
  8094e0:	1009883a 	mov	r4,r2
  8094e4:	dfc00215 	stw	ra,8(sp)
  8094e8:	80000015 	stw	zero,0(r16)
  8094ec:	080dcec0 	call	80dcec <write>
  8094f0:	00ffffc4 	movi	r3,-1
  8094f4:	10c00526 	beq	r2,r3,80950c <_write_r+0x50>
  8094f8:	dfc00217 	ldw	ra,8(sp)
  8094fc:	dc400117 	ldw	r17,4(sp)
  809500:	dc000017 	ldw	r16,0(sp)
  809504:	dec00304 	addi	sp,sp,12
  809508:	f800283a 	ret
  80950c:	80c00017 	ldw	r3,0(r16)
  809510:	183ff926 	beq	r3,zero,8094f8 <__alt_data_end+0xff8094f8>
  809514:	88c00015 	stw	r3,0(r17)
  809518:	003ff706 	br	8094f8 <__alt_data_end+0xff8094f8>

0080951c <_close_r>:
  80951c:	defffd04 	addi	sp,sp,-12
  809520:	dc000015 	stw	r16,0(sp)
  809524:	04002074 	movhi	r16,129
  809528:	dc400115 	stw	r17,4(sp)
  80952c:	840d7004 	addi	r16,r16,13760
  809530:	2023883a 	mov	r17,r4
  809534:	2809883a 	mov	r4,r5
  809538:	dfc00215 	stw	ra,8(sp)
  80953c:	80000015 	stw	zero,0(r16)
  809540:	080d4300 	call	80d430 <close>
  809544:	00ffffc4 	movi	r3,-1
  809548:	10c00526 	beq	r2,r3,809560 <_close_r+0x44>
  80954c:	dfc00217 	ldw	ra,8(sp)
  809550:	dc400117 	ldw	r17,4(sp)
  809554:	dc000017 	ldw	r16,0(sp)
  809558:	dec00304 	addi	sp,sp,12
  80955c:	f800283a 	ret
  809560:	80c00017 	ldw	r3,0(r16)
  809564:	183ff926 	beq	r3,zero,80954c <__alt_data_end+0xff80954c>
  809568:	88c00015 	stw	r3,0(r17)
  80956c:	003ff706 	br	80954c <__alt_data_end+0xff80954c>

00809570 <_calloc_r>:
  809570:	defffe04 	addi	sp,sp,-8
  809574:	2805883a 	mov	r2,r5
  809578:	dc000015 	stw	r16,0(sp)
  80957c:	300b883a 	mov	r5,r6
  809580:	2021883a 	mov	r16,r4
  809584:	1009883a 	mov	r4,r2
  809588:	dfc00115 	stw	ra,4(sp)
  80958c:	080ab7c0 	call	80ab7c <__mulsi3>
  809590:	100b883a 	mov	r5,r2
  809594:	8009883a 	mov	r4,r16
  809598:	080580c0 	call	80580c <_malloc_r>
  80959c:	10002926 	beq	r2,zero,809644 <_calloc_r+0xd4>
  8095a0:	11bfff17 	ldw	r6,-4(r2)
  8095a4:	1021883a 	mov	r16,r2
  8095a8:	00bfff04 	movi	r2,-4
  8095ac:	308c703a 	and	r6,r6,r2
  8095b0:	00c00904 	movi	r3,36
  8095b4:	308d883a 	add	r6,r6,r2
  8095b8:	19801636 	bltu	r3,r6,809614 <_calloc_r+0xa4>
  8095bc:	008004c4 	movi	r2,19
  8095c0:	11800b2e 	bgeu	r2,r6,8095f0 <_calloc_r+0x80>
  8095c4:	80000015 	stw	zero,0(r16)
  8095c8:	80000115 	stw	zero,4(r16)
  8095cc:	008006c4 	movi	r2,27
  8095d0:	11801a2e 	bgeu	r2,r6,80963c <_calloc_r+0xcc>
  8095d4:	80000215 	stw	zero,8(r16)
  8095d8:	80000315 	stw	zero,12(r16)
  8095dc:	30c0151e 	bne	r6,r3,809634 <_calloc_r+0xc4>
  8095e0:	80000415 	stw	zero,16(r16)
  8095e4:	80800604 	addi	r2,r16,24
  8095e8:	80000515 	stw	zero,20(r16)
  8095ec:	00000106 	br	8095f4 <_calloc_r+0x84>
  8095f0:	8005883a 	mov	r2,r16
  8095f4:	10000015 	stw	zero,0(r2)
  8095f8:	10000115 	stw	zero,4(r2)
  8095fc:	10000215 	stw	zero,8(r2)
  809600:	8005883a 	mov	r2,r16
  809604:	dfc00117 	ldw	ra,4(sp)
  809608:	dc000017 	ldw	r16,0(sp)
  80960c:	dec00204 	addi	sp,sp,8
  809610:	f800283a 	ret
  809614:	000b883a 	mov	r5,zero
  809618:	8009883a 	mov	r4,r16
  80961c:	08063a00 	call	8063a0 <memset>
  809620:	8005883a 	mov	r2,r16
  809624:	dfc00117 	ldw	ra,4(sp)
  809628:	dc000017 	ldw	r16,0(sp)
  80962c:	dec00204 	addi	sp,sp,8
  809630:	f800283a 	ret
  809634:	80800404 	addi	r2,r16,16
  809638:	003fee06 	br	8095f4 <__alt_data_end+0xff8095f4>
  80963c:	80800204 	addi	r2,r16,8
  809640:	003fec06 	br	8095f4 <__alt_data_end+0xff8095f4>
  809644:	0005883a 	mov	r2,zero
  809648:	003fee06 	br	809604 <__alt_data_end+0xff809604>

0080964c <_fclose_r>:
  80964c:	28003926 	beq	r5,zero,809734 <_fclose_r+0xe8>
  809650:	defffc04 	addi	sp,sp,-16
  809654:	dc400115 	stw	r17,4(sp)
  809658:	dc000015 	stw	r16,0(sp)
  80965c:	dfc00315 	stw	ra,12(sp)
  809660:	dc800215 	stw	r18,8(sp)
  809664:	2023883a 	mov	r17,r4
  809668:	2821883a 	mov	r16,r5
  80966c:	20000226 	beq	r4,zero,809678 <_fclose_r+0x2c>
  809670:	20800e17 	ldw	r2,56(r4)
  809674:	10002726 	beq	r2,zero,809714 <_fclose_r+0xc8>
  809678:	8080030f 	ldh	r2,12(r16)
  80967c:	1000071e 	bne	r2,zero,80969c <_fclose_r+0x50>
  809680:	0005883a 	mov	r2,zero
  809684:	dfc00317 	ldw	ra,12(sp)
  809688:	dc800217 	ldw	r18,8(sp)
  80968c:	dc400117 	ldw	r17,4(sp)
  809690:	dc000017 	ldw	r16,0(sp)
  809694:	dec00404 	addi	sp,sp,16
  809698:	f800283a 	ret
  80969c:	800b883a 	mov	r5,r16
  8096a0:	8809883a 	mov	r4,r17
  8096a4:	08044980 	call	804498 <__sflush_r>
  8096a8:	1025883a 	mov	r18,r2
  8096ac:	80800b17 	ldw	r2,44(r16)
  8096b0:	10000426 	beq	r2,zero,8096c4 <_fclose_r+0x78>
  8096b4:	81400717 	ldw	r5,28(r16)
  8096b8:	8809883a 	mov	r4,r17
  8096bc:	103ee83a 	callr	r2
  8096c0:	10001616 	blt	r2,zero,80971c <_fclose_r+0xd0>
  8096c4:	8080030b 	ldhu	r2,12(r16)
  8096c8:	1080200c 	andi	r2,r2,128
  8096cc:	1000151e 	bne	r2,zero,809724 <_fclose_r+0xd8>
  8096d0:	81400c17 	ldw	r5,48(r16)
  8096d4:	28000526 	beq	r5,zero,8096ec <_fclose_r+0xa0>
  8096d8:	80801004 	addi	r2,r16,64
  8096dc:	28800226 	beq	r5,r2,8096e8 <_fclose_r+0x9c>
  8096e0:	8809883a 	mov	r4,r17
  8096e4:	0804c140 	call	804c14 <_free_r>
  8096e8:	80000c15 	stw	zero,48(r16)
  8096ec:	81401117 	ldw	r5,68(r16)
  8096f0:	28000326 	beq	r5,zero,809700 <_fclose_r+0xb4>
  8096f4:	8809883a 	mov	r4,r17
  8096f8:	0804c140 	call	804c14 <_free_r>
  8096fc:	80001115 	stw	zero,68(r16)
  809700:	0804ab00 	call	804ab0 <__sfp_lock_acquire>
  809704:	8000030d 	sth	zero,12(r16)
  809708:	0804ab40 	call	804ab4 <__sfp_lock_release>
  80970c:	9005883a 	mov	r2,r18
  809710:	003fdc06 	br	809684 <__alt_data_end+0xff809684>
  809714:	0804aa00 	call	804aa0 <__sinit>
  809718:	003fd706 	br	809678 <__alt_data_end+0xff809678>
  80971c:	04bfffc4 	movi	r18,-1
  809720:	003fe806 	br	8096c4 <__alt_data_end+0xff8096c4>
  809724:	81400417 	ldw	r5,16(r16)
  809728:	8809883a 	mov	r4,r17
  80972c:	0804c140 	call	804c14 <_free_r>
  809730:	003fe706 	br	8096d0 <__alt_data_end+0xff8096d0>
  809734:	0005883a 	mov	r2,zero
  809738:	f800283a 	ret

0080973c <fclose>:
  80973c:	00802074 	movhi	r2,129
  809740:	1086a004 	addi	r2,r2,6784
  809744:	200b883a 	mov	r5,r4
  809748:	11000017 	ldw	r4,0(r2)
  80974c:	080964c1 	jmpi	80964c <_fclose_r>

00809750 <__fputwc>:
  809750:	defff804 	addi	sp,sp,-32
  809754:	dcc00415 	stw	r19,16(sp)
  809758:	dc800315 	stw	r18,12(sp)
  80975c:	dc000115 	stw	r16,4(sp)
  809760:	dfc00715 	stw	ra,28(sp)
  809764:	dd400615 	stw	r21,24(sp)
  809768:	dd000515 	stw	r20,20(sp)
  80976c:	dc400215 	stw	r17,8(sp)
  809770:	2027883a 	mov	r19,r4
  809774:	2825883a 	mov	r18,r5
  809778:	3021883a 	mov	r16,r6
  80977c:	08055fc0 	call	8055fc <__locale_mb_cur_max>
  809780:	00c00044 	movi	r3,1
  809784:	10c03e26 	beq	r2,r3,809880 <__fputwc+0x130>
  809788:	81c01704 	addi	r7,r16,92
  80978c:	900d883a 	mov	r6,r18
  809790:	d80b883a 	mov	r5,sp
  809794:	9809883a 	mov	r4,r19
  809798:	0809c200 	call	809c20 <_wcrtomb_r>
  80979c:	1029883a 	mov	r20,r2
  8097a0:	00bfffc4 	movi	r2,-1
  8097a4:	a0802026 	beq	r20,r2,809828 <__fputwc+0xd8>
  8097a8:	d9400003 	ldbu	r5,0(sp)
  8097ac:	a0001c26 	beq	r20,zero,809820 <__fputwc+0xd0>
  8097b0:	0023883a 	mov	r17,zero
  8097b4:	05400284 	movi	r21,10
  8097b8:	00000906 	br	8097e0 <__fputwc+0x90>
  8097bc:	80800017 	ldw	r2,0(r16)
  8097c0:	11400005 	stb	r5,0(r2)
  8097c4:	80c00017 	ldw	r3,0(r16)
  8097c8:	18c00044 	addi	r3,r3,1
  8097cc:	80c00015 	stw	r3,0(r16)
  8097d0:	8c400044 	addi	r17,r17,1
  8097d4:	dc45883a 	add	r2,sp,r17
  8097d8:	8d00112e 	bgeu	r17,r20,809820 <__fputwc+0xd0>
  8097dc:	11400003 	ldbu	r5,0(r2)
  8097e0:	80c00217 	ldw	r3,8(r16)
  8097e4:	18ffffc4 	addi	r3,r3,-1
  8097e8:	80c00215 	stw	r3,8(r16)
  8097ec:	183ff30e 	bge	r3,zero,8097bc <__alt_data_end+0xff8097bc>
  8097f0:	80800617 	ldw	r2,24(r16)
  8097f4:	18801916 	blt	r3,r2,80985c <__fputwc+0x10c>
  8097f8:	80800017 	ldw	r2,0(r16)
  8097fc:	11400005 	stb	r5,0(r2)
  809800:	80800017 	ldw	r2,0(r16)
  809804:	10c00003 	ldbu	r3,0(r2)
  809808:	10800044 	addi	r2,r2,1
  80980c:	1d402326 	beq	r3,r21,80989c <__fputwc+0x14c>
  809810:	80800015 	stw	r2,0(r16)
  809814:	8c400044 	addi	r17,r17,1
  809818:	dc45883a 	add	r2,sp,r17
  80981c:	8d3fef36 	bltu	r17,r20,8097dc <__alt_data_end+0xff8097dc>
  809820:	9005883a 	mov	r2,r18
  809824:	00000406 	br	809838 <__fputwc+0xe8>
  809828:	80c0030b 	ldhu	r3,12(r16)
  80982c:	a005883a 	mov	r2,r20
  809830:	18c01014 	ori	r3,r3,64
  809834:	80c0030d 	sth	r3,12(r16)
  809838:	dfc00717 	ldw	ra,28(sp)
  80983c:	dd400617 	ldw	r21,24(sp)
  809840:	dd000517 	ldw	r20,20(sp)
  809844:	dcc00417 	ldw	r19,16(sp)
  809848:	dc800317 	ldw	r18,12(sp)
  80984c:	dc400217 	ldw	r17,8(sp)
  809850:	dc000117 	ldw	r16,4(sp)
  809854:	dec00804 	addi	sp,sp,32
  809858:	f800283a 	ret
  80985c:	800d883a 	mov	r6,r16
  809860:	29403fcc 	andi	r5,r5,255
  809864:	9809883a 	mov	r4,r19
  809868:	0809ac80 	call	809ac8 <__swbuf_r>
  80986c:	10bfffe0 	cmpeqi	r2,r2,-1
  809870:	10803fcc 	andi	r2,r2,255
  809874:	103fd626 	beq	r2,zero,8097d0 <__alt_data_end+0xff8097d0>
  809878:	00bfffc4 	movi	r2,-1
  80987c:	003fee06 	br	809838 <__alt_data_end+0xff809838>
  809880:	90ffffc4 	addi	r3,r18,-1
  809884:	01003f84 	movi	r4,254
  809888:	20ffbf36 	bltu	r4,r3,809788 <__alt_data_end+0xff809788>
  80988c:	900b883a 	mov	r5,r18
  809890:	dc800005 	stb	r18,0(sp)
  809894:	1029883a 	mov	r20,r2
  809898:	003fc506 	br	8097b0 <__alt_data_end+0xff8097b0>
  80989c:	800d883a 	mov	r6,r16
  8098a0:	a80b883a 	mov	r5,r21
  8098a4:	9809883a 	mov	r4,r19
  8098a8:	0809ac80 	call	809ac8 <__swbuf_r>
  8098ac:	10bfffe0 	cmpeqi	r2,r2,-1
  8098b0:	003fef06 	br	809870 <__alt_data_end+0xff809870>

008098b4 <_fputwc_r>:
  8098b4:	3080030b 	ldhu	r2,12(r6)
  8098b8:	10c8000c 	andi	r3,r2,8192
  8098bc:	1800051e 	bne	r3,zero,8098d4 <_fputwc_r+0x20>
  8098c0:	30c01917 	ldw	r3,100(r6)
  8098c4:	10880014 	ori	r2,r2,8192
  8098c8:	3080030d 	sth	r2,12(r6)
  8098cc:	18880014 	ori	r2,r3,8192
  8098d0:	30801915 	stw	r2,100(r6)
  8098d4:	08097501 	jmpi	809750 <__fputwc>

008098d8 <fputwc>:
  8098d8:	00802074 	movhi	r2,129
  8098dc:	defffc04 	addi	sp,sp,-16
  8098e0:	1086a004 	addi	r2,r2,6784
  8098e4:	dc000115 	stw	r16,4(sp)
  8098e8:	14000017 	ldw	r16,0(r2)
  8098ec:	dc400215 	stw	r17,8(sp)
  8098f0:	dfc00315 	stw	ra,12(sp)
  8098f4:	2023883a 	mov	r17,r4
  8098f8:	80000226 	beq	r16,zero,809904 <fputwc+0x2c>
  8098fc:	80800e17 	ldw	r2,56(r16)
  809900:	10001026 	beq	r2,zero,809944 <fputwc+0x6c>
  809904:	2880030b 	ldhu	r2,12(r5)
  809908:	10c8000c 	andi	r3,r2,8192
  80990c:	1800051e 	bne	r3,zero,809924 <fputwc+0x4c>
  809910:	28c01917 	ldw	r3,100(r5)
  809914:	10880014 	ori	r2,r2,8192
  809918:	2880030d 	sth	r2,12(r5)
  80991c:	18880014 	ori	r2,r3,8192
  809920:	28801915 	stw	r2,100(r5)
  809924:	280d883a 	mov	r6,r5
  809928:	8009883a 	mov	r4,r16
  80992c:	880b883a 	mov	r5,r17
  809930:	dfc00317 	ldw	ra,12(sp)
  809934:	dc400217 	ldw	r17,8(sp)
  809938:	dc000117 	ldw	r16,4(sp)
  80993c:	dec00404 	addi	sp,sp,16
  809940:	08097501 	jmpi	809750 <__fputwc>
  809944:	8009883a 	mov	r4,r16
  809948:	d9400015 	stw	r5,0(sp)
  80994c:	0804aa00 	call	804aa0 <__sinit>
  809950:	d9400017 	ldw	r5,0(sp)
  809954:	003feb06 	br	809904 <__alt_data_end+0xff809904>

00809958 <_fstat_r>:
  809958:	defffd04 	addi	sp,sp,-12
  80995c:	2805883a 	mov	r2,r5
  809960:	dc000015 	stw	r16,0(sp)
  809964:	04002074 	movhi	r16,129
  809968:	dc400115 	stw	r17,4(sp)
  80996c:	840d7004 	addi	r16,r16,13760
  809970:	2023883a 	mov	r17,r4
  809974:	300b883a 	mov	r5,r6
  809978:	1009883a 	mov	r4,r2
  80997c:	dfc00215 	stw	ra,8(sp)
  809980:	80000015 	stw	zero,0(r16)
  809984:	080d5840 	call	80d584 <fstat>
  809988:	00ffffc4 	movi	r3,-1
  80998c:	10c00526 	beq	r2,r3,8099a4 <_fstat_r+0x4c>
  809990:	dfc00217 	ldw	ra,8(sp)
  809994:	dc400117 	ldw	r17,4(sp)
  809998:	dc000017 	ldw	r16,0(sp)
  80999c:	dec00304 	addi	sp,sp,12
  8099a0:	f800283a 	ret
  8099a4:	80c00017 	ldw	r3,0(r16)
  8099a8:	183ff926 	beq	r3,zero,809990 <__alt_data_end+0xff809990>
  8099ac:	88c00015 	stw	r3,0(r17)
  8099b0:	003ff706 	br	809990 <__alt_data_end+0xff809990>

008099b4 <_isatty_r>:
  8099b4:	defffd04 	addi	sp,sp,-12
  8099b8:	dc000015 	stw	r16,0(sp)
  8099bc:	04002074 	movhi	r16,129
  8099c0:	dc400115 	stw	r17,4(sp)
  8099c4:	840d7004 	addi	r16,r16,13760
  8099c8:	2023883a 	mov	r17,r4
  8099cc:	2809883a 	mov	r4,r5
  8099d0:	dfc00215 	stw	ra,8(sp)
  8099d4:	80000015 	stw	zero,0(r16)
  8099d8:	080d68c0 	call	80d68c <isatty>
  8099dc:	00ffffc4 	movi	r3,-1
  8099e0:	10c00526 	beq	r2,r3,8099f8 <_isatty_r+0x44>
  8099e4:	dfc00217 	ldw	ra,8(sp)
  8099e8:	dc400117 	ldw	r17,4(sp)
  8099ec:	dc000017 	ldw	r16,0(sp)
  8099f0:	dec00304 	addi	sp,sp,12
  8099f4:	f800283a 	ret
  8099f8:	80c00017 	ldw	r3,0(r16)
  8099fc:	183ff926 	beq	r3,zero,8099e4 <__alt_data_end+0xff8099e4>
  809a00:	88c00015 	stw	r3,0(r17)
  809a04:	003ff706 	br	8099e4 <__alt_data_end+0xff8099e4>

00809a08 <_lseek_r>:
  809a08:	defffd04 	addi	sp,sp,-12
  809a0c:	2805883a 	mov	r2,r5
  809a10:	dc000015 	stw	r16,0(sp)
  809a14:	04002074 	movhi	r16,129
  809a18:	dc400115 	stw	r17,4(sp)
  809a1c:	300b883a 	mov	r5,r6
  809a20:	840d7004 	addi	r16,r16,13760
  809a24:	2023883a 	mov	r17,r4
  809a28:	380d883a 	mov	r6,r7
  809a2c:	1009883a 	mov	r4,r2
  809a30:	dfc00215 	stw	ra,8(sp)
  809a34:	80000015 	stw	zero,0(r16)
  809a38:	080d8740 	call	80d874 <lseek>
  809a3c:	00ffffc4 	movi	r3,-1
  809a40:	10c00526 	beq	r2,r3,809a58 <_lseek_r+0x50>
  809a44:	dfc00217 	ldw	ra,8(sp)
  809a48:	dc400117 	ldw	r17,4(sp)
  809a4c:	dc000017 	ldw	r16,0(sp)
  809a50:	dec00304 	addi	sp,sp,12
  809a54:	f800283a 	ret
  809a58:	80c00017 	ldw	r3,0(r16)
  809a5c:	183ff926 	beq	r3,zero,809a44 <__alt_data_end+0xff809a44>
  809a60:	88c00015 	stw	r3,0(r17)
  809a64:	003ff706 	br	809a44 <__alt_data_end+0xff809a44>

00809a68 <_read_r>:
  809a68:	defffd04 	addi	sp,sp,-12
  809a6c:	2805883a 	mov	r2,r5
  809a70:	dc000015 	stw	r16,0(sp)
  809a74:	04002074 	movhi	r16,129
  809a78:	dc400115 	stw	r17,4(sp)
  809a7c:	300b883a 	mov	r5,r6
  809a80:	840d7004 	addi	r16,r16,13760
  809a84:	2023883a 	mov	r17,r4
  809a88:	380d883a 	mov	r6,r7
  809a8c:	1009883a 	mov	r4,r2
  809a90:	dfc00215 	stw	ra,8(sp)
  809a94:	80000015 	stw	zero,0(r16)
  809a98:	080da640 	call	80da64 <read>
  809a9c:	00ffffc4 	movi	r3,-1
  809aa0:	10c00526 	beq	r2,r3,809ab8 <_read_r+0x50>
  809aa4:	dfc00217 	ldw	ra,8(sp)
  809aa8:	dc400117 	ldw	r17,4(sp)
  809aac:	dc000017 	ldw	r16,0(sp)
  809ab0:	dec00304 	addi	sp,sp,12
  809ab4:	f800283a 	ret
  809ab8:	80c00017 	ldw	r3,0(r16)
  809abc:	183ff926 	beq	r3,zero,809aa4 <__alt_data_end+0xff809aa4>
  809ac0:	88c00015 	stw	r3,0(r17)
  809ac4:	003ff706 	br	809aa4 <__alt_data_end+0xff809aa4>

00809ac8 <__swbuf_r>:
  809ac8:	defffb04 	addi	sp,sp,-20
  809acc:	dcc00315 	stw	r19,12(sp)
  809ad0:	dc800215 	stw	r18,8(sp)
  809ad4:	dc000015 	stw	r16,0(sp)
  809ad8:	dfc00415 	stw	ra,16(sp)
  809adc:	dc400115 	stw	r17,4(sp)
  809ae0:	2025883a 	mov	r18,r4
  809ae4:	2827883a 	mov	r19,r5
  809ae8:	3021883a 	mov	r16,r6
  809aec:	20000226 	beq	r4,zero,809af8 <__swbuf_r+0x30>
  809af0:	20800e17 	ldw	r2,56(r4)
  809af4:	10004226 	beq	r2,zero,809c00 <__swbuf_r+0x138>
  809af8:	80800617 	ldw	r2,24(r16)
  809afc:	8100030b 	ldhu	r4,12(r16)
  809b00:	80800215 	stw	r2,8(r16)
  809b04:	2080020c 	andi	r2,r4,8
  809b08:	10003626 	beq	r2,zero,809be4 <__swbuf_r+0x11c>
  809b0c:	80c00417 	ldw	r3,16(r16)
  809b10:	18003426 	beq	r3,zero,809be4 <__swbuf_r+0x11c>
  809b14:	2088000c 	andi	r2,r4,8192
  809b18:	9c403fcc 	andi	r17,r19,255
  809b1c:	10001a26 	beq	r2,zero,809b88 <__swbuf_r+0xc0>
  809b20:	80800017 	ldw	r2,0(r16)
  809b24:	81000517 	ldw	r4,20(r16)
  809b28:	10c7c83a 	sub	r3,r2,r3
  809b2c:	1900200e 	bge	r3,r4,809bb0 <__swbuf_r+0xe8>
  809b30:	18c00044 	addi	r3,r3,1
  809b34:	81000217 	ldw	r4,8(r16)
  809b38:	11400044 	addi	r5,r2,1
  809b3c:	81400015 	stw	r5,0(r16)
  809b40:	213fffc4 	addi	r4,r4,-1
  809b44:	81000215 	stw	r4,8(r16)
  809b48:	14c00005 	stb	r19,0(r2)
  809b4c:	80800517 	ldw	r2,20(r16)
  809b50:	10c01e26 	beq	r2,r3,809bcc <__swbuf_r+0x104>
  809b54:	8080030b 	ldhu	r2,12(r16)
  809b58:	1080004c 	andi	r2,r2,1
  809b5c:	10000226 	beq	r2,zero,809b68 <__swbuf_r+0xa0>
  809b60:	00800284 	movi	r2,10
  809b64:	88801926 	beq	r17,r2,809bcc <__swbuf_r+0x104>
  809b68:	8805883a 	mov	r2,r17
  809b6c:	dfc00417 	ldw	ra,16(sp)
  809b70:	dcc00317 	ldw	r19,12(sp)
  809b74:	dc800217 	ldw	r18,8(sp)
  809b78:	dc400117 	ldw	r17,4(sp)
  809b7c:	dc000017 	ldw	r16,0(sp)
  809b80:	dec00504 	addi	sp,sp,20
  809b84:	f800283a 	ret
  809b88:	81401917 	ldw	r5,100(r16)
  809b8c:	00b7ffc4 	movi	r2,-8193
  809b90:	21080014 	ori	r4,r4,8192
  809b94:	2884703a 	and	r2,r5,r2
  809b98:	80801915 	stw	r2,100(r16)
  809b9c:	80800017 	ldw	r2,0(r16)
  809ba0:	8100030d 	sth	r4,12(r16)
  809ba4:	81000517 	ldw	r4,20(r16)
  809ba8:	10c7c83a 	sub	r3,r2,r3
  809bac:	193fe016 	blt	r3,r4,809b30 <__alt_data_end+0xff809b30>
  809bb0:	800b883a 	mov	r5,r16
  809bb4:	9009883a 	mov	r4,r18
  809bb8:	08046b40 	call	8046b4 <_fflush_r>
  809bbc:	1000071e 	bne	r2,zero,809bdc <__swbuf_r+0x114>
  809bc0:	80800017 	ldw	r2,0(r16)
  809bc4:	00c00044 	movi	r3,1
  809bc8:	003fda06 	br	809b34 <__alt_data_end+0xff809b34>
  809bcc:	800b883a 	mov	r5,r16
  809bd0:	9009883a 	mov	r4,r18
  809bd4:	08046b40 	call	8046b4 <_fflush_r>
  809bd8:	103fe326 	beq	r2,zero,809b68 <__alt_data_end+0xff809b68>
  809bdc:	00bfffc4 	movi	r2,-1
  809be0:	003fe206 	br	809b6c <__alt_data_end+0xff809b6c>
  809be4:	800b883a 	mov	r5,r16
  809be8:	9009883a 	mov	r4,r18
  809bec:	0802a940 	call	802a94 <__swsetup_r>
  809bf0:	103ffa1e 	bne	r2,zero,809bdc <__alt_data_end+0xff809bdc>
  809bf4:	8100030b 	ldhu	r4,12(r16)
  809bf8:	80c00417 	ldw	r3,16(r16)
  809bfc:	003fc506 	br	809b14 <__alt_data_end+0xff809b14>
  809c00:	0804aa00 	call	804aa0 <__sinit>
  809c04:	003fbc06 	br	809af8 <__alt_data_end+0xff809af8>

00809c08 <__swbuf>:
  809c08:	00802074 	movhi	r2,129
  809c0c:	1086a004 	addi	r2,r2,6784
  809c10:	280d883a 	mov	r6,r5
  809c14:	200b883a 	mov	r5,r4
  809c18:	11000017 	ldw	r4,0(r2)
  809c1c:	0809ac81 	jmpi	809ac8 <__swbuf_r>

00809c20 <_wcrtomb_r>:
  809c20:	defff604 	addi	sp,sp,-40
  809c24:	00802074 	movhi	r2,129
  809c28:	dc800815 	stw	r18,32(sp)
  809c2c:	dc400715 	stw	r17,28(sp)
  809c30:	dc000615 	stw	r16,24(sp)
  809c34:	1086a404 	addi	r2,r2,6800
  809c38:	dfc00915 	stw	ra,36(sp)
  809c3c:	2021883a 	mov	r16,r4
  809c40:	3823883a 	mov	r17,r7
  809c44:	14800017 	ldw	r18,0(r2)
  809c48:	28001426 	beq	r5,zero,809c9c <_wcrtomb_r+0x7c>
  809c4c:	d9400415 	stw	r5,16(sp)
  809c50:	d9800515 	stw	r6,20(sp)
  809c54:	08055f00 	call	8055f0 <__locale_charset>
  809c58:	d9800517 	ldw	r6,20(sp)
  809c5c:	d9400417 	ldw	r5,16(sp)
  809c60:	100f883a 	mov	r7,r2
  809c64:	dc400015 	stw	r17,0(sp)
  809c68:	8009883a 	mov	r4,r16
  809c6c:	903ee83a 	callr	r18
  809c70:	00ffffc4 	movi	r3,-1
  809c74:	10c0031e 	bne	r2,r3,809c84 <_wcrtomb_r+0x64>
  809c78:	88000015 	stw	zero,0(r17)
  809c7c:	00c02284 	movi	r3,138
  809c80:	80c00015 	stw	r3,0(r16)
  809c84:	dfc00917 	ldw	ra,36(sp)
  809c88:	dc800817 	ldw	r18,32(sp)
  809c8c:	dc400717 	ldw	r17,28(sp)
  809c90:	dc000617 	ldw	r16,24(sp)
  809c94:	dec00a04 	addi	sp,sp,40
  809c98:	f800283a 	ret
  809c9c:	08055f00 	call	8055f0 <__locale_charset>
  809ca0:	100f883a 	mov	r7,r2
  809ca4:	dc400015 	stw	r17,0(sp)
  809ca8:	000d883a 	mov	r6,zero
  809cac:	d9400104 	addi	r5,sp,4
  809cb0:	8009883a 	mov	r4,r16
  809cb4:	903ee83a 	callr	r18
  809cb8:	003fed06 	br	809c70 <__alt_data_end+0xff809c70>

00809cbc <wcrtomb>:
  809cbc:	defff604 	addi	sp,sp,-40
  809cc0:	00802074 	movhi	r2,129
  809cc4:	dc800615 	stw	r18,24(sp)
  809cc8:	dc400515 	stw	r17,20(sp)
  809ccc:	1086a004 	addi	r2,r2,6784
  809cd0:	dfc00915 	stw	ra,36(sp)
  809cd4:	dd000815 	stw	r20,32(sp)
  809cd8:	dcc00715 	stw	r19,28(sp)
  809cdc:	dc000415 	stw	r16,16(sp)
  809ce0:	3025883a 	mov	r18,r6
  809ce4:	14400017 	ldw	r17,0(r2)
  809ce8:	20001926 	beq	r4,zero,809d50 <wcrtomb+0x94>
  809cec:	00802074 	movhi	r2,129
  809cf0:	1086a404 	addi	r2,r2,6800
  809cf4:	15000017 	ldw	r20,0(r2)
  809cf8:	2021883a 	mov	r16,r4
  809cfc:	2827883a 	mov	r19,r5
  809d00:	08055f00 	call	8055f0 <__locale_charset>
  809d04:	100f883a 	mov	r7,r2
  809d08:	dc800015 	stw	r18,0(sp)
  809d0c:	980d883a 	mov	r6,r19
  809d10:	800b883a 	mov	r5,r16
  809d14:	8809883a 	mov	r4,r17
  809d18:	a03ee83a 	callr	r20
  809d1c:	00ffffc4 	movi	r3,-1
  809d20:	10c0031e 	bne	r2,r3,809d30 <wcrtomb+0x74>
  809d24:	90000015 	stw	zero,0(r18)
  809d28:	00c02284 	movi	r3,138
  809d2c:	88c00015 	stw	r3,0(r17)
  809d30:	dfc00917 	ldw	ra,36(sp)
  809d34:	dd000817 	ldw	r20,32(sp)
  809d38:	dcc00717 	ldw	r19,28(sp)
  809d3c:	dc800617 	ldw	r18,24(sp)
  809d40:	dc400517 	ldw	r17,20(sp)
  809d44:	dc000417 	ldw	r16,16(sp)
  809d48:	dec00a04 	addi	sp,sp,40
  809d4c:	f800283a 	ret
  809d50:	00802074 	movhi	r2,129
  809d54:	1086a404 	addi	r2,r2,6800
  809d58:	14000017 	ldw	r16,0(r2)
  809d5c:	08055f00 	call	8055f0 <__locale_charset>
  809d60:	100f883a 	mov	r7,r2
  809d64:	dc800015 	stw	r18,0(sp)
  809d68:	000d883a 	mov	r6,zero
  809d6c:	d9400104 	addi	r5,sp,4
  809d70:	8809883a 	mov	r4,r17
  809d74:	803ee83a 	callr	r16
  809d78:	003fe806 	br	809d1c <__alt_data_end+0xff809d1c>

00809d7c <__ascii_wctomb>:
  809d7c:	28000526 	beq	r5,zero,809d94 <__ascii_wctomb+0x18>
  809d80:	00803fc4 	movi	r2,255
  809d84:	11800536 	bltu	r2,r6,809d9c <__ascii_wctomb+0x20>
  809d88:	29800005 	stb	r6,0(r5)
  809d8c:	00800044 	movi	r2,1
  809d90:	f800283a 	ret
  809d94:	0005883a 	mov	r2,zero
  809d98:	f800283a 	ret
  809d9c:	00802284 	movi	r2,138
  809da0:	20800015 	stw	r2,0(r4)
  809da4:	00bfffc4 	movi	r2,-1
  809da8:	f800283a 	ret

00809dac <_wctomb_r>:
  809dac:	00802074 	movhi	r2,129
  809db0:	defff904 	addi	sp,sp,-28
  809db4:	1086a404 	addi	r2,r2,6800
  809db8:	dfc00615 	stw	ra,24(sp)
  809dbc:	dc400515 	stw	r17,20(sp)
  809dc0:	dc000415 	stw	r16,16(sp)
  809dc4:	3823883a 	mov	r17,r7
  809dc8:	14000017 	ldw	r16,0(r2)
  809dcc:	d9000115 	stw	r4,4(sp)
  809dd0:	d9400215 	stw	r5,8(sp)
  809dd4:	d9800315 	stw	r6,12(sp)
  809dd8:	08055f00 	call	8055f0 <__locale_charset>
  809ddc:	d9800317 	ldw	r6,12(sp)
  809de0:	d9400217 	ldw	r5,8(sp)
  809de4:	d9000117 	ldw	r4,4(sp)
  809de8:	100f883a 	mov	r7,r2
  809dec:	dc400015 	stw	r17,0(sp)
  809df0:	803ee83a 	callr	r16
  809df4:	dfc00617 	ldw	ra,24(sp)
  809df8:	dc400517 	ldw	r17,20(sp)
  809dfc:	dc000417 	ldw	r16,16(sp)
  809e00:	dec00704 	addi	sp,sp,28
  809e04:	f800283a 	ret

00809e08 <__udivdi3>:
  809e08:	defff404 	addi	sp,sp,-48
  809e0c:	dcc00515 	stw	r19,20(sp)
  809e10:	dc000215 	stw	r16,8(sp)
  809e14:	dfc00b15 	stw	ra,44(sp)
  809e18:	df000a15 	stw	fp,40(sp)
  809e1c:	ddc00915 	stw	r23,36(sp)
  809e20:	dd800815 	stw	r22,32(sp)
  809e24:	dd400715 	stw	r21,28(sp)
  809e28:	dd000615 	stw	r20,24(sp)
  809e2c:	dc800415 	stw	r18,16(sp)
  809e30:	dc400315 	stw	r17,12(sp)
  809e34:	2027883a 	mov	r19,r4
  809e38:	2821883a 	mov	r16,r5
  809e3c:	3800461e 	bne	r7,zero,809f58 <__udivdi3+0x150>
  809e40:	3023883a 	mov	r17,r6
  809e44:	2025883a 	mov	r18,r4
  809e48:	2980572e 	bgeu	r5,r6,809fa8 <__udivdi3+0x1a0>
  809e4c:	00bfffd4 	movui	r2,65535
  809e50:	282d883a 	mov	r22,r5
  809e54:	1180b236 	bltu	r2,r6,80a120 <__udivdi3+0x318>
  809e58:	00803fc4 	movi	r2,255
  809e5c:	1185803a 	cmpltu	r2,r2,r6
  809e60:	100490fa 	slli	r2,r2,3
  809e64:	3086d83a 	srl	r3,r6,r2
  809e68:	01002074 	movhi	r4,129
  809e6c:	213f3544 	addi	r4,r4,-811
  809e70:	20c7883a 	add	r3,r4,r3
  809e74:	18c00003 	ldbu	r3,0(r3)
  809e78:	1885883a 	add	r2,r3,r2
  809e7c:	00c00804 	movi	r3,32
  809e80:	1887c83a 	sub	r3,r3,r2
  809e84:	18000526 	beq	r3,zero,809e9c <__udivdi3+0x94>
  809e88:	80e0983a 	sll	r16,r16,r3
  809e8c:	9884d83a 	srl	r2,r19,r2
  809e90:	30e2983a 	sll	r17,r6,r3
  809e94:	98e4983a 	sll	r18,r19,r3
  809e98:	142cb03a 	or	r22,r2,r16
  809e9c:	882ad43a 	srli	r21,r17,16
  809ea0:	b009883a 	mov	r4,r22
  809ea4:	8d3fffcc 	andi	r20,r17,65535
  809ea8:	a80b883a 	mov	r5,r21
  809eac:	080ab240 	call	80ab24 <__umodsi3>
  809eb0:	b009883a 	mov	r4,r22
  809eb4:	a80b883a 	mov	r5,r21
  809eb8:	1027883a 	mov	r19,r2
  809ebc:	080aac00 	call	80aac0 <__udivsi3>
  809ec0:	100b883a 	mov	r5,r2
  809ec4:	a009883a 	mov	r4,r20
  809ec8:	102d883a 	mov	r22,r2
  809ecc:	080ab7c0 	call	80ab7c <__mulsi3>
  809ed0:	9826943a 	slli	r19,r19,16
  809ed4:	9006d43a 	srli	r3,r18,16
  809ed8:	1cc6b03a 	or	r3,r3,r19
  809edc:	1880052e 	bgeu	r3,r2,809ef4 <__udivdi3+0xec>
  809ee0:	1c47883a 	add	r3,r3,r17
  809ee4:	b13fffc4 	addi	r4,r22,-1
  809ee8:	1c400136 	bltu	r3,r17,809ef0 <__udivdi3+0xe8>
  809eec:	18814236 	bltu	r3,r2,80a3f8 <__udivdi3+0x5f0>
  809ef0:	202d883a 	mov	r22,r4
  809ef4:	18a1c83a 	sub	r16,r3,r2
  809ef8:	8009883a 	mov	r4,r16
  809efc:	a80b883a 	mov	r5,r21
  809f00:	080ab240 	call	80ab24 <__umodsi3>
  809f04:	1027883a 	mov	r19,r2
  809f08:	8009883a 	mov	r4,r16
  809f0c:	a80b883a 	mov	r5,r21
  809f10:	9826943a 	slli	r19,r19,16
  809f14:	080aac00 	call	80aac0 <__udivsi3>
  809f18:	100b883a 	mov	r5,r2
  809f1c:	a009883a 	mov	r4,r20
  809f20:	94bfffcc 	andi	r18,r18,65535
  809f24:	1021883a 	mov	r16,r2
  809f28:	94e4b03a 	or	r18,r18,r19
  809f2c:	080ab7c0 	call	80ab7c <__mulsi3>
  809f30:	9080052e 	bgeu	r18,r2,809f48 <__udivdi3+0x140>
  809f34:	8ca5883a 	add	r18,r17,r18
  809f38:	80ffffc4 	addi	r3,r16,-1
  809f3c:	94410c36 	bltu	r18,r17,80a370 <__udivdi3+0x568>
  809f40:	90810b2e 	bgeu	r18,r2,80a370 <__udivdi3+0x568>
  809f44:	843fff84 	addi	r16,r16,-2
  809f48:	b004943a 	slli	r2,r22,16
  809f4c:	0007883a 	mov	r3,zero
  809f50:	1404b03a 	or	r2,r2,r16
  809f54:	00005e06 	br	80a0d0 <__udivdi3+0x2c8>
  809f58:	29c05b36 	bltu	r5,r7,80a0c8 <__udivdi3+0x2c0>
  809f5c:	00bfffd4 	movui	r2,65535
  809f60:	11c0672e 	bgeu	r2,r7,80a100 <__udivdi3+0x2f8>
  809f64:	00804034 	movhi	r2,256
  809f68:	10bfffc4 	addi	r2,r2,-1
  809f6c:	11c10a36 	bltu	r2,r7,80a398 <__udivdi3+0x590>
  809f70:	00800404 	movi	r2,16
  809f74:	3886d83a 	srl	r3,r7,r2
  809f78:	01002074 	movhi	r4,129
  809f7c:	213f3544 	addi	r4,r4,-811
  809f80:	20c7883a 	add	r3,r4,r3
  809f84:	18c00003 	ldbu	r3,0(r3)
  809f88:	05c00804 	movi	r23,32
  809f8c:	1885883a 	add	r2,r3,r2
  809f90:	b8afc83a 	sub	r23,r23,r2
  809f94:	b800671e 	bne	r23,zero,80a134 <__udivdi3+0x32c>
  809f98:	3c010536 	bltu	r7,r16,80a3b0 <__udivdi3+0x5a8>
  809f9c:	9985403a 	cmpgeu	r2,r19,r6
  809fa0:	0007883a 	mov	r3,zero
  809fa4:	00004a06 	br	80a0d0 <__udivdi3+0x2c8>
  809fa8:	3000041e 	bne	r6,zero,809fbc <__udivdi3+0x1b4>
  809fac:	000b883a 	mov	r5,zero
  809fb0:	01000044 	movi	r4,1
  809fb4:	080aac00 	call	80aac0 <__udivsi3>
  809fb8:	1023883a 	mov	r17,r2
  809fbc:	00bfffd4 	movui	r2,65535
  809fc0:	1440532e 	bgeu	r2,r17,80a110 <__udivdi3+0x308>
  809fc4:	00804034 	movhi	r2,256
  809fc8:	10bfffc4 	addi	r2,r2,-1
  809fcc:	1440f436 	bltu	r2,r17,80a3a0 <__udivdi3+0x598>
  809fd0:	00800404 	movi	r2,16
  809fd4:	8886d83a 	srl	r3,r17,r2
  809fd8:	01002074 	movhi	r4,129
  809fdc:	213f3544 	addi	r4,r4,-811
  809fe0:	20c7883a 	add	r3,r4,r3
  809fe4:	18c00003 	ldbu	r3,0(r3)
  809fe8:	1885883a 	add	r2,r3,r2
  809fec:	00c00804 	movi	r3,32
  809ff0:	1887c83a 	sub	r3,r3,r2
  809ff4:	1800a51e 	bne	r3,zero,80a28c <__udivdi3+0x484>
  809ff8:	882ad43a 	srli	r21,r17,16
  809ffc:	8461c83a 	sub	r16,r16,r17
  80a000:	8d3fffcc 	andi	r20,r17,65535
  80a004:	00c00044 	movi	r3,1
  80a008:	a80b883a 	mov	r5,r21
  80a00c:	8009883a 	mov	r4,r16
  80a010:	d8c00115 	stw	r3,4(sp)
  80a014:	080ab240 	call	80ab24 <__umodsi3>
  80a018:	a80b883a 	mov	r5,r21
  80a01c:	8009883a 	mov	r4,r16
  80a020:	1027883a 	mov	r19,r2
  80a024:	080aac00 	call	80aac0 <__udivsi3>
  80a028:	a00b883a 	mov	r5,r20
  80a02c:	1009883a 	mov	r4,r2
  80a030:	102d883a 	mov	r22,r2
  80a034:	080ab7c0 	call	80ab7c <__mulsi3>
  80a038:	9826943a 	slli	r19,r19,16
  80a03c:	900ed43a 	srli	r7,r18,16
  80a040:	d8c00117 	ldw	r3,4(sp)
  80a044:	3cceb03a 	or	r7,r7,r19
  80a048:	3880052e 	bgeu	r7,r2,80a060 <__udivdi3+0x258>
  80a04c:	3c4f883a 	add	r7,r7,r17
  80a050:	b13fffc4 	addi	r4,r22,-1
  80a054:	3c400136 	bltu	r7,r17,80a05c <__udivdi3+0x254>
  80a058:	3880e436 	bltu	r7,r2,80a3ec <__udivdi3+0x5e4>
  80a05c:	202d883a 	mov	r22,r4
  80a060:	38a1c83a 	sub	r16,r7,r2
  80a064:	8009883a 	mov	r4,r16
  80a068:	a80b883a 	mov	r5,r21
  80a06c:	d8c00115 	stw	r3,4(sp)
  80a070:	080ab240 	call	80ab24 <__umodsi3>
  80a074:	1027883a 	mov	r19,r2
  80a078:	8009883a 	mov	r4,r16
  80a07c:	a80b883a 	mov	r5,r21
  80a080:	9826943a 	slli	r19,r19,16
  80a084:	080aac00 	call	80aac0 <__udivsi3>
  80a088:	a00b883a 	mov	r5,r20
  80a08c:	1009883a 	mov	r4,r2
  80a090:	94bfffcc 	andi	r18,r18,65535
  80a094:	1021883a 	mov	r16,r2
  80a098:	94e4b03a 	or	r18,r18,r19
  80a09c:	080ab7c0 	call	80ab7c <__mulsi3>
  80a0a0:	d8c00117 	ldw	r3,4(sp)
  80a0a4:	9080052e 	bgeu	r18,r2,80a0bc <__udivdi3+0x2b4>
  80a0a8:	8ca5883a 	add	r18,r17,r18
  80a0ac:	813fffc4 	addi	r4,r16,-1
  80a0b0:	9440ad36 	bltu	r18,r17,80a368 <__udivdi3+0x560>
  80a0b4:	9080ac2e 	bgeu	r18,r2,80a368 <__udivdi3+0x560>
  80a0b8:	843fff84 	addi	r16,r16,-2
  80a0bc:	b004943a 	slli	r2,r22,16
  80a0c0:	1404b03a 	or	r2,r2,r16
  80a0c4:	00000206 	br	80a0d0 <__udivdi3+0x2c8>
  80a0c8:	0007883a 	mov	r3,zero
  80a0cc:	0005883a 	mov	r2,zero
  80a0d0:	dfc00b17 	ldw	ra,44(sp)
  80a0d4:	df000a17 	ldw	fp,40(sp)
  80a0d8:	ddc00917 	ldw	r23,36(sp)
  80a0dc:	dd800817 	ldw	r22,32(sp)
  80a0e0:	dd400717 	ldw	r21,28(sp)
  80a0e4:	dd000617 	ldw	r20,24(sp)
  80a0e8:	dcc00517 	ldw	r19,20(sp)
  80a0ec:	dc800417 	ldw	r18,16(sp)
  80a0f0:	dc400317 	ldw	r17,12(sp)
  80a0f4:	dc000217 	ldw	r16,8(sp)
  80a0f8:	dec00c04 	addi	sp,sp,48
  80a0fc:	f800283a 	ret
  80a100:	00803fc4 	movi	r2,255
  80a104:	11c5803a 	cmpltu	r2,r2,r7
  80a108:	100490fa 	slli	r2,r2,3
  80a10c:	003f9906 	br	809f74 <__alt_data_end+0xff809f74>
  80a110:	00803fc4 	movi	r2,255
  80a114:	1445803a 	cmpltu	r2,r2,r17
  80a118:	100490fa 	slli	r2,r2,3
  80a11c:	003fad06 	br	809fd4 <__alt_data_end+0xff809fd4>
  80a120:	00804034 	movhi	r2,256
  80a124:	10bfffc4 	addi	r2,r2,-1
  80a128:	11809f36 	bltu	r2,r6,80a3a8 <__udivdi3+0x5a0>
  80a12c:	00800404 	movi	r2,16
  80a130:	003f4c06 	br	809e64 <__alt_data_end+0xff809e64>
  80a134:	3dce983a 	sll	r7,r7,r23
  80a138:	30b8d83a 	srl	fp,r6,r2
  80a13c:	80a2d83a 	srl	r17,r16,r2
  80a140:	35cc983a 	sll	r6,r6,r23
  80a144:	3f38b03a 	or	fp,r7,fp
  80a148:	e024d43a 	srli	r18,fp,16
  80a14c:	9884d83a 	srl	r2,r19,r2
  80a150:	85e0983a 	sll	r16,r16,r23
  80a154:	8809883a 	mov	r4,r17
  80a158:	900b883a 	mov	r5,r18
  80a15c:	d9800015 	stw	r6,0(sp)
  80a160:	1420b03a 	or	r16,r2,r16
  80a164:	080ab240 	call	80ab24 <__umodsi3>
  80a168:	900b883a 	mov	r5,r18
  80a16c:	8809883a 	mov	r4,r17
  80a170:	1029883a 	mov	r20,r2
  80a174:	e5bfffcc 	andi	r22,fp,65535
  80a178:	080aac00 	call	80aac0 <__udivsi3>
  80a17c:	100b883a 	mov	r5,r2
  80a180:	b009883a 	mov	r4,r22
  80a184:	102b883a 	mov	r21,r2
  80a188:	080ab7c0 	call	80ab7c <__mulsi3>
  80a18c:	a028943a 	slli	r20,r20,16
  80a190:	8006d43a 	srli	r3,r16,16
  80a194:	1d06b03a 	or	r3,r3,r20
  80a198:	1880042e 	bgeu	r3,r2,80a1ac <__udivdi3+0x3a4>
  80a19c:	1f07883a 	add	r3,r3,fp
  80a1a0:	a93fffc4 	addi	r4,r21,-1
  80a1a4:	1f00892e 	bgeu	r3,fp,80a3cc <__udivdi3+0x5c4>
  80a1a8:	202b883a 	mov	r21,r4
  80a1ac:	18a3c83a 	sub	r17,r3,r2
  80a1b0:	8809883a 	mov	r4,r17
  80a1b4:	900b883a 	mov	r5,r18
  80a1b8:	080ab240 	call	80ab24 <__umodsi3>
  80a1bc:	1029883a 	mov	r20,r2
  80a1c0:	8809883a 	mov	r4,r17
  80a1c4:	900b883a 	mov	r5,r18
  80a1c8:	a028943a 	slli	r20,r20,16
  80a1cc:	080aac00 	call	80aac0 <__udivsi3>
  80a1d0:	100b883a 	mov	r5,r2
  80a1d4:	b009883a 	mov	r4,r22
  80a1d8:	843fffcc 	andi	r16,r16,65535
  80a1dc:	1023883a 	mov	r17,r2
  80a1e0:	8520b03a 	or	r16,r16,r20
  80a1e4:	080ab7c0 	call	80ab7c <__mulsi3>
  80a1e8:	8080042e 	bgeu	r16,r2,80a1fc <__udivdi3+0x3f4>
  80a1ec:	8721883a 	add	r16,r16,fp
  80a1f0:	88ffffc4 	addi	r3,r17,-1
  80a1f4:	8700712e 	bgeu	r16,fp,80a3bc <__udivdi3+0x5b4>
  80a1f8:	1823883a 	mov	r17,r3
  80a1fc:	a80e943a 	slli	r7,r21,16
  80a200:	d8c00017 	ldw	r3,0(sp)
  80a204:	80a1c83a 	sub	r16,r16,r2
  80a208:	3c64b03a 	or	r18,r7,r17
  80a20c:	1d3fffcc 	andi	r20,r3,65535
  80a210:	9022d43a 	srli	r17,r18,16
  80a214:	95bfffcc 	andi	r22,r18,65535
  80a218:	a00b883a 	mov	r5,r20
  80a21c:	b009883a 	mov	r4,r22
  80a220:	182ad43a 	srli	r21,r3,16
  80a224:	080ab7c0 	call	80ab7c <__mulsi3>
  80a228:	a00b883a 	mov	r5,r20
  80a22c:	8809883a 	mov	r4,r17
  80a230:	1039883a 	mov	fp,r2
  80a234:	080ab7c0 	call	80ab7c <__mulsi3>
  80a238:	8809883a 	mov	r4,r17
  80a23c:	a80b883a 	mov	r5,r21
  80a240:	1029883a 	mov	r20,r2
  80a244:	080ab7c0 	call	80ab7c <__mulsi3>
  80a248:	a80b883a 	mov	r5,r21
  80a24c:	b009883a 	mov	r4,r22
  80a250:	1023883a 	mov	r17,r2
  80a254:	080ab7c0 	call	80ab7c <__mulsi3>
  80a258:	e006d43a 	srli	r3,fp,16
  80a25c:	1505883a 	add	r2,r2,r20
  80a260:	1887883a 	add	r3,r3,r2
  80a264:	1d00022e 	bgeu	r3,r20,80a270 <__udivdi3+0x468>
  80a268:	00800074 	movhi	r2,1
  80a26c:	88a3883a 	add	r17,r17,r2
  80a270:	1804d43a 	srli	r2,r3,16
  80a274:	1463883a 	add	r17,r2,r17
  80a278:	84404436 	bltu	r16,r17,80a38c <__udivdi3+0x584>
  80a27c:	84403e26 	beq	r16,r17,80a378 <__udivdi3+0x570>
  80a280:	9005883a 	mov	r2,r18
  80a284:	0007883a 	mov	r3,zero
  80a288:	003f9106 	br	80a0d0 <__alt_data_end+0xff80a0d0>
  80a28c:	88e2983a 	sll	r17,r17,r3
  80a290:	80aed83a 	srl	r23,r16,r2
  80a294:	80e0983a 	sll	r16,r16,r3
  80a298:	882ad43a 	srli	r21,r17,16
  80a29c:	9884d83a 	srl	r2,r19,r2
  80a2a0:	b809883a 	mov	r4,r23
  80a2a4:	a80b883a 	mov	r5,r21
  80a2a8:	98e4983a 	sll	r18,r19,r3
  80a2ac:	142cb03a 	or	r22,r2,r16
  80a2b0:	080ab240 	call	80ab24 <__umodsi3>
  80a2b4:	b809883a 	mov	r4,r23
  80a2b8:	a80b883a 	mov	r5,r21
  80a2bc:	1027883a 	mov	r19,r2
  80a2c0:	8d3fffcc 	andi	r20,r17,65535
  80a2c4:	080aac00 	call	80aac0 <__udivsi3>
  80a2c8:	a009883a 	mov	r4,r20
  80a2cc:	100b883a 	mov	r5,r2
  80a2d0:	102f883a 	mov	r23,r2
  80a2d4:	080ab7c0 	call	80ab7c <__mulsi3>
  80a2d8:	9826943a 	slli	r19,r19,16
  80a2dc:	b008d43a 	srli	r4,r22,16
  80a2e0:	24c8b03a 	or	r4,r4,r19
  80a2e4:	2080062e 	bgeu	r4,r2,80a300 <__udivdi3+0x4f8>
  80a2e8:	2449883a 	add	r4,r4,r17
  80a2ec:	b8ffffc4 	addi	r3,r23,-1
  80a2f0:	24403c36 	bltu	r4,r17,80a3e4 <__udivdi3+0x5dc>
  80a2f4:	20803b2e 	bgeu	r4,r2,80a3e4 <__udivdi3+0x5dc>
  80a2f8:	bdffff84 	addi	r23,r23,-2
  80a2fc:	2449883a 	add	r4,r4,r17
  80a300:	20a1c83a 	sub	r16,r4,r2
  80a304:	a80b883a 	mov	r5,r21
  80a308:	8009883a 	mov	r4,r16
  80a30c:	080ab240 	call	80ab24 <__umodsi3>
  80a310:	a80b883a 	mov	r5,r21
  80a314:	8009883a 	mov	r4,r16
  80a318:	1027883a 	mov	r19,r2
  80a31c:	080aac00 	call	80aac0 <__udivsi3>
  80a320:	a009883a 	mov	r4,r20
  80a324:	100b883a 	mov	r5,r2
  80a328:	9826943a 	slli	r19,r19,16
  80a32c:	1039883a 	mov	fp,r2
  80a330:	080ab7c0 	call	80ab7c <__mulsi3>
  80a334:	b13fffcc 	andi	r4,r22,65535
  80a338:	24c8b03a 	or	r4,r4,r19
  80a33c:	2080062e 	bgeu	r4,r2,80a358 <__udivdi3+0x550>
  80a340:	2449883a 	add	r4,r4,r17
  80a344:	e0ffffc4 	addi	r3,fp,-1
  80a348:	24402436 	bltu	r4,r17,80a3dc <__udivdi3+0x5d4>
  80a34c:	2080232e 	bgeu	r4,r2,80a3dc <__udivdi3+0x5d4>
  80a350:	e73fff84 	addi	fp,fp,-2
  80a354:	2449883a 	add	r4,r4,r17
  80a358:	b82e943a 	slli	r23,r23,16
  80a35c:	20a1c83a 	sub	r16,r4,r2
  80a360:	bf06b03a 	or	r3,r23,fp
  80a364:	003f2806 	br	80a008 <__alt_data_end+0xff80a008>
  80a368:	2021883a 	mov	r16,r4
  80a36c:	003f5306 	br	80a0bc <__alt_data_end+0xff80a0bc>
  80a370:	1821883a 	mov	r16,r3
  80a374:	003ef406 	br	809f48 <__alt_data_end+0xff809f48>
  80a378:	1806943a 	slli	r3,r3,16
  80a37c:	9de6983a 	sll	r19,r19,r23
  80a380:	e73fffcc 	andi	fp,fp,65535
  80a384:	1f07883a 	add	r3,r3,fp
  80a388:	98ffbd2e 	bgeu	r19,r3,80a280 <__alt_data_end+0xff80a280>
  80a38c:	90bfffc4 	addi	r2,r18,-1
  80a390:	0007883a 	mov	r3,zero
  80a394:	003f4e06 	br	80a0d0 <__alt_data_end+0xff80a0d0>
  80a398:	00800604 	movi	r2,24
  80a39c:	003ef506 	br	809f74 <__alt_data_end+0xff809f74>
  80a3a0:	00800604 	movi	r2,24
  80a3a4:	003f0b06 	br	809fd4 <__alt_data_end+0xff809fd4>
  80a3a8:	00800604 	movi	r2,24
  80a3ac:	003ead06 	br	809e64 <__alt_data_end+0xff809e64>
  80a3b0:	0007883a 	mov	r3,zero
  80a3b4:	00800044 	movi	r2,1
  80a3b8:	003f4506 	br	80a0d0 <__alt_data_end+0xff80a0d0>
  80a3bc:	80bf8e2e 	bgeu	r16,r2,80a1f8 <__alt_data_end+0xff80a1f8>
  80a3c0:	8c7fff84 	addi	r17,r17,-2
  80a3c4:	8721883a 	add	r16,r16,fp
  80a3c8:	003f8c06 	br	80a1fc <__alt_data_end+0xff80a1fc>
  80a3cc:	18bf762e 	bgeu	r3,r2,80a1a8 <__alt_data_end+0xff80a1a8>
  80a3d0:	ad7fff84 	addi	r21,r21,-2
  80a3d4:	1f07883a 	add	r3,r3,fp
  80a3d8:	003f7406 	br	80a1ac <__alt_data_end+0xff80a1ac>
  80a3dc:	1839883a 	mov	fp,r3
  80a3e0:	003fdd06 	br	80a358 <__alt_data_end+0xff80a358>
  80a3e4:	182f883a 	mov	r23,r3
  80a3e8:	003fc506 	br	80a300 <__alt_data_end+0xff80a300>
  80a3ec:	b5bfff84 	addi	r22,r22,-2
  80a3f0:	3c4f883a 	add	r7,r7,r17
  80a3f4:	003f1a06 	br	80a060 <__alt_data_end+0xff80a060>
  80a3f8:	b5bfff84 	addi	r22,r22,-2
  80a3fc:	1c47883a 	add	r3,r3,r17
  80a400:	003ebc06 	br	809ef4 <__alt_data_end+0xff809ef4>

0080a404 <__umoddi3>:
  80a404:	defff304 	addi	sp,sp,-52
  80a408:	df000b15 	stw	fp,44(sp)
  80a40c:	dc400415 	stw	r17,16(sp)
  80a410:	dc000315 	stw	r16,12(sp)
  80a414:	dfc00c15 	stw	ra,48(sp)
  80a418:	ddc00a15 	stw	r23,40(sp)
  80a41c:	dd800915 	stw	r22,36(sp)
  80a420:	dd400815 	stw	r21,32(sp)
  80a424:	dd000715 	stw	r20,28(sp)
  80a428:	dcc00615 	stw	r19,24(sp)
  80a42c:	dc800515 	stw	r18,20(sp)
  80a430:	2021883a 	mov	r16,r4
  80a434:	2823883a 	mov	r17,r5
  80a438:	2839883a 	mov	fp,r5
  80a43c:	3800401e 	bne	r7,zero,80a540 <__umoddi3+0x13c>
  80a440:	3027883a 	mov	r19,r6
  80a444:	2029883a 	mov	r20,r4
  80a448:	2980552e 	bgeu	r5,r6,80a5a0 <__umoddi3+0x19c>
  80a44c:	00bfffd4 	movui	r2,65535
  80a450:	1180a236 	bltu	r2,r6,80a6dc <__umoddi3+0x2d8>
  80a454:	01003fc4 	movi	r4,255
  80a458:	2189803a 	cmpltu	r4,r4,r6
  80a45c:	200890fa 	slli	r4,r4,3
  80a460:	3104d83a 	srl	r2,r6,r4
  80a464:	00c02074 	movhi	r3,129
  80a468:	18ff3544 	addi	r3,r3,-811
  80a46c:	1885883a 	add	r2,r3,r2
  80a470:	10c00003 	ldbu	r3,0(r2)
  80a474:	00800804 	movi	r2,32
  80a478:	1909883a 	add	r4,r3,r4
  80a47c:	1125c83a 	sub	r18,r2,r4
  80a480:	90000526 	beq	r18,zero,80a498 <__umoddi3+0x94>
  80a484:	8ca2983a 	sll	r17,r17,r18
  80a488:	8108d83a 	srl	r4,r16,r4
  80a48c:	34a6983a 	sll	r19,r6,r18
  80a490:	84a8983a 	sll	r20,r16,r18
  80a494:	2478b03a 	or	fp,r4,r17
  80a498:	982cd43a 	srli	r22,r19,16
  80a49c:	e009883a 	mov	r4,fp
  80a4a0:	9dffffcc 	andi	r23,r19,65535
  80a4a4:	b00b883a 	mov	r5,r22
  80a4a8:	080ab240 	call	80ab24 <__umodsi3>
  80a4ac:	b00b883a 	mov	r5,r22
  80a4b0:	e009883a 	mov	r4,fp
  80a4b4:	102b883a 	mov	r21,r2
  80a4b8:	080aac00 	call	80aac0 <__udivsi3>
  80a4bc:	100b883a 	mov	r5,r2
  80a4c0:	b809883a 	mov	r4,r23
  80a4c4:	080ab7c0 	call	80ab7c <__mulsi3>
  80a4c8:	a82a943a 	slli	r21,r21,16
  80a4cc:	a006d43a 	srli	r3,r20,16
  80a4d0:	1d46b03a 	or	r3,r3,r21
  80a4d4:	1880032e 	bgeu	r3,r2,80a4e4 <__umoddi3+0xe0>
  80a4d8:	1cc7883a 	add	r3,r3,r19
  80a4dc:	1cc00136 	bltu	r3,r19,80a4e4 <__umoddi3+0xe0>
  80a4e0:	18813136 	bltu	r3,r2,80a9a8 <__umoddi3+0x5a4>
  80a4e4:	18a1c83a 	sub	r16,r3,r2
  80a4e8:	b00b883a 	mov	r5,r22
  80a4ec:	8009883a 	mov	r4,r16
  80a4f0:	080ab240 	call	80ab24 <__umodsi3>
  80a4f4:	b00b883a 	mov	r5,r22
  80a4f8:	8009883a 	mov	r4,r16
  80a4fc:	1023883a 	mov	r17,r2
  80a500:	080aac00 	call	80aac0 <__udivsi3>
  80a504:	100b883a 	mov	r5,r2
  80a508:	b809883a 	mov	r4,r23
  80a50c:	8822943a 	slli	r17,r17,16
  80a510:	080ab7c0 	call	80ab7c <__mulsi3>
  80a514:	a0ffffcc 	andi	r3,r20,65535
  80a518:	1c46b03a 	or	r3,r3,r17
  80a51c:	1880042e 	bgeu	r3,r2,80a530 <__umoddi3+0x12c>
  80a520:	1cc7883a 	add	r3,r3,r19
  80a524:	1cc00236 	bltu	r3,r19,80a530 <__umoddi3+0x12c>
  80a528:	1880012e 	bgeu	r3,r2,80a530 <__umoddi3+0x12c>
  80a52c:	1cc7883a 	add	r3,r3,r19
  80a530:	1885c83a 	sub	r2,r3,r2
  80a534:	1484d83a 	srl	r2,r2,r18
  80a538:	0007883a 	mov	r3,zero
  80a53c:	00005306 	br	80a68c <__umoddi3+0x288>
  80a540:	29c05036 	bltu	r5,r7,80a684 <__umoddi3+0x280>
  80a544:	00bfffd4 	movui	r2,65535
  80a548:	11c05c2e 	bgeu	r2,r7,80a6bc <__umoddi3+0x2b8>
  80a54c:	00804034 	movhi	r2,256
  80a550:	10bfffc4 	addi	r2,r2,-1
  80a554:	11c10636 	bltu	r2,r7,80a970 <__umoddi3+0x56c>
  80a558:	01000404 	movi	r4,16
  80a55c:	3904d83a 	srl	r2,r7,r4
  80a560:	00c02074 	movhi	r3,129
  80a564:	18ff3544 	addi	r3,r3,-811
  80a568:	1885883a 	add	r2,r3,r2
  80a56c:	14c00003 	ldbu	r19,0(r2)
  80a570:	00c00804 	movi	r3,32
  80a574:	9927883a 	add	r19,r19,r4
  80a578:	1ce9c83a 	sub	r20,r3,r19
  80a57c:	a0005c1e 	bne	r20,zero,80a6f0 <__umoddi3+0x2ec>
  80a580:	3c400136 	bltu	r7,r17,80a588 <__umoddi3+0x184>
  80a584:	81810a36 	bltu	r16,r6,80a9b0 <__umoddi3+0x5ac>
  80a588:	8185c83a 	sub	r2,r16,r6
  80a58c:	89e3c83a 	sub	r17,r17,r7
  80a590:	8089803a 	cmpltu	r4,r16,r2
  80a594:	8939c83a 	sub	fp,r17,r4
  80a598:	e007883a 	mov	r3,fp
  80a59c:	00003b06 	br	80a68c <__umoddi3+0x288>
  80a5a0:	3000041e 	bne	r6,zero,80a5b4 <__umoddi3+0x1b0>
  80a5a4:	000b883a 	mov	r5,zero
  80a5a8:	01000044 	movi	r4,1
  80a5ac:	080aac00 	call	80aac0 <__udivsi3>
  80a5b0:	1027883a 	mov	r19,r2
  80a5b4:	00bfffd4 	movui	r2,65535
  80a5b8:	14c0442e 	bgeu	r2,r19,80a6cc <__umoddi3+0x2c8>
  80a5bc:	00804034 	movhi	r2,256
  80a5c0:	10bfffc4 	addi	r2,r2,-1
  80a5c4:	14c0ec36 	bltu	r2,r19,80a978 <__umoddi3+0x574>
  80a5c8:	00800404 	movi	r2,16
  80a5cc:	9886d83a 	srl	r3,r19,r2
  80a5d0:	01002074 	movhi	r4,129
  80a5d4:	213f3544 	addi	r4,r4,-811
  80a5d8:	20c7883a 	add	r3,r4,r3
  80a5dc:	18c00003 	ldbu	r3,0(r3)
  80a5e0:	1887883a 	add	r3,r3,r2
  80a5e4:	00800804 	movi	r2,32
  80a5e8:	10e5c83a 	sub	r18,r2,r3
  80a5ec:	9000ab1e 	bne	r18,zero,80a89c <__umoddi3+0x498>
  80a5f0:	982cd43a 	srli	r22,r19,16
  80a5f4:	8ce3c83a 	sub	r17,r17,r19
  80a5f8:	9dffffcc 	andi	r23,r19,65535
  80a5fc:	b00b883a 	mov	r5,r22
  80a600:	8809883a 	mov	r4,r17
  80a604:	080ab240 	call	80ab24 <__umodsi3>
  80a608:	b00b883a 	mov	r5,r22
  80a60c:	8809883a 	mov	r4,r17
  80a610:	102b883a 	mov	r21,r2
  80a614:	080aac00 	call	80aac0 <__udivsi3>
  80a618:	b80b883a 	mov	r5,r23
  80a61c:	1009883a 	mov	r4,r2
  80a620:	080ab7c0 	call	80ab7c <__mulsi3>
  80a624:	a82a943a 	slli	r21,r21,16
  80a628:	a006d43a 	srli	r3,r20,16
  80a62c:	1d46b03a 	or	r3,r3,r21
  80a630:	1880042e 	bgeu	r3,r2,80a644 <__umoddi3+0x240>
  80a634:	1cc7883a 	add	r3,r3,r19
  80a638:	1cc00236 	bltu	r3,r19,80a644 <__umoddi3+0x240>
  80a63c:	1880012e 	bgeu	r3,r2,80a644 <__umoddi3+0x240>
  80a640:	1cc7883a 	add	r3,r3,r19
  80a644:	18a1c83a 	sub	r16,r3,r2
  80a648:	b00b883a 	mov	r5,r22
  80a64c:	8009883a 	mov	r4,r16
  80a650:	080ab240 	call	80ab24 <__umodsi3>
  80a654:	1023883a 	mov	r17,r2
  80a658:	b00b883a 	mov	r5,r22
  80a65c:	8009883a 	mov	r4,r16
  80a660:	080aac00 	call	80aac0 <__udivsi3>
  80a664:	8822943a 	slli	r17,r17,16
  80a668:	b80b883a 	mov	r5,r23
  80a66c:	1009883a 	mov	r4,r2
  80a670:	080ab7c0 	call	80ab7c <__mulsi3>
  80a674:	a53fffcc 	andi	r20,r20,65535
  80a678:	a446b03a 	or	r3,r20,r17
  80a67c:	18bfac2e 	bgeu	r3,r2,80a530 <__alt_data_end+0xff80a530>
  80a680:	003fa706 	br	80a520 <__alt_data_end+0xff80a520>
  80a684:	2005883a 	mov	r2,r4
  80a688:	2807883a 	mov	r3,r5
  80a68c:	dfc00c17 	ldw	ra,48(sp)
  80a690:	df000b17 	ldw	fp,44(sp)
  80a694:	ddc00a17 	ldw	r23,40(sp)
  80a698:	dd800917 	ldw	r22,36(sp)
  80a69c:	dd400817 	ldw	r21,32(sp)
  80a6a0:	dd000717 	ldw	r20,28(sp)
  80a6a4:	dcc00617 	ldw	r19,24(sp)
  80a6a8:	dc800517 	ldw	r18,20(sp)
  80a6ac:	dc400417 	ldw	r17,16(sp)
  80a6b0:	dc000317 	ldw	r16,12(sp)
  80a6b4:	dec00d04 	addi	sp,sp,52
  80a6b8:	f800283a 	ret
  80a6bc:	04c03fc4 	movi	r19,255
  80a6c0:	99c9803a 	cmpltu	r4,r19,r7
  80a6c4:	200890fa 	slli	r4,r4,3
  80a6c8:	003fa406 	br	80a55c <__alt_data_end+0xff80a55c>
  80a6cc:	00803fc4 	movi	r2,255
  80a6d0:	14c5803a 	cmpltu	r2,r2,r19
  80a6d4:	100490fa 	slli	r2,r2,3
  80a6d8:	003fbc06 	br	80a5cc <__alt_data_end+0xff80a5cc>
  80a6dc:	00804034 	movhi	r2,256
  80a6e0:	10bfffc4 	addi	r2,r2,-1
  80a6e4:	1180a636 	bltu	r2,r6,80a980 <__umoddi3+0x57c>
  80a6e8:	01000404 	movi	r4,16
  80a6ec:	003f5c06 	br	80a460 <__alt_data_end+0xff80a460>
  80a6f0:	3d0e983a 	sll	r7,r7,r20
  80a6f4:	34ead83a 	srl	r21,r6,r19
  80a6f8:	8cc6d83a 	srl	r3,r17,r19
  80a6fc:	8d10983a 	sll	r8,r17,r20
  80a700:	3d6ab03a 	or	r21,r7,r21
  80a704:	a82cd43a 	srli	r22,r21,16
  80a708:	84e2d83a 	srl	r17,r16,r19
  80a70c:	1809883a 	mov	r4,r3
  80a710:	b00b883a 	mov	r5,r22
  80a714:	8a22b03a 	or	r17,r17,r8
  80a718:	3524983a 	sll	r18,r6,r20
  80a71c:	dc400015 	stw	r17,0(sp)
  80a720:	d8c00115 	stw	r3,4(sp)
  80a724:	080ab240 	call	80ab24 <__umodsi3>
  80a728:	d8c00117 	ldw	r3,4(sp)
  80a72c:	b00b883a 	mov	r5,r22
  80a730:	1039883a 	mov	fp,r2
  80a734:	1809883a 	mov	r4,r3
  80a738:	080aac00 	call	80aac0 <__udivsi3>
  80a73c:	adffffcc 	andi	r23,r21,65535
  80a740:	100b883a 	mov	r5,r2
  80a744:	b809883a 	mov	r4,r23
  80a748:	1023883a 	mov	r17,r2
  80a74c:	080ab7c0 	call	80ab7c <__mulsi3>
  80a750:	d9400017 	ldw	r5,0(sp)
  80a754:	e008943a 	slli	r4,fp,16
  80a758:	8520983a 	sll	r16,r16,r20
  80a75c:	2806d43a 	srli	r3,r5,16
  80a760:	1906b03a 	or	r3,r3,r4
  80a764:	1880042e 	bgeu	r3,r2,80a778 <__umoddi3+0x374>
  80a768:	1d47883a 	add	r3,r3,r21
  80a76c:	893fffc4 	addi	r4,r17,-1
  80a770:	1d40892e 	bgeu	r3,r21,80a998 <__umoddi3+0x594>
  80a774:	2023883a 	mov	r17,r4
  80a778:	18b9c83a 	sub	fp,r3,r2
  80a77c:	b00b883a 	mov	r5,r22
  80a780:	e009883a 	mov	r4,fp
  80a784:	080ab240 	call	80ab24 <__umodsi3>
  80a788:	b00b883a 	mov	r5,r22
  80a78c:	e009883a 	mov	r4,fp
  80a790:	d8800215 	stw	r2,8(sp)
  80a794:	080aac00 	call	80aac0 <__udivsi3>
  80a798:	100b883a 	mov	r5,r2
  80a79c:	b809883a 	mov	r4,r23
  80a7a0:	102d883a 	mov	r22,r2
  80a7a4:	080ab7c0 	call	80ab7c <__mulsi3>
  80a7a8:	d9800217 	ldw	r6,8(sp)
  80a7ac:	d8c00017 	ldw	r3,0(sp)
  80a7b0:	300c943a 	slli	r6,r6,16
  80a7b4:	1a3fffcc 	andi	r8,r3,65535
  80a7b8:	4190b03a 	or	r8,r8,r6
  80a7bc:	4080042e 	bgeu	r8,r2,80a7d0 <__umoddi3+0x3cc>
  80a7c0:	4551883a 	add	r8,r8,r21
  80a7c4:	b0ffffc4 	addi	r3,r22,-1
  80a7c8:	45406f2e 	bgeu	r8,r21,80a988 <__umoddi3+0x584>
  80a7cc:	182d883a 	mov	r22,r3
  80a7d0:	880e943a 	slli	r7,r17,16
  80a7d4:	9006d43a 	srli	r3,r18,16
  80a7d8:	91bfffcc 	andi	r6,r18,65535
  80a7dc:	3dacb03a 	or	r22,r7,r22
  80a7e0:	b02ed43a 	srli	r23,r22,16
  80a7e4:	b5bfffcc 	andi	r22,r22,65535
  80a7e8:	300b883a 	mov	r5,r6
  80a7ec:	b009883a 	mov	r4,r22
  80a7f0:	40a3c83a 	sub	r17,r8,r2
  80a7f4:	d8c00115 	stw	r3,4(sp)
  80a7f8:	d9800215 	stw	r6,8(sp)
  80a7fc:	080ab7c0 	call	80ab7c <__mulsi3>
  80a800:	d9800217 	ldw	r6,8(sp)
  80a804:	b809883a 	mov	r4,r23
  80a808:	1039883a 	mov	fp,r2
  80a80c:	300b883a 	mov	r5,r6
  80a810:	080ab7c0 	call	80ab7c <__mulsi3>
  80a814:	d8c00117 	ldw	r3,4(sp)
  80a818:	b809883a 	mov	r4,r23
  80a81c:	d8800215 	stw	r2,8(sp)
  80a820:	180b883a 	mov	r5,r3
  80a824:	080ab7c0 	call	80ab7c <__mulsi3>
  80a828:	d8c00117 	ldw	r3,4(sp)
  80a82c:	b009883a 	mov	r4,r22
  80a830:	102f883a 	mov	r23,r2
  80a834:	180b883a 	mov	r5,r3
  80a838:	080ab7c0 	call	80ab7c <__mulsi3>
  80a83c:	d9800217 	ldw	r6,8(sp)
  80a840:	e006d43a 	srli	r3,fp,16
  80a844:	1185883a 	add	r2,r2,r6
  80a848:	1885883a 	add	r2,r3,r2
  80a84c:	1180022e 	bgeu	r2,r6,80a858 <__umoddi3+0x454>
  80a850:	00c00074 	movhi	r3,1
  80a854:	b8ef883a 	add	r23,r23,r3
  80a858:	1006d43a 	srli	r3,r2,16
  80a85c:	1004943a 	slli	r2,r2,16
  80a860:	e73fffcc 	andi	fp,fp,65535
  80a864:	1dc7883a 	add	r3,r3,r23
  80a868:	1739883a 	add	fp,r2,fp
  80a86c:	88c03a36 	bltu	r17,r3,80a958 <__umoddi3+0x554>
  80a870:	88c05126 	beq	r17,r3,80a9b8 <__umoddi3+0x5b4>
  80a874:	88c9c83a 	sub	r4,r17,r3
  80a878:	e00f883a 	mov	r7,fp
  80a87c:	81cfc83a 	sub	r7,r16,r7
  80a880:	81c7803a 	cmpltu	r3,r16,r7
  80a884:	20c7c83a 	sub	r3,r4,r3
  80a888:	1cc4983a 	sll	r2,r3,r19
  80a88c:	3d0ed83a 	srl	r7,r7,r20
  80a890:	1d06d83a 	srl	r3,r3,r20
  80a894:	11c4b03a 	or	r2,r2,r7
  80a898:	003f7c06 	br	80a68c <__alt_data_end+0xff80a68c>
  80a89c:	9ca6983a 	sll	r19,r19,r18
  80a8a0:	88f8d83a 	srl	fp,r17,r3
  80a8a4:	80c4d83a 	srl	r2,r16,r3
  80a8a8:	982cd43a 	srli	r22,r19,16
  80a8ac:	8ca2983a 	sll	r17,r17,r18
  80a8b0:	e009883a 	mov	r4,fp
  80a8b4:	b00b883a 	mov	r5,r22
  80a8b8:	146ab03a 	or	r21,r2,r17
  80a8bc:	080ab240 	call	80ab24 <__umodsi3>
  80a8c0:	b00b883a 	mov	r5,r22
  80a8c4:	e009883a 	mov	r4,fp
  80a8c8:	1029883a 	mov	r20,r2
  80a8cc:	9dffffcc 	andi	r23,r19,65535
  80a8d0:	080aac00 	call	80aac0 <__udivsi3>
  80a8d4:	b809883a 	mov	r4,r23
  80a8d8:	100b883a 	mov	r5,r2
  80a8dc:	080ab7c0 	call	80ab7c <__mulsi3>
  80a8e0:	a008943a 	slli	r4,r20,16
  80a8e4:	a806d43a 	srli	r3,r21,16
  80a8e8:	84a8983a 	sll	r20,r16,r18
  80a8ec:	1906b03a 	or	r3,r3,r4
  80a8f0:	1880042e 	bgeu	r3,r2,80a904 <__umoddi3+0x500>
  80a8f4:	1cc7883a 	add	r3,r3,r19
  80a8f8:	1cc00236 	bltu	r3,r19,80a904 <__umoddi3+0x500>
  80a8fc:	1880012e 	bgeu	r3,r2,80a904 <__umoddi3+0x500>
  80a900:	1cc7883a 	add	r3,r3,r19
  80a904:	18a3c83a 	sub	r17,r3,r2
  80a908:	b00b883a 	mov	r5,r22
  80a90c:	8809883a 	mov	r4,r17
  80a910:	080ab240 	call	80ab24 <__umodsi3>
  80a914:	b00b883a 	mov	r5,r22
  80a918:	8809883a 	mov	r4,r17
  80a91c:	1021883a 	mov	r16,r2
  80a920:	080aac00 	call	80aac0 <__udivsi3>
  80a924:	100b883a 	mov	r5,r2
  80a928:	b809883a 	mov	r4,r23
  80a92c:	8020943a 	slli	r16,r16,16
  80a930:	080ab7c0 	call	80ab7c <__mulsi3>
  80a934:	a8ffffcc 	andi	r3,r21,65535
  80a938:	1c06b03a 	or	r3,r3,r16
  80a93c:	1880042e 	bgeu	r3,r2,80a950 <__umoddi3+0x54c>
  80a940:	1cc7883a 	add	r3,r3,r19
  80a944:	1cc00236 	bltu	r3,r19,80a950 <__umoddi3+0x54c>
  80a948:	1880012e 	bgeu	r3,r2,80a950 <__umoddi3+0x54c>
  80a94c:	1cc7883a 	add	r3,r3,r19
  80a950:	18a3c83a 	sub	r17,r3,r2
  80a954:	003f2906 	br	80a5fc <__alt_data_end+0xff80a5fc>
  80a958:	e48fc83a 	sub	r7,fp,r18
  80a95c:	1d49c83a 	sub	r4,r3,r21
  80a960:	e1f9803a 	cmpltu	fp,fp,r7
  80a964:	2739c83a 	sub	fp,r4,fp
  80a968:	8f09c83a 	sub	r4,r17,fp
  80a96c:	003fc306 	br	80a87c <__alt_data_end+0xff80a87c>
  80a970:	01000604 	movi	r4,24
  80a974:	003ef906 	br	80a55c <__alt_data_end+0xff80a55c>
  80a978:	00800604 	movi	r2,24
  80a97c:	003f1306 	br	80a5cc <__alt_data_end+0xff80a5cc>
  80a980:	01000604 	movi	r4,24
  80a984:	003eb606 	br	80a460 <__alt_data_end+0xff80a460>
  80a988:	40bf902e 	bgeu	r8,r2,80a7cc <__alt_data_end+0xff80a7cc>
  80a98c:	b5bfff84 	addi	r22,r22,-2
  80a990:	4551883a 	add	r8,r8,r21
  80a994:	003f8e06 	br	80a7d0 <__alt_data_end+0xff80a7d0>
  80a998:	18bf762e 	bgeu	r3,r2,80a774 <__alt_data_end+0xff80a774>
  80a99c:	8c7fff84 	addi	r17,r17,-2
  80a9a0:	1d47883a 	add	r3,r3,r21
  80a9a4:	003f7406 	br	80a778 <__alt_data_end+0xff80a778>
  80a9a8:	1cc7883a 	add	r3,r3,r19
  80a9ac:	003ecd06 	br	80a4e4 <__alt_data_end+0xff80a4e4>
  80a9b0:	8005883a 	mov	r2,r16
  80a9b4:	003ef806 	br	80a598 <__alt_data_end+0xff80a598>
  80a9b8:	873fe736 	bltu	r16,fp,80a958 <__alt_data_end+0xff80a958>
  80a9bc:	e00f883a 	mov	r7,fp
  80a9c0:	0009883a 	mov	r4,zero
  80a9c4:	003fad06 	br	80a87c <__alt_data_end+0xff80a87c>

0080a9c8 <__divsi3>:
  80a9c8:	20001b16 	blt	r4,zero,80aa38 <__divsi3+0x70>
  80a9cc:	000f883a 	mov	r7,zero
  80a9d0:	28001616 	blt	r5,zero,80aa2c <__divsi3+0x64>
  80a9d4:	200d883a 	mov	r6,r4
  80a9d8:	29001a2e 	bgeu	r5,r4,80aa44 <__divsi3+0x7c>
  80a9dc:	00800804 	movi	r2,32
  80a9e0:	00c00044 	movi	r3,1
  80a9e4:	00000106 	br	80a9ec <__divsi3+0x24>
  80a9e8:	10000d26 	beq	r2,zero,80aa20 <__divsi3+0x58>
  80a9ec:	294b883a 	add	r5,r5,r5
  80a9f0:	10bfffc4 	addi	r2,r2,-1
  80a9f4:	18c7883a 	add	r3,r3,r3
  80a9f8:	293ffb36 	bltu	r5,r4,80a9e8 <__alt_data_end+0xff80a9e8>
  80a9fc:	0005883a 	mov	r2,zero
  80aa00:	18000726 	beq	r3,zero,80aa20 <__divsi3+0x58>
  80aa04:	0005883a 	mov	r2,zero
  80aa08:	31400236 	bltu	r6,r5,80aa14 <__divsi3+0x4c>
  80aa0c:	314dc83a 	sub	r6,r6,r5
  80aa10:	10c4b03a 	or	r2,r2,r3
  80aa14:	1806d07a 	srli	r3,r3,1
  80aa18:	280ad07a 	srli	r5,r5,1
  80aa1c:	183ffa1e 	bne	r3,zero,80aa08 <__alt_data_end+0xff80aa08>
  80aa20:	38000126 	beq	r7,zero,80aa28 <__divsi3+0x60>
  80aa24:	0085c83a 	sub	r2,zero,r2
  80aa28:	f800283a 	ret
  80aa2c:	014bc83a 	sub	r5,zero,r5
  80aa30:	39c0005c 	xori	r7,r7,1
  80aa34:	003fe706 	br	80a9d4 <__alt_data_end+0xff80a9d4>
  80aa38:	0109c83a 	sub	r4,zero,r4
  80aa3c:	01c00044 	movi	r7,1
  80aa40:	003fe306 	br	80a9d0 <__alt_data_end+0xff80a9d0>
  80aa44:	00c00044 	movi	r3,1
  80aa48:	003fee06 	br	80aa04 <__alt_data_end+0xff80aa04>

0080aa4c <__modsi3>:
  80aa4c:	20001716 	blt	r4,zero,80aaac <__modsi3+0x60>
  80aa50:	000f883a 	mov	r7,zero
  80aa54:	2005883a 	mov	r2,r4
  80aa58:	28001216 	blt	r5,zero,80aaa4 <__modsi3+0x58>
  80aa5c:	2900162e 	bgeu	r5,r4,80aab8 <__modsi3+0x6c>
  80aa60:	01800804 	movi	r6,32
  80aa64:	00c00044 	movi	r3,1
  80aa68:	00000106 	br	80aa70 <__modsi3+0x24>
  80aa6c:	30000a26 	beq	r6,zero,80aa98 <__modsi3+0x4c>
  80aa70:	294b883a 	add	r5,r5,r5
  80aa74:	31bfffc4 	addi	r6,r6,-1
  80aa78:	18c7883a 	add	r3,r3,r3
  80aa7c:	293ffb36 	bltu	r5,r4,80aa6c <__alt_data_end+0xff80aa6c>
  80aa80:	18000526 	beq	r3,zero,80aa98 <__modsi3+0x4c>
  80aa84:	1806d07a 	srli	r3,r3,1
  80aa88:	11400136 	bltu	r2,r5,80aa90 <__modsi3+0x44>
  80aa8c:	1145c83a 	sub	r2,r2,r5
  80aa90:	280ad07a 	srli	r5,r5,1
  80aa94:	183ffb1e 	bne	r3,zero,80aa84 <__alt_data_end+0xff80aa84>
  80aa98:	38000126 	beq	r7,zero,80aaa0 <__modsi3+0x54>
  80aa9c:	0085c83a 	sub	r2,zero,r2
  80aaa0:	f800283a 	ret
  80aaa4:	014bc83a 	sub	r5,zero,r5
  80aaa8:	003fec06 	br	80aa5c <__alt_data_end+0xff80aa5c>
  80aaac:	0109c83a 	sub	r4,zero,r4
  80aab0:	01c00044 	movi	r7,1
  80aab4:	003fe706 	br	80aa54 <__alt_data_end+0xff80aa54>
  80aab8:	00c00044 	movi	r3,1
  80aabc:	003ff106 	br	80aa84 <__alt_data_end+0xff80aa84>

0080aac0 <__udivsi3>:
  80aac0:	200d883a 	mov	r6,r4
  80aac4:	2900152e 	bgeu	r5,r4,80ab1c <__udivsi3+0x5c>
  80aac8:	28001416 	blt	r5,zero,80ab1c <__udivsi3+0x5c>
  80aacc:	00800804 	movi	r2,32
  80aad0:	00c00044 	movi	r3,1
  80aad4:	00000206 	br	80aae0 <__udivsi3+0x20>
  80aad8:	10000e26 	beq	r2,zero,80ab14 <__udivsi3+0x54>
  80aadc:	28000516 	blt	r5,zero,80aaf4 <__udivsi3+0x34>
  80aae0:	294b883a 	add	r5,r5,r5
  80aae4:	10bfffc4 	addi	r2,r2,-1
  80aae8:	18c7883a 	add	r3,r3,r3
  80aaec:	293ffa36 	bltu	r5,r4,80aad8 <__alt_data_end+0xff80aad8>
  80aaf0:	18000826 	beq	r3,zero,80ab14 <__udivsi3+0x54>
  80aaf4:	0005883a 	mov	r2,zero
  80aaf8:	31400236 	bltu	r6,r5,80ab04 <__udivsi3+0x44>
  80aafc:	314dc83a 	sub	r6,r6,r5
  80ab00:	10c4b03a 	or	r2,r2,r3
  80ab04:	1806d07a 	srli	r3,r3,1
  80ab08:	280ad07a 	srli	r5,r5,1
  80ab0c:	183ffa1e 	bne	r3,zero,80aaf8 <__alt_data_end+0xff80aaf8>
  80ab10:	f800283a 	ret
  80ab14:	0005883a 	mov	r2,zero
  80ab18:	f800283a 	ret
  80ab1c:	00c00044 	movi	r3,1
  80ab20:	003ff406 	br	80aaf4 <__alt_data_end+0xff80aaf4>

0080ab24 <__umodsi3>:
  80ab24:	2005883a 	mov	r2,r4
  80ab28:	2900122e 	bgeu	r5,r4,80ab74 <__umodsi3+0x50>
  80ab2c:	28001116 	blt	r5,zero,80ab74 <__umodsi3+0x50>
  80ab30:	01800804 	movi	r6,32
  80ab34:	00c00044 	movi	r3,1
  80ab38:	00000206 	br	80ab44 <__umodsi3+0x20>
  80ab3c:	30000c26 	beq	r6,zero,80ab70 <__umodsi3+0x4c>
  80ab40:	28000516 	blt	r5,zero,80ab58 <__umodsi3+0x34>
  80ab44:	294b883a 	add	r5,r5,r5
  80ab48:	31bfffc4 	addi	r6,r6,-1
  80ab4c:	18c7883a 	add	r3,r3,r3
  80ab50:	293ffa36 	bltu	r5,r4,80ab3c <__alt_data_end+0xff80ab3c>
  80ab54:	18000626 	beq	r3,zero,80ab70 <__umodsi3+0x4c>
  80ab58:	1806d07a 	srli	r3,r3,1
  80ab5c:	11400136 	bltu	r2,r5,80ab64 <__umodsi3+0x40>
  80ab60:	1145c83a 	sub	r2,r2,r5
  80ab64:	280ad07a 	srli	r5,r5,1
  80ab68:	183ffb1e 	bne	r3,zero,80ab58 <__alt_data_end+0xff80ab58>
  80ab6c:	f800283a 	ret
  80ab70:	f800283a 	ret
  80ab74:	00c00044 	movi	r3,1
  80ab78:	003ff706 	br	80ab58 <__alt_data_end+0xff80ab58>

0080ab7c <__mulsi3>:
  80ab7c:	0005883a 	mov	r2,zero
  80ab80:	20000726 	beq	r4,zero,80aba0 <__mulsi3+0x24>
  80ab84:	20c0004c 	andi	r3,r4,1
  80ab88:	2008d07a 	srli	r4,r4,1
  80ab8c:	18000126 	beq	r3,zero,80ab94 <__mulsi3+0x18>
  80ab90:	1145883a 	add	r2,r2,r5
  80ab94:	294b883a 	add	r5,r5,r5
  80ab98:	203ffa1e 	bne	r4,zero,80ab84 <__alt_data_end+0xff80ab84>
  80ab9c:	f800283a 	ret
  80aba0:	f800283a 	ret

0080aba4 <__adddf3>:
  80aba4:	02c00434 	movhi	r11,16
  80aba8:	5affffc4 	addi	r11,r11,-1
  80abac:	2806d7fa 	srli	r3,r5,31
  80abb0:	2ad4703a 	and	r10,r5,r11
  80abb4:	3ad2703a 	and	r9,r7,r11
  80abb8:	3804d53a 	srli	r2,r7,20
  80abbc:	3018d77a 	srli	r12,r6,29
  80abc0:	280ad53a 	srli	r5,r5,20
  80abc4:	501490fa 	slli	r10,r10,3
  80abc8:	2010d77a 	srli	r8,r4,29
  80abcc:	481290fa 	slli	r9,r9,3
  80abd0:	380ed7fa 	srli	r7,r7,31
  80abd4:	defffb04 	addi	sp,sp,-20
  80abd8:	dc800215 	stw	r18,8(sp)
  80abdc:	dc400115 	stw	r17,4(sp)
  80abe0:	dc000015 	stw	r16,0(sp)
  80abe4:	dfc00415 	stw	ra,16(sp)
  80abe8:	dcc00315 	stw	r19,12(sp)
  80abec:	1c803fcc 	andi	r18,r3,255
  80abf0:	2c01ffcc 	andi	r16,r5,2047
  80abf4:	5210b03a 	or	r8,r10,r8
  80abf8:	202290fa 	slli	r17,r4,3
  80abfc:	1081ffcc 	andi	r2,r2,2047
  80ac00:	4b12b03a 	or	r9,r9,r12
  80ac04:	300c90fa 	slli	r6,r6,3
  80ac08:	91c07526 	beq	r18,r7,80ade0 <__adddf3+0x23c>
  80ac0c:	8087c83a 	sub	r3,r16,r2
  80ac10:	00c0ab0e 	bge	zero,r3,80aec0 <__adddf3+0x31c>
  80ac14:	10002a1e 	bne	r2,zero,80acc0 <__adddf3+0x11c>
  80ac18:	4984b03a 	or	r2,r9,r6
  80ac1c:	1000961e 	bne	r2,zero,80ae78 <__adddf3+0x2d4>
  80ac20:	888001cc 	andi	r2,r17,7
  80ac24:	10000726 	beq	r2,zero,80ac44 <__adddf3+0xa0>
  80ac28:	888003cc 	andi	r2,r17,15
  80ac2c:	00c00104 	movi	r3,4
  80ac30:	10c00426 	beq	r2,r3,80ac44 <__adddf3+0xa0>
  80ac34:	88c7883a 	add	r3,r17,r3
  80ac38:	1c63803a 	cmpltu	r17,r3,r17
  80ac3c:	4451883a 	add	r8,r8,r17
  80ac40:	1823883a 	mov	r17,r3
  80ac44:	4080202c 	andhi	r2,r8,128
  80ac48:	10005926 	beq	r2,zero,80adb0 <__adddf3+0x20c>
  80ac4c:	84000044 	addi	r16,r16,1
  80ac50:	0081ffc4 	movi	r2,2047
  80ac54:	8080ba26 	beq	r16,r2,80af40 <__adddf3+0x39c>
  80ac58:	00bfe034 	movhi	r2,65408
  80ac5c:	10bfffc4 	addi	r2,r2,-1
  80ac60:	4090703a 	and	r8,r8,r2
  80ac64:	4004977a 	slli	r2,r8,29
  80ac68:	4010927a 	slli	r8,r8,9
  80ac6c:	8822d0fa 	srli	r17,r17,3
  80ac70:	8401ffcc 	andi	r16,r16,2047
  80ac74:	4010d33a 	srli	r8,r8,12
  80ac78:	9007883a 	mov	r3,r18
  80ac7c:	1444b03a 	or	r2,r2,r17
  80ac80:	8401ffcc 	andi	r16,r16,2047
  80ac84:	8020953a 	slli	r16,r16,20
  80ac88:	18c03fcc 	andi	r3,r3,255
  80ac8c:	01000434 	movhi	r4,16
  80ac90:	213fffc4 	addi	r4,r4,-1
  80ac94:	180697fa 	slli	r3,r3,31
  80ac98:	4110703a 	and	r8,r8,r4
  80ac9c:	4410b03a 	or	r8,r8,r16
  80aca0:	40c6b03a 	or	r3,r8,r3
  80aca4:	dfc00417 	ldw	ra,16(sp)
  80aca8:	dcc00317 	ldw	r19,12(sp)
  80acac:	dc800217 	ldw	r18,8(sp)
  80acb0:	dc400117 	ldw	r17,4(sp)
  80acb4:	dc000017 	ldw	r16,0(sp)
  80acb8:	dec00504 	addi	sp,sp,20
  80acbc:	f800283a 	ret
  80acc0:	0081ffc4 	movi	r2,2047
  80acc4:	80bfd626 	beq	r16,r2,80ac20 <__alt_data_end+0xff80ac20>
  80acc8:	4a402034 	orhi	r9,r9,128
  80accc:	00800e04 	movi	r2,56
  80acd0:	10c09f16 	blt	r2,r3,80af50 <__adddf3+0x3ac>
  80acd4:	008007c4 	movi	r2,31
  80acd8:	10c0c216 	blt	r2,r3,80afe4 <__adddf3+0x440>
  80acdc:	00800804 	movi	r2,32
  80ace0:	10c5c83a 	sub	r2,r2,r3
  80ace4:	488a983a 	sll	r5,r9,r2
  80ace8:	30c8d83a 	srl	r4,r6,r3
  80acec:	3084983a 	sll	r2,r6,r2
  80acf0:	48c6d83a 	srl	r3,r9,r3
  80acf4:	290cb03a 	or	r6,r5,r4
  80acf8:	1004c03a 	cmpne	r2,r2,zero
  80acfc:	308cb03a 	or	r6,r6,r2
  80ad00:	898dc83a 	sub	r6,r17,r6
  80ad04:	89a3803a 	cmpltu	r17,r17,r6
  80ad08:	40d1c83a 	sub	r8,r8,r3
  80ad0c:	4451c83a 	sub	r8,r8,r17
  80ad10:	3023883a 	mov	r17,r6
  80ad14:	4080202c 	andhi	r2,r8,128
  80ad18:	10002326 	beq	r2,zero,80ada8 <__adddf3+0x204>
  80ad1c:	04c02034 	movhi	r19,128
  80ad20:	9cffffc4 	addi	r19,r19,-1
  80ad24:	44e6703a 	and	r19,r8,r19
  80ad28:	98007626 	beq	r19,zero,80af04 <__adddf3+0x360>
  80ad2c:	9809883a 	mov	r4,r19
  80ad30:	08004a40 	call	8004a4 <__clzsi2>
  80ad34:	10fffe04 	addi	r3,r2,-8
  80ad38:	010007c4 	movi	r4,31
  80ad3c:	20c07716 	blt	r4,r3,80af1c <__adddf3+0x378>
  80ad40:	00800804 	movi	r2,32
  80ad44:	10c5c83a 	sub	r2,r2,r3
  80ad48:	8884d83a 	srl	r2,r17,r2
  80ad4c:	98d0983a 	sll	r8,r19,r3
  80ad50:	88e2983a 	sll	r17,r17,r3
  80ad54:	1204b03a 	or	r2,r2,r8
  80ad58:	1c007416 	blt	r3,r16,80af2c <__adddf3+0x388>
  80ad5c:	1c21c83a 	sub	r16,r3,r16
  80ad60:	82000044 	addi	r8,r16,1
  80ad64:	00c007c4 	movi	r3,31
  80ad68:	1a009116 	blt	r3,r8,80afb0 <__adddf3+0x40c>
  80ad6c:	00c00804 	movi	r3,32
  80ad70:	1a07c83a 	sub	r3,r3,r8
  80ad74:	8a08d83a 	srl	r4,r17,r8
  80ad78:	88e2983a 	sll	r17,r17,r3
  80ad7c:	10c6983a 	sll	r3,r2,r3
  80ad80:	1210d83a 	srl	r8,r2,r8
  80ad84:	8804c03a 	cmpne	r2,r17,zero
  80ad88:	1906b03a 	or	r3,r3,r4
  80ad8c:	18a2b03a 	or	r17,r3,r2
  80ad90:	0021883a 	mov	r16,zero
  80ad94:	003fa206 	br	80ac20 <__alt_data_end+0xff80ac20>
  80ad98:	1890b03a 	or	r8,r3,r2
  80ad9c:	40017d26 	beq	r8,zero,80b394 <__adddf3+0x7f0>
  80ada0:	1011883a 	mov	r8,r2
  80ada4:	1823883a 	mov	r17,r3
  80ada8:	888001cc 	andi	r2,r17,7
  80adac:	103f9e1e 	bne	r2,zero,80ac28 <__alt_data_end+0xff80ac28>
  80adb0:	4004977a 	slli	r2,r8,29
  80adb4:	8822d0fa 	srli	r17,r17,3
  80adb8:	4010d0fa 	srli	r8,r8,3
  80adbc:	9007883a 	mov	r3,r18
  80adc0:	1444b03a 	or	r2,r2,r17
  80adc4:	0101ffc4 	movi	r4,2047
  80adc8:	81002426 	beq	r16,r4,80ae5c <__adddf3+0x2b8>
  80adcc:	8120703a 	and	r16,r16,r4
  80add0:	01000434 	movhi	r4,16
  80add4:	213fffc4 	addi	r4,r4,-1
  80add8:	4110703a 	and	r8,r8,r4
  80addc:	003fa806 	br	80ac80 <__alt_data_end+0xff80ac80>
  80ade0:	8089c83a 	sub	r4,r16,r2
  80ade4:	01005e0e 	bge	zero,r4,80af60 <__adddf3+0x3bc>
  80ade8:	10002b26 	beq	r2,zero,80ae98 <__adddf3+0x2f4>
  80adec:	0081ffc4 	movi	r2,2047
  80adf0:	80bf8b26 	beq	r16,r2,80ac20 <__alt_data_end+0xff80ac20>
  80adf4:	4a402034 	orhi	r9,r9,128
  80adf8:	00800e04 	movi	r2,56
  80adfc:	1100a40e 	bge	r2,r4,80b090 <__adddf3+0x4ec>
  80ae00:	498cb03a 	or	r6,r9,r6
  80ae04:	300ac03a 	cmpne	r5,r6,zero
  80ae08:	0013883a 	mov	r9,zero
  80ae0c:	2c4b883a 	add	r5,r5,r17
  80ae10:	2c63803a 	cmpltu	r17,r5,r17
  80ae14:	4a11883a 	add	r8,r9,r8
  80ae18:	8a11883a 	add	r8,r17,r8
  80ae1c:	2823883a 	mov	r17,r5
  80ae20:	4080202c 	andhi	r2,r8,128
  80ae24:	103fe026 	beq	r2,zero,80ada8 <__alt_data_end+0xff80ada8>
  80ae28:	84000044 	addi	r16,r16,1
  80ae2c:	0081ffc4 	movi	r2,2047
  80ae30:	8080d226 	beq	r16,r2,80b17c <__adddf3+0x5d8>
  80ae34:	00bfe034 	movhi	r2,65408
  80ae38:	10bfffc4 	addi	r2,r2,-1
  80ae3c:	4090703a 	and	r8,r8,r2
  80ae40:	880ad07a 	srli	r5,r17,1
  80ae44:	400897fa 	slli	r4,r8,31
  80ae48:	88c0004c 	andi	r3,r17,1
  80ae4c:	28e2b03a 	or	r17,r5,r3
  80ae50:	4010d07a 	srli	r8,r8,1
  80ae54:	2462b03a 	or	r17,r4,r17
  80ae58:	003f7106 	br	80ac20 <__alt_data_end+0xff80ac20>
  80ae5c:	4088b03a 	or	r4,r8,r2
  80ae60:	20014526 	beq	r4,zero,80b378 <__adddf3+0x7d4>
  80ae64:	01000434 	movhi	r4,16
  80ae68:	42000234 	orhi	r8,r8,8
  80ae6c:	213fffc4 	addi	r4,r4,-1
  80ae70:	4110703a 	and	r8,r8,r4
  80ae74:	003f8206 	br	80ac80 <__alt_data_end+0xff80ac80>
  80ae78:	18ffffc4 	addi	r3,r3,-1
  80ae7c:	1800491e 	bne	r3,zero,80afa4 <__adddf3+0x400>
  80ae80:	898bc83a 	sub	r5,r17,r6
  80ae84:	8963803a 	cmpltu	r17,r17,r5
  80ae88:	4251c83a 	sub	r8,r8,r9
  80ae8c:	4451c83a 	sub	r8,r8,r17
  80ae90:	2823883a 	mov	r17,r5
  80ae94:	003f9f06 	br	80ad14 <__alt_data_end+0xff80ad14>
  80ae98:	4984b03a 	or	r2,r9,r6
  80ae9c:	103f6026 	beq	r2,zero,80ac20 <__alt_data_end+0xff80ac20>
  80aea0:	213fffc4 	addi	r4,r4,-1
  80aea4:	2000931e 	bne	r4,zero,80b0f4 <__adddf3+0x550>
  80aea8:	898d883a 	add	r6,r17,r6
  80aeac:	3463803a 	cmpltu	r17,r6,r17
  80aeb0:	4251883a 	add	r8,r8,r9
  80aeb4:	8a11883a 	add	r8,r17,r8
  80aeb8:	3023883a 	mov	r17,r6
  80aebc:	003fd806 	br	80ae20 <__alt_data_end+0xff80ae20>
  80aec0:	1800541e 	bne	r3,zero,80b014 <__adddf3+0x470>
  80aec4:	80800044 	addi	r2,r16,1
  80aec8:	1081ffcc 	andi	r2,r2,2047
  80aecc:	00c00044 	movi	r3,1
  80aed0:	1880a00e 	bge	r3,r2,80b154 <__adddf3+0x5b0>
  80aed4:	8989c83a 	sub	r4,r17,r6
  80aed8:	8905803a 	cmpltu	r2,r17,r4
  80aedc:	4267c83a 	sub	r19,r8,r9
  80aee0:	98a7c83a 	sub	r19,r19,r2
  80aee4:	9880202c 	andhi	r2,r19,128
  80aee8:	10006326 	beq	r2,zero,80b078 <__adddf3+0x4d4>
  80aeec:	3463c83a 	sub	r17,r6,r17
  80aef0:	4a07c83a 	sub	r3,r9,r8
  80aef4:	344d803a 	cmpltu	r6,r6,r17
  80aef8:	19a7c83a 	sub	r19,r3,r6
  80aefc:	3825883a 	mov	r18,r7
  80af00:	983f8a1e 	bne	r19,zero,80ad2c <__alt_data_end+0xff80ad2c>
  80af04:	8809883a 	mov	r4,r17
  80af08:	08004a40 	call	8004a4 <__clzsi2>
  80af0c:	10800804 	addi	r2,r2,32
  80af10:	10fffe04 	addi	r3,r2,-8
  80af14:	010007c4 	movi	r4,31
  80af18:	20ff890e 	bge	r4,r3,80ad40 <__alt_data_end+0xff80ad40>
  80af1c:	10bff604 	addi	r2,r2,-40
  80af20:	8884983a 	sll	r2,r17,r2
  80af24:	0023883a 	mov	r17,zero
  80af28:	1c3f8c0e 	bge	r3,r16,80ad5c <__alt_data_end+0xff80ad5c>
  80af2c:	023fe034 	movhi	r8,65408
  80af30:	423fffc4 	addi	r8,r8,-1
  80af34:	80e1c83a 	sub	r16,r16,r3
  80af38:	1210703a 	and	r8,r2,r8
  80af3c:	003f3806 	br	80ac20 <__alt_data_end+0xff80ac20>
  80af40:	9007883a 	mov	r3,r18
  80af44:	0011883a 	mov	r8,zero
  80af48:	0005883a 	mov	r2,zero
  80af4c:	003f4c06 	br	80ac80 <__alt_data_end+0xff80ac80>
  80af50:	498cb03a 	or	r6,r9,r6
  80af54:	300cc03a 	cmpne	r6,r6,zero
  80af58:	0007883a 	mov	r3,zero
  80af5c:	003f6806 	br	80ad00 <__alt_data_end+0xff80ad00>
  80af60:	20009c1e 	bne	r4,zero,80b1d4 <__adddf3+0x630>
  80af64:	80800044 	addi	r2,r16,1
  80af68:	1141ffcc 	andi	r5,r2,2047
  80af6c:	01000044 	movi	r4,1
  80af70:	2140670e 	bge	r4,r5,80b110 <__adddf3+0x56c>
  80af74:	0101ffc4 	movi	r4,2047
  80af78:	11007f26 	beq	r2,r4,80b178 <__adddf3+0x5d4>
  80af7c:	898d883a 	add	r6,r17,r6
  80af80:	4247883a 	add	r3,r8,r9
  80af84:	3451803a 	cmpltu	r8,r6,r17
  80af88:	40d1883a 	add	r8,r8,r3
  80af8c:	402297fa 	slli	r17,r8,31
  80af90:	300cd07a 	srli	r6,r6,1
  80af94:	4010d07a 	srli	r8,r8,1
  80af98:	1021883a 	mov	r16,r2
  80af9c:	89a2b03a 	or	r17,r17,r6
  80afa0:	003f1f06 	br	80ac20 <__alt_data_end+0xff80ac20>
  80afa4:	0081ffc4 	movi	r2,2047
  80afa8:	80bf481e 	bne	r16,r2,80accc <__alt_data_end+0xff80accc>
  80afac:	003f1c06 	br	80ac20 <__alt_data_end+0xff80ac20>
  80afb0:	843ff844 	addi	r16,r16,-31
  80afb4:	01000804 	movi	r4,32
  80afb8:	1406d83a 	srl	r3,r2,r16
  80afbc:	41005026 	beq	r8,r4,80b100 <__adddf3+0x55c>
  80afc0:	01001004 	movi	r4,64
  80afc4:	2211c83a 	sub	r8,r4,r8
  80afc8:	1204983a 	sll	r2,r2,r8
  80afcc:	88a2b03a 	or	r17,r17,r2
  80afd0:	8822c03a 	cmpne	r17,r17,zero
  80afd4:	1c62b03a 	or	r17,r3,r17
  80afd8:	0011883a 	mov	r8,zero
  80afdc:	0021883a 	mov	r16,zero
  80afe0:	003f7106 	br	80ada8 <__alt_data_end+0xff80ada8>
  80afe4:	193ff804 	addi	r4,r3,-32
  80afe8:	00800804 	movi	r2,32
  80afec:	4908d83a 	srl	r4,r9,r4
  80aff0:	18804526 	beq	r3,r2,80b108 <__adddf3+0x564>
  80aff4:	00801004 	movi	r2,64
  80aff8:	10c5c83a 	sub	r2,r2,r3
  80affc:	4886983a 	sll	r3,r9,r2
  80b000:	198cb03a 	or	r6,r3,r6
  80b004:	300cc03a 	cmpne	r6,r6,zero
  80b008:	218cb03a 	or	r6,r4,r6
  80b00c:	0007883a 	mov	r3,zero
  80b010:	003f3b06 	br	80ad00 <__alt_data_end+0xff80ad00>
  80b014:	80002a26 	beq	r16,zero,80b0c0 <__adddf3+0x51c>
  80b018:	0101ffc4 	movi	r4,2047
  80b01c:	11006826 	beq	r2,r4,80b1c0 <__adddf3+0x61c>
  80b020:	00c7c83a 	sub	r3,zero,r3
  80b024:	42002034 	orhi	r8,r8,128
  80b028:	01000e04 	movi	r4,56
  80b02c:	20c07c16 	blt	r4,r3,80b220 <__adddf3+0x67c>
  80b030:	010007c4 	movi	r4,31
  80b034:	20c0da16 	blt	r4,r3,80b3a0 <__adddf3+0x7fc>
  80b038:	01000804 	movi	r4,32
  80b03c:	20c9c83a 	sub	r4,r4,r3
  80b040:	4114983a 	sll	r10,r8,r4
  80b044:	88cad83a 	srl	r5,r17,r3
  80b048:	8908983a 	sll	r4,r17,r4
  80b04c:	40c6d83a 	srl	r3,r8,r3
  80b050:	5162b03a 	or	r17,r10,r5
  80b054:	2008c03a 	cmpne	r4,r4,zero
  80b058:	8922b03a 	or	r17,r17,r4
  80b05c:	3463c83a 	sub	r17,r6,r17
  80b060:	48c7c83a 	sub	r3,r9,r3
  80b064:	344d803a 	cmpltu	r6,r6,r17
  80b068:	1991c83a 	sub	r8,r3,r6
  80b06c:	1021883a 	mov	r16,r2
  80b070:	3825883a 	mov	r18,r7
  80b074:	003f2706 	br	80ad14 <__alt_data_end+0xff80ad14>
  80b078:	24d0b03a 	or	r8,r4,r19
  80b07c:	40001b1e 	bne	r8,zero,80b0ec <__adddf3+0x548>
  80b080:	0005883a 	mov	r2,zero
  80b084:	0007883a 	mov	r3,zero
  80b088:	0021883a 	mov	r16,zero
  80b08c:	003f4d06 	br	80adc4 <__alt_data_end+0xff80adc4>
  80b090:	008007c4 	movi	r2,31
  80b094:	11003c16 	blt	r2,r4,80b188 <__adddf3+0x5e4>
  80b098:	00800804 	movi	r2,32
  80b09c:	1105c83a 	sub	r2,r2,r4
  80b0a0:	488e983a 	sll	r7,r9,r2
  80b0a4:	310ad83a 	srl	r5,r6,r4
  80b0a8:	3084983a 	sll	r2,r6,r2
  80b0ac:	4912d83a 	srl	r9,r9,r4
  80b0b0:	394ab03a 	or	r5,r7,r5
  80b0b4:	1004c03a 	cmpne	r2,r2,zero
  80b0b8:	288ab03a 	or	r5,r5,r2
  80b0bc:	003f5306 	br	80ae0c <__alt_data_end+0xff80ae0c>
  80b0c0:	4448b03a 	or	r4,r8,r17
  80b0c4:	20003e26 	beq	r4,zero,80b1c0 <__adddf3+0x61c>
  80b0c8:	00c6303a 	nor	r3,zero,r3
  80b0cc:	18003a1e 	bne	r3,zero,80b1b8 <__adddf3+0x614>
  80b0d0:	3463c83a 	sub	r17,r6,r17
  80b0d4:	4a07c83a 	sub	r3,r9,r8
  80b0d8:	344d803a 	cmpltu	r6,r6,r17
  80b0dc:	1991c83a 	sub	r8,r3,r6
  80b0e0:	1021883a 	mov	r16,r2
  80b0e4:	3825883a 	mov	r18,r7
  80b0e8:	003f0a06 	br	80ad14 <__alt_data_end+0xff80ad14>
  80b0ec:	2023883a 	mov	r17,r4
  80b0f0:	003f0d06 	br	80ad28 <__alt_data_end+0xff80ad28>
  80b0f4:	0081ffc4 	movi	r2,2047
  80b0f8:	80bf3f1e 	bne	r16,r2,80adf8 <__alt_data_end+0xff80adf8>
  80b0fc:	003ec806 	br	80ac20 <__alt_data_end+0xff80ac20>
  80b100:	0005883a 	mov	r2,zero
  80b104:	003fb106 	br	80afcc <__alt_data_end+0xff80afcc>
  80b108:	0007883a 	mov	r3,zero
  80b10c:	003fbc06 	br	80b000 <__alt_data_end+0xff80b000>
  80b110:	4444b03a 	or	r2,r8,r17
  80b114:	8000871e 	bne	r16,zero,80b334 <__adddf3+0x790>
  80b118:	1000ba26 	beq	r2,zero,80b404 <__adddf3+0x860>
  80b11c:	4984b03a 	or	r2,r9,r6
  80b120:	103ebf26 	beq	r2,zero,80ac20 <__alt_data_end+0xff80ac20>
  80b124:	8985883a 	add	r2,r17,r6
  80b128:	4247883a 	add	r3,r8,r9
  80b12c:	1451803a 	cmpltu	r8,r2,r17
  80b130:	40d1883a 	add	r8,r8,r3
  80b134:	40c0202c 	andhi	r3,r8,128
  80b138:	1023883a 	mov	r17,r2
  80b13c:	183f1a26 	beq	r3,zero,80ada8 <__alt_data_end+0xff80ada8>
  80b140:	00bfe034 	movhi	r2,65408
  80b144:	10bfffc4 	addi	r2,r2,-1
  80b148:	2021883a 	mov	r16,r4
  80b14c:	4090703a 	and	r8,r8,r2
  80b150:	003eb306 	br	80ac20 <__alt_data_end+0xff80ac20>
  80b154:	4444b03a 	or	r2,r8,r17
  80b158:	8000291e 	bne	r16,zero,80b200 <__adddf3+0x65c>
  80b15c:	10004b1e 	bne	r2,zero,80b28c <__adddf3+0x6e8>
  80b160:	4990b03a 	or	r8,r9,r6
  80b164:	40008b26 	beq	r8,zero,80b394 <__adddf3+0x7f0>
  80b168:	4811883a 	mov	r8,r9
  80b16c:	3023883a 	mov	r17,r6
  80b170:	3825883a 	mov	r18,r7
  80b174:	003eaa06 	br	80ac20 <__alt_data_end+0xff80ac20>
  80b178:	1021883a 	mov	r16,r2
  80b17c:	0011883a 	mov	r8,zero
  80b180:	0005883a 	mov	r2,zero
  80b184:	003f0f06 	br	80adc4 <__alt_data_end+0xff80adc4>
  80b188:	217ff804 	addi	r5,r4,-32
  80b18c:	00800804 	movi	r2,32
  80b190:	494ad83a 	srl	r5,r9,r5
  80b194:	20807d26 	beq	r4,r2,80b38c <__adddf3+0x7e8>
  80b198:	00801004 	movi	r2,64
  80b19c:	1109c83a 	sub	r4,r2,r4
  80b1a0:	4912983a 	sll	r9,r9,r4
  80b1a4:	498cb03a 	or	r6,r9,r6
  80b1a8:	300cc03a 	cmpne	r6,r6,zero
  80b1ac:	298ab03a 	or	r5,r5,r6
  80b1b0:	0013883a 	mov	r9,zero
  80b1b4:	003f1506 	br	80ae0c <__alt_data_end+0xff80ae0c>
  80b1b8:	0101ffc4 	movi	r4,2047
  80b1bc:	113f9a1e 	bne	r2,r4,80b028 <__alt_data_end+0xff80b028>
  80b1c0:	4811883a 	mov	r8,r9
  80b1c4:	3023883a 	mov	r17,r6
  80b1c8:	1021883a 	mov	r16,r2
  80b1cc:	3825883a 	mov	r18,r7
  80b1d0:	003e9306 	br	80ac20 <__alt_data_end+0xff80ac20>
  80b1d4:	8000161e 	bne	r16,zero,80b230 <__adddf3+0x68c>
  80b1d8:	444ab03a 	or	r5,r8,r17
  80b1dc:	28005126 	beq	r5,zero,80b324 <__adddf3+0x780>
  80b1e0:	0108303a 	nor	r4,zero,r4
  80b1e4:	20004d1e 	bne	r4,zero,80b31c <__adddf3+0x778>
  80b1e8:	89a3883a 	add	r17,r17,r6
  80b1ec:	4253883a 	add	r9,r8,r9
  80b1f0:	898d803a 	cmpltu	r6,r17,r6
  80b1f4:	3251883a 	add	r8,r6,r9
  80b1f8:	1021883a 	mov	r16,r2
  80b1fc:	003f0806 	br	80ae20 <__alt_data_end+0xff80ae20>
  80b200:	1000301e 	bne	r2,zero,80b2c4 <__adddf3+0x720>
  80b204:	4984b03a 	or	r2,r9,r6
  80b208:	10007126 	beq	r2,zero,80b3d0 <__adddf3+0x82c>
  80b20c:	4811883a 	mov	r8,r9
  80b210:	3023883a 	mov	r17,r6
  80b214:	3825883a 	mov	r18,r7
  80b218:	0401ffc4 	movi	r16,2047
  80b21c:	003e8006 	br	80ac20 <__alt_data_end+0xff80ac20>
  80b220:	4462b03a 	or	r17,r8,r17
  80b224:	8822c03a 	cmpne	r17,r17,zero
  80b228:	0007883a 	mov	r3,zero
  80b22c:	003f8b06 	br	80b05c <__alt_data_end+0xff80b05c>
  80b230:	0141ffc4 	movi	r5,2047
  80b234:	11403b26 	beq	r2,r5,80b324 <__adddf3+0x780>
  80b238:	0109c83a 	sub	r4,zero,r4
  80b23c:	42002034 	orhi	r8,r8,128
  80b240:	01400e04 	movi	r5,56
  80b244:	29006716 	blt	r5,r4,80b3e4 <__adddf3+0x840>
  80b248:	014007c4 	movi	r5,31
  80b24c:	29007016 	blt	r5,r4,80b410 <__adddf3+0x86c>
  80b250:	01400804 	movi	r5,32
  80b254:	290bc83a 	sub	r5,r5,r4
  80b258:	4154983a 	sll	r10,r8,r5
  80b25c:	890ed83a 	srl	r7,r17,r4
  80b260:	894a983a 	sll	r5,r17,r5
  80b264:	4108d83a 	srl	r4,r8,r4
  80b268:	51e2b03a 	or	r17,r10,r7
  80b26c:	280ac03a 	cmpne	r5,r5,zero
  80b270:	8962b03a 	or	r17,r17,r5
  80b274:	89a3883a 	add	r17,r17,r6
  80b278:	2253883a 	add	r9,r4,r9
  80b27c:	898d803a 	cmpltu	r6,r17,r6
  80b280:	3251883a 	add	r8,r6,r9
  80b284:	1021883a 	mov	r16,r2
  80b288:	003ee506 	br	80ae20 <__alt_data_end+0xff80ae20>
  80b28c:	4984b03a 	or	r2,r9,r6
  80b290:	103e6326 	beq	r2,zero,80ac20 <__alt_data_end+0xff80ac20>
  80b294:	8987c83a 	sub	r3,r17,r6
  80b298:	88c9803a 	cmpltu	r4,r17,r3
  80b29c:	4245c83a 	sub	r2,r8,r9
  80b2a0:	1105c83a 	sub	r2,r2,r4
  80b2a4:	1100202c 	andhi	r4,r2,128
  80b2a8:	203ebb26 	beq	r4,zero,80ad98 <__alt_data_end+0xff80ad98>
  80b2ac:	3463c83a 	sub	r17,r6,r17
  80b2b0:	4a07c83a 	sub	r3,r9,r8
  80b2b4:	344d803a 	cmpltu	r6,r6,r17
  80b2b8:	1991c83a 	sub	r8,r3,r6
  80b2bc:	3825883a 	mov	r18,r7
  80b2c0:	003e5706 	br	80ac20 <__alt_data_end+0xff80ac20>
  80b2c4:	4984b03a 	or	r2,r9,r6
  80b2c8:	10002e26 	beq	r2,zero,80b384 <__adddf3+0x7e0>
  80b2cc:	4004d0fa 	srli	r2,r8,3
  80b2d0:	8822d0fa 	srli	r17,r17,3
  80b2d4:	4010977a 	slli	r8,r8,29
  80b2d8:	10c0022c 	andhi	r3,r2,8
  80b2dc:	4462b03a 	or	r17,r8,r17
  80b2e0:	18000826 	beq	r3,zero,80b304 <__adddf3+0x760>
  80b2e4:	4808d0fa 	srli	r4,r9,3
  80b2e8:	20c0022c 	andhi	r3,r4,8
  80b2ec:	1800051e 	bne	r3,zero,80b304 <__adddf3+0x760>
  80b2f0:	300cd0fa 	srli	r6,r6,3
  80b2f4:	4806977a 	slli	r3,r9,29
  80b2f8:	2005883a 	mov	r2,r4
  80b2fc:	3825883a 	mov	r18,r7
  80b300:	19a2b03a 	or	r17,r3,r6
  80b304:	8810d77a 	srli	r8,r17,29
  80b308:	100490fa 	slli	r2,r2,3
  80b30c:	882290fa 	slli	r17,r17,3
  80b310:	0401ffc4 	movi	r16,2047
  80b314:	4090b03a 	or	r8,r8,r2
  80b318:	003e4106 	br	80ac20 <__alt_data_end+0xff80ac20>
  80b31c:	0141ffc4 	movi	r5,2047
  80b320:	117fc71e 	bne	r2,r5,80b240 <__alt_data_end+0xff80b240>
  80b324:	4811883a 	mov	r8,r9
  80b328:	3023883a 	mov	r17,r6
  80b32c:	1021883a 	mov	r16,r2
  80b330:	003e3b06 	br	80ac20 <__alt_data_end+0xff80ac20>
  80b334:	10002f26 	beq	r2,zero,80b3f4 <__adddf3+0x850>
  80b338:	4984b03a 	or	r2,r9,r6
  80b33c:	10001126 	beq	r2,zero,80b384 <__adddf3+0x7e0>
  80b340:	4004d0fa 	srli	r2,r8,3
  80b344:	8822d0fa 	srli	r17,r17,3
  80b348:	4010977a 	slli	r8,r8,29
  80b34c:	10c0022c 	andhi	r3,r2,8
  80b350:	4462b03a 	or	r17,r8,r17
  80b354:	183feb26 	beq	r3,zero,80b304 <__alt_data_end+0xff80b304>
  80b358:	4808d0fa 	srli	r4,r9,3
  80b35c:	20c0022c 	andhi	r3,r4,8
  80b360:	183fe81e 	bne	r3,zero,80b304 <__alt_data_end+0xff80b304>
  80b364:	300cd0fa 	srli	r6,r6,3
  80b368:	4806977a 	slli	r3,r9,29
  80b36c:	2005883a 	mov	r2,r4
  80b370:	19a2b03a 	or	r17,r3,r6
  80b374:	003fe306 	br	80b304 <__alt_data_end+0xff80b304>
  80b378:	0011883a 	mov	r8,zero
  80b37c:	0005883a 	mov	r2,zero
  80b380:	003e3f06 	br	80ac80 <__alt_data_end+0xff80ac80>
  80b384:	0401ffc4 	movi	r16,2047
  80b388:	003e2506 	br	80ac20 <__alt_data_end+0xff80ac20>
  80b38c:	0013883a 	mov	r9,zero
  80b390:	003f8406 	br	80b1a4 <__alt_data_end+0xff80b1a4>
  80b394:	0005883a 	mov	r2,zero
  80b398:	0007883a 	mov	r3,zero
  80b39c:	003e8906 	br	80adc4 <__alt_data_end+0xff80adc4>
  80b3a0:	197ff804 	addi	r5,r3,-32
  80b3a4:	01000804 	movi	r4,32
  80b3a8:	414ad83a 	srl	r5,r8,r5
  80b3ac:	19002426 	beq	r3,r4,80b440 <__adddf3+0x89c>
  80b3b0:	01001004 	movi	r4,64
  80b3b4:	20c7c83a 	sub	r3,r4,r3
  80b3b8:	40c6983a 	sll	r3,r8,r3
  80b3bc:	1c46b03a 	or	r3,r3,r17
  80b3c0:	1806c03a 	cmpne	r3,r3,zero
  80b3c4:	28e2b03a 	or	r17,r5,r3
  80b3c8:	0007883a 	mov	r3,zero
  80b3cc:	003f2306 	br	80b05c <__alt_data_end+0xff80b05c>
  80b3d0:	0007883a 	mov	r3,zero
  80b3d4:	5811883a 	mov	r8,r11
  80b3d8:	00bfffc4 	movi	r2,-1
  80b3dc:	0401ffc4 	movi	r16,2047
  80b3e0:	003e7806 	br	80adc4 <__alt_data_end+0xff80adc4>
  80b3e4:	4462b03a 	or	r17,r8,r17
  80b3e8:	8822c03a 	cmpne	r17,r17,zero
  80b3ec:	0009883a 	mov	r4,zero
  80b3f0:	003fa006 	br	80b274 <__alt_data_end+0xff80b274>
  80b3f4:	4811883a 	mov	r8,r9
  80b3f8:	3023883a 	mov	r17,r6
  80b3fc:	0401ffc4 	movi	r16,2047
  80b400:	003e0706 	br	80ac20 <__alt_data_end+0xff80ac20>
  80b404:	4811883a 	mov	r8,r9
  80b408:	3023883a 	mov	r17,r6
  80b40c:	003e0406 	br	80ac20 <__alt_data_end+0xff80ac20>
  80b410:	21fff804 	addi	r7,r4,-32
  80b414:	01400804 	movi	r5,32
  80b418:	41ced83a 	srl	r7,r8,r7
  80b41c:	21400a26 	beq	r4,r5,80b448 <__adddf3+0x8a4>
  80b420:	01401004 	movi	r5,64
  80b424:	2909c83a 	sub	r4,r5,r4
  80b428:	4108983a 	sll	r4,r8,r4
  80b42c:	2448b03a 	or	r4,r4,r17
  80b430:	2008c03a 	cmpne	r4,r4,zero
  80b434:	3922b03a 	or	r17,r7,r4
  80b438:	0009883a 	mov	r4,zero
  80b43c:	003f8d06 	br	80b274 <__alt_data_end+0xff80b274>
  80b440:	0007883a 	mov	r3,zero
  80b444:	003fdd06 	br	80b3bc <__alt_data_end+0xff80b3bc>
  80b448:	0009883a 	mov	r4,zero
  80b44c:	003ff706 	br	80b42c <__alt_data_end+0xff80b42c>

0080b450 <__divdf3>:
  80b450:	defff004 	addi	sp,sp,-64
  80b454:	dc800815 	stw	r18,32(sp)
  80b458:	2824d53a 	srli	r18,r5,20
  80b45c:	dd800c15 	stw	r22,48(sp)
  80b460:	282cd7fa 	srli	r22,r5,31
  80b464:	dc000615 	stw	r16,24(sp)
  80b468:	04000434 	movhi	r16,16
  80b46c:	843fffc4 	addi	r16,r16,-1
  80b470:	dfc00f15 	stw	ra,60(sp)
  80b474:	df000e15 	stw	fp,56(sp)
  80b478:	ddc00d15 	stw	r23,52(sp)
  80b47c:	dd400b15 	stw	r21,44(sp)
  80b480:	dd000a15 	stw	r20,40(sp)
  80b484:	dcc00915 	stw	r19,36(sp)
  80b488:	dc400715 	stw	r17,28(sp)
  80b48c:	9481ffcc 	andi	r18,r18,2047
  80b490:	2c20703a 	and	r16,r5,r16
  80b494:	b2003fcc 	andi	r8,r22,255
  80b498:	90006126 	beq	r18,zero,80b620 <__divdf3+0x1d0>
  80b49c:	0081ffc4 	movi	r2,2047
  80b4a0:	202b883a 	mov	r21,r4
  80b4a4:	90803726 	beq	r18,r2,80b584 <__divdf3+0x134>
  80b4a8:	80c00434 	orhi	r3,r16,16
  80b4ac:	180690fa 	slli	r3,r3,3
  80b4b0:	2020d77a 	srli	r16,r4,29
  80b4b4:	202a90fa 	slli	r21,r4,3
  80b4b8:	94bf0044 	addi	r18,r18,-1023
  80b4bc:	80e0b03a 	or	r16,r16,r3
  80b4c0:	0013883a 	mov	r9,zero
  80b4c4:	000b883a 	mov	r5,zero
  80b4c8:	3806d53a 	srli	r3,r7,20
  80b4cc:	382ed7fa 	srli	r23,r7,31
  80b4d0:	04400434 	movhi	r17,16
  80b4d4:	8c7fffc4 	addi	r17,r17,-1
  80b4d8:	18c1ffcc 	andi	r3,r3,2047
  80b4dc:	3029883a 	mov	r20,r6
  80b4e0:	3c62703a 	and	r17,r7,r17
  80b4e4:	bf003fcc 	andi	fp,r23,255
  80b4e8:	18006e26 	beq	r3,zero,80b6a4 <__divdf3+0x254>
  80b4ec:	0081ffc4 	movi	r2,2047
  80b4f0:	18806626 	beq	r3,r2,80b68c <__divdf3+0x23c>
  80b4f4:	89000434 	orhi	r4,r17,16
  80b4f8:	200890fa 	slli	r4,r4,3
  80b4fc:	3022d77a 	srli	r17,r6,29
  80b500:	302890fa 	slli	r20,r6,3
  80b504:	18ff0044 	addi	r3,r3,-1023
  80b508:	8922b03a 	or	r17,r17,r4
  80b50c:	000f883a 	mov	r7,zero
  80b510:	b5e6f03a 	xor	r19,r22,r23
  80b514:	3a4cb03a 	or	r6,r7,r9
  80b518:	008003c4 	movi	r2,15
  80b51c:	9809883a 	mov	r4,r19
  80b520:	90c7c83a 	sub	r3,r18,r3
  80b524:	9cc03fcc 	andi	r19,r19,255
  80b528:	11809636 	bltu	r2,r6,80b784 <__divdf3+0x334>
  80b52c:	300c90ba 	slli	r6,r6,2
  80b530:	00802074 	movhi	r2,129
  80b534:	10ad5104 	addi	r2,r2,-19132
  80b538:	308d883a 	add	r6,r6,r2
  80b53c:	30800017 	ldw	r2,0(r6)
  80b540:	1000683a 	jmp	r2
  80b544:	0080b784 	movi	r2,734
  80b548:	0080b5bc 	xorhi	r2,zero,726
  80b54c:	0080b774 	movhi	r2,733
  80b550:	0080b5b0 	cmpltui	r2,zero,726
  80b554:	0080b774 	movhi	r2,733
  80b558:	0080b748 	cmpgei	r2,zero,733
  80b55c:	0080b774 	movhi	r2,733
  80b560:	0080b5b0 	cmpltui	r2,zero,726
  80b564:	0080b5bc 	xorhi	r2,zero,726
  80b568:	0080b5bc 	xorhi	r2,zero,726
  80b56c:	0080b748 	cmpgei	r2,zero,733
  80b570:	0080b5b0 	cmpltui	r2,zero,726
  80b574:	0080b5a0 	cmpeqi	r2,zero,726
  80b578:	0080b5a0 	cmpeqi	r2,zero,726
  80b57c:	0080b5a0 	cmpeqi	r2,zero,726
  80b580:	0080bb0c 	andi	r2,zero,748
  80b584:	2404b03a 	or	r2,r4,r16
  80b588:	10006c1e 	bne	r2,zero,80b73c <__divdf3+0x2ec>
  80b58c:	02400204 	movi	r9,8
  80b590:	0021883a 	mov	r16,zero
  80b594:	002b883a 	mov	r21,zero
  80b598:	01400084 	movi	r5,2
  80b59c:	003fca06 	br	80b4c8 <__alt_data_end+0xff80b4c8>
  80b5a0:	8023883a 	mov	r17,r16
  80b5a4:	a829883a 	mov	r20,r21
  80b5a8:	4039883a 	mov	fp,r8
  80b5ac:	280f883a 	mov	r7,r5
  80b5b0:	00800084 	movi	r2,2
  80b5b4:	3881601e 	bne	r7,r2,80bb38 <__divdf3+0x6e8>
  80b5b8:	e027883a 	mov	r19,fp
  80b5bc:	9900004c 	andi	r4,r19,1
  80b5c0:	0081ffc4 	movi	r2,2047
  80b5c4:	0021883a 	mov	r16,zero
  80b5c8:	002b883a 	mov	r21,zero
  80b5cc:	1004953a 	slli	r2,r2,20
  80b5d0:	20c03fcc 	andi	r3,r4,255
  80b5d4:	01400434 	movhi	r5,16
  80b5d8:	297fffc4 	addi	r5,r5,-1
  80b5dc:	180697fa 	slli	r3,r3,31
  80b5e0:	8160703a 	and	r16,r16,r5
  80b5e4:	80a0b03a 	or	r16,r16,r2
  80b5e8:	80c6b03a 	or	r3,r16,r3
  80b5ec:	a805883a 	mov	r2,r21
  80b5f0:	dfc00f17 	ldw	ra,60(sp)
  80b5f4:	df000e17 	ldw	fp,56(sp)
  80b5f8:	ddc00d17 	ldw	r23,52(sp)
  80b5fc:	dd800c17 	ldw	r22,48(sp)
  80b600:	dd400b17 	ldw	r21,44(sp)
  80b604:	dd000a17 	ldw	r20,40(sp)
  80b608:	dcc00917 	ldw	r19,36(sp)
  80b60c:	dc800817 	ldw	r18,32(sp)
  80b610:	dc400717 	ldw	r17,28(sp)
  80b614:	dc000617 	ldw	r16,24(sp)
  80b618:	dec01004 	addi	sp,sp,64
  80b61c:	f800283a 	ret
  80b620:	2404b03a 	or	r2,r4,r16
  80b624:	2023883a 	mov	r17,r4
  80b628:	10003f26 	beq	r2,zero,80b728 <__divdf3+0x2d8>
  80b62c:	80015e26 	beq	r16,zero,80bba8 <__divdf3+0x758>
  80b630:	8009883a 	mov	r4,r16
  80b634:	d9800215 	stw	r6,8(sp)
  80b638:	d9c00515 	stw	r7,20(sp)
  80b63c:	da000415 	stw	r8,16(sp)
  80b640:	08004a40 	call	8004a4 <__clzsi2>
  80b644:	d9800217 	ldw	r6,8(sp)
  80b648:	d9c00517 	ldw	r7,20(sp)
  80b64c:	da000417 	ldw	r8,16(sp)
  80b650:	10fffd44 	addi	r3,r2,-11
  80b654:	01000704 	movi	r4,28
  80b658:	20c14f16 	blt	r4,r3,80bb98 <__divdf3+0x748>
  80b65c:	01000744 	movi	r4,29
  80b660:	157ffe04 	addi	r21,r2,-8
  80b664:	20c9c83a 	sub	r4,r4,r3
  80b668:	8560983a 	sll	r16,r16,r21
  80b66c:	8908d83a 	srl	r4,r17,r4
  80b670:	8d6a983a 	sll	r21,r17,r21
  80b674:	2420b03a 	or	r16,r4,r16
  80b678:	04bf0084 	movi	r18,-1022
  80b67c:	90e5c83a 	sub	r18,r18,r3
  80b680:	0013883a 	mov	r9,zero
  80b684:	000b883a 	mov	r5,zero
  80b688:	003f8f06 	br	80b4c8 <__alt_data_end+0xff80b4c8>
  80b68c:	3444b03a 	or	r2,r6,r17
  80b690:	1000231e 	bne	r2,zero,80b720 <__divdf3+0x2d0>
  80b694:	0023883a 	mov	r17,zero
  80b698:	0029883a 	mov	r20,zero
  80b69c:	01c00084 	movi	r7,2
  80b6a0:	003f9b06 	br	80b510 <__alt_data_end+0xff80b510>
  80b6a4:	3444b03a 	or	r2,r6,r17
  80b6a8:	10001926 	beq	r2,zero,80b710 <__divdf3+0x2c0>
  80b6ac:	88014b26 	beq	r17,zero,80bbdc <__divdf3+0x78c>
  80b6b0:	8809883a 	mov	r4,r17
  80b6b4:	d9400115 	stw	r5,4(sp)
  80b6b8:	d9800215 	stw	r6,8(sp)
  80b6bc:	da000415 	stw	r8,16(sp)
  80b6c0:	da400315 	stw	r9,12(sp)
  80b6c4:	08004a40 	call	8004a4 <__clzsi2>
  80b6c8:	d9400117 	ldw	r5,4(sp)
  80b6cc:	d9800217 	ldw	r6,8(sp)
  80b6d0:	da000417 	ldw	r8,16(sp)
  80b6d4:	da400317 	ldw	r9,12(sp)
  80b6d8:	10fffd44 	addi	r3,r2,-11
  80b6dc:	01000704 	movi	r4,28
  80b6e0:	20c13a16 	blt	r4,r3,80bbcc <__divdf3+0x77c>
  80b6e4:	01000744 	movi	r4,29
  80b6e8:	153ffe04 	addi	r20,r2,-8
  80b6ec:	20c9c83a 	sub	r4,r4,r3
  80b6f0:	8d22983a 	sll	r17,r17,r20
  80b6f4:	3108d83a 	srl	r4,r6,r4
  80b6f8:	3528983a 	sll	r20,r6,r20
  80b6fc:	2462b03a 	or	r17,r4,r17
  80b700:	00bf0084 	movi	r2,-1022
  80b704:	10c7c83a 	sub	r3,r2,r3
  80b708:	000f883a 	mov	r7,zero
  80b70c:	003f8006 	br	80b510 <__alt_data_end+0xff80b510>
  80b710:	0023883a 	mov	r17,zero
  80b714:	0029883a 	mov	r20,zero
  80b718:	01c00044 	movi	r7,1
  80b71c:	003f7c06 	br	80b510 <__alt_data_end+0xff80b510>
  80b720:	01c000c4 	movi	r7,3
  80b724:	003f7a06 	br	80b510 <__alt_data_end+0xff80b510>
  80b728:	02400104 	movi	r9,4
  80b72c:	0021883a 	mov	r16,zero
  80b730:	002b883a 	mov	r21,zero
  80b734:	01400044 	movi	r5,1
  80b738:	003f6306 	br	80b4c8 <__alt_data_end+0xff80b4c8>
  80b73c:	02400304 	movi	r9,12
  80b740:	014000c4 	movi	r5,3
  80b744:	003f6006 	br	80b4c8 <__alt_data_end+0xff80b4c8>
  80b748:	04000434 	movhi	r16,16
  80b74c:	0009883a 	mov	r4,zero
  80b750:	843fffc4 	addi	r16,r16,-1
  80b754:	057fffc4 	movi	r21,-1
  80b758:	0081ffc4 	movi	r2,2047
  80b75c:	003f9b06 	br	80b5cc <__alt_data_end+0xff80b5cc>
  80b760:	00c00044 	movi	r3,1
  80b764:	1887c83a 	sub	r3,r3,r2
  80b768:	01000e04 	movi	r4,56
  80b76c:	20c1530e 	bge	r4,r3,80bcbc <__divdf3+0x86c>
  80b770:	9900004c 	andi	r4,r19,1
  80b774:	0005883a 	mov	r2,zero
  80b778:	0021883a 	mov	r16,zero
  80b77c:	002b883a 	mov	r21,zero
  80b780:	003f9206 	br	80b5cc <__alt_data_end+0xff80b5cc>
  80b784:	8c012e36 	bltu	r17,r16,80bc40 <__divdf3+0x7f0>
  80b788:	84412c26 	beq	r16,r17,80bc3c <__divdf3+0x7ec>
  80b78c:	a82f883a 	mov	r23,r21
  80b790:	18ffffc4 	addi	r3,r3,-1
  80b794:	002b883a 	mov	r21,zero
  80b798:	a00ad63a 	srli	r5,r20,24
  80b79c:	8822923a 	slli	r17,r17,8
  80b7a0:	a028923a 	slli	r20,r20,8
  80b7a4:	8009883a 	mov	r4,r16
  80b7a8:	896cb03a 	or	r22,r17,r5
  80b7ac:	dd000015 	stw	r20,0(sp)
  80b7b0:	b028d43a 	srli	r20,r22,16
  80b7b4:	d8c00215 	stw	r3,8(sp)
  80b7b8:	b4bfffcc 	andi	r18,r22,65535
  80b7bc:	a00b883a 	mov	r5,r20
  80b7c0:	080aac00 	call	80aac0 <__udivsi3>
  80b7c4:	100b883a 	mov	r5,r2
  80b7c8:	9009883a 	mov	r4,r18
  80b7cc:	1023883a 	mov	r17,r2
  80b7d0:	080ab7c0 	call	80ab7c <__mulsi3>
  80b7d4:	8009883a 	mov	r4,r16
  80b7d8:	a00b883a 	mov	r5,r20
  80b7dc:	1039883a 	mov	fp,r2
  80b7e0:	080ab240 	call	80ab24 <__umodsi3>
  80b7e4:	1004943a 	slli	r2,r2,16
  80b7e8:	b808d43a 	srli	r4,r23,16
  80b7ec:	d8c00217 	ldw	r3,8(sp)
  80b7f0:	2084b03a 	or	r2,r4,r2
  80b7f4:	1700062e 	bgeu	r2,fp,80b810 <__divdf3+0x3c0>
  80b7f8:	1585883a 	add	r2,r2,r22
  80b7fc:	893fffc4 	addi	r4,r17,-1
  80b800:	15811d36 	bltu	r2,r22,80bc78 <__divdf3+0x828>
  80b804:	17011c2e 	bgeu	r2,fp,80bc78 <__divdf3+0x828>
  80b808:	8c7fff84 	addi	r17,r17,-2
  80b80c:	1585883a 	add	r2,r2,r22
  80b810:	1739c83a 	sub	fp,r2,fp
  80b814:	a00b883a 	mov	r5,r20
  80b818:	e009883a 	mov	r4,fp
  80b81c:	d8c00215 	stw	r3,8(sp)
  80b820:	080aac00 	call	80aac0 <__udivsi3>
  80b824:	100b883a 	mov	r5,r2
  80b828:	9009883a 	mov	r4,r18
  80b82c:	1021883a 	mov	r16,r2
  80b830:	080ab7c0 	call	80ab7c <__mulsi3>
  80b834:	a00b883a 	mov	r5,r20
  80b838:	e009883a 	mov	r4,fp
  80b83c:	d8800415 	stw	r2,16(sp)
  80b840:	080ab240 	call	80ab24 <__umodsi3>
  80b844:	1004943a 	slli	r2,r2,16
  80b848:	da000417 	ldw	r8,16(sp)
  80b84c:	bdffffcc 	andi	r23,r23,65535
  80b850:	b884b03a 	or	r2,r23,r2
  80b854:	d8c00217 	ldw	r3,8(sp)
  80b858:	1200062e 	bgeu	r2,r8,80b874 <__divdf3+0x424>
  80b85c:	1585883a 	add	r2,r2,r22
  80b860:	813fffc4 	addi	r4,r16,-1
  80b864:	15810236 	bltu	r2,r22,80bc70 <__divdf3+0x820>
  80b868:	1201012e 	bgeu	r2,r8,80bc70 <__divdf3+0x820>
  80b86c:	843fff84 	addi	r16,r16,-2
  80b870:	1585883a 	add	r2,r2,r22
  80b874:	8822943a 	slli	r17,r17,16
  80b878:	d9800017 	ldw	r6,0(sp)
  80b87c:	1211c83a 	sub	r8,r2,r8
  80b880:	8c22b03a 	or	r17,r17,r16
  80b884:	373fffcc 	andi	fp,r6,65535
  80b888:	8abfffcc 	andi	r10,r17,65535
  80b88c:	8820d43a 	srli	r16,r17,16
  80b890:	5009883a 	mov	r4,r10
  80b894:	e00b883a 	mov	r5,fp
  80b898:	302ed43a 	srli	r23,r6,16
  80b89c:	d8c00215 	stw	r3,8(sp)
  80b8a0:	da000415 	stw	r8,16(sp)
  80b8a4:	da800115 	stw	r10,4(sp)
  80b8a8:	080ab7c0 	call	80ab7c <__mulsi3>
  80b8ac:	800b883a 	mov	r5,r16
  80b8b0:	e009883a 	mov	r4,fp
  80b8b4:	d8800515 	stw	r2,20(sp)
  80b8b8:	080ab7c0 	call	80ab7c <__mulsi3>
  80b8bc:	8009883a 	mov	r4,r16
  80b8c0:	b80b883a 	mov	r5,r23
  80b8c4:	d8800315 	stw	r2,12(sp)
  80b8c8:	080ab7c0 	call	80ab7c <__mulsi3>
  80b8cc:	da800117 	ldw	r10,4(sp)
  80b8d0:	b80b883a 	mov	r5,r23
  80b8d4:	1021883a 	mov	r16,r2
  80b8d8:	5009883a 	mov	r4,r10
  80b8dc:	080ab7c0 	call	80ab7c <__mulsi3>
  80b8e0:	d9c00517 	ldw	r7,20(sp)
  80b8e4:	da400317 	ldw	r9,12(sp)
  80b8e8:	d8c00217 	ldw	r3,8(sp)
  80b8ec:	3808d43a 	srli	r4,r7,16
  80b8f0:	1245883a 	add	r2,r2,r9
  80b8f4:	da000417 	ldw	r8,16(sp)
  80b8f8:	2085883a 	add	r2,r4,r2
  80b8fc:	1240022e 	bgeu	r2,r9,80b908 <__divdf3+0x4b8>
  80b900:	01000074 	movhi	r4,1
  80b904:	8121883a 	add	r16,r16,r4
  80b908:	1008d43a 	srli	r4,r2,16
  80b90c:	1004943a 	slli	r2,r2,16
  80b910:	39ffffcc 	andi	r7,r7,65535
  80b914:	2409883a 	add	r4,r4,r16
  80b918:	11c5883a 	add	r2,r2,r7
  80b91c:	4100bb36 	bltu	r8,r4,80bc0c <__divdf3+0x7bc>
  80b920:	4100d726 	beq	r8,r4,80bc80 <__divdf3+0x830>
  80b924:	4109c83a 	sub	r4,r8,r4
  80b928:	a8a1c83a 	sub	r16,r21,r2
  80b92c:	ac2b803a 	cmpltu	r21,r21,r16
  80b930:	256bc83a 	sub	r21,r4,r21
  80b934:	b540d926 	beq	r22,r21,80bc9c <__divdf3+0x84c>
  80b938:	a00b883a 	mov	r5,r20
  80b93c:	a809883a 	mov	r4,r21
  80b940:	d8c00215 	stw	r3,8(sp)
  80b944:	080aac00 	call	80aac0 <__udivsi3>
  80b948:	100b883a 	mov	r5,r2
  80b94c:	9009883a 	mov	r4,r18
  80b950:	d8800515 	stw	r2,20(sp)
  80b954:	080ab7c0 	call	80ab7c <__mulsi3>
  80b958:	a809883a 	mov	r4,r21
  80b95c:	a00b883a 	mov	r5,r20
  80b960:	d8800415 	stw	r2,16(sp)
  80b964:	080ab240 	call	80ab24 <__umodsi3>
  80b968:	1004943a 	slli	r2,r2,16
  80b96c:	8008d43a 	srli	r4,r16,16
  80b970:	da000417 	ldw	r8,16(sp)
  80b974:	d8c00217 	ldw	r3,8(sp)
  80b978:	2084b03a 	or	r2,r4,r2
  80b97c:	d9c00517 	ldw	r7,20(sp)
  80b980:	1200062e 	bgeu	r2,r8,80b99c <__divdf3+0x54c>
  80b984:	1585883a 	add	r2,r2,r22
  80b988:	393fffc4 	addi	r4,r7,-1
  80b98c:	1580c536 	bltu	r2,r22,80bca4 <__divdf3+0x854>
  80b990:	1200c42e 	bgeu	r2,r8,80bca4 <__divdf3+0x854>
  80b994:	39ffff84 	addi	r7,r7,-2
  80b998:	1585883a 	add	r2,r2,r22
  80b99c:	122bc83a 	sub	r21,r2,r8
  80b9a0:	a00b883a 	mov	r5,r20
  80b9a4:	a809883a 	mov	r4,r21
  80b9a8:	d8c00215 	stw	r3,8(sp)
  80b9ac:	d9c00515 	stw	r7,20(sp)
  80b9b0:	080aac00 	call	80aac0 <__udivsi3>
  80b9b4:	9009883a 	mov	r4,r18
  80b9b8:	100b883a 	mov	r5,r2
  80b9bc:	d8800415 	stw	r2,16(sp)
  80b9c0:	080ab7c0 	call	80ab7c <__mulsi3>
  80b9c4:	a809883a 	mov	r4,r21
  80b9c8:	a00b883a 	mov	r5,r20
  80b9cc:	1025883a 	mov	r18,r2
  80b9d0:	080ab240 	call	80ab24 <__umodsi3>
  80b9d4:	1004943a 	slli	r2,r2,16
  80b9d8:	813fffcc 	andi	r4,r16,65535
  80b9dc:	d8c00217 	ldw	r3,8(sp)
  80b9e0:	20a0b03a 	or	r16,r4,r2
  80b9e4:	d9c00517 	ldw	r7,20(sp)
  80b9e8:	da000417 	ldw	r8,16(sp)
  80b9ec:	8480062e 	bgeu	r16,r18,80ba08 <__divdf3+0x5b8>
  80b9f0:	85a1883a 	add	r16,r16,r22
  80b9f4:	40bfffc4 	addi	r2,r8,-1
  80b9f8:	8580ac36 	bltu	r16,r22,80bcac <__divdf3+0x85c>
  80b9fc:	8480ab2e 	bgeu	r16,r18,80bcac <__divdf3+0x85c>
  80ba00:	423fff84 	addi	r8,r8,-2
  80ba04:	85a1883a 	add	r16,r16,r22
  80ba08:	3804943a 	slli	r2,r7,16
  80ba0c:	84a1c83a 	sub	r16,r16,r18
  80ba10:	e009883a 	mov	r4,fp
  80ba14:	1228b03a 	or	r20,r2,r8
  80ba18:	a1ffffcc 	andi	r7,r20,65535
  80ba1c:	a024d43a 	srli	r18,r20,16
  80ba20:	380b883a 	mov	r5,r7
  80ba24:	d8c00215 	stw	r3,8(sp)
  80ba28:	d9c00515 	stw	r7,20(sp)
  80ba2c:	080ab7c0 	call	80ab7c <__mulsi3>
  80ba30:	900b883a 	mov	r5,r18
  80ba34:	e009883a 	mov	r4,fp
  80ba38:	102b883a 	mov	r21,r2
  80ba3c:	080ab7c0 	call	80ab7c <__mulsi3>
  80ba40:	900b883a 	mov	r5,r18
  80ba44:	b809883a 	mov	r4,r23
  80ba48:	1039883a 	mov	fp,r2
  80ba4c:	080ab7c0 	call	80ab7c <__mulsi3>
  80ba50:	d9c00517 	ldw	r7,20(sp)
  80ba54:	b80b883a 	mov	r5,r23
  80ba58:	1025883a 	mov	r18,r2
  80ba5c:	3809883a 	mov	r4,r7
  80ba60:	080ab7c0 	call	80ab7c <__mulsi3>
  80ba64:	a808d43a 	srli	r4,r21,16
  80ba68:	1705883a 	add	r2,r2,fp
  80ba6c:	d8c00217 	ldw	r3,8(sp)
  80ba70:	2085883a 	add	r2,r4,r2
  80ba74:	1700022e 	bgeu	r2,fp,80ba80 <__divdf3+0x630>
  80ba78:	01000074 	movhi	r4,1
  80ba7c:	9125883a 	add	r18,r18,r4
  80ba80:	1008d43a 	srli	r4,r2,16
  80ba84:	1004943a 	slli	r2,r2,16
  80ba88:	ad7fffcc 	andi	r21,r21,65535
  80ba8c:	2489883a 	add	r4,r4,r18
  80ba90:	1545883a 	add	r2,r2,r21
  80ba94:	81003836 	bltu	r16,r4,80bb78 <__divdf3+0x728>
  80ba98:	81003626 	beq	r16,r4,80bb74 <__divdf3+0x724>
  80ba9c:	a5000054 	ori	r20,r20,1
  80baa0:	1880ffc4 	addi	r2,r3,1023
  80baa4:	00bf2e0e 	bge	zero,r2,80b760 <__alt_data_end+0xff80b760>
  80baa8:	a10001cc 	andi	r4,r20,7
  80baac:	20000726 	beq	r4,zero,80bacc <__divdf3+0x67c>
  80bab0:	a10003cc 	andi	r4,r20,15
  80bab4:	01400104 	movi	r5,4
  80bab8:	21400426 	beq	r4,r5,80bacc <__divdf3+0x67c>
  80babc:	a149883a 	add	r4,r20,r5
  80bac0:	2529803a 	cmpltu	r20,r4,r20
  80bac4:	8d23883a 	add	r17,r17,r20
  80bac8:	2029883a 	mov	r20,r4
  80bacc:	8900402c 	andhi	r4,r17,256
  80bad0:	20000426 	beq	r4,zero,80bae4 <__divdf3+0x694>
  80bad4:	18810004 	addi	r2,r3,1024
  80bad8:	00ffc034 	movhi	r3,65280
  80badc:	18ffffc4 	addi	r3,r3,-1
  80bae0:	88e2703a 	and	r17,r17,r3
  80bae4:	00c1ff84 	movi	r3,2046
  80bae8:	18beb416 	blt	r3,r2,80b5bc <__alt_data_end+0xff80b5bc>
  80baec:	a028d0fa 	srli	r20,r20,3
  80baf0:	882a977a 	slli	r21,r17,29
  80baf4:	8820927a 	slli	r16,r17,9
  80baf8:	1081ffcc 	andi	r2,r2,2047
  80bafc:	ad2ab03a 	or	r21,r21,r20
  80bb00:	8020d33a 	srli	r16,r16,12
  80bb04:	9900004c 	andi	r4,r19,1
  80bb08:	003eb006 	br	80b5cc <__alt_data_end+0xff80b5cc>
  80bb0c:	8080022c 	andhi	r2,r16,8
  80bb10:	10001226 	beq	r2,zero,80bb5c <__divdf3+0x70c>
  80bb14:	8880022c 	andhi	r2,r17,8
  80bb18:	1000101e 	bne	r2,zero,80bb5c <__divdf3+0x70c>
  80bb1c:	00800434 	movhi	r2,16
  80bb20:	8c000234 	orhi	r16,r17,8
  80bb24:	10bfffc4 	addi	r2,r2,-1
  80bb28:	b809883a 	mov	r4,r23
  80bb2c:	80a0703a 	and	r16,r16,r2
  80bb30:	a02b883a 	mov	r21,r20
  80bb34:	003f0806 	br	80b758 <__alt_data_end+0xff80b758>
  80bb38:	008000c4 	movi	r2,3
  80bb3c:	3880b126 	beq	r7,r2,80be04 <__divdf3+0x9b4>
  80bb40:	00800044 	movi	r2,1
  80bb44:	38805b1e 	bne	r7,r2,80bcb4 <__divdf3+0x864>
  80bb48:	e009883a 	mov	r4,fp
  80bb4c:	0005883a 	mov	r2,zero
  80bb50:	0021883a 	mov	r16,zero
  80bb54:	002b883a 	mov	r21,zero
  80bb58:	003e9c06 	br	80b5cc <__alt_data_end+0xff80b5cc>
  80bb5c:	00800434 	movhi	r2,16
  80bb60:	84000234 	orhi	r16,r16,8
  80bb64:	10bfffc4 	addi	r2,r2,-1
  80bb68:	b009883a 	mov	r4,r22
  80bb6c:	80a0703a 	and	r16,r16,r2
  80bb70:	003ef906 	br	80b758 <__alt_data_end+0xff80b758>
  80bb74:	103fca26 	beq	r2,zero,80baa0 <__alt_data_end+0xff80baa0>
  80bb78:	b421883a 	add	r16,r22,r16
  80bb7c:	a17fffc4 	addi	r5,r20,-1
  80bb80:	8580422e 	bgeu	r16,r22,80bc8c <__divdf3+0x83c>
  80bb84:	2829883a 	mov	r20,r5
  80bb88:	813fc41e 	bne	r16,r4,80ba9c <__alt_data_end+0xff80ba9c>
  80bb8c:	d9800017 	ldw	r6,0(sp)
  80bb90:	30bfc21e 	bne	r6,r2,80ba9c <__alt_data_end+0xff80ba9c>
  80bb94:	003fc206 	br	80baa0 <__alt_data_end+0xff80baa0>
  80bb98:	10bff604 	addi	r2,r2,-40
  80bb9c:	88a0983a 	sll	r16,r17,r2
  80bba0:	002b883a 	mov	r21,zero
  80bba4:	003eb406 	br	80b678 <__alt_data_end+0xff80b678>
  80bba8:	d9800215 	stw	r6,8(sp)
  80bbac:	d9c00515 	stw	r7,20(sp)
  80bbb0:	da000415 	stw	r8,16(sp)
  80bbb4:	08004a40 	call	8004a4 <__clzsi2>
  80bbb8:	10800804 	addi	r2,r2,32
  80bbbc:	da000417 	ldw	r8,16(sp)
  80bbc0:	d9c00517 	ldw	r7,20(sp)
  80bbc4:	d9800217 	ldw	r6,8(sp)
  80bbc8:	003ea106 	br	80b650 <__alt_data_end+0xff80b650>
  80bbcc:	10bff604 	addi	r2,r2,-40
  80bbd0:	30a2983a 	sll	r17,r6,r2
  80bbd4:	0029883a 	mov	r20,zero
  80bbd8:	003ec906 	br	80b700 <__alt_data_end+0xff80b700>
  80bbdc:	3009883a 	mov	r4,r6
  80bbe0:	d9400115 	stw	r5,4(sp)
  80bbe4:	d9800215 	stw	r6,8(sp)
  80bbe8:	da000415 	stw	r8,16(sp)
  80bbec:	da400315 	stw	r9,12(sp)
  80bbf0:	08004a40 	call	8004a4 <__clzsi2>
  80bbf4:	10800804 	addi	r2,r2,32
  80bbf8:	da400317 	ldw	r9,12(sp)
  80bbfc:	da000417 	ldw	r8,16(sp)
  80bc00:	d9800217 	ldw	r6,8(sp)
  80bc04:	d9400117 	ldw	r5,4(sp)
  80bc08:	003eb306 	br	80b6d8 <__alt_data_end+0xff80b6d8>
  80bc0c:	d9800017 	ldw	r6,0(sp)
  80bc10:	a9ab883a 	add	r21,r21,r6
  80bc14:	a98b803a 	cmpltu	r5,r21,r6
  80bc18:	2d8b883a 	add	r5,r5,r22
  80bc1c:	2a11883a 	add	r8,r5,r8
  80bc20:	897fffc4 	addi	r5,r17,-1
  80bc24:	b2000c2e 	bgeu	r22,r8,80bc58 <__divdf3+0x808>
  80bc28:	41003f36 	bltu	r8,r4,80bd28 <__divdf3+0x8d8>
  80bc2c:	22006c26 	beq	r4,r8,80bde0 <__divdf3+0x990>
  80bc30:	4109c83a 	sub	r4,r8,r4
  80bc34:	2823883a 	mov	r17,r5
  80bc38:	003f3b06 	br	80b928 <__alt_data_end+0xff80b928>
  80bc3c:	ad3ed336 	bltu	r21,r20,80b78c <__alt_data_end+0xff80b78c>
  80bc40:	a804d07a 	srli	r2,r21,1
  80bc44:	802e97fa 	slli	r23,r16,31
  80bc48:	a82a97fa 	slli	r21,r21,31
  80bc4c:	8020d07a 	srli	r16,r16,1
  80bc50:	b8aeb03a 	or	r23,r23,r2
  80bc54:	003ed006 	br	80b798 <__alt_data_end+0xff80b798>
  80bc58:	b23ff51e 	bne	r22,r8,80bc30 <__alt_data_end+0xff80bc30>
  80bc5c:	d9800017 	ldw	r6,0(sp)
  80bc60:	a9bff12e 	bgeu	r21,r6,80bc28 <__alt_data_end+0xff80bc28>
  80bc64:	b109c83a 	sub	r4,r22,r4
  80bc68:	2823883a 	mov	r17,r5
  80bc6c:	003f2e06 	br	80b928 <__alt_data_end+0xff80b928>
  80bc70:	2021883a 	mov	r16,r4
  80bc74:	003eff06 	br	80b874 <__alt_data_end+0xff80b874>
  80bc78:	2023883a 	mov	r17,r4
  80bc7c:	003ee406 	br	80b810 <__alt_data_end+0xff80b810>
  80bc80:	a8bfe236 	bltu	r21,r2,80bc0c <__alt_data_end+0xff80bc0c>
  80bc84:	0009883a 	mov	r4,zero
  80bc88:	003f2706 	br	80b928 <__alt_data_end+0xff80b928>
  80bc8c:	81002d36 	bltu	r16,r4,80bd44 <__divdf3+0x8f4>
  80bc90:	24005626 	beq	r4,r16,80bdec <__divdf3+0x99c>
  80bc94:	2829883a 	mov	r20,r5
  80bc98:	003f8006 	br	80ba9c <__alt_data_end+0xff80ba9c>
  80bc9c:	053fffc4 	movi	r20,-1
  80bca0:	003f7f06 	br	80baa0 <__alt_data_end+0xff80baa0>
  80bca4:	200f883a 	mov	r7,r4
  80bca8:	003f3c06 	br	80b99c <__alt_data_end+0xff80b99c>
  80bcac:	1011883a 	mov	r8,r2
  80bcb0:	003f5506 	br	80ba08 <__alt_data_end+0xff80ba08>
  80bcb4:	e027883a 	mov	r19,fp
  80bcb8:	003f7906 	br	80baa0 <__alt_data_end+0xff80baa0>
  80bcbc:	010007c4 	movi	r4,31
  80bcc0:	20c02816 	blt	r4,r3,80bd64 <__divdf3+0x914>
  80bcc4:	00800804 	movi	r2,32
  80bcc8:	10c5c83a 	sub	r2,r2,r3
  80bccc:	888a983a 	sll	r5,r17,r2
  80bcd0:	a0c8d83a 	srl	r4,r20,r3
  80bcd4:	a084983a 	sll	r2,r20,r2
  80bcd8:	88e2d83a 	srl	r17,r17,r3
  80bcdc:	2906b03a 	or	r3,r5,r4
  80bce0:	1004c03a 	cmpne	r2,r2,zero
  80bce4:	1886b03a 	or	r3,r3,r2
  80bce8:	188001cc 	andi	r2,r3,7
  80bcec:	10000726 	beq	r2,zero,80bd0c <__divdf3+0x8bc>
  80bcf0:	188003cc 	andi	r2,r3,15
  80bcf4:	01000104 	movi	r4,4
  80bcf8:	11000426 	beq	r2,r4,80bd0c <__divdf3+0x8bc>
  80bcfc:	1805883a 	mov	r2,r3
  80bd00:	10c00104 	addi	r3,r2,4
  80bd04:	1885803a 	cmpltu	r2,r3,r2
  80bd08:	88a3883a 	add	r17,r17,r2
  80bd0c:	8880202c 	andhi	r2,r17,128
  80bd10:	10002926 	beq	r2,zero,80bdb8 <__divdf3+0x968>
  80bd14:	9900004c 	andi	r4,r19,1
  80bd18:	00800044 	movi	r2,1
  80bd1c:	0021883a 	mov	r16,zero
  80bd20:	002b883a 	mov	r21,zero
  80bd24:	003e2906 	br	80b5cc <__alt_data_end+0xff80b5cc>
  80bd28:	d9800017 	ldw	r6,0(sp)
  80bd2c:	8c7fff84 	addi	r17,r17,-2
  80bd30:	a9ab883a 	add	r21,r21,r6
  80bd34:	a98b803a 	cmpltu	r5,r21,r6
  80bd38:	2d8b883a 	add	r5,r5,r22
  80bd3c:	2a11883a 	add	r8,r5,r8
  80bd40:	003ef806 	br	80b924 <__alt_data_end+0xff80b924>
  80bd44:	d9800017 	ldw	r6,0(sp)
  80bd48:	318f883a 	add	r7,r6,r6
  80bd4c:	398b803a 	cmpltu	r5,r7,r6
  80bd50:	2d8d883a 	add	r6,r5,r22
  80bd54:	81a1883a 	add	r16,r16,r6
  80bd58:	a17fff84 	addi	r5,r20,-2
  80bd5c:	d9c00015 	stw	r7,0(sp)
  80bd60:	003f8806 	br	80bb84 <__alt_data_end+0xff80bb84>
  80bd64:	013ff844 	movi	r4,-31
  80bd68:	2085c83a 	sub	r2,r4,r2
  80bd6c:	8888d83a 	srl	r4,r17,r2
  80bd70:	00800804 	movi	r2,32
  80bd74:	18802126 	beq	r3,r2,80bdfc <__divdf3+0x9ac>
  80bd78:	04001004 	movi	r16,64
  80bd7c:	80c7c83a 	sub	r3,r16,r3
  80bd80:	88e0983a 	sll	r16,r17,r3
  80bd84:	8504b03a 	or	r2,r16,r20
  80bd88:	1004c03a 	cmpne	r2,r2,zero
  80bd8c:	2084b03a 	or	r2,r4,r2
  80bd90:	144001cc 	andi	r17,r2,7
  80bd94:	88000d1e 	bne	r17,zero,80bdcc <__divdf3+0x97c>
  80bd98:	0021883a 	mov	r16,zero
  80bd9c:	102ad0fa 	srli	r21,r2,3
  80bda0:	9900004c 	andi	r4,r19,1
  80bda4:	0005883a 	mov	r2,zero
  80bda8:	ac6ab03a 	or	r21,r21,r17
  80bdac:	003e0706 	br	80b5cc <__alt_data_end+0xff80b5cc>
  80bdb0:	1007883a 	mov	r3,r2
  80bdb4:	0023883a 	mov	r17,zero
  80bdb8:	8820927a 	slli	r16,r17,9
  80bdbc:	1805883a 	mov	r2,r3
  80bdc0:	8822977a 	slli	r17,r17,29
  80bdc4:	8020d33a 	srli	r16,r16,12
  80bdc8:	003ff406 	br	80bd9c <__alt_data_end+0xff80bd9c>
  80bdcc:	10c003cc 	andi	r3,r2,15
  80bdd0:	01000104 	movi	r4,4
  80bdd4:	193ff626 	beq	r3,r4,80bdb0 <__alt_data_end+0xff80bdb0>
  80bdd8:	0023883a 	mov	r17,zero
  80bddc:	003fc806 	br	80bd00 <__alt_data_end+0xff80bd00>
  80bde0:	a8bfd136 	bltu	r21,r2,80bd28 <__alt_data_end+0xff80bd28>
  80bde4:	2823883a 	mov	r17,r5
  80bde8:	003fa606 	br	80bc84 <__alt_data_end+0xff80bc84>
  80bdec:	d9800017 	ldw	r6,0(sp)
  80bdf0:	30bfd436 	bltu	r6,r2,80bd44 <__alt_data_end+0xff80bd44>
  80bdf4:	2829883a 	mov	r20,r5
  80bdf8:	003f6406 	br	80bb8c <__alt_data_end+0xff80bb8c>
  80bdfc:	0021883a 	mov	r16,zero
  80be00:	003fe006 	br	80bd84 <__alt_data_end+0xff80bd84>
  80be04:	00800434 	movhi	r2,16
  80be08:	8c000234 	orhi	r16,r17,8
  80be0c:	10bfffc4 	addi	r2,r2,-1
  80be10:	e009883a 	mov	r4,fp
  80be14:	80a0703a 	and	r16,r16,r2
  80be18:	a02b883a 	mov	r21,r20
  80be1c:	003e4e06 	br	80b758 <__alt_data_end+0xff80b758>

0080be20 <__eqdf2>:
  80be20:	2804d53a 	srli	r2,r5,20
  80be24:	3806d53a 	srli	r3,r7,20
  80be28:	02000434 	movhi	r8,16
  80be2c:	423fffc4 	addi	r8,r8,-1
  80be30:	1081ffcc 	andi	r2,r2,2047
  80be34:	0281ffc4 	movi	r10,2047
  80be38:	2a12703a 	and	r9,r5,r8
  80be3c:	18c1ffcc 	andi	r3,r3,2047
  80be40:	3a10703a 	and	r8,r7,r8
  80be44:	280ad7fa 	srli	r5,r5,31
  80be48:	380ed7fa 	srli	r7,r7,31
  80be4c:	12801026 	beq	r2,r10,80be90 <__eqdf2+0x70>
  80be50:	0281ffc4 	movi	r10,2047
  80be54:	1a800a26 	beq	r3,r10,80be80 <__eqdf2+0x60>
  80be58:	10c00226 	beq	r2,r3,80be64 <__eqdf2+0x44>
  80be5c:	00800044 	movi	r2,1
  80be60:	f800283a 	ret
  80be64:	4a3ffd1e 	bne	r9,r8,80be5c <__alt_data_end+0xff80be5c>
  80be68:	21bffc1e 	bne	r4,r6,80be5c <__alt_data_end+0xff80be5c>
  80be6c:	29c00c26 	beq	r5,r7,80bea0 <__eqdf2+0x80>
  80be70:	103ffa1e 	bne	r2,zero,80be5c <__alt_data_end+0xff80be5c>
  80be74:	2244b03a 	or	r2,r4,r9
  80be78:	1004c03a 	cmpne	r2,r2,zero
  80be7c:	f800283a 	ret
  80be80:	3214b03a 	or	r10,r6,r8
  80be84:	503ff426 	beq	r10,zero,80be58 <__alt_data_end+0xff80be58>
  80be88:	00800044 	movi	r2,1
  80be8c:	f800283a 	ret
  80be90:	2254b03a 	or	r10,r4,r9
  80be94:	503fee26 	beq	r10,zero,80be50 <__alt_data_end+0xff80be50>
  80be98:	00800044 	movi	r2,1
  80be9c:	f800283a 	ret
  80bea0:	0005883a 	mov	r2,zero
  80bea4:	f800283a 	ret

0080bea8 <__gedf2>:
  80bea8:	2804d53a 	srli	r2,r5,20
  80beac:	3806d53a 	srli	r3,r7,20
  80beb0:	02000434 	movhi	r8,16
  80beb4:	423fffc4 	addi	r8,r8,-1
  80beb8:	1081ffcc 	andi	r2,r2,2047
  80bebc:	0241ffc4 	movi	r9,2047
  80bec0:	2a14703a 	and	r10,r5,r8
  80bec4:	18c1ffcc 	andi	r3,r3,2047
  80bec8:	3a10703a 	and	r8,r7,r8
  80becc:	280ad7fa 	srli	r5,r5,31
  80bed0:	380ed7fa 	srli	r7,r7,31
  80bed4:	12401d26 	beq	r2,r9,80bf4c <__gedf2+0xa4>
  80bed8:	0241ffc4 	movi	r9,2047
  80bedc:	1a401226 	beq	r3,r9,80bf28 <__gedf2+0x80>
  80bee0:	1000081e 	bne	r2,zero,80bf04 <__gedf2+0x5c>
  80bee4:	2296b03a 	or	r11,r4,r10
  80bee8:	5813003a 	cmpeq	r9,r11,zero
  80beec:	1800091e 	bne	r3,zero,80bf14 <__gedf2+0x6c>
  80bef0:	3218b03a 	or	r12,r6,r8
  80bef4:	6000071e 	bne	r12,zero,80bf14 <__gedf2+0x6c>
  80bef8:	0005883a 	mov	r2,zero
  80befc:	5800101e 	bne	r11,zero,80bf40 <__gedf2+0x98>
  80bf00:	f800283a 	ret
  80bf04:	18000c1e 	bne	r3,zero,80bf38 <__gedf2+0x90>
  80bf08:	3212b03a 	or	r9,r6,r8
  80bf0c:	48000c26 	beq	r9,zero,80bf40 <__gedf2+0x98>
  80bf10:	0013883a 	mov	r9,zero
  80bf14:	39c03fcc 	andi	r7,r7,255
  80bf18:	48000826 	beq	r9,zero,80bf3c <__gedf2+0x94>
  80bf1c:	38000926 	beq	r7,zero,80bf44 <__gedf2+0x9c>
  80bf20:	00800044 	movi	r2,1
  80bf24:	f800283a 	ret
  80bf28:	3212b03a 	or	r9,r6,r8
  80bf2c:	483fec26 	beq	r9,zero,80bee0 <__alt_data_end+0xff80bee0>
  80bf30:	00bfff84 	movi	r2,-2
  80bf34:	f800283a 	ret
  80bf38:	39c03fcc 	andi	r7,r7,255
  80bf3c:	29c00626 	beq	r5,r7,80bf58 <__gedf2+0xb0>
  80bf40:	283ff726 	beq	r5,zero,80bf20 <__alt_data_end+0xff80bf20>
  80bf44:	00bfffc4 	movi	r2,-1
  80bf48:	f800283a 	ret
  80bf4c:	2292b03a 	or	r9,r4,r10
  80bf50:	483fe126 	beq	r9,zero,80bed8 <__alt_data_end+0xff80bed8>
  80bf54:	003ff606 	br	80bf30 <__alt_data_end+0xff80bf30>
  80bf58:	18bff916 	blt	r3,r2,80bf40 <__alt_data_end+0xff80bf40>
  80bf5c:	10c00316 	blt	r2,r3,80bf6c <__gedf2+0xc4>
  80bf60:	42bff736 	bltu	r8,r10,80bf40 <__alt_data_end+0xff80bf40>
  80bf64:	52000326 	beq	r10,r8,80bf74 <__gedf2+0xcc>
  80bf68:	5200042e 	bgeu	r10,r8,80bf7c <__gedf2+0xd4>
  80bf6c:	283fec1e 	bne	r5,zero,80bf20 <__alt_data_end+0xff80bf20>
  80bf70:	003ff406 	br	80bf44 <__alt_data_end+0xff80bf44>
  80bf74:	313ff236 	bltu	r6,r4,80bf40 <__alt_data_end+0xff80bf40>
  80bf78:	21bffc36 	bltu	r4,r6,80bf6c <__alt_data_end+0xff80bf6c>
  80bf7c:	0005883a 	mov	r2,zero
  80bf80:	f800283a 	ret

0080bf84 <__ledf2>:
  80bf84:	2804d53a 	srli	r2,r5,20
  80bf88:	3810d53a 	srli	r8,r7,20
  80bf8c:	00c00434 	movhi	r3,16
  80bf90:	18ffffc4 	addi	r3,r3,-1
  80bf94:	1081ffcc 	andi	r2,r2,2047
  80bf98:	0241ffc4 	movi	r9,2047
  80bf9c:	28d4703a 	and	r10,r5,r3
  80bfa0:	4201ffcc 	andi	r8,r8,2047
  80bfa4:	38c6703a 	and	r3,r7,r3
  80bfa8:	280ad7fa 	srli	r5,r5,31
  80bfac:	380ed7fa 	srli	r7,r7,31
  80bfb0:	12401f26 	beq	r2,r9,80c030 <__ledf2+0xac>
  80bfb4:	0241ffc4 	movi	r9,2047
  80bfb8:	42401426 	beq	r8,r9,80c00c <__ledf2+0x88>
  80bfbc:	1000091e 	bne	r2,zero,80bfe4 <__ledf2+0x60>
  80bfc0:	2296b03a 	or	r11,r4,r10
  80bfc4:	5813003a 	cmpeq	r9,r11,zero
  80bfc8:	29403fcc 	andi	r5,r5,255
  80bfcc:	40000a1e 	bne	r8,zero,80bff8 <__ledf2+0x74>
  80bfd0:	30d8b03a 	or	r12,r6,r3
  80bfd4:	6000081e 	bne	r12,zero,80bff8 <__ledf2+0x74>
  80bfd8:	0005883a 	mov	r2,zero
  80bfdc:	5800111e 	bne	r11,zero,80c024 <__ledf2+0xa0>
  80bfe0:	f800283a 	ret
  80bfe4:	29403fcc 	andi	r5,r5,255
  80bfe8:	40000c1e 	bne	r8,zero,80c01c <__ledf2+0x98>
  80bfec:	30d2b03a 	or	r9,r6,r3
  80bff0:	48000c26 	beq	r9,zero,80c024 <__ledf2+0xa0>
  80bff4:	0013883a 	mov	r9,zero
  80bff8:	39c03fcc 	andi	r7,r7,255
  80bffc:	48000826 	beq	r9,zero,80c020 <__ledf2+0x9c>
  80c000:	38001126 	beq	r7,zero,80c048 <__ledf2+0xc4>
  80c004:	00800044 	movi	r2,1
  80c008:	f800283a 	ret
  80c00c:	30d2b03a 	or	r9,r6,r3
  80c010:	483fea26 	beq	r9,zero,80bfbc <__alt_data_end+0xff80bfbc>
  80c014:	00800084 	movi	r2,2
  80c018:	f800283a 	ret
  80c01c:	39c03fcc 	andi	r7,r7,255
  80c020:	39400726 	beq	r7,r5,80c040 <__ledf2+0xbc>
  80c024:	2800081e 	bne	r5,zero,80c048 <__ledf2+0xc4>
  80c028:	00800044 	movi	r2,1
  80c02c:	f800283a 	ret
  80c030:	2292b03a 	or	r9,r4,r10
  80c034:	483fdf26 	beq	r9,zero,80bfb4 <__alt_data_end+0xff80bfb4>
  80c038:	00800084 	movi	r2,2
  80c03c:	f800283a 	ret
  80c040:	4080030e 	bge	r8,r2,80c050 <__ledf2+0xcc>
  80c044:	383fef26 	beq	r7,zero,80c004 <__alt_data_end+0xff80c004>
  80c048:	00bfffc4 	movi	r2,-1
  80c04c:	f800283a 	ret
  80c050:	123feb16 	blt	r2,r8,80c000 <__alt_data_end+0xff80c000>
  80c054:	1abff336 	bltu	r3,r10,80c024 <__alt_data_end+0xff80c024>
  80c058:	50c00326 	beq	r10,r3,80c068 <__ledf2+0xe4>
  80c05c:	50c0042e 	bgeu	r10,r3,80c070 <__ledf2+0xec>
  80c060:	283fe81e 	bne	r5,zero,80c004 <__alt_data_end+0xff80c004>
  80c064:	003ff806 	br	80c048 <__alt_data_end+0xff80c048>
  80c068:	313fee36 	bltu	r6,r4,80c024 <__alt_data_end+0xff80c024>
  80c06c:	21bffc36 	bltu	r4,r6,80c060 <__alt_data_end+0xff80c060>
  80c070:	0005883a 	mov	r2,zero
  80c074:	f800283a 	ret

0080c078 <__muldf3>:
  80c078:	deffee04 	addi	sp,sp,-72
  80c07c:	dd000c15 	stw	r20,48(sp)
  80c080:	2828d53a 	srli	r20,r5,20
  80c084:	ddc00f15 	stw	r23,60(sp)
  80c088:	282ed7fa 	srli	r23,r5,31
  80c08c:	dc000815 	stw	r16,32(sp)
  80c090:	04000434 	movhi	r16,16
  80c094:	dcc00b15 	stw	r19,44(sp)
  80c098:	843fffc4 	addi	r16,r16,-1
  80c09c:	dfc01115 	stw	ra,68(sp)
  80c0a0:	df001015 	stw	fp,64(sp)
  80c0a4:	dd800e15 	stw	r22,56(sp)
  80c0a8:	dd400d15 	stw	r21,52(sp)
  80c0ac:	dc800a15 	stw	r18,40(sp)
  80c0b0:	dc400915 	stw	r17,36(sp)
  80c0b4:	a501ffcc 	andi	r20,r20,2047
  80c0b8:	2c20703a 	and	r16,r5,r16
  80c0bc:	b827883a 	mov	r19,r23
  80c0c0:	ba403fcc 	andi	r9,r23,255
  80c0c4:	a0006026 	beq	r20,zero,80c248 <__muldf3+0x1d0>
  80c0c8:	0081ffc4 	movi	r2,2047
  80c0cc:	202d883a 	mov	r22,r4
  80c0d0:	a0803626 	beq	r20,r2,80c1ac <__muldf3+0x134>
  80c0d4:	84000434 	orhi	r16,r16,16
  80c0d8:	200ad77a 	srli	r5,r4,29
  80c0dc:	800690fa 	slli	r3,r16,3
  80c0e0:	202c90fa 	slli	r22,r4,3
  80c0e4:	a53f0044 	addi	r20,r20,-1023
  80c0e8:	28e0b03a 	or	r16,r5,r3
  80c0ec:	002b883a 	mov	r21,zero
  80c0f0:	000b883a 	mov	r5,zero
  80c0f4:	3806d53a 	srli	r3,r7,20
  80c0f8:	3838d7fa 	srli	fp,r7,31
  80c0fc:	04400434 	movhi	r17,16
  80c100:	8c7fffc4 	addi	r17,r17,-1
  80c104:	18c1ffcc 	andi	r3,r3,2047
  80c108:	3025883a 	mov	r18,r6
  80c10c:	3c62703a 	and	r17,r7,r17
  80c110:	e2803fcc 	andi	r10,fp,255
  80c114:	18006d26 	beq	r3,zero,80c2cc <__muldf3+0x254>
  80c118:	0081ffc4 	movi	r2,2047
  80c11c:	18806526 	beq	r3,r2,80c2b4 <__muldf3+0x23c>
  80c120:	8c400434 	orhi	r17,r17,16
  80c124:	300ed77a 	srli	r7,r6,29
  80c128:	880890fa 	slli	r4,r17,3
  80c12c:	302490fa 	slli	r18,r6,3
  80c130:	18ff0044 	addi	r3,r3,-1023
  80c134:	3922b03a 	or	r17,r7,r4
  80c138:	000f883a 	mov	r7,zero
  80c13c:	a0c7883a 	add	r3,r20,r3
  80c140:	3d48b03a 	or	r4,r7,r21
  80c144:	008003c4 	movi	r2,15
  80c148:	e5ccf03a 	xor	r6,fp,r23
  80c14c:	1a000044 	addi	r8,r3,1
  80c150:	11009b36 	bltu	r2,r4,80c3c0 <__muldf3+0x348>
  80c154:	200890ba 	slli	r4,r4,2
  80c158:	00802074 	movhi	r2,129
  80c15c:	10b05b04 	addi	r2,r2,-16020
  80c160:	2089883a 	add	r4,r4,r2
  80c164:	20800017 	ldw	r2,0(r4)
  80c168:	1000683a 	jmp	r2
  80c16c:	0080c3c0 	call	80c3c <__reset-0x77f3c4>
  80c170:	0080c1cc 	andi	r2,zero,775
  80c174:	0080c1cc 	andi	r2,zero,775
  80c178:	0080c1c8 	cmpgei	r2,zero,775
  80c17c:	0080c39c 	xori	r2,zero,782
  80c180:	0080c39c 	xori	r2,zero,782
  80c184:	0080c384 	movi	r2,782
  80c188:	0080c1c8 	cmpgei	r2,zero,775
  80c18c:	0080c39c 	xori	r2,zero,782
  80c190:	0080c384 	movi	r2,782
  80c194:	0080c39c 	xori	r2,zero,782
  80c198:	0080c1c8 	cmpgei	r2,zero,775
  80c19c:	0080c3ac 	andhi	r2,zero,782
  80c1a0:	0080c3ac 	andhi	r2,zero,782
  80c1a4:	0080c3ac 	andhi	r2,zero,782
  80c1a8:	0080c708 	cmpgei	r2,zero,796
  80c1ac:	2404b03a 	or	r2,r4,r16
  80c1b0:	1000711e 	bne	r2,zero,80c378 <__muldf3+0x300>
  80c1b4:	05400204 	movi	r21,8
  80c1b8:	0021883a 	mov	r16,zero
  80c1bc:	002d883a 	mov	r22,zero
  80c1c0:	01400084 	movi	r5,2
  80c1c4:	003fcb06 	br	80c0f4 <__alt_data_end+0xff80c0f4>
  80c1c8:	500d883a 	mov	r6,r10
  80c1cc:	00800084 	movi	r2,2
  80c1d0:	38805926 	beq	r7,r2,80c338 <__muldf3+0x2c0>
  80c1d4:	008000c4 	movi	r2,3
  80c1d8:	3881ba26 	beq	r7,r2,80c8c4 <__muldf3+0x84c>
  80c1dc:	00800044 	movi	r2,1
  80c1e0:	3881951e 	bne	r7,r2,80c838 <__muldf3+0x7c0>
  80c1e4:	3027883a 	mov	r19,r6
  80c1e8:	0005883a 	mov	r2,zero
  80c1ec:	0021883a 	mov	r16,zero
  80c1f0:	002d883a 	mov	r22,zero
  80c1f4:	1004953a 	slli	r2,r2,20
  80c1f8:	98c03fcc 	andi	r3,r19,255
  80c1fc:	04400434 	movhi	r17,16
  80c200:	8c7fffc4 	addi	r17,r17,-1
  80c204:	180697fa 	slli	r3,r3,31
  80c208:	8460703a 	and	r16,r16,r17
  80c20c:	80a0b03a 	or	r16,r16,r2
  80c210:	80c6b03a 	or	r3,r16,r3
  80c214:	b005883a 	mov	r2,r22
  80c218:	dfc01117 	ldw	ra,68(sp)
  80c21c:	df001017 	ldw	fp,64(sp)
  80c220:	ddc00f17 	ldw	r23,60(sp)
  80c224:	dd800e17 	ldw	r22,56(sp)
  80c228:	dd400d17 	ldw	r21,52(sp)
  80c22c:	dd000c17 	ldw	r20,48(sp)
  80c230:	dcc00b17 	ldw	r19,44(sp)
  80c234:	dc800a17 	ldw	r18,40(sp)
  80c238:	dc400917 	ldw	r17,36(sp)
  80c23c:	dc000817 	ldw	r16,32(sp)
  80c240:	dec01204 	addi	sp,sp,72
  80c244:	f800283a 	ret
  80c248:	2404b03a 	or	r2,r4,r16
  80c24c:	202b883a 	mov	r21,r4
  80c250:	10004426 	beq	r2,zero,80c364 <__muldf3+0x2ec>
  80c254:	80015026 	beq	r16,zero,80c798 <__muldf3+0x720>
  80c258:	8009883a 	mov	r4,r16
  80c25c:	d9800715 	stw	r6,28(sp)
  80c260:	d9c00215 	stw	r7,8(sp)
  80c264:	da400415 	stw	r9,16(sp)
  80c268:	08004a40 	call	8004a4 <__clzsi2>
  80c26c:	d9800717 	ldw	r6,28(sp)
  80c270:	d9c00217 	ldw	r7,8(sp)
  80c274:	da400417 	ldw	r9,16(sp)
  80c278:	10fffd44 	addi	r3,r2,-11
  80c27c:	01000704 	movi	r4,28
  80c280:	20c14116 	blt	r4,r3,80c788 <__muldf3+0x710>
  80c284:	01000744 	movi	r4,29
  80c288:	15bffe04 	addi	r22,r2,-8
  80c28c:	20c9c83a 	sub	r4,r4,r3
  80c290:	85a0983a 	sll	r16,r16,r22
  80c294:	a908d83a 	srl	r4,r21,r4
  80c298:	adac983a 	sll	r22,r21,r22
  80c29c:	2420b03a 	or	r16,r4,r16
  80c2a0:	053f0084 	movi	r20,-1022
  80c2a4:	a0e9c83a 	sub	r20,r20,r3
  80c2a8:	002b883a 	mov	r21,zero
  80c2ac:	000b883a 	mov	r5,zero
  80c2b0:	003f9006 	br	80c0f4 <__alt_data_end+0xff80c0f4>
  80c2b4:	3444b03a 	or	r2,r6,r17
  80c2b8:	1000281e 	bne	r2,zero,80c35c <__muldf3+0x2e4>
  80c2bc:	0023883a 	mov	r17,zero
  80c2c0:	0025883a 	mov	r18,zero
  80c2c4:	01c00084 	movi	r7,2
  80c2c8:	003f9c06 	br	80c13c <__alt_data_end+0xff80c13c>
  80c2cc:	3444b03a 	or	r2,r6,r17
  80c2d0:	10001e26 	beq	r2,zero,80c34c <__muldf3+0x2d4>
  80c2d4:	88012026 	beq	r17,zero,80c758 <__muldf3+0x6e0>
  80c2d8:	8809883a 	mov	r4,r17
  80c2dc:	d9400215 	stw	r5,8(sp)
  80c2e0:	d9800715 	stw	r6,28(sp)
  80c2e4:	da400415 	stw	r9,16(sp)
  80c2e8:	da800315 	stw	r10,12(sp)
  80c2ec:	08004a40 	call	8004a4 <__clzsi2>
  80c2f0:	d9400217 	ldw	r5,8(sp)
  80c2f4:	d9800717 	ldw	r6,28(sp)
  80c2f8:	da400417 	ldw	r9,16(sp)
  80c2fc:	da800317 	ldw	r10,12(sp)
  80c300:	113ffd44 	addi	r4,r2,-11
  80c304:	00c00704 	movi	r3,28
  80c308:	19010f16 	blt	r3,r4,80c748 <__muldf3+0x6d0>
  80c30c:	00c00744 	movi	r3,29
  80c310:	14bffe04 	addi	r18,r2,-8
  80c314:	1907c83a 	sub	r3,r3,r4
  80c318:	8ca2983a 	sll	r17,r17,r18
  80c31c:	30c6d83a 	srl	r3,r6,r3
  80c320:	34a4983a 	sll	r18,r6,r18
  80c324:	1c62b03a 	or	r17,r3,r17
  80c328:	00ff0084 	movi	r3,-1022
  80c32c:	1907c83a 	sub	r3,r3,r4
  80c330:	000f883a 	mov	r7,zero
  80c334:	003f8106 	br	80c13c <__alt_data_end+0xff80c13c>
  80c338:	3027883a 	mov	r19,r6
  80c33c:	0081ffc4 	movi	r2,2047
  80c340:	0021883a 	mov	r16,zero
  80c344:	002d883a 	mov	r22,zero
  80c348:	003faa06 	br	80c1f4 <__alt_data_end+0xff80c1f4>
  80c34c:	0023883a 	mov	r17,zero
  80c350:	0025883a 	mov	r18,zero
  80c354:	01c00044 	movi	r7,1
  80c358:	003f7806 	br	80c13c <__alt_data_end+0xff80c13c>
  80c35c:	01c000c4 	movi	r7,3
  80c360:	003f7606 	br	80c13c <__alt_data_end+0xff80c13c>
  80c364:	05400104 	movi	r21,4
  80c368:	0021883a 	mov	r16,zero
  80c36c:	002d883a 	mov	r22,zero
  80c370:	01400044 	movi	r5,1
  80c374:	003f5f06 	br	80c0f4 <__alt_data_end+0xff80c0f4>
  80c378:	05400304 	movi	r21,12
  80c37c:	014000c4 	movi	r5,3
  80c380:	003f5c06 	br	80c0f4 <__alt_data_end+0xff80c0f4>
  80c384:	04000434 	movhi	r16,16
  80c388:	0027883a 	mov	r19,zero
  80c38c:	843fffc4 	addi	r16,r16,-1
  80c390:	05bfffc4 	movi	r22,-1
  80c394:	0081ffc4 	movi	r2,2047
  80c398:	003f9606 	br	80c1f4 <__alt_data_end+0xff80c1f4>
  80c39c:	8023883a 	mov	r17,r16
  80c3a0:	b025883a 	mov	r18,r22
  80c3a4:	280f883a 	mov	r7,r5
  80c3a8:	003f8806 	br	80c1cc <__alt_data_end+0xff80c1cc>
  80c3ac:	8023883a 	mov	r17,r16
  80c3b0:	b025883a 	mov	r18,r22
  80c3b4:	480d883a 	mov	r6,r9
  80c3b8:	280f883a 	mov	r7,r5
  80c3bc:	003f8306 	br	80c1cc <__alt_data_end+0xff80c1cc>
  80c3c0:	b028d43a 	srli	r20,r22,16
  80c3c4:	902ed43a 	srli	r23,r18,16
  80c3c8:	b5bfffcc 	andi	r22,r22,65535
  80c3cc:	94bfffcc 	andi	r18,r18,65535
  80c3d0:	b00b883a 	mov	r5,r22
  80c3d4:	9009883a 	mov	r4,r18
  80c3d8:	d8c00515 	stw	r3,20(sp)
  80c3dc:	d9800715 	stw	r6,28(sp)
  80c3e0:	da000615 	stw	r8,24(sp)
  80c3e4:	080ab7c0 	call	80ab7c <__mulsi3>
  80c3e8:	a00b883a 	mov	r5,r20
  80c3ec:	9009883a 	mov	r4,r18
  80c3f0:	1027883a 	mov	r19,r2
  80c3f4:	080ab7c0 	call	80ab7c <__mulsi3>
  80c3f8:	b80b883a 	mov	r5,r23
  80c3fc:	a009883a 	mov	r4,r20
  80c400:	102b883a 	mov	r21,r2
  80c404:	080ab7c0 	call	80ab7c <__mulsi3>
  80c408:	b809883a 	mov	r4,r23
  80c40c:	b00b883a 	mov	r5,r22
  80c410:	1039883a 	mov	fp,r2
  80c414:	080ab7c0 	call	80ab7c <__mulsi3>
  80c418:	9808d43a 	srli	r4,r19,16
  80c41c:	1545883a 	add	r2,r2,r21
  80c420:	d8c00517 	ldw	r3,20(sp)
  80c424:	2085883a 	add	r2,r4,r2
  80c428:	d9800717 	ldw	r6,28(sp)
  80c42c:	da000617 	ldw	r8,24(sp)
  80c430:	1540022e 	bgeu	r2,r21,80c43c <__muldf3+0x3c4>
  80c434:	01000074 	movhi	r4,1
  80c438:	e139883a 	add	fp,fp,r4
  80c43c:	100e943a 	slli	r7,r2,16
  80c440:	1004d43a 	srli	r2,r2,16
  80c444:	882ad43a 	srli	r21,r17,16
  80c448:	9cffffcc 	andi	r19,r19,65535
  80c44c:	8c7fffcc 	andi	r17,r17,65535
  80c450:	3ce7883a 	add	r19,r7,r19
  80c454:	b00b883a 	mov	r5,r22
  80c458:	8809883a 	mov	r4,r17
  80c45c:	d8c00515 	stw	r3,20(sp)
  80c460:	d9800715 	stw	r6,28(sp)
  80c464:	da000615 	stw	r8,24(sp)
  80c468:	dcc00115 	stw	r19,4(sp)
  80c46c:	d8800015 	stw	r2,0(sp)
  80c470:	080ab7c0 	call	80ab7c <__mulsi3>
  80c474:	a00b883a 	mov	r5,r20
  80c478:	8809883a 	mov	r4,r17
  80c47c:	d8800215 	stw	r2,8(sp)
  80c480:	080ab7c0 	call	80ab7c <__mulsi3>
  80c484:	a009883a 	mov	r4,r20
  80c488:	a80b883a 	mov	r5,r21
  80c48c:	1027883a 	mov	r19,r2
  80c490:	080ab7c0 	call	80ab7c <__mulsi3>
  80c494:	a809883a 	mov	r4,r21
  80c498:	b00b883a 	mov	r5,r22
  80c49c:	1029883a 	mov	r20,r2
  80c4a0:	080ab7c0 	call	80ab7c <__mulsi3>
  80c4a4:	d9c00217 	ldw	r7,8(sp)
  80c4a8:	14c5883a 	add	r2,r2,r19
  80c4ac:	d8c00517 	ldw	r3,20(sp)
  80c4b0:	3808d43a 	srli	r4,r7,16
  80c4b4:	d9800717 	ldw	r6,28(sp)
  80c4b8:	da000617 	ldw	r8,24(sp)
  80c4bc:	2085883a 	add	r2,r4,r2
  80c4c0:	14c0022e 	bgeu	r2,r19,80c4cc <__muldf3+0x454>
  80c4c4:	01000074 	movhi	r4,1
  80c4c8:	a129883a 	add	r20,r20,r4
  80c4cc:	1012d43a 	srli	r9,r2,16
  80c4d0:	1004943a 	slli	r2,r2,16
  80c4d4:	802cd43a 	srli	r22,r16,16
  80c4d8:	843fffcc 	andi	r16,r16,65535
  80c4dc:	3cffffcc 	andi	r19,r7,65535
  80c4e0:	9009883a 	mov	r4,r18
  80c4e4:	800b883a 	mov	r5,r16
  80c4e8:	4d29883a 	add	r20,r9,r20
  80c4ec:	d8c00515 	stw	r3,20(sp)
  80c4f0:	d9800715 	stw	r6,28(sp)
  80c4f4:	da000615 	stw	r8,24(sp)
  80c4f8:	14e7883a 	add	r19,r2,r19
  80c4fc:	080ab7c0 	call	80ab7c <__mulsi3>
  80c500:	9009883a 	mov	r4,r18
  80c504:	b00b883a 	mov	r5,r22
  80c508:	d8800315 	stw	r2,12(sp)
  80c50c:	080ab7c0 	call	80ab7c <__mulsi3>
  80c510:	b809883a 	mov	r4,r23
  80c514:	b00b883a 	mov	r5,r22
  80c518:	d8800215 	stw	r2,8(sp)
  80c51c:	080ab7c0 	call	80ab7c <__mulsi3>
  80c520:	b80b883a 	mov	r5,r23
  80c524:	8009883a 	mov	r4,r16
  80c528:	d8800415 	stw	r2,16(sp)
  80c52c:	080ab7c0 	call	80ab7c <__mulsi3>
  80c530:	da800317 	ldw	r10,12(sp)
  80c534:	d9c00217 	ldw	r7,8(sp)
  80c538:	d9000017 	ldw	r4,0(sp)
  80c53c:	502ed43a 	srli	r23,r10,16
  80c540:	11c5883a 	add	r2,r2,r7
  80c544:	24e5883a 	add	r18,r4,r19
  80c548:	b885883a 	add	r2,r23,r2
  80c54c:	d8c00517 	ldw	r3,20(sp)
  80c550:	d9800717 	ldw	r6,28(sp)
  80c554:	da000617 	ldw	r8,24(sp)
  80c558:	da400417 	ldw	r9,16(sp)
  80c55c:	11c0022e 	bgeu	r2,r7,80c568 <__muldf3+0x4f0>
  80c560:	01000074 	movhi	r4,1
  80c564:	4913883a 	add	r9,r9,r4
  80c568:	100ed43a 	srli	r7,r2,16
  80c56c:	1004943a 	slli	r2,r2,16
  80c570:	55ffffcc 	andi	r23,r10,65535
  80c574:	3a53883a 	add	r9,r7,r9
  80c578:	8809883a 	mov	r4,r17
  80c57c:	800b883a 	mov	r5,r16
  80c580:	d8c00515 	stw	r3,20(sp)
  80c584:	d9800715 	stw	r6,28(sp)
  80c588:	da000615 	stw	r8,24(sp)
  80c58c:	da400415 	stw	r9,16(sp)
  80c590:	15ef883a 	add	r23,r2,r23
  80c594:	080ab7c0 	call	80ab7c <__mulsi3>
  80c598:	8809883a 	mov	r4,r17
  80c59c:	b00b883a 	mov	r5,r22
  80c5a0:	d8800215 	stw	r2,8(sp)
  80c5a4:	080ab7c0 	call	80ab7c <__mulsi3>
  80c5a8:	b00b883a 	mov	r5,r22
  80c5ac:	a809883a 	mov	r4,r21
  80c5b0:	d8800315 	stw	r2,12(sp)
  80c5b4:	080ab7c0 	call	80ab7c <__mulsi3>
  80c5b8:	8009883a 	mov	r4,r16
  80c5bc:	a80b883a 	mov	r5,r21
  80c5c0:	1023883a 	mov	r17,r2
  80c5c4:	080ab7c0 	call	80ab7c <__mulsi3>
  80c5c8:	d9c00217 	ldw	r7,8(sp)
  80c5cc:	da800317 	ldw	r10,12(sp)
  80c5d0:	d8c00517 	ldw	r3,20(sp)
  80c5d4:	3808d43a 	srli	r4,r7,16
  80c5d8:	1285883a 	add	r2,r2,r10
  80c5dc:	d9800717 	ldw	r6,28(sp)
  80c5e0:	2085883a 	add	r2,r4,r2
  80c5e4:	da000617 	ldw	r8,24(sp)
  80c5e8:	da400417 	ldw	r9,16(sp)
  80c5ec:	1280022e 	bgeu	r2,r10,80c5f8 <__muldf3+0x580>
  80c5f0:	01000074 	movhi	r4,1
  80c5f4:	8923883a 	add	r17,r17,r4
  80c5f8:	1008943a 	slli	r4,r2,16
  80c5fc:	39ffffcc 	andi	r7,r7,65535
  80c600:	e4b9883a 	add	fp,fp,r18
  80c604:	21cf883a 	add	r7,r4,r7
  80c608:	e4e7803a 	cmpltu	r19,fp,r19
  80c60c:	3d0f883a 	add	r7,r7,r20
  80c610:	bf39883a 	add	fp,r23,fp
  80c614:	99c9883a 	add	r4,r19,r7
  80c618:	e5ef803a 	cmpltu	r23,fp,r23
  80c61c:	490b883a 	add	r5,r9,r4
  80c620:	1004d43a 	srli	r2,r2,16
  80c624:	b965883a 	add	r18,r23,r5
  80c628:	24c9803a 	cmpltu	r4,r4,r19
  80c62c:	3d29803a 	cmpltu	r20,r7,r20
  80c630:	a128b03a 	or	r20,r20,r4
  80c634:	95ef803a 	cmpltu	r23,r18,r23
  80c638:	2a53803a 	cmpltu	r9,r5,r9
  80c63c:	a0a9883a 	add	r20,r20,r2
  80c640:	4deeb03a 	or	r23,r9,r23
  80c644:	a5ef883a 	add	r23,r20,r23
  80c648:	bc63883a 	add	r17,r23,r17
  80c64c:	e004927a 	slli	r2,fp,9
  80c650:	d9000117 	ldw	r4,4(sp)
  80c654:	882e927a 	slli	r23,r17,9
  80c658:	9022d5fa 	srli	r17,r18,23
  80c65c:	e038d5fa 	srli	fp,fp,23
  80c660:	1104b03a 	or	r2,r2,r4
  80c664:	9024927a 	slli	r18,r18,9
  80c668:	1004c03a 	cmpne	r2,r2,zero
  80c66c:	bc62b03a 	or	r17,r23,r17
  80c670:	1738b03a 	or	fp,r2,fp
  80c674:	8880402c 	andhi	r2,r17,256
  80c678:	e4a4b03a 	or	r18,fp,r18
  80c67c:	10000726 	beq	r2,zero,80c69c <__muldf3+0x624>
  80c680:	9006d07a 	srli	r3,r18,1
  80c684:	880497fa 	slli	r2,r17,31
  80c688:	9480004c 	andi	r18,r18,1
  80c68c:	8822d07a 	srli	r17,r17,1
  80c690:	1ca4b03a 	or	r18,r3,r18
  80c694:	14a4b03a 	or	r18,r2,r18
  80c698:	4007883a 	mov	r3,r8
  80c69c:	1880ffc4 	addi	r2,r3,1023
  80c6a0:	0080460e 	bge	zero,r2,80c7bc <__muldf3+0x744>
  80c6a4:	910001cc 	andi	r4,r18,7
  80c6a8:	20000726 	beq	r4,zero,80c6c8 <__muldf3+0x650>
  80c6ac:	910003cc 	andi	r4,r18,15
  80c6b0:	01400104 	movi	r5,4
  80c6b4:	21400426 	beq	r4,r5,80c6c8 <__muldf3+0x650>
  80c6b8:	9149883a 	add	r4,r18,r5
  80c6bc:	24a5803a 	cmpltu	r18,r4,r18
  80c6c0:	8ca3883a 	add	r17,r17,r18
  80c6c4:	2025883a 	mov	r18,r4
  80c6c8:	8900402c 	andhi	r4,r17,256
  80c6cc:	20000426 	beq	r4,zero,80c6e0 <__muldf3+0x668>
  80c6d0:	18810004 	addi	r2,r3,1024
  80c6d4:	00ffc034 	movhi	r3,65280
  80c6d8:	18ffffc4 	addi	r3,r3,-1
  80c6dc:	88e2703a 	and	r17,r17,r3
  80c6e0:	00c1ff84 	movi	r3,2046
  80c6e4:	18bf1416 	blt	r3,r2,80c338 <__alt_data_end+0xff80c338>
  80c6e8:	882c977a 	slli	r22,r17,29
  80c6ec:	9024d0fa 	srli	r18,r18,3
  80c6f0:	8822927a 	slli	r17,r17,9
  80c6f4:	1081ffcc 	andi	r2,r2,2047
  80c6f8:	b4acb03a 	or	r22,r22,r18
  80c6fc:	8820d33a 	srli	r16,r17,12
  80c700:	3027883a 	mov	r19,r6
  80c704:	003ebb06 	br	80c1f4 <__alt_data_end+0xff80c1f4>
  80c708:	8080022c 	andhi	r2,r16,8
  80c70c:	10000926 	beq	r2,zero,80c734 <__muldf3+0x6bc>
  80c710:	8880022c 	andhi	r2,r17,8
  80c714:	1000071e 	bne	r2,zero,80c734 <__muldf3+0x6bc>
  80c718:	00800434 	movhi	r2,16
  80c71c:	8c000234 	orhi	r16,r17,8
  80c720:	10bfffc4 	addi	r2,r2,-1
  80c724:	e027883a 	mov	r19,fp
  80c728:	80a0703a 	and	r16,r16,r2
  80c72c:	902d883a 	mov	r22,r18
  80c730:	003f1806 	br	80c394 <__alt_data_end+0xff80c394>
  80c734:	00800434 	movhi	r2,16
  80c738:	84000234 	orhi	r16,r16,8
  80c73c:	10bfffc4 	addi	r2,r2,-1
  80c740:	80a0703a 	and	r16,r16,r2
  80c744:	003f1306 	br	80c394 <__alt_data_end+0xff80c394>
  80c748:	147ff604 	addi	r17,r2,-40
  80c74c:	3462983a 	sll	r17,r6,r17
  80c750:	0025883a 	mov	r18,zero
  80c754:	003ef406 	br	80c328 <__alt_data_end+0xff80c328>
  80c758:	3009883a 	mov	r4,r6
  80c75c:	d9400215 	stw	r5,8(sp)
  80c760:	d9800715 	stw	r6,28(sp)
  80c764:	da400415 	stw	r9,16(sp)
  80c768:	da800315 	stw	r10,12(sp)
  80c76c:	08004a40 	call	8004a4 <__clzsi2>
  80c770:	10800804 	addi	r2,r2,32
  80c774:	da800317 	ldw	r10,12(sp)
  80c778:	da400417 	ldw	r9,16(sp)
  80c77c:	d9800717 	ldw	r6,28(sp)
  80c780:	d9400217 	ldw	r5,8(sp)
  80c784:	003ede06 	br	80c300 <__alt_data_end+0xff80c300>
  80c788:	143ff604 	addi	r16,r2,-40
  80c78c:	ac20983a 	sll	r16,r21,r16
  80c790:	002d883a 	mov	r22,zero
  80c794:	003ec206 	br	80c2a0 <__alt_data_end+0xff80c2a0>
  80c798:	d9800715 	stw	r6,28(sp)
  80c79c:	d9c00215 	stw	r7,8(sp)
  80c7a0:	da400415 	stw	r9,16(sp)
  80c7a4:	08004a40 	call	8004a4 <__clzsi2>
  80c7a8:	10800804 	addi	r2,r2,32
  80c7ac:	da400417 	ldw	r9,16(sp)
  80c7b0:	d9c00217 	ldw	r7,8(sp)
  80c7b4:	d9800717 	ldw	r6,28(sp)
  80c7b8:	003eaf06 	br	80c278 <__alt_data_end+0xff80c278>
  80c7bc:	00c00044 	movi	r3,1
  80c7c0:	1887c83a 	sub	r3,r3,r2
  80c7c4:	01000e04 	movi	r4,56
  80c7c8:	20fe8616 	blt	r4,r3,80c1e4 <__alt_data_end+0xff80c1e4>
  80c7cc:	010007c4 	movi	r4,31
  80c7d0:	20c01b16 	blt	r4,r3,80c840 <__muldf3+0x7c8>
  80c7d4:	00800804 	movi	r2,32
  80c7d8:	10c5c83a 	sub	r2,r2,r3
  80c7dc:	888a983a 	sll	r5,r17,r2
  80c7e0:	90c8d83a 	srl	r4,r18,r3
  80c7e4:	9084983a 	sll	r2,r18,r2
  80c7e8:	88e2d83a 	srl	r17,r17,r3
  80c7ec:	2906b03a 	or	r3,r5,r4
  80c7f0:	1004c03a 	cmpne	r2,r2,zero
  80c7f4:	1886b03a 	or	r3,r3,r2
  80c7f8:	188001cc 	andi	r2,r3,7
  80c7fc:	10000726 	beq	r2,zero,80c81c <__muldf3+0x7a4>
  80c800:	188003cc 	andi	r2,r3,15
  80c804:	01000104 	movi	r4,4
  80c808:	11000426 	beq	r2,r4,80c81c <__muldf3+0x7a4>
  80c80c:	1805883a 	mov	r2,r3
  80c810:	10c00104 	addi	r3,r2,4
  80c814:	1885803a 	cmpltu	r2,r3,r2
  80c818:	88a3883a 	add	r17,r17,r2
  80c81c:	8880202c 	andhi	r2,r17,128
  80c820:	10001c26 	beq	r2,zero,80c894 <__muldf3+0x81c>
  80c824:	3027883a 	mov	r19,r6
  80c828:	00800044 	movi	r2,1
  80c82c:	0021883a 	mov	r16,zero
  80c830:	002d883a 	mov	r22,zero
  80c834:	003e6f06 	br	80c1f4 <__alt_data_end+0xff80c1f4>
  80c838:	4007883a 	mov	r3,r8
  80c83c:	003f9706 	br	80c69c <__alt_data_end+0xff80c69c>
  80c840:	017ff844 	movi	r5,-31
  80c844:	2885c83a 	sub	r2,r5,r2
  80c848:	888ad83a 	srl	r5,r17,r2
  80c84c:	00800804 	movi	r2,32
  80c850:	18801a26 	beq	r3,r2,80c8bc <__muldf3+0x844>
  80c854:	01001004 	movi	r4,64
  80c858:	20c7c83a 	sub	r3,r4,r3
  80c85c:	88e2983a 	sll	r17,r17,r3
  80c860:	8ca4b03a 	or	r18,r17,r18
  80c864:	9004c03a 	cmpne	r2,r18,zero
  80c868:	2884b03a 	or	r2,r5,r2
  80c86c:	144001cc 	andi	r17,r2,7
  80c870:	88000d1e 	bne	r17,zero,80c8a8 <__muldf3+0x830>
  80c874:	0021883a 	mov	r16,zero
  80c878:	102cd0fa 	srli	r22,r2,3
  80c87c:	3027883a 	mov	r19,r6
  80c880:	0005883a 	mov	r2,zero
  80c884:	b46cb03a 	or	r22,r22,r17
  80c888:	003e5a06 	br	80c1f4 <__alt_data_end+0xff80c1f4>
  80c88c:	1007883a 	mov	r3,r2
  80c890:	0023883a 	mov	r17,zero
  80c894:	8820927a 	slli	r16,r17,9
  80c898:	1805883a 	mov	r2,r3
  80c89c:	8822977a 	slli	r17,r17,29
  80c8a0:	8020d33a 	srli	r16,r16,12
  80c8a4:	003ff406 	br	80c878 <__alt_data_end+0xff80c878>
  80c8a8:	10c003cc 	andi	r3,r2,15
  80c8ac:	01000104 	movi	r4,4
  80c8b0:	193ff626 	beq	r3,r4,80c88c <__alt_data_end+0xff80c88c>
  80c8b4:	0023883a 	mov	r17,zero
  80c8b8:	003fd506 	br	80c810 <__alt_data_end+0xff80c810>
  80c8bc:	0023883a 	mov	r17,zero
  80c8c0:	003fe706 	br	80c860 <__alt_data_end+0xff80c860>
  80c8c4:	00800434 	movhi	r2,16
  80c8c8:	8c000234 	orhi	r16,r17,8
  80c8cc:	10bfffc4 	addi	r2,r2,-1
  80c8d0:	3027883a 	mov	r19,r6
  80c8d4:	80a0703a 	and	r16,r16,r2
  80c8d8:	902d883a 	mov	r22,r18
  80c8dc:	003ead06 	br	80c394 <__alt_data_end+0xff80c394>

0080c8e0 <__subdf3>:
  80c8e0:	02000434 	movhi	r8,16
  80c8e4:	423fffc4 	addi	r8,r8,-1
  80c8e8:	defffb04 	addi	sp,sp,-20
  80c8ec:	2a14703a 	and	r10,r5,r8
  80c8f0:	3812d53a 	srli	r9,r7,20
  80c8f4:	3a10703a 	and	r8,r7,r8
  80c8f8:	2006d77a 	srli	r3,r4,29
  80c8fc:	3004d77a 	srli	r2,r6,29
  80c900:	dc000015 	stw	r16,0(sp)
  80c904:	501490fa 	slli	r10,r10,3
  80c908:	2820d53a 	srli	r16,r5,20
  80c90c:	401090fa 	slli	r8,r8,3
  80c910:	dc800215 	stw	r18,8(sp)
  80c914:	dc400115 	stw	r17,4(sp)
  80c918:	dfc00415 	stw	ra,16(sp)
  80c91c:	202290fa 	slli	r17,r4,3
  80c920:	dcc00315 	stw	r19,12(sp)
  80c924:	4a41ffcc 	andi	r9,r9,2047
  80c928:	0101ffc4 	movi	r4,2047
  80c92c:	2824d7fa 	srli	r18,r5,31
  80c930:	8401ffcc 	andi	r16,r16,2047
  80c934:	50c6b03a 	or	r3,r10,r3
  80c938:	380ed7fa 	srli	r7,r7,31
  80c93c:	408ab03a 	or	r5,r8,r2
  80c940:	300c90fa 	slli	r6,r6,3
  80c944:	49009626 	beq	r9,r4,80cba0 <__subdf3+0x2c0>
  80c948:	39c0005c 	xori	r7,r7,1
  80c94c:	8245c83a 	sub	r2,r16,r9
  80c950:	3c807426 	beq	r7,r18,80cb24 <__subdf3+0x244>
  80c954:	0080af0e 	bge	zero,r2,80cc14 <__subdf3+0x334>
  80c958:	48002a1e 	bne	r9,zero,80ca04 <__subdf3+0x124>
  80c95c:	2988b03a 	or	r4,r5,r6
  80c960:	20009a1e 	bne	r4,zero,80cbcc <__subdf3+0x2ec>
  80c964:	888001cc 	andi	r2,r17,7
  80c968:	10000726 	beq	r2,zero,80c988 <__subdf3+0xa8>
  80c96c:	888003cc 	andi	r2,r17,15
  80c970:	01000104 	movi	r4,4
  80c974:	11000426 	beq	r2,r4,80c988 <__subdf3+0xa8>
  80c978:	890b883a 	add	r5,r17,r4
  80c97c:	2c63803a 	cmpltu	r17,r5,r17
  80c980:	1c47883a 	add	r3,r3,r17
  80c984:	2823883a 	mov	r17,r5
  80c988:	1880202c 	andhi	r2,r3,128
  80c98c:	10005926 	beq	r2,zero,80caf4 <__subdf3+0x214>
  80c990:	84000044 	addi	r16,r16,1
  80c994:	0081ffc4 	movi	r2,2047
  80c998:	8080be26 	beq	r16,r2,80cc94 <__subdf3+0x3b4>
  80c99c:	017fe034 	movhi	r5,65408
  80c9a0:	297fffc4 	addi	r5,r5,-1
  80c9a4:	1946703a 	and	r3,r3,r5
  80c9a8:	1804977a 	slli	r2,r3,29
  80c9ac:	1806927a 	slli	r3,r3,9
  80c9b0:	8822d0fa 	srli	r17,r17,3
  80c9b4:	8401ffcc 	andi	r16,r16,2047
  80c9b8:	180ad33a 	srli	r5,r3,12
  80c9bc:	9100004c 	andi	r4,r18,1
  80c9c0:	1444b03a 	or	r2,r2,r17
  80c9c4:	80c1ffcc 	andi	r3,r16,2047
  80c9c8:	1820953a 	slli	r16,r3,20
  80c9cc:	20c03fcc 	andi	r3,r4,255
  80c9d0:	180897fa 	slli	r4,r3,31
  80c9d4:	00c00434 	movhi	r3,16
  80c9d8:	18ffffc4 	addi	r3,r3,-1
  80c9dc:	28c6703a 	and	r3,r5,r3
  80c9e0:	1c06b03a 	or	r3,r3,r16
  80c9e4:	1906b03a 	or	r3,r3,r4
  80c9e8:	dfc00417 	ldw	ra,16(sp)
  80c9ec:	dcc00317 	ldw	r19,12(sp)
  80c9f0:	dc800217 	ldw	r18,8(sp)
  80c9f4:	dc400117 	ldw	r17,4(sp)
  80c9f8:	dc000017 	ldw	r16,0(sp)
  80c9fc:	dec00504 	addi	sp,sp,20
  80ca00:	f800283a 	ret
  80ca04:	0101ffc4 	movi	r4,2047
  80ca08:	813fd626 	beq	r16,r4,80c964 <__alt_data_end+0xff80c964>
  80ca0c:	29402034 	orhi	r5,r5,128
  80ca10:	01000e04 	movi	r4,56
  80ca14:	2080a316 	blt	r4,r2,80cca4 <__subdf3+0x3c4>
  80ca18:	010007c4 	movi	r4,31
  80ca1c:	2080c616 	blt	r4,r2,80cd38 <__subdf3+0x458>
  80ca20:	01000804 	movi	r4,32
  80ca24:	2089c83a 	sub	r4,r4,r2
  80ca28:	2910983a 	sll	r8,r5,r4
  80ca2c:	308ed83a 	srl	r7,r6,r2
  80ca30:	3108983a 	sll	r4,r6,r4
  80ca34:	2884d83a 	srl	r2,r5,r2
  80ca38:	41ccb03a 	or	r6,r8,r7
  80ca3c:	2008c03a 	cmpne	r4,r4,zero
  80ca40:	310cb03a 	or	r6,r6,r4
  80ca44:	898dc83a 	sub	r6,r17,r6
  80ca48:	89a3803a 	cmpltu	r17,r17,r6
  80ca4c:	1887c83a 	sub	r3,r3,r2
  80ca50:	1c47c83a 	sub	r3,r3,r17
  80ca54:	3023883a 	mov	r17,r6
  80ca58:	1880202c 	andhi	r2,r3,128
  80ca5c:	10002326 	beq	r2,zero,80caec <__subdf3+0x20c>
  80ca60:	04c02034 	movhi	r19,128
  80ca64:	9cffffc4 	addi	r19,r19,-1
  80ca68:	1ce6703a 	and	r19,r3,r19
  80ca6c:	98007a26 	beq	r19,zero,80cc58 <__subdf3+0x378>
  80ca70:	9809883a 	mov	r4,r19
  80ca74:	08004a40 	call	8004a4 <__clzsi2>
  80ca78:	113ffe04 	addi	r4,r2,-8
  80ca7c:	00c007c4 	movi	r3,31
  80ca80:	19007b16 	blt	r3,r4,80cc70 <__subdf3+0x390>
  80ca84:	00800804 	movi	r2,32
  80ca88:	1105c83a 	sub	r2,r2,r4
  80ca8c:	8884d83a 	srl	r2,r17,r2
  80ca90:	9906983a 	sll	r3,r19,r4
  80ca94:	8922983a 	sll	r17,r17,r4
  80ca98:	10c4b03a 	or	r2,r2,r3
  80ca9c:	24007816 	blt	r4,r16,80cc80 <__subdf3+0x3a0>
  80caa0:	2421c83a 	sub	r16,r4,r16
  80caa4:	80c00044 	addi	r3,r16,1
  80caa8:	010007c4 	movi	r4,31
  80caac:	20c09516 	blt	r4,r3,80cd04 <__subdf3+0x424>
  80cab0:	01400804 	movi	r5,32
  80cab4:	28cbc83a 	sub	r5,r5,r3
  80cab8:	88c8d83a 	srl	r4,r17,r3
  80cabc:	8962983a 	sll	r17,r17,r5
  80cac0:	114a983a 	sll	r5,r2,r5
  80cac4:	10c6d83a 	srl	r3,r2,r3
  80cac8:	8804c03a 	cmpne	r2,r17,zero
  80cacc:	290ab03a 	or	r5,r5,r4
  80cad0:	28a2b03a 	or	r17,r5,r2
  80cad4:	0021883a 	mov	r16,zero
  80cad8:	003fa206 	br	80c964 <__alt_data_end+0xff80c964>
  80cadc:	2090b03a 	or	r8,r4,r2
  80cae0:	40018e26 	beq	r8,zero,80d11c <__subdf3+0x83c>
  80cae4:	1007883a 	mov	r3,r2
  80cae8:	2023883a 	mov	r17,r4
  80caec:	888001cc 	andi	r2,r17,7
  80caf0:	103f9e1e 	bne	r2,zero,80c96c <__alt_data_end+0xff80c96c>
  80caf4:	1804977a 	slli	r2,r3,29
  80caf8:	8822d0fa 	srli	r17,r17,3
  80cafc:	1810d0fa 	srli	r8,r3,3
  80cb00:	9100004c 	andi	r4,r18,1
  80cb04:	1444b03a 	or	r2,r2,r17
  80cb08:	00c1ffc4 	movi	r3,2047
  80cb0c:	80c02826 	beq	r16,r3,80cbb0 <__subdf3+0x2d0>
  80cb10:	01400434 	movhi	r5,16
  80cb14:	297fffc4 	addi	r5,r5,-1
  80cb18:	80e0703a 	and	r16,r16,r3
  80cb1c:	414a703a 	and	r5,r8,r5
  80cb20:	003fa806 	br	80c9c4 <__alt_data_end+0xff80c9c4>
  80cb24:	0080630e 	bge	zero,r2,80ccb4 <__subdf3+0x3d4>
  80cb28:	48003026 	beq	r9,zero,80cbec <__subdf3+0x30c>
  80cb2c:	0101ffc4 	movi	r4,2047
  80cb30:	813f8c26 	beq	r16,r4,80c964 <__alt_data_end+0xff80c964>
  80cb34:	29402034 	orhi	r5,r5,128
  80cb38:	01000e04 	movi	r4,56
  80cb3c:	2080a90e 	bge	r4,r2,80cde4 <__subdf3+0x504>
  80cb40:	298cb03a 	or	r6,r5,r6
  80cb44:	3012c03a 	cmpne	r9,r6,zero
  80cb48:	0005883a 	mov	r2,zero
  80cb4c:	4c53883a 	add	r9,r9,r17
  80cb50:	4c63803a 	cmpltu	r17,r9,r17
  80cb54:	10c7883a 	add	r3,r2,r3
  80cb58:	88c7883a 	add	r3,r17,r3
  80cb5c:	4823883a 	mov	r17,r9
  80cb60:	1880202c 	andhi	r2,r3,128
  80cb64:	1000d026 	beq	r2,zero,80cea8 <__subdf3+0x5c8>
  80cb68:	84000044 	addi	r16,r16,1
  80cb6c:	0081ffc4 	movi	r2,2047
  80cb70:	8080fe26 	beq	r16,r2,80cf6c <__subdf3+0x68c>
  80cb74:	00bfe034 	movhi	r2,65408
  80cb78:	10bfffc4 	addi	r2,r2,-1
  80cb7c:	1886703a 	and	r3,r3,r2
  80cb80:	880ad07a 	srli	r5,r17,1
  80cb84:	180497fa 	slli	r2,r3,31
  80cb88:	8900004c 	andi	r4,r17,1
  80cb8c:	2922b03a 	or	r17,r5,r4
  80cb90:	1806d07a 	srli	r3,r3,1
  80cb94:	1462b03a 	or	r17,r2,r17
  80cb98:	3825883a 	mov	r18,r7
  80cb9c:	003f7106 	br	80c964 <__alt_data_end+0xff80c964>
  80cba0:	2984b03a 	or	r2,r5,r6
  80cba4:	103f6826 	beq	r2,zero,80c948 <__alt_data_end+0xff80c948>
  80cba8:	39c03fcc 	andi	r7,r7,255
  80cbac:	003f6706 	br	80c94c <__alt_data_end+0xff80c94c>
  80cbb0:	4086b03a 	or	r3,r8,r2
  80cbb4:	18015226 	beq	r3,zero,80d100 <__subdf3+0x820>
  80cbb8:	00c00434 	movhi	r3,16
  80cbbc:	41400234 	orhi	r5,r8,8
  80cbc0:	18ffffc4 	addi	r3,r3,-1
  80cbc4:	28ca703a 	and	r5,r5,r3
  80cbc8:	003f7e06 	br	80c9c4 <__alt_data_end+0xff80c9c4>
  80cbcc:	10bfffc4 	addi	r2,r2,-1
  80cbd0:	1000491e 	bne	r2,zero,80ccf8 <__subdf3+0x418>
  80cbd4:	898fc83a 	sub	r7,r17,r6
  80cbd8:	89e3803a 	cmpltu	r17,r17,r7
  80cbdc:	1947c83a 	sub	r3,r3,r5
  80cbe0:	1c47c83a 	sub	r3,r3,r17
  80cbe4:	3823883a 	mov	r17,r7
  80cbe8:	003f9b06 	br	80ca58 <__alt_data_end+0xff80ca58>
  80cbec:	2988b03a 	or	r4,r5,r6
  80cbf0:	203f5c26 	beq	r4,zero,80c964 <__alt_data_end+0xff80c964>
  80cbf4:	10bfffc4 	addi	r2,r2,-1
  80cbf8:	1000931e 	bne	r2,zero,80ce48 <__subdf3+0x568>
  80cbfc:	898d883a 	add	r6,r17,r6
  80cc00:	3463803a 	cmpltu	r17,r6,r17
  80cc04:	1947883a 	add	r3,r3,r5
  80cc08:	88c7883a 	add	r3,r17,r3
  80cc0c:	3023883a 	mov	r17,r6
  80cc10:	003fd306 	br	80cb60 <__alt_data_end+0xff80cb60>
  80cc14:	1000541e 	bne	r2,zero,80cd68 <__subdf3+0x488>
  80cc18:	80800044 	addi	r2,r16,1
  80cc1c:	1081ffcc 	andi	r2,r2,2047
  80cc20:	01000044 	movi	r4,1
  80cc24:	2080a20e 	bge	r4,r2,80ceb0 <__subdf3+0x5d0>
  80cc28:	8989c83a 	sub	r4,r17,r6
  80cc2c:	8905803a 	cmpltu	r2,r17,r4
  80cc30:	1967c83a 	sub	r19,r3,r5
  80cc34:	98a7c83a 	sub	r19,r19,r2
  80cc38:	9880202c 	andhi	r2,r19,128
  80cc3c:	10006326 	beq	r2,zero,80cdcc <__subdf3+0x4ec>
  80cc40:	3463c83a 	sub	r17,r6,r17
  80cc44:	28c7c83a 	sub	r3,r5,r3
  80cc48:	344d803a 	cmpltu	r6,r6,r17
  80cc4c:	19a7c83a 	sub	r19,r3,r6
  80cc50:	3825883a 	mov	r18,r7
  80cc54:	983f861e 	bne	r19,zero,80ca70 <__alt_data_end+0xff80ca70>
  80cc58:	8809883a 	mov	r4,r17
  80cc5c:	08004a40 	call	8004a4 <__clzsi2>
  80cc60:	10800804 	addi	r2,r2,32
  80cc64:	113ffe04 	addi	r4,r2,-8
  80cc68:	00c007c4 	movi	r3,31
  80cc6c:	193f850e 	bge	r3,r4,80ca84 <__alt_data_end+0xff80ca84>
  80cc70:	10bff604 	addi	r2,r2,-40
  80cc74:	8884983a 	sll	r2,r17,r2
  80cc78:	0023883a 	mov	r17,zero
  80cc7c:	243f880e 	bge	r4,r16,80caa0 <__alt_data_end+0xff80caa0>
  80cc80:	00ffe034 	movhi	r3,65408
  80cc84:	18ffffc4 	addi	r3,r3,-1
  80cc88:	8121c83a 	sub	r16,r16,r4
  80cc8c:	10c6703a 	and	r3,r2,r3
  80cc90:	003f3406 	br	80c964 <__alt_data_end+0xff80c964>
  80cc94:	9100004c 	andi	r4,r18,1
  80cc98:	000b883a 	mov	r5,zero
  80cc9c:	0005883a 	mov	r2,zero
  80cca0:	003f4806 	br	80c9c4 <__alt_data_end+0xff80c9c4>
  80cca4:	298cb03a 	or	r6,r5,r6
  80cca8:	300cc03a 	cmpne	r6,r6,zero
  80ccac:	0005883a 	mov	r2,zero
  80ccb0:	003f6406 	br	80ca44 <__alt_data_end+0xff80ca44>
  80ccb4:	10009a1e 	bne	r2,zero,80cf20 <__subdf3+0x640>
  80ccb8:	82400044 	addi	r9,r16,1
  80ccbc:	4881ffcc 	andi	r2,r9,2047
  80ccc0:	02800044 	movi	r10,1
  80ccc4:	5080670e 	bge	r10,r2,80ce64 <__subdf3+0x584>
  80ccc8:	0081ffc4 	movi	r2,2047
  80cccc:	4880af26 	beq	r9,r2,80cf8c <__subdf3+0x6ac>
  80ccd0:	898d883a 	add	r6,r17,r6
  80ccd4:	1945883a 	add	r2,r3,r5
  80ccd8:	3447803a 	cmpltu	r3,r6,r17
  80ccdc:	1887883a 	add	r3,r3,r2
  80cce0:	182297fa 	slli	r17,r3,31
  80cce4:	300cd07a 	srli	r6,r6,1
  80cce8:	1806d07a 	srli	r3,r3,1
  80ccec:	4821883a 	mov	r16,r9
  80ccf0:	89a2b03a 	or	r17,r17,r6
  80ccf4:	003f1b06 	br	80c964 <__alt_data_end+0xff80c964>
  80ccf8:	0101ffc4 	movi	r4,2047
  80ccfc:	813f441e 	bne	r16,r4,80ca10 <__alt_data_end+0xff80ca10>
  80cd00:	003f1806 	br	80c964 <__alt_data_end+0xff80c964>
  80cd04:	843ff844 	addi	r16,r16,-31
  80cd08:	01400804 	movi	r5,32
  80cd0c:	1408d83a 	srl	r4,r2,r16
  80cd10:	19405026 	beq	r3,r5,80ce54 <__subdf3+0x574>
  80cd14:	01401004 	movi	r5,64
  80cd18:	28c7c83a 	sub	r3,r5,r3
  80cd1c:	10c4983a 	sll	r2,r2,r3
  80cd20:	88a2b03a 	or	r17,r17,r2
  80cd24:	8822c03a 	cmpne	r17,r17,zero
  80cd28:	2462b03a 	or	r17,r4,r17
  80cd2c:	0007883a 	mov	r3,zero
  80cd30:	0021883a 	mov	r16,zero
  80cd34:	003f6d06 	br	80caec <__alt_data_end+0xff80caec>
  80cd38:	11fff804 	addi	r7,r2,-32
  80cd3c:	01000804 	movi	r4,32
  80cd40:	29ced83a 	srl	r7,r5,r7
  80cd44:	11004526 	beq	r2,r4,80ce5c <__subdf3+0x57c>
  80cd48:	01001004 	movi	r4,64
  80cd4c:	2089c83a 	sub	r4,r4,r2
  80cd50:	2904983a 	sll	r2,r5,r4
  80cd54:	118cb03a 	or	r6,r2,r6
  80cd58:	300cc03a 	cmpne	r6,r6,zero
  80cd5c:	398cb03a 	or	r6,r7,r6
  80cd60:	0005883a 	mov	r2,zero
  80cd64:	003f3706 	br	80ca44 <__alt_data_end+0xff80ca44>
  80cd68:	80002a26 	beq	r16,zero,80ce14 <__subdf3+0x534>
  80cd6c:	0101ffc4 	movi	r4,2047
  80cd70:	49006626 	beq	r9,r4,80cf0c <__subdf3+0x62c>
  80cd74:	0085c83a 	sub	r2,zero,r2
  80cd78:	18c02034 	orhi	r3,r3,128
  80cd7c:	01000e04 	movi	r4,56
  80cd80:	20807e16 	blt	r4,r2,80cf7c <__subdf3+0x69c>
  80cd84:	010007c4 	movi	r4,31
  80cd88:	2080e716 	blt	r4,r2,80d128 <__subdf3+0x848>
  80cd8c:	01000804 	movi	r4,32
  80cd90:	2089c83a 	sub	r4,r4,r2
  80cd94:	1914983a 	sll	r10,r3,r4
  80cd98:	8890d83a 	srl	r8,r17,r2
  80cd9c:	8908983a 	sll	r4,r17,r4
  80cda0:	1884d83a 	srl	r2,r3,r2
  80cda4:	5222b03a 	or	r17,r10,r8
  80cda8:	2006c03a 	cmpne	r3,r4,zero
  80cdac:	88e2b03a 	or	r17,r17,r3
  80cdb0:	3463c83a 	sub	r17,r6,r17
  80cdb4:	2885c83a 	sub	r2,r5,r2
  80cdb8:	344d803a 	cmpltu	r6,r6,r17
  80cdbc:	1187c83a 	sub	r3,r2,r6
  80cdc0:	4821883a 	mov	r16,r9
  80cdc4:	3825883a 	mov	r18,r7
  80cdc8:	003f2306 	br	80ca58 <__alt_data_end+0xff80ca58>
  80cdcc:	24d0b03a 	or	r8,r4,r19
  80cdd0:	40001b1e 	bne	r8,zero,80ce40 <__subdf3+0x560>
  80cdd4:	0005883a 	mov	r2,zero
  80cdd8:	0009883a 	mov	r4,zero
  80cddc:	0021883a 	mov	r16,zero
  80cde0:	003f4906 	br	80cb08 <__alt_data_end+0xff80cb08>
  80cde4:	010007c4 	movi	r4,31
  80cde8:	20803a16 	blt	r4,r2,80ced4 <__subdf3+0x5f4>
  80cdec:	01000804 	movi	r4,32
  80cdf0:	2089c83a 	sub	r4,r4,r2
  80cdf4:	2912983a 	sll	r9,r5,r4
  80cdf8:	3090d83a 	srl	r8,r6,r2
  80cdfc:	3108983a 	sll	r4,r6,r4
  80ce00:	2884d83a 	srl	r2,r5,r2
  80ce04:	4a12b03a 	or	r9,r9,r8
  80ce08:	2008c03a 	cmpne	r4,r4,zero
  80ce0c:	4912b03a 	or	r9,r9,r4
  80ce10:	003f4e06 	br	80cb4c <__alt_data_end+0xff80cb4c>
  80ce14:	1c48b03a 	or	r4,r3,r17
  80ce18:	20003c26 	beq	r4,zero,80cf0c <__subdf3+0x62c>
  80ce1c:	0084303a 	nor	r2,zero,r2
  80ce20:	1000381e 	bne	r2,zero,80cf04 <__subdf3+0x624>
  80ce24:	3463c83a 	sub	r17,r6,r17
  80ce28:	28c5c83a 	sub	r2,r5,r3
  80ce2c:	344d803a 	cmpltu	r6,r6,r17
  80ce30:	1187c83a 	sub	r3,r2,r6
  80ce34:	4821883a 	mov	r16,r9
  80ce38:	3825883a 	mov	r18,r7
  80ce3c:	003f0606 	br	80ca58 <__alt_data_end+0xff80ca58>
  80ce40:	2023883a 	mov	r17,r4
  80ce44:	003f0906 	br	80ca6c <__alt_data_end+0xff80ca6c>
  80ce48:	0101ffc4 	movi	r4,2047
  80ce4c:	813f3a1e 	bne	r16,r4,80cb38 <__alt_data_end+0xff80cb38>
  80ce50:	003ec406 	br	80c964 <__alt_data_end+0xff80c964>
  80ce54:	0005883a 	mov	r2,zero
  80ce58:	003fb106 	br	80cd20 <__alt_data_end+0xff80cd20>
  80ce5c:	0005883a 	mov	r2,zero
  80ce60:	003fbc06 	br	80cd54 <__alt_data_end+0xff80cd54>
  80ce64:	1c44b03a 	or	r2,r3,r17
  80ce68:	80008e1e 	bne	r16,zero,80d0a4 <__subdf3+0x7c4>
  80ce6c:	1000c826 	beq	r2,zero,80d190 <__subdf3+0x8b0>
  80ce70:	2984b03a 	or	r2,r5,r6
  80ce74:	103ebb26 	beq	r2,zero,80c964 <__alt_data_end+0xff80c964>
  80ce78:	8989883a 	add	r4,r17,r6
  80ce7c:	1945883a 	add	r2,r3,r5
  80ce80:	2447803a 	cmpltu	r3,r4,r17
  80ce84:	1887883a 	add	r3,r3,r2
  80ce88:	1880202c 	andhi	r2,r3,128
  80ce8c:	2023883a 	mov	r17,r4
  80ce90:	103f1626 	beq	r2,zero,80caec <__alt_data_end+0xff80caec>
  80ce94:	00bfe034 	movhi	r2,65408
  80ce98:	10bfffc4 	addi	r2,r2,-1
  80ce9c:	5021883a 	mov	r16,r10
  80cea0:	1886703a 	and	r3,r3,r2
  80cea4:	003eaf06 	br	80c964 <__alt_data_end+0xff80c964>
  80cea8:	3825883a 	mov	r18,r7
  80ceac:	003f0f06 	br	80caec <__alt_data_end+0xff80caec>
  80ceb0:	1c44b03a 	or	r2,r3,r17
  80ceb4:	8000251e 	bne	r16,zero,80cf4c <__subdf3+0x66c>
  80ceb8:	1000661e 	bne	r2,zero,80d054 <__subdf3+0x774>
  80cebc:	2990b03a 	or	r8,r5,r6
  80cec0:	40009626 	beq	r8,zero,80d11c <__subdf3+0x83c>
  80cec4:	2807883a 	mov	r3,r5
  80cec8:	3023883a 	mov	r17,r6
  80cecc:	3825883a 	mov	r18,r7
  80ced0:	003ea406 	br	80c964 <__alt_data_end+0xff80c964>
  80ced4:	127ff804 	addi	r9,r2,-32
  80ced8:	01000804 	movi	r4,32
  80cedc:	2a52d83a 	srl	r9,r5,r9
  80cee0:	11008c26 	beq	r2,r4,80d114 <__subdf3+0x834>
  80cee4:	01001004 	movi	r4,64
  80cee8:	2085c83a 	sub	r2,r4,r2
  80ceec:	2884983a 	sll	r2,r5,r2
  80cef0:	118cb03a 	or	r6,r2,r6
  80cef4:	300cc03a 	cmpne	r6,r6,zero
  80cef8:	4992b03a 	or	r9,r9,r6
  80cefc:	0005883a 	mov	r2,zero
  80cf00:	003f1206 	br	80cb4c <__alt_data_end+0xff80cb4c>
  80cf04:	0101ffc4 	movi	r4,2047
  80cf08:	493f9c1e 	bne	r9,r4,80cd7c <__alt_data_end+0xff80cd7c>
  80cf0c:	2807883a 	mov	r3,r5
  80cf10:	3023883a 	mov	r17,r6
  80cf14:	4821883a 	mov	r16,r9
  80cf18:	3825883a 	mov	r18,r7
  80cf1c:	003e9106 	br	80c964 <__alt_data_end+0xff80c964>
  80cf20:	80001f1e 	bne	r16,zero,80cfa0 <__subdf3+0x6c0>
  80cf24:	1c48b03a 	or	r4,r3,r17
  80cf28:	20005a26 	beq	r4,zero,80d094 <__subdf3+0x7b4>
  80cf2c:	0084303a 	nor	r2,zero,r2
  80cf30:	1000561e 	bne	r2,zero,80d08c <__subdf3+0x7ac>
  80cf34:	89a3883a 	add	r17,r17,r6
  80cf38:	1945883a 	add	r2,r3,r5
  80cf3c:	898d803a 	cmpltu	r6,r17,r6
  80cf40:	3087883a 	add	r3,r6,r2
  80cf44:	4821883a 	mov	r16,r9
  80cf48:	003f0506 	br	80cb60 <__alt_data_end+0xff80cb60>
  80cf4c:	10002b1e 	bne	r2,zero,80cffc <__subdf3+0x71c>
  80cf50:	2984b03a 	or	r2,r5,r6
  80cf54:	10008026 	beq	r2,zero,80d158 <__subdf3+0x878>
  80cf58:	2807883a 	mov	r3,r5
  80cf5c:	3023883a 	mov	r17,r6
  80cf60:	3825883a 	mov	r18,r7
  80cf64:	0401ffc4 	movi	r16,2047
  80cf68:	003e7e06 	br	80c964 <__alt_data_end+0xff80c964>
  80cf6c:	3809883a 	mov	r4,r7
  80cf70:	0011883a 	mov	r8,zero
  80cf74:	0005883a 	mov	r2,zero
  80cf78:	003ee306 	br	80cb08 <__alt_data_end+0xff80cb08>
  80cf7c:	1c62b03a 	or	r17,r3,r17
  80cf80:	8822c03a 	cmpne	r17,r17,zero
  80cf84:	0005883a 	mov	r2,zero
  80cf88:	003f8906 	br	80cdb0 <__alt_data_end+0xff80cdb0>
  80cf8c:	3809883a 	mov	r4,r7
  80cf90:	4821883a 	mov	r16,r9
  80cf94:	0011883a 	mov	r8,zero
  80cf98:	0005883a 	mov	r2,zero
  80cf9c:	003eda06 	br	80cb08 <__alt_data_end+0xff80cb08>
  80cfa0:	0101ffc4 	movi	r4,2047
  80cfa4:	49003b26 	beq	r9,r4,80d094 <__subdf3+0x7b4>
  80cfa8:	0085c83a 	sub	r2,zero,r2
  80cfac:	18c02034 	orhi	r3,r3,128
  80cfb0:	01000e04 	movi	r4,56
  80cfb4:	20806e16 	blt	r4,r2,80d170 <__subdf3+0x890>
  80cfb8:	010007c4 	movi	r4,31
  80cfbc:	20807716 	blt	r4,r2,80d19c <__subdf3+0x8bc>
  80cfc0:	01000804 	movi	r4,32
  80cfc4:	2089c83a 	sub	r4,r4,r2
  80cfc8:	1914983a 	sll	r10,r3,r4
  80cfcc:	8890d83a 	srl	r8,r17,r2
  80cfd0:	8908983a 	sll	r4,r17,r4
  80cfd4:	1884d83a 	srl	r2,r3,r2
  80cfd8:	5222b03a 	or	r17,r10,r8
  80cfdc:	2006c03a 	cmpne	r3,r4,zero
  80cfe0:	88e2b03a 	or	r17,r17,r3
  80cfe4:	89a3883a 	add	r17,r17,r6
  80cfe8:	1145883a 	add	r2,r2,r5
  80cfec:	898d803a 	cmpltu	r6,r17,r6
  80cff0:	3087883a 	add	r3,r6,r2
  80cff4:	4821883a 	mov	r16,r9
  80cff8:	003ed906 	br	80cb60 <__alt_data_end+0xff80cb60>
  80cffc:	2984b03a 	or	r2,r5,r6
  80d000:	10004226 	beq	r2,zero,80d10c <__subdf3+0x82c>
  80d004:	1808d0fa 	srli	r4,r3,3
  80d008:	8822d0fa 	srli	r17,r17,3
  80d00c:	1806977a 	slli	r3,r3,29
  80d010:	2080022c 	andhi	r2,r4,8
  80d014:	1c62b03a 	or	r17,r3,r17
  80d018:	10000826 	beq	r2,zero,80d03c <__subdf3+0x75c>
  80d01c:	2812d0fa 	srli	r9,r5,3
  80d020:	4880022c 	andhi	r2,r9,8
  80d024:	1000051e 	bne	r2,zero,80d03c <__subdf3+0x75c>
  80d028:	300cd0fa 	srli	r6,r6,3
  80d02c:	2804977a 	slli	r2,r5,29
  80d030:	4809883a 	mov	r4,r9
  80d034:	3825883a 	mov	r18,r7
  80d038:	11a2b03a 	or	r17,r2,r6
  80d03c:	8806d77a 	srli	r3,r17,29
  80d040:	200890fa 	slli	r4,r4,3
  80d044:	882290fa 	slli	r17,r17,3
  80d048:	0401ffc4 	movi	r16,2047
  80d04c:	1906b03a 	or	r3,r3,r4
  80d050:	003e4406 	br	80c964 <__alt_data_end+0xff80c964>
  80d054:	2984b03a 	or	r2,r5,r6
  80d058:	103e4226 	beq	r2,zero,80c964 <__alt_data_end+0xff80c964>
  80d05c:	8989c83a 	sub	r4,r17,r6
  80d060:	8911803a 	cmpltu	r8,r17,r4
  80d064:	1945c83a 	sub	r2,r3,r5
  80d068:	1205c83a 	sub	r2,r2,r8
  80d06c:	1200202c 	andhi	r8,r2,128
  80d070:	403e9a26 	beq	r8,zero,80cadc <__alt_data_end+0xff80cadc>
  80d074:	3463c83a 	sub	r17,r6,r17
  80d078:	28c5c83a 	sub	r2,r5,r3
  80d07c:	344d803a 	cmpltu	r6,r6,r17
  80d080:	1187c83a 	sub	r3,r2,r6
  80d084:	3825883a 	mov	r18,r7
  80d088:	003e3606 	br	80c964 <__alt_data_end+0xff80c964>
  80d08c:	0101ffc4 	movi	r4,2047
  80d090:	493fc71e 	bne	r9,r4,80cfb0 <__alt_data_end+0xff80cfb0>
  80d094:	2807883a 	mov	r3,r5
  80d098:	3023883a 	mov	r17,r6
  80d09c:	4821883a 	mov	r16,r9
  80d0a0:	003e3006 	br	80c964 <__alt_data_end+0xff80c964>
  80d0a4:	10003626 	beq	r2,zero,80d180 <__subdf3+0x8a0>
  80d0a8:	2984b03a 	or	r2,r5,r6
  80d0ac:	10001726 	beq	r2,zero,80d10c <__subdf3+0x82c>
  80d0b0:	1808d0fa 	srli	r4,r3,3
  80d0b4:	8822d0fa 	srli	r17,r17,3
  80d0b8:	1806977a 	slli	r3,r3,29
  80d0bc:	2080022c 	andhi	r2,r4,8
  80d0c0:	1c62b03a 	or	r17,r3,r17
  80d0c4:	10000726 	beq	r2,zero,80d0e4 <__subdf3+0x804>
  80d0c8:	2812d0fa 	srli	r9,r5,3
  80d0cc:	4880022c 	andhi	r2,r9,8
  80d0d0:	1000041e 	bne	r2,zero,80d0e4 <__subdf3+0x804>
  80d0d4:	300cd0fa 	srli	r6,r6,3
  80d0d8:	2804977a 	slli	r2,r5,29
  80d0dc:	4809883a 	mov	r4,r9
  80d0e0:	11a2b03a 	or	r17,r2,r6
  80d0e4:	8806d77a 	srli	r3,r17,29
  80d0e8:	200890fa 	slli	r4,r4,3
  80d0ec:	882290fa 	slli	r17,r17,3
  80d0f0:	3825883a 	mov	r18,r7
  80d0f4:	1906b03a 	or	r3,r3,r4
  80d0f8:	0401ffc4 	movi	r16,2047
  80d0fc:	003e1906 	br	80c964 <__alt_data_end+0xff80c964>
  80d100:	000b883a 	mov	r5,zero
  80d104:	0005883a 	mov	r2,zero
  80d108:	003e2e06 	br	80c9c4 <__alt_data_end+0xff80c9c4>
  80d10c:	0401ffc4 	movi	r16,2047
  80d110:	003e1406 	br	80c964 <__alt_data_end+0xff80c964>
  80d114:	0005883a 	mov	r2,zero
  80d118:	003f7506 	br	80cef0 <__alt_data_end+0xff80cef0>
  80d11c:	0005883a 	mov	r2,zero
  80d120:	0009883a 	mov	r4,zero
  80d124:	003e7806 	br	80cb08 <__alt_data_end+0xff80cb08>
  80d128:	123ff804 	addi	r8,r2,-32
  80d12c:	01000804 	movi	r4,32
  80d130:	1a10d83a 	srl	r8,r3,r8
  80d134:	11002526 	beq	r2,r4,80d1cc <__subdf3+0x8ec>
  80d138:	01001004 	movi	r4,64
  80d13c:	2085c83a 	sub	r2,r4,r2
  80d140:	1884983a 	sll	r2,r3,r2
  80d144:	1444b03a 	or	r2,r2,r17
  80d148:	1004c03a 	cmpne	r2,r2,zero
  80d14c:	40a2b03a 	or	r17,r8,r2
  80d150:	0005883a 	mov	r2,zero
  80d154:	003f1606 	br	80cdb0 <__alt_data_end+0xff80cdb0>
  80d158:	02000434 	movhi	r8,16
  80d15c:	0009883a 	mov	r4,zero
  80d160:	423fffc4 	addi	r8,r8,-1
  80d164:	00bfffc4 	movi	r2,-1
  80d168:	0401ffc4 	movi	r16,2047
  80d16c:	003e6606 	br	80cb08 <__alt_data_end+0xff80cb08>
  80d170:	1c62b03a 	or	r17,r3,r17
  80d174:	8822c03a 	cmpne	r17,r17,zero
  80d178:	0005883a 	mov	r2,zero
  80d17c:	003f9906 	br	80cfe4 <__alt_data_end+0xff80cfe4>
  80d180:	2807883a 	mov	r3,r5
  80d184:	3023883a 	mov	r17,r6
  80d188:	0401ffc4 	movi	r16,2047
  80d18c:	003df506 	br	80c964 <__alt_data_end+0xff80c964>
  80d190:	2807883a 	mov	r3,r5
  80d194:	3023883a 	mov	r17,r6
  80d198:	003df206 	br	80c964 <__alt_data_end+0xff80c964>
  80d19c:	123ff804 	addi	r8,r2,-32
  80d1a0:	01000804 	movi	r4,32
  80d1a4:	1a10d83a 	srl	r8,r3,r8
  80d1a8:	11000a26 	beq	r2,r4,80d1d4 <__subdf3+0x8f4>
  80d1ac:	01001004 	movi	r4,64
  80d1b0:	2085c83a 	sub	r2,r4,r2
  80d1b4:	1884983a 	sll	r2,r3,r2
  80d1b8:	1444b03a 	or	r2,r2,r17
  80d1bc:	1004c03a 	cmpne	r2,r2,zero
  80d1c0:	40a2b03a 	or	r17,r8,r2
  80d1c4:	0005883a 	mov	r2,zero
  80d1c8:	003f8606 	br	80cfe4 <__alt_data_end+0xff80cfe4>
  80d1cc:	0005883a 	mov	r2,zero
  80d1d0:	003fdc06 	br	80d144 <__alt_data_end+0xff80d144>
  80d1d4:	0005883a 	mov	r2,zero
  80d1d8:	003ff706 	br	80d1b8 <__alt_data_end+0xff80d1b8>

0080d1dc <__fixdfsi>:
  80d1dc:	280cd53a 	srli	r6,r5,20
  80d1e0:	00c00434 	movhi	r3,16
  80d1e4:	18ffffc4 	addi	r3,r3,-1
  80d1e8:	3181ffcc 	andi	r6,r6,2047
  80d1ec:	01c0ff84 	movi	r7,1022
  80d1f0:	28c6703a 	and	r3,r5,r3
  80d1f4:	280ad7fa 	srli	r5,r5,31
  80d1f8:	3980120e 	bge	r7,r6,80d244 <__fixdfsi+0x68>
  80d1fc:	00810744 	movi	r2,1053
  80d200:	11800c16 	blt	r2,r6,80d234 <__fixdfsi+0x58>
  80d204:	00810cc4 	movi	r2,1075
  80d208:	1185c83a 	sub	r2,r2,r6
  80d20c:	01c007c4 	movi	r7,31
  80d210:	18c00434 	orhi	r3,r3,16
  80d214:	38800d16 	blt	r7,r2,80d24c <__fixdfsi+0x70>
  80d218:	31befb44 	addi	r6,r6,-1043
  80d21c:	2084d83a 	srl	r2,r4,r2
  80d220:	1986983a 	sll	r3,r3,r6
  80d224:	1884b03a 	or	r2,r3,r2
  80d228:	28000726 	beq	r5,zero,80d248 <__fixdfsi+0x6c>
  80d22c:	0085c83a 	sub	r2,zero,r2
  80d230:	f800283a 	ret
  80d234:	00a00034 	movhi	r2,32768
  80d238:	10bfffc4 	addi	r2,r2,-1
  80d23c:	2885883a 	add	r2,r5,r2
  80d240:	f800283a 	ret
  80d244:	0005883a 	mov	r2,zero
  80d248:	f800283a 	ret
  80d24c:	008104c4 	movi	r2,1043
  80d250:	1185c83a 	sub	r2,r2,r6
  80d254:	1884d83a 	srl	r2,r3,r2
  80d258:	003ff306 	br	80d228 <__alt_data_end+0xff80d228>

0080d25c <__floatsidf>:
  80d25c:	defffd04 	addi	sp,sp,-12
  80d260:	dfc00215 	stw	ra,8(sp)
  80d264:	dc400115 	stw	r17,4(sp)
  80d268:	dc000015 	stw	r16,0(sp)
  80d26c:	20002b26 	beq	r4,zero,80d31c <__floatsidf+0xc0>
  80d270:	2023883a 	mov	r17,r4
  80d274:	2020d7fa 	srli	r16,r4,31
  80d278:	20002d16 	blt	r4,zero,80d330 <__floatsidf+0xd4>
  80d27c:	8809883a 	mov	r4,r17
  80d280:	08004a40 	call	8004a4 <__clzsi2>
  80d284:	01410784 	movi	r5,1054
  80d288:	288bc83a 	sub	r5,r5,r2
  80d28c:	01010cc4 	movi	r4,1075
  80d290:	2149c83a 	sub	r4,r4,r5
  80d294:	00c007c4 	movi	r3,31
  80d298:	1900160e 	bge	r3,r4,80d2f4 <__floatsidf+0x98>
  80d29c:	00c104c4 	movi	r3,1043
  80d2a0:	1947c83a 	sub	r3,r3,r5
  80d2a4:	88c6983a 	sll	r3,r17,r3
  80d2a8:	00800434 	movhi	r2,16
  80d2ac:	10bfffc4 	addi	r2,r2,-1
  80d2b0:	1886703a 	and	r3,r3,r2
  80d2b4:	2941ffcc 	andi	r5,r5,2047
  80d2b8:	800d883a 	mov	r6,r16
  80d2bc:	0005883a 	mov	r2,zero
  80d2c0:	280a953a 	slli	r5,r5,20
  80d2c4:	31803fcc 	andi	r6,r6,255
  80d2c8:	01000434 	movhi	r4,16
  80d2cc:	300c97fa 	slli	r6,r6,31
  80d2d0:	213fffc4 	addi	r4,r4,-1
  80d2d4:	1906703a 	and	r3,r3,r4
  80d2d8:	1946b03a 	or	r3,r3,r5
  80d2dc:	1986b03a 	or	r3,r3,r6
  80d2e0:	dfc00217 	ldw	ra,8(sp)
  80d2e4:	dc400117 	ldw	r17,4(sp)
  80d2e8:	dc000017 	ldw	r16,0(sp)
  80d2ec:	dec00304 	addi	sp,sp,12
  80d2f0:	f800283a 	ret
  80d2f4:	00c002c4 	movi	r3,11
  80d2f8:	1887c83a 	sub	r3,r3,r2
  80d2fc:	88c6d83a 	srl	r3,r17,r3
  80d300:	8904983a 	sll	r2,r17,r4
  80d304:	01000434 	movhi	r4,16
  80d308:	213fffc4 	addi	r4,r4,-1
  80d30c:	2941ffcc 	andi	r5,r5,2047
  80d310:	1906703a 	and	r3,r3,r4
  80d314:	800d883a 	mov	r6,r16
  80d318:	003fe906 	br	80d2c0 <__alt_data_end+0xff80d2c0>
  80d31c:	000d883a 	mov	r6,zero
  80d320:	000b883a 	mov	r5,zero
  80d324:	0007883a 	mov	r3,zero
  80d328:	0005883a 	mov	r2,zero
  80d32c:	003fe406 	br	80d2c0 <__alt_data_end+0xff80d2c0>
  80d330:	0123c83a 	sub	r17,zero,r4
  80d334:	003fd106 	br	80d27c <__alt_data_end+0xff80d27c>

0080d338 <__floatunsidf>:
  80d338:	defffe04 	addi	sp,sp,-8
  80d33c:	dc000015 	stw	r16,0(sp)
  80d340:	dfc00115 	stw	ra,4(sp)
  80d344:	2021883a 	mov	r16,r4
  80d348:	20002226 	beq	r4,zero,80d3d4 <__floatunsidf+0x9c>
  80d34c:	08004a40 	call	8004a4 <__clzsi2>
  80d350:	01010784 	movi	r4,1054
  80d354:	2089c83a 	sub	r4,r4,r2
  80d358:	01810cc4 	movi	r6,1075
  80d35c:	310dc83a 	sub	r6,r6,r4
  80d360:	00c007c4 	movi	r3,31
  80d364:	1980120e 	bge	r3,r6,80d3b0 <__floatunsidf+0x78>
  80d368:	00c104c4 	movi	r3,1043
  80d36c:	1907c83a 	sub	r3,r3,r4
  80d370:	80ca983a 	sll	r5,r16,r3
  80d374:	00800434 	movhi	r2,16
  80d378:	10bfffc4 	addi	r2,r2,-1
  80d37c:	2101ffcc 	andi	r4,r4,2047
  80d380:	0021883a 	mov	r16,zero
  80d384:	288a703a 	and	r5,r5,r2
  80d388:	2008953a 	slli	r4,r4,20
  80d38c:	00c00434 	movhi	r3,16
  80d390:	18ffffc4 	addi	r3,r3,-1
  80d394:	28c6703a 	and	r3,r5,r3
  80d398:	8005883a 	mov	r2,r16
  80d39c:	1906b03a 	or	r3,r3,r4
  80d3a0:	dfc00117 	ldw	ra,4(sp)
  80d3a4:	dc000017 	ldw	r16,0(sp)
  80d3a8:	dec00204 	addi	sp,sp,8
  80d3ac:	f800283a 	ret
  80d3b0:	00c002c4 	movi	r3,11
  80d3b4:	188bc83a 	sub	r5,r3,r2
  80d3b8:	814ad83a 	srl	r5,r16,r5
  80d3bc:	00c00434 	movhi	r3,16
  80d3c0:	18ffffc4 	addi	r3,r3,-1
  80d3c4:	81a0983a 	sll	r16,r16,r6
  80d3c8:	2101ffcc 	andi	r4,r4,2047
  80d3cc:	28ca703a 	and	r5,r5,r3
  80d3d0:	003fed06 	br	80d388 <__alt_data_end+0xff80d388>
  80d3d4:	0009883a 	mov	r4,zero
  80d3d8:	000b883a 	mov	r5,zero
  80d3dc:	003fea06 	br	80d388 <__alt_data_end+0xff80d388>

0080d3e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d3e0:	defffe04 	addi	sp,sp,-8
  80d3e4:	dfc00115 	stw	ra,4(sp)
  80d3e8:	df000015 	stw	fp,0(sp)
  80d3ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d3f0:	00802074 	movhi	r2,129
  80d3f4:	1086aa04 	addi	r2,r2,6824
  80d3f8:	10800017 	ldw	r2,0(r2)
  80d3fc:	10000526 	beq	r2,zero,80d414 <alt_get_errno+0x34>
  80d400:	00802074 	movhi	r2,129
  80d404:	1086aa04 	addi	r2,r2,6824
  80d408:	10800017 	ldw	r2,0(r2)
  80d40c:	103ee83a 	callr	r2
  80d410:	00000206 	br	80d41c <alt_get_errno+0x3c>
  80d414:	00802074 	movhi	r2,129
  80d418:	108d7004 	addi	r2,r2,13760
}
  80d41c:	e037883a 	mov	sp,fp
  80d420:	dfc00117 	ldw	ra,4(sp)
  80d424:	df000017 	ldw	fp,0(sp)
  80d428:	dec00204 	addi	sp,sp,8
  80d42c:	f800283a 	ret

0080d430 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80d430:	defffb04 	addi	sp,sp,-20
  80d434:	dfc00415 	stw	ra,16(sp)
  80d438:	df000315 	stw	fp,12(sp)
  80d43c:	df000304 	addi	fp,sp,12
  80d440:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80d444:	e0bfff17 	ldw	r2,-4(fp)
  80d448:	10000816 	blt	r2,zero,80d46c <close+0x3c>
  80d44c:	01400304 	movi	r5,12
  80d450:	e13fff17 	ldw	r4,-4(fp)
  80d454:	080ab7c0 	call	80ab7c <__mulsi3>
  80d458:	1007883a 	mov	r3,r2
  80d45c:	00802074 	movhi	r2,129
  80d460:	10822704 	addi	r2,r2,2204
  80d464:	1885883a 	add	r2,r3,r2
  80d468:	00000106 	br	80d470 <close+0x40>
  80d46c:	0005883a 	mov	r2,zero
  80d470:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  80d474:	e0bffd17 	ldw	r2,-12(fp)
  80d478:	10001926 	beq	r2,zero,80d4e0 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80d47c:	e0bffd17 	ldw	r2,-12(fp)
  80d480:	10800017 	ldw	r2,0(r2)
  80d484:	10800417 	ldw	r2,16(r2)
  80d488:	10000626 	beq	r2,zero,80d4a4 <close+0x74>
  80d48c:	e0bffd17 	ldw	r2,-12(fp)
  80d490:	10800017 	ldw	r2,0(r2)
  80d494:	10800417 	ldw	r2,16(r2)
  80d498:	e13ffd17 	ldw	r4,-12(fp)
  80d49c:	103ee83a 	callr	r2
  80d4a0:	00000106 	br	80d4a8 <close+0x78>
  80d4a4:	0005883a 	mov	r2,zero
  80d4a8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80d4ac:	e13fff17 	ldw	r4,-4(fp)
  80d4b0:	080db680 	call	80db68 <alt_release_fd>
    if (rval < 0)
  80d4b4:	e0bffe17 	ldw	r2,-8(fp)
  80d4b8:	1000070e 	bge	r2,zero,80d4d8 <close+0xa8>
    {
      ALT_ERRNO = -rval;
  80d4bc:	080d3e00 	call	80d3e0 <alt_get_errno>
  80d4c0:	1007883a 	mov	r3,r2
  80d4c4:	e0bffe17 	ldw	r2,-8(fp)
  80d4c8:	0085c83a 	sub	r2,zero,r2
  80d4cc:	18800015 	stw	r2,0(r3)
      return -1;
  80d4d0:	00bfffc4 	movi	r2,-1
  80d4d4:	00000706 	br	80d4f4 <close+0xc4>
    }
    return 0;
  80d4d8:	0005883a 	mov	r2,zero
  80d4dc:	00000506 	br	80d4f4 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d4e0:	080d3e00 	call	80d3e0 <alt_get_errno>
  80d4e4:	1007883a 	mov	r3,r2
  80d4e8:	00801444 	movi	r2,81
  80d4ec:	18800015 	stw	r2,0(r3)
    return -1;
  80d4f0:	00bfffc4 	movi	r2,-1
  }
}
  80d4f4:	e037883a 	mov	sp,fp
  80d4f8:	dfc00117 	ldw	ra,4(sp)
  80d4fc:	df000017 	ldw	fp,0(sp)
  80d500:	dec00204 	addi	sp,sp,8
  80d504:	f800283a 	ret

0080d508 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80d508:	defffc04 	addi	sp,sp,-16
  80d50c:	df000315 	stw	fp,12(sp)
  80d510:	df000304 	addi	fp,sp,12
  80d514:	e13ffd15 	stw	r4,-12(fp)
  80d518:	e17ffe15 	stw	r5,-8(fp)
  80d51c:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80d520:	e0bfff17 	ldw	r2,-4(fp)
}
  80d524:	e037883a 	mov	sp,fp
  80d528:	df000017 	ldw	fp,0(sp)
  80d52c:	dec00104 	addi	sp,sp,4
  80d530:	f800283a 	ret

0080d534 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d534:	defffe04 	addi	sp,sp,-8
  80d538:	dfc00115 	stw	ra,4(sp)
  80d53c:	df000015 	stw	fp,0(sp)
  80d540:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d544:	00802074 	movhi	r2,129
  80d548:	1086aa04 	addi	r2,r2,6824
  80d54c:	10800017 	ldw	r2,0(r2)
  80d550:	10000526 	beq	r2,zero,80d568 <alt_get_errno+0x34>
  80d554:	00802074 	movhi	r2,129
  80d558:	1086aa04 	addi	r2,r2,6824
  80d55c:	10800017 	ldw	r2,0(r2)
  80d560:	103ee83a 	callr	r2
  80d564:	00000206 	br	80d570 <alt_get_errno+0x3c>
  80d568:	00802074 	movhi	r2,129
  80d56c:	108d7004 	addi	r2,r2,13760
}
  80d570:	e037883a 	mov	sp,fp
  80d574:	dfc00117 	ldw	ra,4(sp)
  80d578:	df000017 	ldw	fp,0(sp)
  80d57c:	dec00204 	addi	sp,sp,8
  80d580:	f800283a 	ret

0080d584 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80d584:	defffb04 	addi	sp,sp,-20
  80d588:	dfc00415 	stw	ra,16(sp)
  80d58c:	df000315 	stw	fp,12(sp)
  80d590:	df000304 	addi	fp,sp,12
  80d594:	e13ffe15 	stw	r4,-8(fp)
  80d598:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d59c:	e0bffe17 	ldw	r2,-8(fp)
  80d5a0:	10000816 	blt	r2,zero,80d5c4 <fstat+0x40>
  80d5a4:	01400304 	movi	r5,12
  80d5a8:	e13ffe17 	ldw	r4,-8(fp)
  80d5ac:	080ab7c0 	call	80ab7c <__mulsi3>
  80d5b0:	1007883a 	mov	r3,r2
  80d5b4:	00802074 	movhi	r2,129
  80d5b8:	10822704 	addi	r2,r2,2204
  80d5bc:	1885883a 	add	r2,r3,r2
  80d5c0:	00000106 	br	80d5c8 <fstat+0x44>
  80d5c4:	0005883a 	mov	r2,zero
  80d5c8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  80d5cc:	e0bffd17 	ldw	r2,-12(fp)
  80d5d0:	10001026 	beq	r2,zero,80d614 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80d5d4:	e0bffd17 	ldw	r2,-12(fp)
  80d5d8:	10800017 	ldw	r2,0(r2)
  80d5dc:	10800817 	ldw	r2,32(r2)
  80d5e0:	10000726 	beq	r2,zero,80d600 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
  80d5e4:	e0bffd17 	ldw	r2,-12(fp)
  80d5e8:	10800017 	ldw	r2,0(r2)
  80d5ec:	10800817 	ldw	r2,32(r2)
  80d5f0:	e17fff17 	ldw	r5,-4(fp)
  80d5f4:	e13ffd17 	ldw	r4,-12(fp)
  80d5f8:	103ee83a 	callr	r2
  80d5fc:	00000a06 	br	80d628 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80d600:	e0bfff17 	ldw	r2,-4(fp)
  80d604:	00c80004 	movi	r3,8192
  80d608:	10c00115 	stw	r3,4(r2)
      return 0;
  80d60c:	0005883a 	mov	r2,zero
  80d610:	00000506 	br	80d628 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d614:	080d5340 	call	80d534 <alt_get_errno>
  80d618:	1007883a 	mov	r3,r2
  80d61c:	00801444 	movi	r2,81
  80d620:	18800015 	stw	r2,0(r3)
    return -1;
  80d624:	00bfffc4 	movi	r2,-1
  }
}
  80d628:	e037883a 	mov	sp,fp
  80d62c:	dfc00117 	ldw	ra,4(sp)
  80d630:	df000017 	ldw	fp,0(sp)
  80d634:	dec00204 	addi	sp,sp,8
  80d638:	f800283a 	ret

0080d63c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d63c:	defffe04 	addi	sp,sp,-8
  80d640:	dfc00115 	stw	ra,4(sp)
  80d644:	df000015 	stw	fp,0(sp)
  80d648:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d64c:	00802074 	movhi	r2,129
  80d650:	1086aa04 	addi	r2,r2,6824
  80d654:	10800017 	ldw	r2,0(r2)
  80d658:	10000526 	beq	r2,zero,80d670 <alt_get_errno+0x34>
  80d65c:	00802074 	movhi	r2,129
  80d660:	1086aa04 	addi	r2,r2,6824
  80d664:	10800017 	ldw	r2,0(r2)
  80d668:	103ee83a 	callr	r2
  80d66c:	00000206 	br	80d678 <alt_get_errno+0x3c>
  80d670:	00802074 	movhi	r2,129
  80d674:	108d7004 	addi	r2,r2,13760
}
  80d678:	e037883a 	mov	sp,fp
  80d67c:	dfc00117 	ldw	ra,4(sp)
  80d680:	df000017 	ldw	fp,0(sp)
  80d684:	dec00204 	addi	sp,sp,8
  80d688:	f800283a 	ret

0080d68c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80d68c:	deffed04 	addi	sp,sp,-76
  80d690:	dfc01215 	stw	ra,72(sp)
  80d694:	df001115 	stw	fp,68(sp)
  80d698:	df001104 	addi	fp,sp,68
  80d69c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d6a0:	e0bfff17 	ldw	r2,-4(fp)
  80d6a4:	10000816 	blt	r2,zero,80d6c8 <isatty+0x3c>
  80d6a8:	01400304 	movi	r5,12
  80d6ac:	e13fff17 	ldw	r4,-4(fp)
  80d6b0:	080ab7c0 	call	80ab7c <__mulsi3>
  80d6b4:	1007883a 	mov	r3,r2
  80d6b8:	00802074 	movhi	r2,129
  80d6bc:	10822704 	addi	r2,r2,2204
  80d6c0:	1885883a 	add	r2,r3,r2
  80d6c4:	00000106 	br	80d6cc <isatty+0x40>
  80d6c8:	0005883a 	mov	r2,zero
  80d6cc:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  80d6d0:	e0bfef17 	ldw	r2,-68(fp)
  80d6d4:	10000e26 	beq	r2,zero,80d710 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80d6d8:	e0bfef17 	ldw	r2,-68(fp)
  80d6dc:	10800017 	ldw	r2,0(r2)
  80d6e0:	10800817 	ldw	r2,32(r2)
  80d6e4:	1000021e 	bne	r2,zero,80d6f0 <isatty+0x64>
    {
      return 1;
  80d6e8:	00800044 	movi	r2,1
  80d6ec:	00000d06 	br	80d724 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80d6f0:	e0bff004 	addi	r2,fp,-64
  80d6f4:	100b883a 	mov	r5,r2
  80d6f8:	e13fff17 	ldw	r4,-4(fp)
  80d6fc:	080d5840 	call	80d584 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80d700:	e0bff117 	ldw	r2,-60(fp)
  80d704:	10880020 	cmpeqi	r2,r2,8192
  80d708:	10803fcc 	andi	r2,r2,255
  80d70c:	00000506 	br	80d724 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d710:	080d63c0 	call	80d63c <alt_get_errno>
  80d714:	1007883a 	mov	r3,r2
  80d718:	00801444 	movi	r2,81
  80d71c:	18800015 	stw	r2,0(r3)
    return 0;
  80d720:	0005883a 	mov	r2,zero
  }
}
  80d724:	e037883a 	mov	sp,fp
  80d728:	dfc00117 	ldw	ra,4(sp)
  80d72c:	df000017 	ldw	fp,0(sp)
  80d730:	dec00204 	addi	sp,sp,8
  80d734:	f800283a 	ret

0080d738 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80d738:	defffc04 	addi	sp,sp,-16
  80d73c:	df000315 	stw	fp,12(sp)
  80d740:	df000304 	addi	fp,sp,12
  80d744:	e13ffd15 	stw	r4,-12(fp)
  80d748:	e17ffe15 	stw	r5,-8(fp)
  80d74c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80d750:	e0fffe17 	ldw	r3,-8(fp)
  80d754:	e0bffd17 	ldw	r2,-12(fp)
  80d758:	18800c26 	beq	r3,r2,80d78c <alt_load_section+0x54>
  {
    while( to != end )
  80d75c:	00000806 	br	80d780 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80d760:	e0bffe17 	ldw	r2,-8(fp)
  80d764:	10c00104 	addi	r3,r2,4
  80d768:	e0fffe15 	stw	r3,-8(fp)
  80d76c:	e0fffd17 	ldw	r3,-12(fp)
  80d770:	19000104 	addi	r4,r3,4
  80d774:	e13ffd15 	stw	r4,-12(fp)
  80d778:	18c00017 	ldw	r3,0(r3)
  80d77c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80d780:	e0fffe17 	ldw	r3,-8(fp)
  80d784:	e0bfff17 	ldw	r2,-4(fp)
  80d788:	18bff51e 	bne	r3,r2,80d760 <__alt_data_end+0xff80d760>
    {
      *to++ = *from++;
    }
  }
}
  80d78c:	0001883a 	nop
  80d790:	e037883a 	mov	sp,fp
  80d794:	df000017 	ldw	fp,0(sp)
  80d798:	dec00104 	addi	sp,sp,4
  80d79c:	f800283a 	ret

0080d7a0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80d7a0:	defffe04 	addi	sp,sp,-8
  80d7a4:	dfc00115 	stw	ra,4(sp)
  80d7a8:	df000015 	stw	fp,0(sp)
  80d7ac:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80d7b0:	01802074 	movhi	r6,129
  80d7b4:	3186af04 	addi	r6,r6,6844
  80d7b8:	01402074 	movhi	r5,129
  80d7bc:	297ff404 	addi	r5,r5,-48
  80d7c0:	01002074 	movhi	r4,129
  80d7c4:	2106af04 	addi	r4,r4,6844
  80d7c8:	080d7380 	call	80d738 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80d7cc:	01802034 	movhi	r6,128
  80d7d0:	31807004 	addi	r6,r6,448
  80d7d4:	01402034 	movhi	r5,128
  80d7d8:	29400804 	addi	r5,r5,32
  80d7dc:	01002034 	movhi	r4,128
  80d7e0:	21000804 	addi	r4,r4,32
  80d7e4:	080d7380 	call	80d738 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80d7e8:	01802074 	movhi	r6,129
  80d7ec:	31bff404 	addi	r6,r6,-48
  80d7f0:	01402074 	movhi	r5,129
  80d7f4:	297f2f04 	addi	r5,r5,-836
  80d7f8:	01002074 	movhi	r4,129
  80d7fc:	213f2f04 	addi	r4,r4,-836
  80d800:	080d7380 	call	80d738 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80d804:	080eb7c0 	call	80eb7c <alt_dcache_flush_all>
  alt_icache_flush_all();
  80d808:	080ed500 	call	80ed50 <alt_icache_flush_all>
}
  80d80c:	0001883a 	nop
  80d810:	e037883a 	mov	sp,fp
  80d814:	dfc00117 	ldw	ra,4(sp)
  80d818:	df000017 	ldw	fp,0(sp)
  80d81c:	dec00204 	addi	sp,sp,8
  80d820:	f800283a 	ret

0080d824 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d824:	defffe04 	addi	sp,sp,-8
  80d828:	dfc00115 	stw	ra,4(sp)
  80d82c:	df000015 	stw	fp,0(sp)
  80d830:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d834:	00802074 	movhi	r2,129
  80d838:	1086aa04 	addi	r2,r2,6824
  80d83c:	10800017 	ldw	r2,0(r2)
  80d840:	10000526 	beq	r2,zero,80d858 <alt_get_errno+0x34>
  80d844:	00802074 	movhi	r2,129
  80d848:	1086aa04 	addi	r2,r2,6824
  80d84c:	10800017 	ldw	r2,0(r2)
  80d850:	103ee83a 	callr	r2
  80d854:	00000206 	br	80d860 <alt_get_errno+0x3c>
  80d858:	00802074 	movhi	r2,129
  80d85c:	108d7004 	addi	r2,r2,13760
}
  80d860:	e037883a 	mov	sp,fp
  80d864:	dfc00117 	ldw	ra,4(sp)
  80d868:	df000017 	ldw	fp,0(sp)
  80d86c:	dec00204 	addi	sp,sp,8
  80d870:	f800283a 	ret

0080d874 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80d874:	defff904 	addi	sp,sp,-28
  80d878:	dfc00615 	stw	ra,24(sp)
  80d87c:	df000515 	stw	fp,20(sp)
  80d880:	df000504 	addi	fp,sp,20
  80d884:	e13ffd15 	stw	r4,-12(fp)
  80d888:	e17ffe15 	stw	r5,-8(fp)
  80d88c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80d890:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d894:	e0bffd17 	ldw	r2,-12(fp)
  80d898:	10000816 	blt	r2,zero,80d8bc <lseek+0x48>
  80d89c:	01400304 	movi	r5,12
  80d8a0:	e13ffd17 	ldw	r4,-12(fp)
  80d8a4:	080ab7c0 	call	80ab7c <__mulsi3>
  80d8a8:	1007883a 	mov	r3,r2
  80d8ac:	00802074 	movhi	r2,129
  80d8b0:	10822704 	addi	r2,r2,2204
  80d8b4:	1885883a 	add	r2,r3,r2
  80d8b8:	00000106 	br	80d8c0 <lseek+0x4c>
  80d8bc:	0005883a 	mov	r2,zero
  80d8c0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  80d8c4:	e0bffc17 	ldw	r2,-16(fp)
  80d8c8:	10001026 	beq	r2,zero,80d90c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80d8cc:	e0bffc17 	ldw	r2,-16(fp)
  80d8d0:	10800017 	ldw	r2,0(r2)
  80d8d4:	10800717 	ldw	r2,28(r2)
  80d8d8:	10000926 	beq	r2,zero,80d900 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80d8dc:	e0bffc17 	ldw	r2,-16(fp)
  80d8e0:	10800017 	ldw	r2,0(r2)
  80d8e4:	10800717 	ldw	r2,28(r2)
  80d8e8:	e1bfff17 	ldw	r6,-4(fp)
  80d8ec:	e17ffe17 	ldw	r5,-8(fp)
  80d8f0:	e13ffc17 	ldw	r4,-16(fp)
  80d8f4:	103ee83a 	callr	r2
  80d8f8:	e0bffb15 	stw	r2,-20(fp)
  80d8fc:	00000506 	br	80d914 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80d900:	00bfde84 	movi	r2,-134
  80d904:	e0bffb15 	stw	r2,-20(fp)
  80d908:	00000206 	br	80d914 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
  80d90c:	00bfebc4 	movi	r2,-81
  80d910:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  80d914:	e0bffb17 	ldw	r2,-20(fp)
  80d918:	1000070e 	bge	r2,zero,80d938 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
  80d91c:	080d8240 	call	80d824 <alt_get_errno>
  80d920:	1007883a 	mov	r3,r2
  80d924:	e0bffb17 	ldw	r2,-20(fp)
  80d928:	0085c83a 	sub	r2,zero,r2
  80d92c:	18800015 	stw	r2,0(r3)
    rc = -1;
  80d930:	00bfffc4 	movi	r2,-1
  80d934:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  80d938:	e0bffb17 	ldw	r2,-20(fp)
}
  80d93c:	e037883a 	mov	sp,fp
  80d940:	dfc00117 	ldw	ra,4(sp)
  80d944:	df000017 	ldw	fp,0(sp)
  80d948:	dec00204 	addi	sp,sp,8
  80d94c:	f800283a 	ret

0080d950 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80d950:	defffd04 	addi	sp,sp,-12
  80d954:	dfc00215 	stw	ra,8(sp)
  80d958:	df000115 	stw	fp,4(sp)
  80d95c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80d960:	0009883a 	mov	r4,zero
  80d964:	080de240 	call	80de24 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80d968:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80d96c:	080de5c0 	call	80de5c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80d970:	01802074 	movhi	r6,129
  80d974:	31bfec04 	addi	r6,r6,-80
  80d978:	01402074 	movhi	r5,129
  80d97c:	297fec04 	addi	r5,r5,-80
  80d980:	01002074 	movhi	r4,129
  80d984:	213fec04 	addi	r4,r4,-80
  80d988:	080f1380 	call	80f138 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80d98c:	080ec900 	call	80ec90 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80d990:	01002074 	movhi	r4,129
  80d994:	213b3c04 	addi	r4,r4,-4880
  80d998:	080f9280 	call	80f928 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80d99c:	d0a6d217 	ldw	r2,-25784(gp)
  80d9a0:	d0e6d317 	ldw	r3,-25780(gp)
  80d9a4:	d126d417 	ldw	r4,-25776(gp)
  80d9a8:	200d883a 	mov	r6,r4
  80d9ac:	180b883a 	mov	r5,r3
  80d9b0:	1009883a 	mov	r4,r2
  80d9b4:	08001fc0 	call	8001fc <main>
  80d9b8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80d9bc:	01000044 	movi	r4,1
  80d9c0:	080d4300 	call	80d430 <close>
  exit (result);
  80d9c4:	e13fff17 	ldw	r4,-4(fp)
  80d9c8:	080f93c0 	call	80f93c <exit>

0080d9cc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80d9cc:	defffe04 	addi	sp,sp,-8
  80d9d0:	df000115 	stw	fp,4(sp)
  80d9d4:	df000104 	addi	fp,sp,4
  80d9d8:	e13fff15 	stw	r4,-4(fp)
}
  80d9dc:	0001883a 	nop
  80d9e0:	e037883a 	mov	sp,fp
  80d9e4:	df000017 	ldw	fp,0(sp)
  80d9e8:	dec00104 	addi	sp,sp,4
  80d9ec:	f800283a 	ret

0080d9f0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80d9f0:	defffe04 	addi	sp,sp,-8
  80d9f4:	df000115 	stw	fp,4(sp)
  80d9f8:	df000104 	addi	fp,sp,4
  80d9fc:	e13fff15 	stw	r4,-4(fp)
}
  80da00:	0001883a 	nop
  80da04:	e037883a 	mov	sp,fp
  80da08:	df000017 	ldw	fp,0(sp)
  80da0c:	dec00104 	addi	sp,sp,4
  80da10:	f800283a 	ret

0080da14 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80da14:	defffe04 	addi	sp,sp,-8
  80da18:	dfc00115 	stw	ra,4(sp)
  80da1c:	df000015 	stw	fp,0(sp)
  80da20:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80da24:	00802074 	movhi	r2,129
  80da28:	1086aa04 	addi	r2,r2,6824
  80da2c:	10800017 	ldw	r2,0(r2)
  80da30:	10000526 	beq	r2,zero,80da48 <alt_get_errno+0x34>
  80da34:	00802074 	movhi	r2,129
  80da38:	1086aa04 	addi	r2,r2,6824
  80da3c:	10800017 	ldw	r2,0(r2)
  80da40:	103ee83a 	callr	r2
  80da44:	00000206 	br	80da50 <alt_get_errno+0x3c>
  80da48:	00802074 	movhi	r2,129
  80da4c:	108d7004 	addi	r2,r2,13760
}
  80da50:	e037883a 	mov	sp,fp
  80da54:	dfc00117 	ldw	ra,4(sp)
  80da58:	df000017 	ldw	fp,0(sp)
  80da5c:	dec00204 	addi	sp,sp,8
  80da60:	f800283a 	ret

0080da64 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80da64:	defff904 	addi	sp,sp,-28
  80da68:	dfc00615 	stw	ra,24(sp)
  80da6c:	df000515 	stw	fp,20(sp)
  80da70:	df000504 	addi	fp,sp,20
  80da74:	e13ffd15 	stw	r4,-12(fp)
  80da78:	e17ffe15 	stw	r5,-8(fp)
  80da7c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80da80:	e0bffd17 	ldw	r2,-12(fp)
  80da84:	10000816 	blt	r2,zero,80daa8 <read+0x44>
  80da88:	01400304 	movi	r5,12
  80da8c:	e13ffd17 	ldw	r4,-12(fp)
  80da90:	080ab7c0 	call	80ab7c <__mulsi3>
  80da94:	1007883a 	mov	r3,r2
  80da98:	00802074 	movhi	r2,129
  80da9c:	10822704 	addi	r2,r2,2204
  80daa0:	1885883a 	add	r2,r3,r2
  80daa4:	00000106 	br	80daac <read+0x48>
  80daa8:	0005883a 	mov	r2,zero
  80daac:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80dab0:	e0bffb17 	ldw	r2,-20(fp)
  80dab4:	10002226 	beq	r2,zero,80db40 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80dab8:	e0bffb17 	ldw	r2,-20(fp)
  80dabc:	10800217 	ldw	r2,8(r2)
  80dac0:	108000cc 	andi	r2,r2,3
  80dac4:	10800060 	cmpeqi	r2,r2,1
  80dac8:	1000181e 	bne	r2,zero,80db2c <read+0xc8>
        (fd->dev->read))
  80dacc:	e0bffb17 	ldw	r2,-20(fp)
  80dad0:	10800017 	ldw	r2,0(r2)
  80dad4:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80dad8:	10001426 	beq	r2,zero,80db2c <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80dadc:	e0bffb17 	ldw	r2,-20(fp)
  80dae0:	10800017 	ldw	r2,0(r2)
  80dae4:	10800517 	ldw	r2,20(r2)
  80dae8:	e0ffff17 	ldw	r3,-4(fp)
  80daec:	180d883a 	mov	r6,r3
  80daf0:	e17ffe17 	ldw	r5,-8(fp)
  80daf4:	e13ffb17 	ldw	r4,-20(fp)
  80daf8:	103ee83a 	callr	r2
  80dafc:	e0bffc15 	stw	r2,-16(fp)
  80db00:	e0bffc17 	ldw	r2,-16(fp)
  80db04:	1000070e 	bge	r2,zero,80db24 <read+0xc0>
        {
          ALT_ERRNO = -rval;
  80db08:	080da140 	call	80da14 <alt_get_errno>
  80db0c:	1007883a 	mov	r3,r2
  80db10:	e0bffc17 	ldw	r2,-16(fp)
  80db14:	0085c83a 	sub	r2,zero,r2
  80db18:	18800015 	stw	r2,0(r3)
          return -1;
  80db1c:	00bfffc4 	movi	r2,-1
  80db20:	00000c06 	br	80db54 <read+0xf0>
        }
        return rval;
  80db24:	e0bffc17 	ldw	r2,-16(fp)
  80db28:	00000a06 	br	80db54 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80db2c:	080da140 	call	80da14 <alt_get_errno>
  80db30:	1007883a 	mov	r3,r2
  80db34:	00800344 	movi	r2,13
  80db38:	18800015 	stw	r2,0(r3)
  80db3c:	00000406 	br	80db50 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80db40:	080da140 	call	80da14 <alt_get_errno>
  80db44:	1007883a 	mov	r3,r2
  80db48:	00801444 	movi	r2,81
  80db4c:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80db50:	00bfffc4 	movi	r2,-1
}
  80db54:	e037883a 	mov	sp,fp
  80db58:	dfc00117 	ldw	ra,4(sp)
  80db5c:	df000017 	ldw	fp,0(sp)
  80db60:	dec00204 	addi	sp,sp,8
  80db64:	f800283a 	ret

0080db68 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80db68:	defffc04 	addi	sp,sp,-16
  80db6c:	dfc00315 	stw	ra,12(sp)
  80db70:	df000215 	stw	fp,8(sp)
  80db74:	dc000115 	stw	r16,4(sp)
  80db78:	df000204 	addi	fp,sp,8
  80db7c:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
  80db80:	e0bffe17 	ldw	r2,-8(fp)
  80db84:	108000d0 	cmplti	r2,r2,3
  80db88:	1000111e 	bne	r2,zero,80dbd0 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
  80db8c:	04002074 	movhi	r16,129
  80db90:	84022704 	addi	r16,r16,2204
  80db94:	e0bffe17 	ldw	r2,-8(fp)
  80db98:	01400304 	movi	r5,12
  80db9c:	1009883a 	mov	r4,r2
  80dba0:	080ab7c0 	call	80ab7c <__mulsi3>
  80dba4:	8085883a 	add	r2,r16,r2
  80dba8:	10800204 	addi	r2,r2,8
  80dbac:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80dbb0:	04002074 	movhi	r16,129
  80dbb4:	84022704 	addi	r16,r16,2204
  80dbb8:	e0bffe17 	ldw	r2,-8(fp)
  80dbbc:	01400304 	movi	r5,12
  80dbc0:	1009883a 	mov	r4,r2
  80dbc4:	080ab7c0 	call	80ab7c <__mulsi3>
  80dbc8:	8085883a 	add	r2,r16,r2
  80dbcc:	10000015 	stw	zero,0(r2)
  }
}
  80dbd0:	0001883a 	nop
  80dbd4:	e6ffff04 	addi	sp,fp,-4
  80dbd8:	dfc00217 	ldw	ra,8(sp)
  80dbdc:	df000117 	ldw	fp,4(sp)
  80dbe0:	dc000017 	ldw	r16,0(sp)
  80dbe4:	dec00304 	addi	sp,sp,12
  80dbe8:	f800283a 	ret

0080dbec <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80dbec:	defff904 	addi	sp,sp,-28
  80dbf0:	df000615 	stw	fp,24(sp)
  80dbf4:	df000604 	addi	fp,sp,24
  80dbf8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80dbfc:	0005303a 	rdctl	r2,status
  80dc00:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80dc04:	e0fffe17 	ldw	r3,-8(fp)
  80dc08:	00bfff84 	movi	r2,-2
  80dc0c:	1884703a 	and	r2,r3,r2
  80dc10:	1001703a 	wrctl	status,r2
  
  return context;
  80dc14:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80dc18:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80dc1c:	d0a00c17 	ldw	r2,-32720(gp)
  80dc20:	10c000c4 	addi	r3,r2,3
  80dc24:	00bfff04 	movi	r2,-4
  80dc28:	1884703a 	and	r2,r3,r2
  80dc2c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80dc30:	d0e00c17 	ldw	r3,-32720(gp)
  80dc34:	e0bfff17 	ldw	r2,-4(fp)
  80dc38:	1887883a 	add	r3,r3,r2
  80dc3c:	00804034 	movhi	r2,256
  80dc40:	10800004 	addi	r2,r2,0
  80dc44:	10c0062e 	bgeu	r2,r3,80dc60 <sbrk+0x74>
  80dc48:	e0bffb17 	ldw	r2,-20(fp)
  80dc4c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80dc50:	e0bffa17 	ldw	r2,-24(fp)
  80dc54:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80dc58:	00bfffc4 	movi	r2,-1
  80dc5c:	00000b06 	br	80dc8c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  80dc60:	d0a00c17 	ldw	r2,-32720(gp)
  80dc64:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  80dc68:	d0e00c17 	ldw	r3,-32720(gp)
  80dc6c:	e0bfff17 	ldw	r2,-4(fp)
  80dc70:	1885883a 	add	r2,r3,r2
  80dc74:	d0a00c15 	stw	r2,-32720(gp)
  80dc78:	e0bffb17 	ldw	r2,-20(fp)
  80dc7c:	e0bffc15 	stw	r2,-16(fp)
  80dc80:	e0bffc17 	ldw	r2,-16(fp)
  80dc84:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80dc88:	e0bffd17 	ldw	r2,-12(fp)
} 
  80dc8c:	e037883a 	mov	sp,fp
  80dc90:	df000017 	ldw	fp,0(sp)
  80dc94:	dec00104 	addi	sp,sp,4
  80dc98:	f800283a 	ret

0080dc9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80dc9c:	defffe04 	addi	sp,sp,-8
  80dca0:	dfc00115 	stw	ra,4(sp)
  80dca4:	df000015 	stw	fp,0(sp)
  80dca8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80dcac:	00802074 	movhi	r2,129
  80dcb0:	1086aa04 	addi	r2,r2,6824
  80dcb4:	10800017 	ldw	r2,0(r2)
  80dcb8:	10000526 	beq	r2,zero,80dcd0 <alt_get_errno+0x34>
  80dcbc:	00802074 	movhi	r2,129
  80dcc0:	1086aa04 	addi	r2,r2,6824
  80dcc4:	10800017 	ldw	r2,0(r2)
  80dcc8:	103ee83a 	callr	r2
  80dccc:	00000206 	br	80dcd8 <alt_get_errno+0x3c>
  80dcd0:	00802074 	movhi	r2,129
  80dcd4:	108d7004 	addi	r2,r2,13760
}
  80dcd8:	e037883a 	mov	sp,fp
  80dcdc:	dfc00117 	ldw	ra,4(sp)
  80dce0:	df000017 	ldw	fp,0(sp)
  80dce4:	dec00204 	addi	sp,sp,8
  80dce8:	f800283a 	ret

0080dcec <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80dcec:	defff904 	addi	sp,sp,-28
  80dcf0:	dfc00615 	stw	ra,24(sp)
  80dcf4:	df000515 	stw	fp,20(sp)
  80dcf8:	df000504 	addi	fp,sp,20
  80dcfc:	e13ffd15 	stw	r4,-12(fp)
  80dd00:	e17ffe15 	stw	r5,-8(fp)
  80dd04:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80dd08:	e0bffd17 	ldw	r2,-12(fp)
  80dd0c:	10000816 	blt	r2,zero,80dd30 <write+0x44>
  80dd10:	01400304 	movi	r5,12
  80dd14:	e13ffd17 	ldw	r4,-12(fp)
  80dd18:	080ab7c0 	call	80ab7c <__mulsi3>
  80dd1c:	1007883a 	mov	r3,r2
  80dd20:	00802074 	movhi	r2,129
  80dd24:	10822704 	addi	r2,r2,2204
  80dd28:	1885883a 	add	r2,r3,r2
  80dd2c:	00000106 	br	80dd34 <write+0x48>
  80dd30:	0005883a 	mov	r2,zero
  80dd34:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80dd38:	e0bffb17 	ldw	r2,-20(fp)
  80dd3c:	10002126 	beq	r2,zero,80ddc4 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80dd40:	e0bffb17 	ldw	r2,-20(fp)
  80dd44:	10800217 	ldw	r2,8(r2)
  80dd48:	108000cc 	andi	r2,r2,3
  80dd4c:	10001826 	beq	r2,zero,80ddb0 <write+0xc4>
  80dd50:	e0bffb17 	ldw	r2,-20(fp)
  80dd54:	10800017 	ldw	r2,0(r2)
  80dd58:	10800617 	ldw	r2,24(r2)
  80dd5c:	10001426 	beq	r2,zero,80ddb0 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80dd60:	e0bffb17 	ldw	r2,-20(fp)
  80dd64:	10800017 	ldw	r2,0(r2)
  80dd68:	10800617 	ldw	r2,24(r2)
  80dd6c:	e0ffff17 	ldw	r3,-4(fp)
  80dd70:	180d883a 	mov	r6,r3
  80dd74:	e17ffe17 	ldw	r5,-8(fp)
  80dd78:	e13ffb17 	ldw	r4,-20(fp)
  80dd7c:	103ee83a 	callr	r2
  80dd80:	e0bffc15 	stw	r2,-16(fp)
  80dd84:	e0bffc17 	ldw	r2,-16(fp)
  80dd88:	1000070e 	bge	r2,zero,80dda8 <write+0xbc>
      {
        ALT_ERRNO = -rval;
  80dd8c:	080dc9c0 	call	80dc9c <alt_get_errno>
  80dd90:	1007883a 	mov	r3,r2
  80dd94:	e0bffc17 	ldw	r2,-16(fp)
  80dd98:	0085c83a 	sub	r2,zero,r2
  80dd9c:	18800015 	stw	r2,0(r3)
        return -1;
  80dda0:	00bfffc4 	movi	r2,-1
  80dda4:	00000c06 	br	80ddd8 <write+0xec>
      }
      return rval;
  80dda8:	e0bffc17 	ldw	r2,-16(fp)
  80ddac:	00000a06 	br	80ddd8 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80ddb0:	080dc9c0 	call	80dc9c <alt_get_errno>
  80ddb4:	1007883a 	mov	r3,r2
  80ddb8:	00800344 	movi	r2,13
  80ddbc:	18800015 	stw	r2,0(r3)
  80ddc0:	00000406 	br	80ddd4 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80ddc4:	080dc9c0 	call	80dc9c <alt_get_errno>
  80ddc8:	1007883a 	mov	r3,r2
  80ddcc:	00801444 	movi	r2,81
  80ddd0:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80ddd4:	00bfffc4 	movi	r2,-1
}
  80ddd8:	e037883a 	mov	sp,fp
  80dddc:	dfc00117 	ldw	ra,4(sp)
  80dde0:	df000017 	ldw	fp,0(sp)
  80dde4:	dec00204 	addi	sp,sp,8
  80dde8:	f800283a 	ret

0080ddec <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80ddec:	defffd04 	addi	sp,sp,-12
  80ddf0:	dfc00215 	stw	ra,8(sp)
  80ddf4:	df000115 	stw	fp,4(sp)
  80ddf8:	df000104 	addi	fp,sp,4
  80ddfc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80de00:	01402074 	movhi	r5,129
  80de04:	2946a704 	addi	r5,r5,6812
  80de08:	e13fff17 	ldw	r4,-4(fp)
  80de0c:	080ebec0 	call	80ebec <alt_dev_llist_insert>
}
  80de10:	e037883a 	mov	sp,fp
  80de14:	dfc00117 	ldw	ra,4(sp)
  80de18:	df000017 	ldw	fp,0(sp)
  80de1c:	dec00204 	addi	sp,sp,8
  80de20:	f800283a 	ret

0080de24 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80de24:	defffd04 	addi	sp,sp,-12
  80de28:	dfc00215 	stw	ra,8(sp)
  80de2c:	df000115 	stw	fp,4(sp)
  80de30:	df000104 	addi	fp,sp,4
  80de34:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
  80de38:	080f5fc0 	call	80f5fc <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80de3c:	00800044 	movi	r2,1
  80de40:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80de44:	0001883a 	nop
  80de48:	e037883a 	mov	sp,fp
  80de4c:	dfc00117 	ldw	ra,4(sp)
  80de50:	df000017 	ldw	fp,0(sp)
  80de54:	dec00204 	addi	sp,sp,8
  80de58:	f800283a 	ret

0080de5c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80de5c:	defffe04 	addi	sp,sp,-8
  80de60:	dfc00115 	stw	ra,4(sp)
  80de64:	df000015 	stw	fp,0(sp)
  80de68:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80de6c:	01c0fa04 	movi	r7,1000
  80de70:	01800044 	movi	r6,1
  80de74:	000b883a 	mov	r5,zero
  80de78:	01004034 	movhi	r4,256
  80de7c:	21040004 	addi	r4,r4,4096
  80de80:	080e9b00 	call	80e9b0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80de84:	01800404 	movi	r6,16
  80de88:	000b883a 	mov	r5,zero
  80de8c:	01002074 	movhi	r4,129
  80de90:	21029104 	addi	r4,r4,2628
  80de94:	080e0240 	call	80e024 <altera_avalon_jtag_uart_init>
  80de98:	01002074 	movhi	r4,129
  80de9c:	21028704 	addi	r4,r4,2588
  80dea0:	080ddec0 	call	80ddec <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80dea4:	0001883a 	nop
}
  80dea8:	0001883a 	nop
  80deac:	e037883a 	mov	sp,fp
  80deb0:	dfc00117 	ldw	ra,4(sp)
  80deb4:	df000017 	ldw	fp,0(sp)
  80deb8:	dec00204 	addi	sp,sp,8
  80debc:	f800283a 	ret

0080dec0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80dec0:	defffa04 	addi	sp,sp,-24
  80dec4:	dfc00515 	stw	ra,20(sp)
  80dec8:	df000415 	stw	fp,16(sp)
  80decc:	df000404 	addi	fp,sp,16
  80ded0:	e13ffd15 	stw	r4,-12(fp)
  80ded4:	e17ffe15 	stw	r5,-8(fp)
  80ded8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80dedc:	e0bffd17 	ldw	r2,-12(fp)
  80dee0:	10800017 	ldw	r2,0(r2)
  80dee4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80dee8:	e0bffc17 	ldw	r2,-16(fp)
  80deec:	10c00a04 	addi	r3,r2,40
  80def0:	e0bffd17 	ldw	r2,-12(fp)
  80def4:	10800217 	ldw	r2,8(r2)
  80def8:	100f883a 	mov	r7,r2
  80defc:	e1bfff17 	ldw	r6,-4(fp)
  80df00:	e17ffe17 	ldw	r5,-8(fp)
  80df04:	1809883a 	mov	r4,r3
  80df08:	080e4f80 	call	80e4f8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80df0c:	e037883a 	mov	sp,fp
  80df10:	dfc00117 	ldw	ra,4(sp)
  80df14:	df000017 	ldw	fp,0(sp)
  80df18:	dec00204 	addi	sp,sp,8
  80df1c:	f800283a 	ret

0080df20 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80df20:	defffa04 	addi	sp,sp,-24
  80df24:	dfc00515 	stw	ra,20(sp)
  80df28:	df000415 	stw	fp,16(sp)
  80df2c:	df000404 	addi	fp,sp,16
  80df30:	e13ffd15 	stw	r4,-12(fp)
  80df34:	e17ffe15 	stw	r5,-8(fp)
  80df38:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80df3c:	e0bffd17 	ldw	r2,-12(fp)
  80df40:	10800017 	ldw	r2,0(r2)
  80df44:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80df48:	e0bffc17 	ldw	r2,-16(fp)
  80df4c:	10c00a04 	addi	r3,r2,40
  80df50:	e0bffd17 	ldw	r2,-12(fp)
  80df54:	10800217 	ldw	r2,8(r2)
  80df58:	100f883a 	mov	r7,r2
  80df5c:	e1bfff17 	ldw	r6,-4(fp)
  80df60:	e17ffe17 	ldw	r5,-8(fp)
  80df64:	1809883a 	mov	r4,r3
  80df68:	080e7140 	call	80e714 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80df6c:	e037883a 	mov	sp,fp
  80df70:	dfc00117 	ldw	ra,4(sp)
  80df74:	df000017 	ldw	fp,0(sp)
  80df78:	dec00204 	addi	sp,sp,8
  80df7c:	f800283a 	ret

0080df80 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80df80:	defffc04 	addi	sp,sp,-16
  80df84:	dfc00315 	stw	ra,12(sp)
  80df88:	df000215 	stw	fp,8(sp)
  80df8c:	df000204 	addi	fp,sp,8
  80df90:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80df94:	e0bfff17 	ldw	r2,-4(fp)
  80df98:	10800017 	ldw	r2,0(r2)
  80df9c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80dfa0:	e0bffe17 	ldw	r2,-8(fp)
  80dfa4:	10c00a04 	addi	r3,r2,40
  80dfa8:	e0bfff17 	ldw	r2,-4(fp)
  80dfac:	10800217 	ldw	r2,8(r2)
  80dfb0:	100b883a 	mov	r5,r2
  80dfb4:	1809883a 	mov	r4,r3
  80dfb8:	080e3a00 	call	80e3a0 <altera_avalon_jtag_uart_close>
}
  80dfbc:	e037883a 	mov	sp,fp
  80dfc0:	dfc00117 	ldw	ra,4(sp)
  80dfc4:	df000017 	ldw	fp,0(sp)
  80dfc8:	dec00204 	addi	sp,sp,8
  80dfcc:	f800283a 	ret

0080dfd0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80dfd0:	defffa04 	addi	sp,sp,-24
  80dfd4:	dfc00515 	stw	ra,20(sp)
  80dfd8:	df000415 	stw	fp,16(sp)
  80dfdc:	df000404 	addi	fp,sp,16
  80dfe0:	e13ffd15 	stw	r4,-12(fp)
  80dfe4:	e17ffe15 	stw	r5,-8(fp)
  80dfe8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80dfec:	e0bffd17 	ldw	r2,-12(fp)
  80dff0:	10800017 	ldw	r2,0(r2)
  80dff4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80dff8:	e0bffc17 	ldw	r2,-16(fp)
  80dffc:	10800a04 	addi	r2,r2,40
  80e000:	e1bfff17 	ldw	r6,-4(fp)
  80e004:	e17ffe17 	ldw	r5,-8(fp)
  80e008:	1009883a 	mov	r4,r2
  80e00c:	080e4080 	call	80e408 <altera_avalon_jtag_uart_ioctl>
}
  80e010:	e037883a 	mov	sp,fp
  80e014:	dfc00117 	ldw	ra,4(sp)
  80e018:	df000017 	ldw	fp,0(sp)
  80e01c:	dec00204 	addi	sp,sp,8
  80e020:	f800283a 	ret

0080e024 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80e024:	defffa04 	addi	sp,sp,-24
  80e028:	dfc00515 	stw	ra,20(sp)
  80e02c:	df000415 	stw	fp,16(sp)
  80e030:	df000404 	addi	fp,sp,16
  80e034:	e13ffd15 	stw	r4,-12(fp)
  80e038:	e17ffe15 	stw	r5,-8(fp)
  80e03c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e040:	e0bffd17 	ldw	r2,-12(fp)
  80e044:	00c00044 	movi	r3,1
  80e048:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80e04c:	e0bffd17 	ldw	r2,-12(fp)
  80e050:	10800017 	ldw	r2,0(r2)
  80e054:	10800104 	addi	r2,r2,4
  80e058:	1007883a 	mov	r3,r2
  80e05c:	e0bffd17 	ldw	r2,-12(fp)
  80e060:	10800817 	ldw	r2,32(r2)
  80e064:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80e068:	e0bffe17 	ldw	r2,-8(fp)
  80e06c:	e0ffff17 	ldw	r3,-4(fp)
  80e070:	d8000015 	stw	zero,0(sp)
  80e074:	e1fffd17 	ldw	r7,-12(fp)
  80e078:	01802074 	movhi	r6,129
  80e07c:	31b83b04 	addi	r6,r6,-7956
  80e080:	180b883a 	mov	r5,r3
  80e084:	1009883a 	mov	r4,r2
  80e088:	080ed840 	call	80ed84 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80e08c:	e0bffd17 	ldw	r2,-12(fp)
  80e090:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80e094:	e0bffd17 	ldw	r2,-12(fp)
  80e098:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80e09c:	00802074 	movhi	r2,129
  80e0a0:	108d7504 	addi	r2,r2,13780
  80e0a4:	10800017 	ldw	r2,0(r2)
  80e0a8:	e1fffd17 	ldw	r7,-12(fp)
  80e0ac:	01802074 	movhi	r6,129
  80e0b0:	31b8be04 	addi	r6,r6,-7432
  80e0b4:	100b883a 	mov	r5,r2
  80e0b8:	1809883a 	mov	r4,r3
  80e0bc:	080ea3c0 	call	80ea3c <alt_alarm_start>
  80e0c0:	1000040e 	bge	r2,zero,80e0d4 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80e0c4:	e0fffd17 	ldw	r3,-12(fp)
  80e0c8:	00a00034 	movhi	r2,32768
  80e0cc:	10bfffc4 	addi	r2,r2,-1
  80e0d0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80e0d4:	0001883a 	nop
  80e0d8:	e037883a 	mov	sp,fp
  80e0dc:	dfc00117 	ldw	ra,4(sp)
  80e0e0:	df000017 	ldw	fp,0(sp)
  80e0e4:	dec00204 	addi	sp,sp,8
  80e0e8:	f800283a 	ret

0080e0ec <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80e0ec:	defff804 	addi	sp,sp,-32
  80e0f0:	df000715 	stw	fp,28(sp)
  80e0f4:	df000704 	addi	fp,sp,28
  80e0f8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80e0fc:	e0bfff17 	ldw	r2,-4(fp)
  80e100:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  80e104:	e0bffb17 	ldw	r2,-20(fp)
  80e108:	10800017 	ldw	r2,0(r2)
  80e10c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e110:	e0bffc17 	ldw	r2,-16(fp)
  80e114:	10800104 	addi	r2,r2,4
  80e118:	10800037 	ldwio	r2,0(r2)
  80e11c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80e120:	e0bffd17 	ldw	r2,-12(fp)
  80e124:	1080c00c 	andi	r2,r2,768
  80e128:	10006d26 	beq	r2,zero,80e2e0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80e12c:	e0bffd17 	ldw	r2,-12(fp)
  80e130:	1080400c 	andi	r2,r2,256
  80e134:	10003526 	beq	r2,zero,80e20c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80e138:	00800074 	movhi	r2,1
  80e13c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e140:	e0bffb17 	ldw	r2,-20(fp)
  80e144:	10800a17 	ldw	r2,40(r2)
  80e148:	10800044 	addi	r2,r2,1
  80e14c:	1081ffcc 	andi	r2,r2,2047
  80e150:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  80e154:	e0bffb17 	ldw	r2,-20(fp)
  80e158:	10c00b17 	ldw	r3,44(r2)
  80e15c:	e0bffe17 	ldw	r2,-8(fp)
  80e160:	18801526 	beq	r3,r2,80e1b8 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80e164:	e0bffc17 	ldw	r2,-16(fp)
  80e168:	10800037 	ldwio	r2,0(r2)
  80e16c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80e170:	e0bff917 	ldw	r2,-28(fp)
  80e174:	10a0000c 	andi	r2,r2,32768
  80e178:	10001126 	beq	r2,zero,80e1c0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80e17c:	e0bffb17 	ldw	r2,-20(fp)
  80e180:	10800a17 	ldw	r2,40(r2)
  80e184:	e0fff917 	ldw	r3,-28(fp)
  80e188:	1809883a 	mov	r4,r3
  80e18c:	e0fffb17 	ldw	r3,-20(fp)
  80e190:	1885883a 	add	r2,r3,r2
  80e194:	10800e04 	addi	r2,r2,56
  80e198:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e19c:	e0bffb17 	ldw	r2,-20(fp)
  80e1a0:	10800a17 	ldw	r2,40(r2)
  80e1a4:	10800044 	addi	r2,r2,1
  80e1a8:	10c1ffcc 	andi	r3,r2,2047
  80e1ac:	e0bffb17 	ldw	r2,-20(fp)
  80e1b0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  80e1b4:	003fe206 	br	80e140 <__alt_data_end+0xff80e140>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  80e1b8:	0001883a 	nop
  80e1bc:	00000106 	br	80e1c4 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  80e1c0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80e1c4:	e0bff917 	ldw	r2,-28(fp)
  80e1c8:	10bfffec 	andhi	r2,r2,65535
  80e1cc:	10000f26 	beq	r2,zero,80e20c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e1d0:	e0bffb17 	ldw	r2,-20(fp)
  80e1d4:	10c00817 	ldw	r3,32(r2)
  80e1d8:	00bfff84 	movi	r2,-2
  80e1dc:	1886703a 	and	r3,r3,r2
  80e1e0:	e0bffb17 	ldw	r2,-20(fp)
  80e1e4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80e1e8:	e0bffc17 	ldw	r2,-16(fp)
  80e1ec:	10800104 	addi	r2,r2,4
  80e1f0:	1007883a 	mov	r3,r2
  80e1f4:	e0bffb17 	ldw	r2,-20(fp)
  80e1f8:	10800817 	ldw	r2,32(r2)
  80e1fc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e200:	e0bffc17 	ldw	r2,-16(fp)
  80e204:	10800104 	addi	r2,r2,4
  80e208:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80e20c:	e0bffd17 	ldw	r2,-12(fp)
  80e210:	1080800c 	andi	r2,r2,512
  80e214:	103fbe26 	beq	r2,zero,80e110 <__alt_data_end+0xff80e110>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80e218:	e0bffd17 	ldw	r2,-12(fp)
  80e21c:	1004d43a 	srli	r2,r2,16
  80e220:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80e224:	00001406 	br	80e278 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80e228:	e0bffc17 	ldw	r2,-16(fp)
  80e22c:	e0fffb17 	ldw	r3,-20(fp)
  80e230:	18c00d17 	ldw	r3,52(r3)
  80e234:	e13ffb17 	ldw	r4,-20(fp)
  80e238:	20c7883a 	add	r3,r4,r3
  80e23c:	18c20e04 	addi	r3,r3,2104
  80e240:	18c00003 	ldbu	r3,0(r3)
  80e244:	18c03fcc 	andi	r3,r3,255
  80e248:	18c0201c 	xori	r3,r3,128
  80e24c:	18ffe004 	addi	r3,r3,-128
  80e250:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e254:	e0bffb17 	ldw	r2,-20(fp)
  80e258:	10800d17 	ldw	r2,52(r2)
  80e25c:	10800044 	addi	r2,r2,1
  80e260:	10c1ffcc 	andi	r3,r2,2047
  80e264:	e0bffb17 	ldw	r2,-20(fp)
  80e268:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80e26c:	e0bffa17 	ldw	r2,-24(fp)
  80e270:	10bfffc4 	addi	r2,r2,-1
  80e274:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  80e278:	e0bffa17 	ldw	r2,-24(fp)
  80e27c:	10000526 	beq	r2,zero,80e294 <altera_avalon_jtag_uart_irq+0x1a8>
  80e280:	e0bffb17 	ldw	r2,-20(fp)
  80e284:	10c00d17 	ldw	r3,52(r2)
  80e288:	e0bffb17 	ldw	r2,-20(fp)
  80e28c:	10800c17 	ldw	r2,48(r2)
  80e290:	18bfe51e 	bne	r3,r2,80e228 <__alt_data_end+0xff80e228>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  80e294:	e0bffa17 	ldw	r2,-24(fp)
  80e298:	103f9d26 	beq	r2,zero,80e110 <__alt_data_end+0xff80e110>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e29c:	e0bffb17 	ldw	r2,-20(fp)
  80e2a0:	10c00817 	ldw	r3,32(r2)
  80e2a4:	00bfff44 	movi	r2,-3
  80e2a8:	1886703a 	and	r3,r3,r2
  80e2ac:	e0bffb17 	ldw	r2,-20(fp)
  80e2b0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e2b4:	e0bffb17 	ldw	r2,-20(fp)
  80e2b8:	10800017 	ldw	r2,0(r2)
  80e2bc:	10800104 	addi	r2,r2,4
  80e2c0:	1007883a 	mov	r3,r2
  80e2c4:	e0bffb17 	ldw	r2,-20(fp)
  80e2c8:	10800817 	ldw	r2,32(r2)
  80e2cc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e2d0:	e0bffc17 	ldw	r2,-16(fp)
  80e2d4:	10800104 	addi	r2,r2,4
  80e2d8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  80e2dc:	003f8c06 	br	80e110 <__alt_data_end+0xff80e110>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  80e2e0:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  80e2e4:	0001883a 	nop
  80e2e8:	e037883a 	mov	sp,fp
  80e2ec:	df000017 	ldw	fp,0(sp)
  80e2f0:	dec00104 	addi	sp,sp,4
  80e2f4:	f800283a 	ret

0080e2f8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80e2f8:	defff804 	addi	sp,sp,-32
  80e2fc:	df000715 	stw	fp,28(sp)
  80e300:	df000704 	addi	fp,sp,28
  80e304:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80e308:	e0bffb17 	ldw	r2,-20(fp)
  80e30c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80e310:	e0bff917 	ldw	r2,-28(fp)
  80e314:	10800017 	ldw	r2,0(r2)
  80e318:	10800104 	addi	r2,r2,4
  80e31c:	10800037 	ldwio	r2,0(r2)
  80e320:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80e324:	e0bffa17 	ldw	r2,-24(fp)
  80e328:	1081000c 	andi	r2,r2,1024
  80e32c:	10000b26 	beq	r2,zero,80e35c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80e330:	e0bff917 	ldw	r2,-28(fp)
  80e334:	10800017 	ldw	r2,0(r2)
  80e338:	10800104 	addi	r2,r2,4
  80e33c:	1007883a 	mov	r3,r2
  80e340:	e0bff917 	ldw	r2,-28(fp)
  80e344:	10800817 	ldw	r2,32(r2)
  80e348:	10810014 	ori	r2,r2,1024
  80e34c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80e350:	e0bff917 	ldw	r2,-28(fp)
  80e354:	10000915 	stw	zero,36(r2)
  80e358:	00000a06 	br	80e384 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80e35c:	e0bff917 	ldw	r2,-28(fp)
  80e360:	10c00917 	ldw	r3,36(r2)
  80e364:	00a00034 	movhi	r2,32768
  80e368:	10bfff04 	addi	r2,r2,-4
  80e36c:	10c00536 	bltu	r2,r3,80e384 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80e370:	e0bff917 	ldw	r2,-28(fp)
  80e374:	10800917 	ldw	r2,36(r2)
  80e378:	10c00044 	addi	r3,r2,1
  80e37c:	e0bff917 	ldw	r2,-28(fp)
  80e380:	10c00915 	stw	r3,36(r2)
  80e384:	00802074 	movhi	r2,129
  80e388:	108d7504 	addi	r2,r2,13780
  80e38c:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80e390:	e037883a 	mov	sp,fp
  80e394:	df000017 	ldw	fp,0(sp)
  80e398:	dec00104 	addi	sp,sp,4
  80e39c:	f800283a 	ret

0080e3a0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80e3a0:	defffd04 	addi	sp,sp,-12
  80e3a4:	df000215 	stw	fp,8(sp)
  80e3a8:	df000204 	addi	fp,sp,8
  80e3ac:	e13ffe15 	stw	r4,-8(fp)
  80e3b0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e3b4:	00000506 	br	80e3cc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80e3b8:	e0bfff17 	ldw	r2,-4(fp)
  80e3bc:	1090000c 	andi	r2,r2,16384
  80e3c0:	10000226 	beq	r2,zero,80e3cc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80e3c4:	00bffd44 	movi	r2,-11
  80e3c8:	00000b06 	br	80e3f8 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e3cc:	e0bffe17 	ldw	r2,-8(fp)
  80e3d0:	10c00d17 	ldw	r3,52(r2)
  80e3d4:	e0bffe17 	ldw	r2,-8(fp)
  80e3d8:	10800c17 	ldw	r2,48(r2)
  80e3dc:	18800526 	beq	r3,r2,80e3f4 <altera_avalon_jtag_uart_close+0x54>
  80e3e0:	e0bffe17 	ldw	r2,-8(fp)
  80e3e4:	10c00917 	ldw	r3,36(r2)
  80e3e8:	e0bffe17 	ldw	r2,-8(fp)
  80e3ec:	10800117 	ldw	r2,4(r2)
  80e3f0:	18bff136 	bltu	r3,r2,80e3b8 <__alt_data_end+0xff80e3b8>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80e3f4:	0005883a 	mov	r2,zero
}
  80e3f8:	e037883a 	mov	sp,fp
  80e3fc:	df000017 	ldw	fp,0(sp)
  80e400:	dec00104 	addi	sp,sp,4
  80e404:	f800283a 	ret

0080e408 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80e408:	defffa04 	addi	sp,sp,-24
  80e40c:	df000515 	stw	fp,20(sp)
  80e410:	df000504 	addi	fp,sp,20
  80e414:	e13ffd15 	stw	r4,-12(fp)
  80e418:	e17ffe15 	stw	r5,-8(fp)
  80e41c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  80e420:	00bff9c4 	movi	r2,-25
  80e424:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  80e428:	e0bffe17 	ldw	r2,-8(fp)
  80e42c:	10da8060 	cmpeqi	r3,r2,27137
  80e430:	1800031e 	bne	r3,zero,80e440 <altera_avalon_jtag_uart_ioctl+0x38>
  80e434:	109a80a0 	cmpeqi	r2,r2,27138
  80e438:	1000181e 	bne	r2,zero,80e49c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  80e43c:	00002906 	br	80e4e4 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  80e440:	e0bffd17 	ldw	r2,-12(fp)
  80e444:	10c00117 	ldw	r3,4(r2)
  80e448:	00a00034 	movhi	r2,32768
  80e44c:	10bfffc4 	addi	r2,r2,-1
  80e450:	18802126 	beq	r3,r2,80e4d8 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  80e454:	e0bfff17 	ldw	r2,-4(fp)
  80e458:	10800017 	ldw	r2,0(r2)
  80e45c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80e460:	e0bffc17 	ldw	r2,-16(fp)
  80e464:	10800090 	cmplti	r2,r2,2
  80e468:	1000061e 	bne	r2,zero,80e484 <altera_avalon_jtag_uart_ioctl+0x7c>
  80e46c:	e0fffc17 	ldw	r3,-16(fp)
  80e470:	00a00034 	movhi	r2,32768
  80e474:	10bfffc4 	addi	r2,r2,-1
  80e478:	18800226 	beq	r3,r2,80e484 <altera_avalon_jtag_uart_ioctl+0x7c>
  80e47c:	e0bffc17 	ldw	r2,-16(fp)
  80e480:	00000206 	br	80e48c <altera_avalon_jtag_uart_ioctl+0x84>
  80e484:	00a00034 	movhi	r2,32768
  80e488:	10bfff84 	addi	r2,r2,-2
  80e48c:	e0fffd17 	ldw	r3,-12(fp)
  80e490:	18800115 	stw	r2,4(r3)
      rc = 0;
  80e494:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80e498:	00000f06 	br	80e4d8 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  80e49c:	e0bffd17 	ldw	r2,-12(fp)
  80e4a0:	10c00117 	ldw	r3,4(r2)
  80e4a4:	00a00034 	movhi	r2,32768
  80e4a8:	10bfffc4 	addi	r2,r2,-1
  80e4ac:	18800c26 	beq	r3,r2,80e4e0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80e4b0:	e0bffd17 	ldw	r2,-12(fp)
  80e4b4:	10c00917 	ldw	r3,36(r2)
  80e4b8:	e0bffd17 	ldw	r2,-12(fp)
  80e4bc:	10800117 	ldw	r2,4(r2)
  80e4c0:	1885803a 	cmpltu	r2,r3,r2
  80e4c4:	10c03fcc 	andi	r3,r2,255
  80e4c8:	e0bfff17 	ldw	r2,-4(fp)
  80e4cc:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80e4d0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80e4d4:	00000206 	br	80e4e0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  80e4d8:	0001883a 	nop
  80e4dc:	00000106 	br	80e4e4 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  80e4e0:	0001883a 	nop

  default:
    break;
  }

  return rc;
  80e4e4:	e0bffb17 	ldw	r2,-20(fp)
}
  80e4e8:	e037883a 	mov	sp,fp
  80e4ec:	df000017 	ldw	fp,0(sp)
  80e4f0:	dec00104 	addi	sp,sp,4
  80e4f4:	f800283a 	ret

0080e4f8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80e4f8:	defff304 	addi	sp,sp,-52
  80e4fc:	dfc00c15 	stw	ra,48(sp)
  80e500:	df000b15 	stw	fp,44(sp)
  80e504:	df000b04 	addi	fp,sp,44
  80e508:	e13ffc15 	stw	r4,-16(fp)
  80e50c:	e17ffd15 	stw	r5,-12(fp)
  80e510:	e1bffe15 	stw	r6,-8(fp)
  80e514:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  80e518:	e0bffd17 	ldw	r2,-12(fp)
  80e51c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e520:	00004706 	br	80e640 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80e524:	e0bffc17 	ldw	r2,-16(fp)
  80e528:	10800a17 	ldw	r2,40(r2)
  80e52c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  80e530:	e0bffc17 	ldw	r2,-16(fp)
  80e534:	10800b17 	ldw	r2,44(r2)
  80e538:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  80e53c:	e0fff717 	ldw	r3,-36(fp)
  80e540:	e0bff817 	ldw	r2,-32(fp)
  80e544:	18800536 	bltu	r3,r2,80e55c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80e548:	e0fff717 	ldw	r3,-36(fp)
  80e54c:	e0bff817 	ldw	r2,-32(fp)
  80e550:	1885c83a 	sub	r2,r3,r2
  80e554:	e0bff615 	stw	r2,-40(fp)
  80e558:	00000406 	br	80e56c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80e55c:	00c20004 	movi	r3,2048
  80e560:	e0bff817 	ldw	r2,-32(fp)
  80e564:	1885c83a 	sub	r2,r3,r2
  80e568:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80e56c:	e0bff617 	ldw	r2,-40(fp)
  80e570:	10001e26 	beq	r2,zero,80e5ec <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80e574:	e0fffe17 	ldw	r3,-8(fp)
  80e578:	e0bff617 	ldw	r2,-40(fp)
  80e57c:	1880022e 	bgeu	r3,r2,80e588 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80e580:	e0bffe17 	ldw	r2,-8(fp)
  80e584:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80e588:	e0bffc17 	ldw	r2,-16(fp)
  80e58c:	10c00e04 	addi	r3,r2,56
  80e590:	e0bff817 	ldw	r2,-32(fp)
  80e594:	1885883a 	add	r2,r3,r2
  80e598:	e1bff617 	ldw	r6,-40(fp)
  80e59c:	100b883a 	mov	r5,r2
  80e5a0:	e13ff517 	ldw	r4,-44(fp)
  80e5a4:	08060fc0 	call	8060fc <memcpy>
      ptr   += n;
  80e5a8:	e0fff517 	ldw	r3,-44(fp)
  80e5ac:	e0bff617 	ldw	r2,-40(fp)
  80e5b0:	1885883a 	add	r2,r3,r2
  80e5b4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  80e5b8:	e0fffe17 	ldw	r3,-8(fp)
  80e5bc:	e0bff617 	ldw	r2,-40(fp)
  80e5c0:	1885c83a 	sub	r2,r3,r2
  80e5c4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e5c8:	e0fff817 	ldw	r3,-32(fp)
  80e5cc:	e0bff617 	ldw	r2,-40(fp)
  80e5d0:	1885883a 	add	r2,r3,r2
  80e5d4:	10c1ffcc 	andi	r3,r2,2047
  80e5d8:	e0bffc17 	ldw	r2,-16(fp)
  80e5dc:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80e5e0:	e0bffe17 	ldw	r2,-8(fp)
  80e5e4:	00bfcf16 	blt	zero,r2,80e524 <__alt_data_end+0xff80e524>
  80e5e8:	00000106 	br	80e5f0 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  80e5ec:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  80e5f0:	e0fff517 	ldw	r3,-44(fp)
  80e5f4:	e0bffd17 	ldw	r2,-12(fp)
  80e5f8:	1880141e 	bne	r3,r2,80e64c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80e5fc:	e0bfff17 	ldw	r2,-4(fp)
  80e600:	1090000c 	andi	r2,r2,16384
  80e604:	1000131e 	bne	r2,zero,80e654 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80e608:	0001883a 	nop
  80e60c:	e0bffc17 	ldw	r2,-16(fp)
  80e610:	10c00a17 	ldw	r3,40(r2)
  80e614:	e0bff717 	ldw	r2,-36(fp)
  80e618:	1880051e 	bne	r3,r2,80e630 <altera_avalon_jtag_uart_read+0x138>
  80e61c:	e0bffc17 	ldw	r2,-16(fp)
  80e620:	10c00917 	ldw	r3,36(r2)
  80e624:	e0bffc17 	ldw	r2,-16(fp)
  80e628:	10800117 	ldw	r2,4(r2)
  80e62c:	18bff736 	bltu	r3,r2,80e60c <__alt_data_end+0xff80e60c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80e630:	e0bffc17 	ldw	r2,-16(fp)
  80e634:	10c00a17 	ldw	r3,40(r2)
  80e638:	e0bff717 	ldw	r2,-36(fp)
  80e63c:	18800726 	beq	r3,r2,80e65c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e640:	e0bffe17 	ldw	r2,-8(fp)
  80e644:	00bfb716 	blt	zero,r2,80e524 <__alt_data_end+0xff80e524>
  80e648:	00000506 	br	80e660 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  80e64c:	0001883a 	nop
  80e650:	00000306 	br	80e660 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  80e654:	0001883a 	nop
  80e658:	00000106 	br	80e660 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  80e65c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80e660:	e0fff517 	ldw	r3,-44(fp)
  80e664:	e0bffd17 	ldw	r2,-12(fp)
  80e668:	18801826 	beq	r3,r2,80e6cc <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e66c:	0005303a 	rdctl	r2,status
  80e670:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e674:	e0fffb17 	ldw	r3,-20(fp)
  80e678:	00bfff84 	movi	r2,-2
  80e67c:	1884703a 	and	r2,r3,r2
  80e680:	1001703a 	wrctl	status,r2
  
  return context;
  80e684:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80e688:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e68c:	e0bffc17 	ldw	r2,-16(fp)
  80e690:	10800817 	ldw	r2,32(r2)
  80e694:	10c00054 	ori	r3,r2,1
  80e698:	e0bffc17 	ldw	r2,-16(fp)
  80e69c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e6a0:	e0bffc17 	ldw	r2,-16(fp)
  80e6a4:	10800017 	ldw	r2,0(r2)
  80e6a8:	10800104 	addi	r2,r2,4
  80e6ac:	1007883a 	mov	r3,r2
  80e6b0:	e0bffc17 	ldw	r2,-16(fp)
  80e6b4:	10800817 	ldw	r2,32(r2)
  80e6b8:	18800035 	stwio	r2,0(r3)
  80e6bc:	e0bffa17 	ldw	r2,-24(fp)
  80e6c0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e6c4:	e0bff917 	ldw	r2,-28(fp)
  80e6c8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80e6cc:	e0fff517 	ldw	r3,-44(fp)
  80e6d0:	e0bffd17 	ldw	r2,-12(fp)
  80e6d4:	18800426 	beq	r3,r2,80e6e8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  80e6d8:	e0fff517 	ldw	r3,-44(fp)
  80e6dc:	e0bffd17 	ldw	r2,-12(fp)
  80e6e0:	1885c83a 	sub	r2,r3,r2
  80e6e4:	00000606 	br	80e700 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  80e6e8:	e0bfff17 	ldw	r2,-4(fp)
  80e6ec:	1090000c 	andi	r2,r2,16384
  80e6f0:	10000226 	beq	r2,zero,80e6fc <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  80e6f4:	00bffd44 	movi	r2,-11
  80e6f8:	00000106 	br	80e700 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  80e6fc:	00bffec4 	movi	r2,-5
}
  80e700:	e037883a 	mov	sp,fp
  80e704:	dfc00117 	ldw	ra,4(sp)
  80e708:	df000017 	ldw	fp,0(sp)
  80e70c:	dec00204 	addi	sp,sp,8
  80e710:	f800283a 	ret

0080e714 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80e714:	defff304 	addi	sp,sp,-52
  80e718:	dfc00c15 	stw	ra,48(sp)
  80e71c:	df000b15 	stw	fp,44(sp)
  80e720:	df000b04 	addi	fp,sp,44
  80e724:	e13ffc15 	stw	r4,-16(fp)
  80e728:	e17ffd15 	stw	r5,-12(fp)
  80e72c:	e1bffe15 	stw	r6,-8(fp)
  80e730:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80e734:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80e738:	e0bffd17 	ldw	r2,-12(fp)
  80e73c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e740:	00003706 	br	80e820 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80e744:	e0bffc17 	ldw	r2,-16(fp)
  80e748:	10800c17 	ldw	r2,48(r2)
  80e74c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  80e750:	e0bffc17 	ldw	r2,-16(fp)
  80e754:	10800d17 	ldw	r2,52(r2)
  80e758:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  80e75c:	e0fff917 	ldw	r3,-28(fp)
  80e760:	e0bff517 	ldw	r2,-44(fp)
  80e764:	1880062e 	bgeu	r3,r2,80e780 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80e768:	e0fff517 	ldw	r3,-44(fp)
  80e76c:	e0bff917 	ldw	r2,-28(fp)
  80e770:	1885c83a 	sub	r2,r3,r2
  80e774:	10bfffc4 	addi	r2,r2,-1
  80e778:	e0bff615 	stw	r2,-40(fp)
  80e77c:	00000b06 	br	80e7ac <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80e780:	e0bff517 	ldw	r2,-44(fp)
  80e784:	10000526 	beq	r2,zero,80e79c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80e788:	00c20004 	movi	r3,2048
  80e78c:	e0bff917 	ldw	r2,-28(fp)
  80e790:	1885c83a 	sub	r2,r3,r2
  80e794:	e0bff615 	stw	r2,-40(fp)
  80e798:	00000406 	br	80e7ac <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80e79c:	00c1ffc4 	movi	r3,2047
  80e7a0:	e0bff917 	ldw	r2,-28(fp)
  80e7a4:	1885c83a 	sub	r2,r3,r2
  80e7a8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80e7ac:	e0bff617 	ldw	r2,-40(fp)
  80e7b0:	10001e26 	beq	r2,zero,80e82c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80e7b4:	e0fffe17 	ldw	r3,-8(fp)
  80e7b8:	e0bff617 	ldw	r2,-40(fp)
  80e7bc:	1880022e 	bgeu	r3,r2,80e7c8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80e7c0:	e0bffe17 	ldw	r2,-8(fp)
  80e7c4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80e7c8:	e0bffc17 	ldw	r2,-16(fp)
  80e7cc:	10c20e04 	addi	r3,r2,2104
  80e7d0:	e0bff917 	ldw	r2,-28(fp)
  80e7d4:	1885883a 	add	r2,r3,r2
  80e7d8:	e1bff617 	ldw	r6,-40(fp)
  80e7dc:	e17ffd17 	ldw	r5,-12(fp)
  80e7e0:	1009883a 	mov	r4,r2
  80e7e4:	08060fc0 	call	8060fc <memcpy>
      ptr   += n;
  80e7e8:	e0fffd17 	ldw	r3,-12(fp)
  80e7ec:	e0bff617 	ldw	r2,-40(fp)
  80e7f0:	1885883a 	add	r2,r3,r2
  80e7f4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  80e7f8:	e0fffe17 	ldw	r3,-8(fp)
  80e7fc:	e0bff617 	ldw	r2,-40(fp)
  80e800:	1885c83a 	sub	r2,r3,r2
  80e804:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e808:	e0fff917 	ldw	r3,-28(fp)
  80e80c:	e0bff617 	ldw	r2,-40(fp)
  80e810:	1885883a 	add	r2,r3,r2
  80e814:	10c1ffcc 	andi	r3,r2,2047
  80e818:	e0bffc17 	ldw	r2,-16(fp)
  80e81c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e820:	e0bffe17 	ldw	r2,-8(fp)
  80e824:	00bfc716 	blt	zero,r2,80e744 <__alt_data_end+0xff80e744>
  80e828:	00000106 	br	80e830 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  80e82c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e830:	0005303a 	rdctl	r2,status
  80e834:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e838:	e0fffb17 	ldw	r3,-20(fp)
  80e83c:	00bfff84 	movi	r2,-2
  80e840:	1884703a 	and	r2,r3,r2
  80e844:	1001703a 	wrctl	status,r2
  
  return context;
  80e848:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80e84c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e850:	e0bffc17 	ldw	r2,-16(fp)
  80e854:	10800817 	ldw	r2,32(r2)
  80e858:	10c00094 	ori	r3,r2,2
  80e85c:	e0bffc17 	ldw	r2,-16(fp)
  80e860:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e864:	e0bffc17 	ldw	r2,-16(fp)
  80e868:	10800017 	ldw	r2,0(r2)
  80e86c:	10800104 	addi	r2,r2,4
  80e870:	1007883a 	mov	r3,r2
  80e874:	e0bffc17 	ldw	r2,-16(fp)
  80e878:	10800817 	ldw	r2,32(r2)
  80e87c:	18800035 	stwio	r2,0(r3)
  80e880:	e0bffa17 	ldw	r2,-24(fp)
  80e884:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e888:	e0bff817 	ldw	r2,-32(fp)
  80e88c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80e890:	e0bffe17 	ldw	r2,-8(fp)
  80e894:	0080100e 	bge	zero,r2,80e8d8 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  80e898:	e0bfff17 	ldw	r2,-4(fp)
  80e89c:	1090000c 	andi	r2,r2,16384
  80e8a0:	1000101e 	bne	r2,zero,80e8e4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80e8a4:	0001883a 	nop
  80e8a8:	e0bffc17 	ldw	r2,-16(fp)
  80e8ac:	10c00d17 	ldw	r3,52(r2)
  80e8b0:	e0bff517 	ldw	r2,-44(fp)
  80e8b4:	1880051e 	bne	r3,r2,80e8cc <altera_avalon_jtag_uart_write+0x1b8>
  80e8b8:	e0bffc17 	ldw	r2,-16(fp)
  80e8bc:	10c00917 	ldw	r3,36(r2)
  80e8c0:	e0bffc17 	ldw	r2,-16(fp)
  80e8c4:	10800117 	ldw	r2,4(r2)
  80e8c8:	18bff736 	bltu	r3,r2,80e8a8 <__alt_data_end+0xff80e8a8>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80e8cc:	e0bffc17 	ldw	r2,-16(fp)
  80e8d0:	10800917 	ldw	r2,36(r2)
  80e8d4:	1000051e 	bne	r2,zero,80e8ec <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  80e8d8:	e0bffe17 	ldw	r2,-8(fp)
  80e8dc:	00bfd016 	blt	zero,r2,80e820 <__alt_data_end+0xff80e820>
  80e8e0:	00000306 	br	80e8f0 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  80e8e4:	0001883a 	nop
  80e8e8:	00000106 	br	80e8f0 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  80e8ec:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80e8f0:	e0fffd17 	ldw	r3,-12(fp)
  80e8f4:	e0bff717 	ldw	r2,-36(fp)
  80e8f8:	18800426 	beq	r3,r2,80e90c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  80e8fc:	e0fffd17 	ldw	r3,-12(fp)
  80e900:	e0bff717 	ldw	r2,-36(fp)
  80e904:	1885c83a 	sub	r2,r3,r2
  80e908:	00000606 	br	80e924 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  80e90c:	e0bfff17 	ldw	r2,-4(fp)
  80e910:	1090000c 	andi	r2,r2,16384
  80e914:	10000226 	beq	r2,zero,80e920 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  80e918:	00bffd44 	movi	r2,-11
  80e91c:	00000106 	br	80e924 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80e920:	00bffec4 	movi	r2,-5
}
  80e924:	e037883a 	mov	sp,fp
  80e928:	dfc00117 	ldw	ra,4(sp)
  80e92c:	df000017 	ldw	fp,0(sp)
  80e930:	dec00204 	addi	sp,sp,8
  80e934:	f800283a 	ret

0080e938 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80e938:	defffa04 	addi	sp,sp,-24
  80e93c:	dfc00515 	stw	ra,20(sp)
  80e940:	df000415 	stw	fp,16(sp)
  80e944:	df000404 	addi	fp,sp,16
  80e948:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80e94c:	0007883a 	mov	r3,zero
  80e950:	e0bfff17 	ldw	r2,-4(fp)
  80e954:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80e958:	e0bfff17 	ldw	r2,-4(fp)
  80e95c:	10800104 	addi	r2,r2,4
  80e960:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e964:	0005303a 	rdctl	r2,status
  80e968:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e96c:	e0fffd17 	ldw	r3,-12(fp)
  80e970:	00bfff84 	movi	r2,-2
  80e974:	1884703a 	and	r2,r3,r2
  80e978:	1001703a 	wrctl	status,r2
  
  return context;
  80e97c:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80e980:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  80e984:	080f4f40 	call	80f4f4 <alt_tick>
  80e988:	e0bffc17 	ldw	r2,-16(fp)
  80e98c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e990:	e0bffe17 	ldw	r2,-8(fp)
  80e994:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  80e998:	0001883a 	nop
  80e99c:	e037883a 	mov	sp,fp
  80e9a0:	dfc00117 	ldw	ra,4(sp)
  80e9a4:	df000017 	ldw	fp,0(sp)
  80e9a8:	dec00204 	addi	sp,sp,8
  80e9ac:	f800283a 	ret

0080e9b0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80e9b0:	defff804 	addi	sp,sp,-32
  80e9b4:	dfc00715 	stw	ra,28(sp)
  80e9b8:	df000615 	stw	fp,24(sp)
  80e9bc:	df000604 	addi	fp,sp,24
  80e9c0:	e13ffc15 	stw	r4,-16(fp)
  80e9c4:	e17ffd15 	stw	r5,-12(fp)
  80e9c8:	e1bffe15 	stw	r6,-8(fp)
  80e9cc:	e1ffff15 	stw	r7,-4(fp)
  80e9d0:	e0bfff17 	ldw	r2,-4(fp)
  80e9d4:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80e9d8:	00802074 	movhi	r2,129
  80e9dc:	108d7504 	addi	r2,r2,13780
  80e9e0:	10800017 	ldw	r2,0(r2)
  80e9e4:	1000041e 	bne	r2,zero,80e9f8 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
  80e9e8:	00802074 	movhi	r2,129
  80e9ec:	108d7504 	addi	r2,r2,13780
  80e9f0:	e0fffb17 	ldw	r3,-20(fp)
  80e9f4:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80e9f8:	e0bffc17 	ldw	r2,-16(fp)
  80e9fc:	10800104 	addi	r2,r2,4
  80ea00:	00c001c4 	movi	r3,7
  80ea04:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80ea08:	d8000015 	stw	zero,0(sp)
  80ea0c:	e1fffc17 	ldw	r7,-16(fp)
  80ea10:	01802074 	movhi	r6,129
  80ea14:	31ba4e04 	addi	r6,r6,-5832
  80ea18:	e17ffe17 	ldw	r5,-8(fp)
  80ea1c:	e13ffd17 	ldw	r4,-12(fp)
  80ea20:	080ed840 	call	80ed84 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80ea24:	0001883a 	nop
  80ea28:	e037883a 	mov	sp,fp
  80ea2c:	dfc00117 	ldw	ra,4(sp)
  80ea30:	df000017 	ldw	fp,0(sp)
  80ea34:	dec00204 	addi	sp,sp,8
  80ea38:	f800283a 	ret

0080ea3c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80ea3c:	defff504 	addi	sp,sp,-44
  80ea40:	df000a15 	stw	fp,40(sp)
  80ea44:	df000a04 	addi	fp,sp,40
  80ea48:	e13ffc15 	stw	r4,-16(fp)
  80ea4c:	e17ffd15 	stw	r5,-12(fp)
  80ea50:	e1bffe15 	stw	r6,-8(fp)
  80ea54:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80ea58:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80ea5c:	00802074 	movhi	r2,129
  80ea60:	108d7504 	addi	r2,r2,13780
  80ea64:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
  80ea68:	10003f26 	beq	r2,zero,80eb68 <alt_alarm_start+0x12c>
  {
    if (alarm)
  80ea6c:	e0bffc17 	ldw	r2,-16(fp)
  80ea70:	10003b26 	beq	r2,zero,80eb60 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
  80ea74:	e0bffc17 	ldw	r2,-16(fp)
  80ea78:	e0fffe17 	ldw	r3,-8(fp)
  80ea7c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80ea80:	e0bffc17 	ldw	r2,-16(fp)
  80ea84:	e0ffff17 	ldw	r3,-4(fp)
  80ea88:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ea8c:	0005303a 	rdctl	r2,status
  80ea90:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ea94:	e0fff917 	ldw	r3,-28(fp)
  80ea98:	00bfff84 	movi	r2,-2
  80ea9c:	1884703a 	and	r2,r3,r2
  80eaa0:	1001703a 	wrctl	status,r2
  
  return context;
  80eaa4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  80eaa8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80eaac:	00802074 	movhi	r2,129
  80eab0:	108d7604 	addi	r2,r2,13784
  80eab4:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
  80eab8:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80eabc:	e0fffd17 	ldw	r3,-12(fp)
  80eac0:	e0bff617 	ldw	r2,-40(fp)
  80eac4:	1885883a 	add	r2,r3,r2
  80eac8:	10c00044 	addi	r3,r2,1
  80eacc:	e0bffc17 	ldw	r2,-16(fp)
  80ead0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80ead4:	e0bffc17 	ldw	r2,-16(fp)
  80ead8:	10c00217 	ldw	r3,8(r2)
  80eadc:	e0bff617 	ldw	r2,-40(fp)
  80eae0:	1880042e 	bgeu	r3,r2,80eaf4 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
  80eae4:	e0bffc17 	ldw	r2,-16(fp)
  80eae8:	00c00044 	movi	r3,1
  80eaec:	10c00405 	stb	r3,16(r2)
  80eaf0:	00000206 	br	80eafc <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
  80eaf4:	e0bffc17 	ldw	r2,-16(fp)
  80eaf8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80eafc:	e0fffc17 	ldw	r3,-16(fp)
  80eb00:	00802074 	movhi	r2,129
  80eb04:	1086ad04 	addi	r2,r2,6836
  80eb08:	e0bffa15 	stw	r2,-24(fp)
  80eb0c:	e0fffb15 	stw	r3,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80eb10:	e0bffb17 	ldw	r2,-20(fp)
  80eb14:	e0fffa17 	ldw	r3,-24(fp)
  80eb18:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80eb1c:	e0bffa17 	ldw	r2,-24(fp)
  80eb20:	10c00017 	ldw	r3,0(r2)
  80eb24:	e0bffb17 	ldw	r2,-20(fp)
  80eb28:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80eb2c:	e0bffa17 	ldw	r2,-24(fp)
  80eb30:	10800017 	ldw	r2,0(r2)
  80eb34:	e0fffb17 	ldw	r3,-20(fp)
  80eb38:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80eb3c:	e0bffa17 	ldw	r2,-24(fp)
  80eb40:	e0fffb17 	ldw	r3,-20(fp)
  80eb44:	10c00015 	stw	r3,0(r2)
  80eb48:	e0bff817 	ldw	r2,-32(fp)
  80eb4c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80eb50:	e0bff717 	ldw	r2,-36(fp)
  80eb54:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  80eb58:	0005883a 	mov	r2,zero
  80eb5c:	00000306 	br	80eb6c <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
  80eb60:	00bffa84 	movi	r2,-22
  80eb64:	00000106 	br	80eb6c <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
  80eb68:	00bfde84 	movi	r2,-134
  }
}
  80eb6c:	e037883a 	mov	sp,fp
  80eb70:	df000017 	ldw	fp,0(sp)
  80eb74:	dec00104 	addi	sp,sp,4
  80eb78:	f800283a 	ret

0080eb7c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80eb7c:	deffff04 	addi	sp,sp,-4
  80eb80:	df000015 	stw	fp,0(sp)
  80eb84:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80eb88:	0001883a 	nop
  80eb8c:	e037883a 	mov	sp,fp
  80eb90:	df000017 	ldw	fp,0(sp)
  80eb94:	dec00104 	addi	sp,sp,4
  80eb98:	f800283a 	ret

0080eb9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80eb9c:	defffe04 	addi	sp,sp,-8
  80eba0:	dfc00115 	stw	ra,4(sp)
  80eba4:	df000015 	stw	fp,0(sp)
  80eba8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ebac:	00802074 	movhi	r2,129
  80ebb0:	1086aa04 	addi	r2,r2,6824
  80ebb4:	10800017 	ldw	r2,0(r2)
  80ebb8:	10000526 	beq	r2,zero,80ebd0 <alt_get_errno+0x34>
  80ebbc:	00802074 	movhi	r2,129
  80ebc0:	1086aa04 	addi	r2,r2,6824
  80ebc4:	10800017 	ldw	r2,0(r2)
  80ebc8:	103ee83a 	callr	r2
  80ebcc:	00000206 	br	80ebd8 <alt_get_errno+0x3c>
  80ebd0:	00802074 	movhi	r2,129
  80ebd4:	108d7004 	addi	r2,r2,13760
}
  80ebd8:	e037883a 	mov	sp,fp
  80ebdc:	dfc00117 	ldw	ra,4(sp)
  80ebe0:	df000017 	ldw	fp,0(sp)
  80ebe4:	dec00204 	addi	sp,sp,8
  80ebe8:	f800283a 	ret

0080ebec <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80ebec:	defffa04 	addi	sp,sp,-24
  80ebf0:	dfc00515 	stw	ra,20(sp)
  80ebf4:	df000415 	stw	fp,16(sp)
  80ebf8:	df000404 	addi	fp,sp,16
  80ebfc:	e13ffe15 	stw	r4,-8(fp)
  80ec00:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80ec04:	e0bffe17 	ldw	r2,-8(fp)
  80ec08:	10000326 	beq	r2,zero,80ec18 <alt_dev_llist_insert+0x2c>
  80ec0c:	e0bffe17 	ldw	r2,-8(fp)
  80ec10:	10800217 	ldw	r2,8(r2)
  80ec14:	1000061e 	bne	r2,zero,80ec30 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80ec18:	080eb9c0 	call	80eb9c <alt_get_errno>
  80ec1c:	1007883a 	mov	r3,r2
  80ec20:	00800584 	movi	r2,22
  80ec24:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80ec28:	00bffa84 	movi	r2,-22
  80ec2c:	00001306 	br	80ec7c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80ec30:	e0bffe17 	ldw	r2,-8(fp)
  80ec34:	e0ffff17 	ldw	r3,-4(fp)
  80ec38:	e0fffc15 	stw	r3,-16(fp)
  80ec3c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80ec40:	e0bffd17 	ldw	r2,-12(fp)
  80ec44:	e0fffc17 	ldw	r3,-16(fp)
  80ec48:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80ec4c:	e0bffc17 	ldw	r2,-16(fp)
  80ec50:	10c00017 	ldw	r3,0(r2)
  80ec54:	e0bffd17 	ldw	r2,-12(fp)
  80ec58:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80ec5c:	e0bffc17 	ldw	r2,-16(fp)
  80ec60:	10800017 	ldw	r2,0(r2)
  80ec64:	e0fffd17 	ldw	r3,-12(fp)
  80ec68:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80ec6c:	e0bffc17 	ldw	r2,-16(fp)
  80ec70:	e0fffd17 	ldw	r3,-12(fp)
  80ec74:	10c00015 	stw	r3,0(r2)

  return 0;  
  80ec78:	0005883a 	mov	r2,zero
}
  80ec7c:	e037883a 	mov	sp,fp
  80ec80:	dfc00117 	ldw	ra,4(sp)
  80ec84:	df000017 	ldw	fp,0(sp)
  80ec88:	dec00204 	addi	sp,sp,8
  80ec8c:	f800283a 	ret

0080ec90 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80ec90:	defffd04 	addi	sp,sp,-12
  80ec94:	dfc00215 	stw	ra,8(sp)
  80ec98:	df000115 	stw	fp,4(sp)
  80ec9c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80eca0:	00802074 	movhi	r2,129
  80eca4:	10bf2e04 	addi	r2,r2,-840
  80eca8:	e0bfff15 	stw	r2,-4(fp)
  80ecac:	00000606 	br	80ecc8 <_do_ctors+0x38>
        (*ctor) (); 
  80ecb0:	e0bfff17 	ldw	r2,-4(fp)
  80ecb4:	10800017 	ldw	r2,0(r2)
  80ecb8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80ecbc:	e0bfff17 	ldw	r2,-4(fp)
  80ecc0:	10bfff04 	addi	r2,r2,-4
  80ecc4:	e0bfff15 	stw	r2,-4(fp)
  80ecc8:	e0ffff17 	ldw	r3,-4(fp)
  80eccc:	00802074 	movhi	r2,129
  80ecd0:	10bf2f04 	addi	r2,r2,-836
  80ecd4:	18bff62e 	bgeu	r3,r2,80ecb0 <__alt_data_end+0xff80ecb0>
        (*ctor) (); 
}
  80ecd8:	0001883a 	nop
  80ecdc:	e037883a 	mov	sp,fp
  80ece0:	dfc00117 	ldw	ra,4(sp)
  80ece4:	df000017 	ldw	fp,0(sp)
  80ece8:	dec00204 	addi	sp,sp,8
  80ecec:	f800283a 	ret

0080ecf0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80ecf0:	defffd04 	addi	sp,sp,-12
  80ecf4:	dfc00215 	stw	ra,8(sp)
  80ecf8:	df000115 	stw	fp,4(sp)
  80ecfc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ed00:	00802074 	movhi	r2,129
  80ed04:	10bf2e04 	addi	r2,r2,-840
  80ed08:	e0bfff15 	stw	r2,-4(fp)
  80ed0c:	00000606 	br	80ed28 <_do_dtors+0x38>
        (*dtor) (); 
  80ed10:	e0bfff17 	ldw	r2,-4(fp)
  80ed14:	10800017 	ldw	r2,0(r2)
  80ed18:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ed1c:	e0bfff17 	ldw	r2,-4(fp)
  80ed20:	10bfff04 	addi	r2,r2,-4
  80ed24:	e0bfff15 	stw	r2,-4(fp)
  80ed28:	e0ffff17 	ldw	r3,-4(fp)
  80ed2c:	00802074 	movhi	r2,129
  80ed30:	10bf2f04 	addi	r2,r2,-836
  80ed34:	18bff62e 	bgeu	r3,r2,80ed10 <__alt_data_end+0xff80ed10>
        (*dtor) (); 
}
  80ed38:	0001883a 	nop
  80ed3c:	e037883a 	mov	sp,fp
  80ed40:	dfc00117 	ldw	ra,4(sp)
  80ed44:	df000017 	ldw	fp,0(sp)
  80ed48:	dec00204 	addi	sp,sp,8
  80ed4c:	f800283a 	ret

0080ed50 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80ed50:	defffe04 	addi	sp,sp,-8
  80ed54:	dfc00115 	stw	ra,4(sp)
  80ed58:	df000015 	stw	fp,0(sp)
  80ed5c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80ed60:	01500004 	movi	r5,16384
  80ed64:	0009883a 	mov	r4,zero
  80ed68:	080f8980 	call	80f898 <alt_icache_flush>
#endif
}
  80ed6c:	0001883a 	nop
  80ed70:	e037883a 	mov	sp,fp
  80ed74:	dfc00117 	ldw	ra,4(sp)
  80ed78:	df000017 	ldw	fp,0(sp)
  80ed7c:	dec00204 	addi	sp,sp,8
  80ed80:	f800283a 	ret

0080ed84 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80ed84:	defff904 	addi	sp,sp,-28
  80ed88:	dfc00615 	stw	ra,24(sp)
  80ed8c:	df000515 	stw	fp,20(sp)
  80ed90:	df000504 	addi	fp,sp,20
  80ed94:	e13ffc15 	stw	r4,-16(fp)
  80ed98:	e17ffd15 	stw	r5,-12(fp)
  80ed9c:	e1bffe15 	stw	r6,-8(fp)
  80eda0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80eda4:	e0800217 	ldw	r2,8(fp)
  80eda8:	d8800015 	stw	r2,0(sp)
  80edac:	e1ffff17 	ldw	r7,-4(fp)
  80edb0:	e1bffe17 	ldw	r6,-8(fp)
  80edb4:	e17ffd17 	ldw	r5,-12(fp)
  80edb8:	e13ffc17 	ldw	r4,-16(fp)
  80edbc:	080ef640 	call	80ef64 <alt_iic_isr_register>
}  
  80edc0:	e037883a 	mov	sp,fp
  80edc4:	dfc00117 	ldw	ra,4(sp)
  80edc8:	df000017 	ldw	fp,0(sp)
  80edcc:	dec00204 	addi	sp,sp,8
  80edd0:	f800283a 	ret

0080edd4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80edd4:	defff904 	addi	sp,sp,-28
  80edd8:	df000615 	stw	fp,24(sp)
  80eddc:	df000604 	addi	fp,sp,24
  80ede0:	e13ffe15 	stw	r4,-8(fp)
  80ede4:	e17fff15 	stw	r5,-4(fp)
  80ede8:	e0bfff17 	ldw	r2,-4(fp)
  80edec:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80edf0:	0005303a 	rdctl	r2,status
  80edf4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80edf8:	e0fffb17 	ldw	r3,-20(fp)
  80edfc:	00bfff84 	movi	r2,-2
  80ee00:	1884703a 	and	r2,r3,r2
  80ee04:	1001703a 	wrctl	status,r2
  
  return context;
  80ee08:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80ee0c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  80ee10:	00c00044 	movi	r3,1
  80ee14:	e0bffa17 	ldw	r2,-24(fp)
  80ee18:	1884983a 	sll	r2,r3,r2
  80ee1c:	1007883a 	mov	r3,r2
  80ee20:	00802074 	movhi	r2,129
  80ee24:	108d7404 	addi	r2,r2,13776
  80ee28:	10800017 	ldw	r2,0(r2)
  80ee2c:	1886b03a 	or	r3,r3,r2
  80ee30:	00802074 	movhi	r2,129
  80ee34:	108d7404 	addi	r2,r2,13776
  80ee38:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80ee3c:	00802074 	movhi	r2,129
  80ee40:	108d7404 	addi	r2,r2,13776
  80ee44:	10800017 	ldw	r2,0(r2)
  80ee48:	100170fa 	wrctl	ienable,r2
  80ee4c:	e0bffc17 	ldw	r2,-16(fp)
  80ee50:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ee54:	e0bffd17 	ldw	r2,-12(fp)
  80ee58:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80ee5c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  80ee60:	0001883a 	nop
}
  80ee64:	e037883a 	mov	sp,fp
  80ee68:	df000017 	ldw	fp,0(sp)
  80ee6c:	dec00104 	addi	sp,sp,4
  80ee70:	f800283a 	ret

0080ee74 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80ee74:	defff904 	addi	sp,sp,-28
  80ee78:	df000615 	stw	fp,24(sp)
  80ee7c:	df000604 	addi	fp,sp,24
  80ee80:	e13ffe15 	stw	r4,-8(fp)
  80ee84:	e17fff15 	stw	r5,-4(fp)
  80ee88:	e0bfff17 	ldw	r2,-4(fp)
  80ee8c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ee90:	0005303a 	rdctl	r2,status
  80ee94:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ee98:	e0fffb17 	ldw	r3,-20(fp)
  80ee9c:	00bfff84 	movi	r2,-2
  80eea0:	1884703a 	and	r2,r3,r2
  80eea4:	1001703a 	wrctl	status,r2
  
  return context;
  80eea8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80eeac:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  80eeb0:	00c00044 	movi	r3,1
  80eeb4:	e0bffa17 	ldw	r2,-24(fp)
  80eeb8:	1884983a 	sll	r2,r3,r2
  80eebc:	0084303a 	nor	r2,zero,r2
  80eec0:	1007883a 	mov	r3,r2
  80eec4:	00802074 	movhi	r2,129
  80eec8:	108d7404 	addi	r2,r2,13776
  80eecc:	10800017 	ldw	r2,0(r2)
  80eed0:	1886703a 	and	r3,r3,r2
  80eed4:	00802074 	movhi	r2,129
  80eed8:	108d7404 	addi	r2,r2,13776
  80eedc:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80eee0:	00802074 	movhi	r2,129
  80eee4:	108d7404 	addi	r2,r2,13776
  80eee8:	10800017 	ldw	r2,0(r2)
  80eeec:	100170fa 	wrctl	ienable,r2
  80eef0:	e0bffc17 	ldw	r2,-16(fp)
  80eef4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80eef8:	e0bffd17 	ldw	r2,-12(fp)
  80eefc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80ef00:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  80ef04:	0001883a 	nop
}
  80ef08:	e037883a 	mov	sp,fp
  80ef0c:	df000017 	ldw	fp,0(sp)
  80ef10:	dec00104 	addi	sp,sp,4
  80ef14:	f800283a 	ret

0080ef18 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80ef18:	defffc04 	addi	sp,sp,-16
  80ef1c:	df000315 	stw	fp,12(sp)
  80ef20:	df000304 	addi	fp,sp,12
  80ef24:	e13ffe15 	stw	r4,-8(fp)
  80ef28:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80ef2c:	000530fa 	rdctl	r2,ienable
  80ef30:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80ef34:	00c00044 	movi	r3,1
  80ef38:	e0bfff17 	ldw	r2,-4(fp)
  80ef3c:	1884983a 	sll	r2,r3,r2
  80ef40:	1007883a 	mov	r3,r2
  80ef44:	e0bffd17 	ldw	r2,-12(fp)
  80ef48:	1884703a 	and	r2,r3,r2
  80ef4c:	1004c03a 	cmpne	r2,r2,zero
  80ef50:	10803fcc 	andi	r2,r2,255
}
  80ef54:	e037883a 	mov	sp,fp
  80ef58:	df000017 	ldw	fp,0(sp)
  80ef5c:	dec00104 	addi	sp,sp,4
  80ef60:	f800283a 	ret

0080ef64 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80ef64:	defff504 	addi	sp,sp,-44
  80ef68:	dfc00a15 	stw	ra,40(sp)
  80ef6c:	df000915 	stw	fp,36(sp)
  80ef70:	df000904 	addi	fp,sp,36
  80ef74:	e13ffc15 	stw	r4,-16(fp)
  80ef78:	e17ffd15 	stw	r5,-12(fp)
  80ef7c:	e1bffe15 	stw	r6,-8(fp)
  80ef80:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  80ef84:	00bffa84 	movi	r2,-22
  80ef88:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80ef8c:	e0bffd17 	ldw	r2,-12(fp)
  80ef90:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80ef94:	e0bff817 	ldw	r2,-32(fp)
  80ef98:	10800808 	cmpgei	r2,r2,32
  80ef9c:	1000271e 	bne	r2,zero,80f03c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80efa0:	0005303a 	rdctl	r2,status
  80efa4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80efa8:	e0fffb17 	ldw	r3,-20(fp)
  80efac:	00bfff84 	movi	r2,-2
  80efb0:	1884703a 	and	r2,r3,r2
  80efb4:	1001703a 	wrctl	status,r2
  
  return context;
  80efb8:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80efbc:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  80efc0:	00802074 	movhi	r2,129
  80efc4:	108d8104 	addi	r2,r2,13828
  80efc8:	e0fff817 	ldw	r3,-32(fp)
  80efcc:	180690fa 	slli	r3,r3,3
  80efd0:	10c5883a 	add	r2,r2,r3
  80efd4:	e0fffe17 	ldw	r3,-8(fp)
  80efd8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  80efdc:	00802074 	movhi	r2,129
  80efe0:	108d8104 	addi	r2,r2,13828
  80efe4:	e0fff817 	ldw	r3,-32(fp)
  80efe8:	180690fa 	slli	r3,r3,3
  80efec:	10c5883a 	add	r2,r2,r3
  80eff0:	10800104 	addi	r2,r2,4
  80eff4:	e0ffff17 	ldw	r3,-4(fp)
  80eff8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80effc:	e0bffe17 	ldw	r2,-8(fp)
  80f000:	10000526 	beq	r2,zero,80f018 <alt_iic_isr_register+0xb4>
  80f004:	e0bff817 	ldw	r2,-32(fp)
  80f008:	100b883a 	mov	r5,r2
  80f00c:	e13ffc17 	ldw	r4,-16(fp)
  80f010:	080edd40 	call	80edd4 <alt_ic_irq_enable>
  80f014:	00000406 	br	80f028 <alt_iic_isr_register+0xc4>
  80f018:	e0bff817 	ldw	r2,-32(fp)
  80f01c:	100b883a 	mov	r5,r2
  80f020:	e13ffc17 	ldw	r4,-16(fp)
  80f024:	080ee740 	call	80ee74 <alt_ic_irq_disable>
  80f028:	e0bff715 	stw	r2,-36(fp)
  80f02c:	e0bffa17 	ldw	r2,-24(fp)
  80f030:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f034:	e0bff917 	ldw	r2,-28(fp)
  80f038:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  80f03c:	e0bff717 	ldw	r2,-36(fp)
}
  80f040:	e037883a 	mov	sp,fp
  80f044:	dfc00117 	ldw	ra,4(sp)
  80f048:	df000017 	ldw	fp,0(sp)
  80f04c:	dec00204 	addi	sp,sp,8
  80f050:	f800283a 	ret

0080f054 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80f054:	defff804 	addi	sp,sp,-32
  80f058:	dfc00715 	stw	ra,28(sp)
  80f05c:	df000615 	stw	fp,24(sp)
  80f060:	dc000515 	stw	r16,20(sp)
  80f064:	df000604 	addi	fp,sp,24
  80f068:	e13ffb15 	stw	r4,-20(fp)
  80f06c:	e17ffc15 	stw	r5,-16(fp)
  80f070:	e1bffd15 	stw	r6,-12(fp)
  80f074:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
  80f078:	e1bffe17 	ldw	r6,-8(fp)
  80f07c:	e17ffd17 	ldw	r5,-12(fp)
  80f080:	e13ffc17 	ldw	r4,-16(fp)
  80f084:	080f2f80 	call	80f2f8 <open>
  80f088:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
  80f08c:	e0bffa17 	ldw	r2,-24(fp)
  80f090:	10002216 	blt	r2,zero,80f11c <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
  80f094:	04002074 	movhi	r16,129
  80f098:	84022704 	addi	r16,r16,2204
  80f09c:	e0bffa17 	ldw	r2,-24(fp)
  80f0a0:	01400304 	movi	r5,12
  80f0a4:	1009883a 	mov	r4,r2
  80f0a8:	080ab7c0 	call	80ab7c <__mulsi3>
  80f0ac:	8085883a 	add	r2,r16,r2
  80f0b0:	10c00017 	ldw	r3,0(r2)
  80f0b4:	e0bffb17 	ldw	r2,-20(fp)
  80f0b8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80f0bc:	04002074 	movhi	r16,129
  80f0c0:	84022704 	addi	r16,r16,2204
  80f0c4:	e0bffa17 	ldw	r2,-24(fp)
  80f0c8:	01400304 	movi	r5,12
  80f0cc:	1009883a 	mov	r4,r2
  80f0d0:	080ab7c0 	call	80ab7c <__mulsi3>
  80f0d4:	8085883a 	add	r2,r16,r2
  80f0d8:	10800104 	addi	r2,r2,4
  80f0dc:	10c00017 	ldw	r3,0(r2)
  80f0e0:	e0bffb17 	ldw	r2,-20(fp)
  80f0e4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80f0e8:	04002074 	movhi	r16,129
  80f0ec:	84022704 	addi	r16,r16,2204
  80f0f0:	e0bffa17 	ldw	r2,-24(fp)
  80f0f4:	01400304 	movi	r5,12
  80f0f8:	1009883a 	mov	r4,r2
  80f0fc:	080ab7c0 	call	80ab7c <__mulsi3>
  80f100:	8085883a 	add	r2,r16,r2
  80f104:	10800204 	addi	r2,r2,8
  80f108:	10c00017 	ldw	r3,0(r2)
  80f10c:	e0bffb17 	ldw	r2,-20(fp)
  80f110:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80f114:	e13ffa17 	ldw	r4,-24(fp)
  80f118:	080db680 	call	80db68 <alt_release_fd>
  }
} 
  80f11c:	0001883a 	nop
  80f120:	e6ffff04 	addi	sp,fp,-4
  80f124:	dfc00217 	ldw	ra,8(sp)
  80f128:	df000117 	ldw	fp,4(sp)
  80f12c:	dc000017 	ldw	r16,0(sp)
  80f130:	dec00304 	addi	sp,sp,12
  80f134:	f800283a 	ret

0080f138 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80f138:	defffb04 	addi	sp,sp,-20
  80f13c:	dfc00415 	stw	ra,16(sp)
  80f140:	df000315 	stw	fp,12(sp)
  80f144:	df000304 	addi	fp,sp,12
  80f148:	e13ffd15 	stw	r4,-12(fp)
  80f14c:	e17ffe15 	stw	r5,-8(fp)
  80f150:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80f154:	01c07fc4 	movi	r7,511
  80f158:	01800044 	movi	r6,1
  80f15c:	e17ffd17 	ldw	r5,-12(fp)
  80f160:	01002074 	movhi	r4,129
  80f164:	21022a04 	addi	r4,r4,2216
  80f168:	080f0540 	call	80f054 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80f16c:	01c07fc4 	movi	r7,511
  80f170:	000d883a 	mov	r6,zero
  80f174:	e17ffe17 	ldw	r5,-8(fp)
  80f178:	01002074 	movhi	r4,129
  80f17c:	21022704 	addi	r4,r4,2204
  80f180:	080f0540 	call	80f054 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80f184:	01c07fc4 	movi	r7,511
  80f188:	01800044 	movi	r6,1
  80f18c:	e17fff17 	ldw	r5,-4(fp)
  80f190:	01002074 	movhi	r4,129
  80f194:	21022d04 	addi	r4,r4,2228
  80f198:	080f0540 	call	80f054 <alt_open_fd>
}  
  80f19c:	0001883a 	nop
  80f1a0:	e037883a 	mov	sp,fp
  80f1a4:	dfc00117 	ldw	ra,4(sp)
  80f1a8:	df000017 	ldw	fp,0(sp)
  80f1ac:	dec00204 	addi	sp,sp,8
  80f1b0:	f800283a 	ret

0080f1b4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f1b4:	defffe04 	addi	sp,sp,-8
  80f1b8:	dfc00115 	stw	ra,4(sp)
  80f1bc:	df000015 	stw	fp,0(sp)
  80f1c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f1c4:	00802074 	movhi	r2,129
  80f1c8:	1086aa04 	addi	r2,r2,6824
  80f1cc:	10800017 	ldw	r2,0(r2)
  80f1d0:	10000526 	beq	r2,zero,80f1e8 <alt_get_errno+0x34>
  80f1d4:	00802074 	movhi	r2,129
  80f1d8:	1086aa04 	addi	r2,r2,6824
  80f1dc:	10800017 	ldw	r2,0(r2)
  80f1e0:	103ee83a 	callr	r2
  80f1e4:	00000206 	br	80f1f0 <alt_get_errno+0x3c>
  80f1e8:	00802074 	movhi	r2,129
  80f1ec:	108d7004 	addi	r2,r2,13760
}
  80f1f0:	e037883a 	mov	sp,fp
  80f1f4:	dfc00117 	ldw	ra,4(sp)
  80f1f8:	df000017 	ldw	fp,0(sp)
  80f1fc:	dec00204 	addi	sp,sp,8
  80f200:	f800283a 	ret

0080f204 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80f204:	defffb04 	addi	sp,sp,-20
  80f208:	dfc00415 	stw	ra,16(sp)
  80f20c:	df000315 	stw	fp,12(sp)
  80f210:	dc000215 	stw	r16,8(sp)
  80f214:	df000304 	addi	fp,sp,12
  80f218:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80f21c:	e0bffe17 	ldw	r2,-8(fp)
  80f220:	10800217 	ldw	r2,8(r2)
  80f224:	10d00034 	orhi	r3,r2,16384
  80f228:	e0bffe17 	ldw	r2,-8(fp)
  80f22c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80f230:	e03ffd15 	stw	zero,-12(fp)
  80f234:	00002306 	br	80f2c4 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80f238:	04002074 	movhi	r16,129
  80f23c:	84022704 	addi	r16,r16,2204
  80f240:	e0bffd17 	ldw	r2,-12(fp)
  80f244:	01400304 	movi	r5,12
  80f248:	1009883a 	mov	r4,r2
  80f24c:	080ab7c0 	call	80ab7c <__mulsi3>
  80f250:	8085883a 	add	r2,r16,r2
  80f254:	10c00017 	ldw	r3,0(r2)
  80f258:	e0bffe17 	ldw	r2,-8(fp)
  80f25c:	10800017 	ldw	r2,0(r2)
  80f260:	1880151e 	bne	r3,r2,80f2b8 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80f264:	04002074 	movhi	r16,129
  80f268:	84022704 	addi	r16,r16,2204
  80f26c:	e0bffd17 	ldw	r2,-12(fp)
  80f270:	01400304 	movi	r5,12
  80f274:	1009883a 	mov	r4,r2
  80f278:	080ab7c0 	call	80ab7c <__mulsi3>
  80f27c:	8085883a 	add	r2,r16,r2
  80f280:	10800204 	addi	r2,r2,8
  80f284:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80f288:	10000b0e 	bge	r2,zero,80f2b8 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  80f28c:	01400304 	movi	r5,12
  80f290:	e13ffd17 	ldw	r4,-12(fp)
  80f294:	080ab7c0 	call	80ab7c <__mulsi3>
  80f298:	1007883a 	mov	r3,r2
  80f29c:	00802074 	movhi	r2,129
  80f2a0:	10822704 	addi	r2,r2,2204
  80f2a4:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80f2a8:	e0bffe17 	ldw	r2,-8(fp)
  80f2ac:	18800226 	beq	r3,r2,80f2b8 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  80f2b0:	00bffcc4 	movi	r2,-13
  80f2b4:	00000a06 	br	80f2e0 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80f2b8:	e0bffd17 	ldw	r2,-12(fp)
  80f2bc:	10800044 	addi	r2,r2,1
  80f2c0:	e0bffd15 	stw	r2,-12(fp)
  80f2c4:	00802074 	movhi	r2,129
  80f2c8:	1086a904 	addi	r2,r2,6820
  80f2cc:	10800017 	ldw	r2,0(r2)
  80f2d0:	1007883a 	mov	r3,r2
  80f2d4:	e0bffd17 	ldw	r2,-12(fp)
  80f2d8:	18bfd72e 	bgeu	r3,r2,80f238 <__alt_data_end+0xff80f238>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80f2dc:	0005883a 	mov	r2,zero
}
  80f2e0:	e6ffff04 	addi	sp,fp,-4
  80f2e4:	dfc00217 	ldw	ra,8(sp)
  80f2e8:	df000117 	ldw	fp,4(sp)
  80f2ec:	dc000017 	ldw	r16,0(sp)
  80f2f0:	dec00304 	addi	sp,sp,12
  80f2f4:	f800283a 	ret

0080f2f8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80f2f8:	defff604 	addi	sp,sp,-40
  80f2fc:	dfc00915 	stw	ra,36(sp)
  80f300:	df000815 	stw	fp,32(sp)
  80f304:	df000804 	addi	fp,sp,32
  80f308:	e13ffd15 	stw	r4,-12(fp)
  80f30c:	e17ffe15 	stw	r5,-8(fp)
  80f310:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80f314:	00bfffc4 	movi	r2,-1
  80f318:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  80f31c:	00bffb44 	movi	r2,-19
  80f320:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  80f324:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80f328:	01402074 	movhi	r5,129
  80f32c:	2946a704 	addi	r5,r5,6812
  80f330:	e13ffd17 	ldw	r4,-12(fp)
  80f334:	080f6200 	call	80f620 <alt_find_dev>
  80f338:	e0bff815 	stw	r2,-32(fp)
  80f33c:	e0bff817 	ldw	r2,-32(fp)
  80f340:	1000051e 	bne	r2,zero,80f358 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80f344:	e13ffd17 	ldw	r4,-12(fp)
  80f348:	080f6b00 	call	80f6b0 <alt_find_file>
  80f34c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  80f350:	00800044 	movi	r2,1
  80f354:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80f358:	e0bff817 	ldw	r2,-32(fp)
  80f35c:	10002b26 	beq	r2,zero,80f40c <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80f360:	e13ff817 	ldw	r4,-32(fp)
  80f364:	080f7c40 	call	80f7c4 <alt_get_fd>
  80f368:	e0bff915 	stw	r2,-28(fp)
  80f36c:	e0bff917 	ldw	r2,-28(fp)
  80f370:	1000030e 	bge	r2,zero,80f380 <open+0x88>
    {
      status = index;
  80f374:	e0bff917 	ldw	r2,-28(fp)
  80f378:	e0bffa15 	stw	r2,-24(fp)
  80f37c:	00002506 	br	80f414 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
  80f380:	01400304 	movi	r5,12
  80f384:	e13ff917 	ldw	r4,-28(fp)
  80f388:	080ab7c0 	call	80ab7c <__mulsi3>
  80f38c:	1007883a 	mov	r3,r2
  80f390:	00802074 	movhi	r2,129
  80f394:	10822704 	addi	r2,r2,2204
  80f398:	1885883a 	add	r2,r3,r2
  80f39c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80f3a0:	e0fffe17 	ldw	r3,-8(fp)
  80f3a4:	00900034 	movhi	r2,16384
  80f3a8:	10bfffc4 	addi	r2,r2,-1
  80f3ac:	1886703a 	and	r3,r3,r2
  80f3b0:	e0bffc17 	ldw	r2,-16(fp)
  80f3b4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80f3b8:	e0bffb17 	ldw	r2,-20(fp)
  80f3bc:	1000051e 	bne	r2,zero,80f3d4 <open+0xdc>
  80f3c0:	e13ffc17 	ldw	r4,-16(fp)
  80f3c4:	080f2040 	call	80f204 <alt_file_locked>
  80f3c8:	e0bffa15 	stw	r2,-24(fp)
  80f3cc:	e0bffa17 	ldw	r2,-24(fp)
  80f3d0:	10001016 	blt	r2,zero,80f414 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80f3d4:	e0bff817 	ldw	r2,-32(fp)
  80f3d8:	10800317 	ldw	r2,12(r2)
  80f3dc:	10000826 	beq	r2,zero,80f400 <open+0x108>
  80f3e0:	e0bff817 	ldw	r2,-32(fp)
  80f3e4:	10800317 	ldw	r2,12(r2)
  80f3e8:	e1ffff17 	ldw	r7,-4(fp)
  80f3ec:	e1bffe17 	ldw	r6,-8(fp)
  80f3f0:	e17ffd17 	ldw	r5,-12(fp)
  80f3f4:	e13ffc17 	ldw	r4,-16(fp)
  80f3f8:	103ee83a 	callr	r2
  80f3fc:	00000106 	br	80f404 <open+0x10c>
  80f400:	0005883a 	mov	r2,zero
  80f404:	e0bffa15 	stw	r2,-24(fp)
  80f408:	00000206 	br	80f414 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80f40c:	00bffb44 	movi	r2,-19
  80f410:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80f414:	e0bffa17 	ldw	r2,-24(fp)
  80f418:	1000090e 	bge	r2,zero,80f440 <open+0x148>
  {
    alt_release_fd (index);  
  80f41c:	e13ff917 	ldw	r4,-28(fp)
  80f420:	080db680 	call	80db68 <alt_release_fd>
    ALT_ERRNO = -status;
  80f424:	080f1b40 	call	80f1b4 <alt_get_errno>
  80f428:	1007883a 	mov	r3,r2
  80f42c:	e0bffa17 	ldw	r2,-24(fp)
  80f430:	0085c83a 	sub	r2,zero,r2
  80f434:	18800015 	stw	r2,0(r3)
    return -1;
  80f438:	00bfffc4 	movi	r2,-1
  80f43c:	00000106 	br	80f444 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
  80f440:	e0bff917 	ldw	r2,-28(fp)
}
  80f444:	e037883a 	mov	sp,fp
  80f448:	dfc00117 	ldw	ra,4(sp)
  80f44c:	df000017 	ldw	fp,0(sp)
  80f450:	dec00204 	addi	sp,sp,8
  80f454:	f800283a 	ret

0080f458 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80f458:	defffa04 	addi	sp,sp,-24
  80f45c:	df000515 	stw	fp,20(sp)
  80f460:	df000504 	addi	fp,sp,20
  80f464:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f468:	0005303a 	rdctl	r2,status
  80f46c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f470:	e0fffc17 	ldw	r3,-16(fp)
  80f474:	00bfff84 	movi	r2,-2
  80f478:	1884703a 	and	r2,r3,r2
  80f47c:	1001703a 	wrctl	status,r2
  
  return context;
  80f480:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80f484:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  80f488:	e0bfff17 	ldw	r2,-4(fp)
  80f48c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80f490:	e0bffd17 	ldw	r2,-12(fp)
  80f494:	10800017 	ldw	r2,0(r2)
  80f498:	e0fffd17 	ldw	r3,-12(fp)
  80f49c:	18c00117 	ldw	r3,4(r3)
  80f4a0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  80f4a4:	e0bffd17 	ldw	r2,-12(fp)
  80f4a8:	10800117 	ldw	r2,4(r2)
  80f4ac:	e0fffd17 	ldw	r3,-12(fp)
  80f4b0:	18c00017 	ldw	r3,0(r3)
  80f4b4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80f4b8:	e0bffd17 	ldw	r2,-12(fp)
  80f4bc:	e0fffd17 	ldw	r3,-12(fp)
  80f4c0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  80f4c4:	e0bffd17 	ldw	r2,-12(fp)
  80f4c8:	e0fffd17 	ldw	r3,-12(fp)
  80f4cc:	10c00015 	stw	r3,0(r2)
  80f4d0:	e0bffb17 	ldw	r2,-20(fp)
  80f4d4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f4d8:	e0bffe17 	ldw	r2,-8(fp)
  80f4dc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  80f4e0:	0001883a 	nop
  80f4e4:	e037883a 	mov	sp,fp
  80f4e8:	df000017 	ldw	fp,0(sp)
  80f4ec:	dec00104 	addi	sp,sp,4
  80f4f0:	f800283a 	ret

0080f4f4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80f4f4:	defffb04 	addi	sp,sp,-20
  80f4f8:	dfc00415 	stw	ra,16(sp)
  80f4fc:	df000315 	stw	fp,12(sp)
  80f500:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80f504:	d0a00e17 	ldw	r2,-32712(gp)
  80f508:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80f50c:	d0a6d717 	ldw	r2,-25764(gp)
  80f510:	10800044 	addi	r2,r2,1
  80f514:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f518:	00002e06 	br	80f5d4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  80f51c:	e0bffd17 	ldw	r2,-12(fp)
  80f520:	10800017 	ldw	r2,0(r2)
  80f524:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80f528:	e0bffd17 	ldw	r2,-12(fp)
  80f52c:	10800403 	ldbu	r2,16(r2)
  80f530:	10803fcc 	andi	r2,r2,255
  80f534:	10000426 	beq	r2,zero,80f548 <alt_tick+0x54>
  80f538:	d0a6d717 	ldw	r2,-25764(gp)
  80f53c:	1000021e 	bne	r2,zero,80f548 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  80f540:	e0bffd17 	ldw	r2,-12(fp)
  80f544:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80f548:	e0bffd17 	ldw	r2,-12(fp)
  80f54c:	10800217 	ldw	r2,8(r2)
  80f550:	d0e6d717 	ldw	r3,-25764(gp)
  80f554:	18801d36 	bltu	r3,r2,80f5cc <alt_tick+0xd8>
  80f558:	e0bffd17 	ldw	r2,-12(fp)
  80f55c:	10800403 	ldbu	r2,16(r2)
  80f560:	10803fcc 	andi	r2,r2,255
  80f564:	1000191e 	bne	r2,zero,80f5cc <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  80f568:	e0bffd17 	ldw	r2,-12(fp)
  80f56c:	10800317 	ldw	r2,12(r2)
  80f570:	e0fffd17 	ldw	r3,-12(fp)
  80f574:	18c00517 	ldw	r3,20(r3)
  80f578:	1809883a 	mov	r4,r3
  80f57c:	103ee83a 	callr	r2
  80f580:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80f584:	e0bfff17 	ldw	r2,-4(fp)
  80f588:	1000031e 	bne	r2,zero,80f598 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  80f58c:	e13ffd17 	ldw	r4,-12(fp)
  80f590:	080f4580 	call	80f458 <alt_alarm_stop>
  80f594:	00000d06 	br	80f5cc <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  80f598:	e0bffd17 	ldw	r2,-12(fp)
  80f59c:	10c00217 	ldw	r3,8(r2)
  80f5a0:	e0bfff17 	ldw	r2,-4(fp)
  80f5a4:	1887883a 	add	r3,r3,r2
  80f5a8:	e0bffd17 	ldw	r2,-12(fp)
  80f5ac:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80f5b0:	e0bffd17 	ldw	r2,-12(fp)
  80f5b4:	10c00217 	ldw	r3,8(r2)
  80f5b8:	d0a6d717 	ldw	r2,-25764(gp)
  80f5bc:	1880032e 	bgeu	r3,r2,80f5cc <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  80f5c0:	e0bffd17 	ldw	r2,-12(fp)
  80f5c4:	00c00044 	movi	r3,1
  80f5c8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  80f5cc:	e0bffe17 	ldw	r2,-8(fp)
  80f5d0:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f5d4:	e0fffd17 	ldw	r3,-12(fp)
  80f5d8:	d0a00e04 	addi	r2,gp,-32712
  80f5dc:	18bfcf1e 	bne	r3,r2,80f51c <__alt_data_end+0xff80f51c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  80f5e0:	0001883a 	nop
}
  80f5e4:	0001883a 	nop
  80f5e8:	e037883a 	mov	sp,fp
  80f5ec:	dfc00117 	ldw	ra,4(sp)
  80f5f0:	df000017 	ldw	fp,0(sp)
  80f5f4:	dec00204 	addi	sp,sp,8
  80f5f8:	f800283a 	ret

0080f5fc <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
  80f5fc:	deffff04 	addi	sp,sp,-4
  80f600:	df000015 	stw	fp,0(sp)
  80f604:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  80f608:	000170fa 	wrctl	ienable,zero
}
  80f60c:	0001883a 	nop
  80f610:	e037883a 	mov	sp,fp
  80f614:	df000017 	ldw	fp,0(sp)
  80f618:	dec00104 	addi	sp,sp,4
  80f61c:	f800283a 	ret

0080f620 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80f620:	defffa04 	addi	sp,sp,-24
  80f624:	dfc00515 	stw	ra,20(sp)
  80f628:	df000415 	stw	fp,16(sp)
  80f62c:	df000404 	addi	fp,sp,16
  80f630:	e13ffe15 	stw	r4,-8(fp)
  80f634:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80f638:	e0bfff17 	ldw	r2,-4(fp)
  80f63c:	10800017 	ldw	r2,0(r2)
  80f640:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80f644:	e13ffe17 	ldw	r4,-8(fp)
  80f648:	08006480 	call	800648 <strlen>
  80f64c:	10800044 	addi	r2,r2,1
  80f650:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f654:	00000d06 	br	80f68c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80f658:	e0bffc17 	ldw	r2,-16(fp)
  80f65c:	10800217 	ldw	r2,8(r2)
  80f660:	e0fffd17 	ldw	r3,-12(fp)
  80f664:	180d883a 	mov	r6,r3
  80f668:	e17ffe17 	ldw	r5,-8(fp)
  80f66c:	1009883a 	mov	r4,r2
  80f670:	080f9740 	call	80f974 <memcmp>
  80f674:	1000021e 	bne	r2,zero,80f680 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80f678:	e0bffc17 	ldw	r2,-16(fp)
  80f67c:	00000706 	br	80f69c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80f680:	e0bffc17 	ldw	r2,-16(fp)
  80f684:	10800017 	ldw	r2,0(r2)
  80f688:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f68c:	e0fffc17 	ldw	r3,-16(fp)
  80f690:	e0bfff17 	ldw	r2,-4(fp)
  80f694:	18bff01e 	bne	r3,r2,80f658 <__alt_data_end+0xff80f658>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  80f698:	0005883a 	mov	r2,zero
}
  80f69c:	e037883a 	mov	sp,fp
  80f6a0:	dfc00117 	ldw	ra,4(sp)
  80f6a4:	df000017 	ldw	fp,0(sp)
  80f6a8:	dec00204 	addi	sp,sp,8
  80f6ac:	f800283a 	ret

0080f6b0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80f6b0:	defffb04 	addi	sp,sp,-20
  80f6b4:	dfc00415 	stw	ra,16(sp)
  80f6b8:	df000315 	stw	fp,12(sp)
  80f6bc:	df000304 	addi	fp,sp,12
  80f6c0:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80f6c4:	00802074 	movhi	r2,129
  80f6c8:	1086a504 	addi	r2,r2,6804
  80f6cc:	10800017 	ldw	r2,0(r2)
  80f6d0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f6d4:	00003106 	br	80f79c <alt_find_file+0xec>
  {
    len = strlen(next->name);
  80f6d8:	e0bffd17 	ldw	r2,-12(fp)
  80f6dc:	10800217 	ldw	r2,8(r2)
  80f6e0:	1009883a 	mov	r4,r2
  80f6e4:	08006480 	call	800648 <strlen>
  80f6e8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  80f6ec:	e0bffd17 	ldw	r2,-12(fp)
  80f6f0:	10c00217 	ldw	r3,8(r2)
  80f6f4:	e0bffe17 	ldw	r2,-8(fp)
  80f6f8:	10bfffc4 	addi	r2,r2,-1
  80f6fc:	1885883a 	add	r2,r3,r2
  80f700:	10800003 	ldbu	r2,0(r2)
  80f704:	10803fcc 	andi	r2,r2,255
  80f708:	1080201c 	xori	r2,r2,128
  80f70c:	10bfe004 	addi	r2,r2,-128
  80f710:	10800bd8 	cmpnei	r2,r2,47
  80f714:	1000031e 	bne	r2,zero,80f724 <alt_find_file+0x74>
    {
      len -= 1;
  80f718:	e0bffe17 	ldw	r2,-8(fp)
  80f71c:	10bfffc4 	addi	r2,r2,-1
  80f720:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80f724:	e0bffe17 	ldw	r2,-8(fp)
  80f728:	e0ffff17 	ldw	r3,-4(fp)
  80f72c:	1885883a 	add	r2,r3,r2
  80f730:	10800003 	ldbu	r2,0(r2)
  80f734:	10803fcc 	andi	r2,r2,255
  80f738:	1080201c 	xori	r2,r2,128
  80f73c:	10bfe004 	addi	r2,r2,-128
  80f740:	10800be0 	cmpeqi	r2,r2,47
  80f744:	1000081e 	bne	r2,zero,80f768 <alt_find_file+0xb8>
  80f748:	e0bffe17 	ldw	r2,-8(fp)
  80f74c:	e0ffff17 	ldw	r3,-4(fp)
  80f750:	1885883a 	add	r2,r3,r2
  80f754:	10800003 	ldbu	r2,0(r2)
  80f758:	10803fcc 	andi	r2,r2,255
  80f75c:	1080201c 	xori	r2,r2,128
  80f760:	10bfe004 	addi	r2,r2,-128
  80f764:	10000a1e 	bne	r2,zero,80f790 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
  80f768:	e0bffd17 	ldw	r2,-12(fp)
  80f76c:	10800217 	ldw	r2,8(r2)
  80f770:	e0fffe17 	ldw	r3,-8(fp)
  80f774:	180d883a 	mov	r6,r3
  80f778:	e17fff17 	ldw	r5,-4(fp)
  80f77c:	1009883a 	mov	r4,r2
  80f780:	080f9740 	call	80f974 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80f784:	1000021e 	bne	r2,zero,80f790 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  80f788:	e0bffd17 	ldw	r2,-12(fp)
  80f78c:	00000806 	br	80f7b0 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
  80f790:	e0bffd17 	ldw	r2,-12(fp)
  80f794:	10800017 	ldw	r2,0(r2)
  80f798:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f79c:	e0fffd17 	ldw	r3,-12(fp)
  80f7a0:	00802074 	movhi	r2,129
  80f7a4:	1086a504 	addi	r2,r2,6804
  80f7a8:	18bfcb1e 	bne	r3,r2,80f6d8 <__alt_data_end+0xff80f6d8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  80f7ac:	0005883a 	mov	r2,zero
}
  80f7b0:	e037883a 	mov	sp,fp
  80f7b4:	dfc00117 	ldw	ra,4(sp)
  80f7b8:	df000017 	ldw	fp,0(sp)
  80f7bc:	dec00204 	addi	sp,sp,8
  80f7c0:	f800283a 	ret

0080f7c4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  80f7c4:	defffa04 	addi	sp,sp,-24
  80f7c8:	dfc00515 	stw	ra,20(sp)
  80f7cc:	df000415 	stw	fp,16(sp)
  80f7d0:	dc000315 	stw	r16,12(sp)
  80f7d4:	df000404 	addi	fp,sp,16
  80f7d8:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
  80f7dc:	00bffa04 	movi	r2,-24
  80f7e0:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80f7e4:	e03ffc15 	stw	zero,-16(fp)
  80f7e8:	00002106 	br	80f870 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
  80f7ec:	04002074 	movhi	r16,129
  80f7f0:	84022704 	addi	r16,r16,2204
  80f7f4:	e0bffc17 	ldw	r2,-16(fp)
  80f7f8:	01400304 	movi	r5,12
  80f7fc:	1009883a 	mov	r4,r2
  80f800:	080ab7c0 	call	80ab7c <__mulsi3>
  80f804:	8085883a 	add	r2,r16,r2
  80f808:	10800017 	ldw	r2,0(r2)
  80f80c:	1000151e 	bne	r2,zero,80f864 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
  80f810:	04002074 	movhi	r16,129
  80f814:	84022704 	addi	r16,r16,2204
  80f818:	e0bffc17 	ldw	r2,-16(fp)
  80f81c:	01400304 	movi	r5,12
  80f820:	1009883a 	mov	r4,r2
  80f824:	080ab7c0 	call	80ab7c <__mulsi3>
  80f828:	8085883a 	add	r2,r16,r2
  80f82c:	e0fffe17 	ldw	r3,-8(fp)
  80f830:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  80f834:	00802074 	movhi	r2,129
  80f838:	1086a904 	addi	r2,r2,6820
  80f83c:	10c00017 	ldw	r3,0(r2)
  80f840:	e0bffc17 	ldw	r2,-16(fp)
  80f844:	1880040e 	bge	r3,r2,80f858 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
  80f848:	00802074 	movhi	r2,129
  80f84c:	1086a904 	addi	r2,r2,6820
  80f850:	e0fffc17 	ldw	r3,-16(fp)
  80f854:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
  80f858:	e0bffc17 	ldw	r2,-16(fp)
  80f85c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
  80f860:	00000606 	br	80f87c <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80f864:	e0bffc17 	ldw	r2,-16(fp)
  80f868:	10800044 	addi	r2,r2,1
  80f86c:	e0bffc15 	stw	r2,-16(fp)
  80f870:	e0bffc17 	ldw	r2,-16(fp)
  80f874:	10800810 	cmplti	r2,r2,32
  80f878:	103fdc1e 	bne	r2,zero,80f7ec <__alt_data_end+0xff80f7ec>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  80f87c:	e0bffd17 	ldw	r2,-12(fp)
}
  80f880:	e6ffff04 	addi	sp,fp,-4
  80f884:	dfc00217 	ldw	ra,8(sp)
  80f888:	df000117 	ldw	fp,4(sp)
  80f88c:	dc000017 	ldw	r16,0(sp)
  80f890:	dec00304 	addi	sp,sp,12
  80f894:	f800283a 	ret

0080f898 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  80f898:	defffb04 	addi	sp,sp,-20
  80f89c:	df000415 	stw	fp,16(sp)
  80f8a0:	df000404 	addi	fp,sp,16
  80f8a4:	e13ffe15 	stw	r4,-8(fp)
  80f8a8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  80f8ac:	e0bfff17 	ldw	r2,-4(fp)
  80f8b0:	10900070 	cmpltui	r2,r2,16385
  80f8b4:	1000021e 	bne	r2,zero,80f8c0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  80f8b8:	00900004 	movi	r2,16384
  80f8bc:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  80f8c0:	e0fffe17 	ldw	r3,-8(fp)
  80f8c4:	e0bfff17 	ldw	r2,-4(fp)
  80f8c8:	1885883a 	add	r2,r3,r2
  80f8cc:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80f8d0:	e0bffe17 	ldw	r2,-8(fp)
  80f8d4:	e0bffc15 	stw	r2,-16(fp)
  80f8d8:	00000506 	br	80f8f0 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  80f8dc:	e0bffc17 	ldw	r2,-16(fp)
  80f8e0:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80f8e4:	e0bffc17 	ldw	r2,-16(fp)
  80f8e8:	10800804 	addi	r2,r2,32
  80f8ec:	e0bffc15 	stw	r2,-16(fp)
  80f8f0:	e0fffc17 	ldw	r3,-16(fp)
  80f8f4:	e0bffd17 	ldw	r2,-12(fp)
  80f8f8:	18bff836 	bltu	r3,r2,80f8dc <__alt_data_end+0xff80f8dc>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  80f8fc:	e0bffe17 	ldw	r2,-8(fp)
  80f900:	108007cc 	andi	r2,r2,31
  80f904:	10000226 	beq	r2,zero,80f910 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  80f908:	e0bffc17 	ldw	r2,-16(fp)
  80f90c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  80f910:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  80f914:	0001883a 	nop
  80f918:	e037883a 	mov	sp,fp
  80f91c:	df000017 	ldw	fp,0(sp)
  80f920:	dec00104 	addi	sp,sp,4
  80f924:	f800283a 	ret

0080f928 <atexit>:
  80f928:	200b883a 	mov	r5,r4
  80f92c:	000f883a 	mov	r7,zero
  80f930:	000d883a 	mov	r6,zero
  80f934:	0009883a 	mov	r4,zero
  80f938:	080f9f01 	jmpi	80f9f0 <__register_exitproc>

0080f93c <exit>:
  80f93c:	defffe04 	addi	sp,sp,-8
  80f940:	000b883a 	mov	r5,zero
  80f944:	dc000015 	stw	r16,0(sp)
  80f948:	dfc00115 	stw	ra,4(sp)
  80f94c:	2021883a 	mov	r16,r4
  80f950:	080fb080 	call	80fb08 <__call_exitprocs>
  80f954:	00802074 	movhi	r2,129
  80f958:	10869f04 	addi	r2,r2,6780
  80f95c:	11000017 	ldw	r4,0(r2)
  80f960:	20800f17 	ldw	r2,60(r4)
  80f964:	10000126 	beq	r2,zero,80f96c <exit+0x30>
  80f968:	103ee83a 	callr	r2
  80f96c:	8009883a 	mov	r4,r16
  80f970:	080fc880 	call	80fc88 <_exit>

0080f974 <memcmp>:
  80f974:	01c000c4 	movi	r7,3
  80f978:	3980192e 	bgeu	r7,r6,80f9e0 <memcmp+0x6c>
  80f97c:	2144b03a 	or	r2,r4,r5
  80f980:	11c4703a 	and	r2,r2,r7
  80f984:	10000f26 	beq	r2,zero,80f9c4 <memcmp+0x50>
  80f988:	20800003 	ldbu	r2,0(r4)
  80f98c:	28c00003 	ldbu	r3,0(r5)
  80f990:	10c0151e 	bne	r2,r3,80f9e8 <memcmp+0x74>
  80f994:	31bfff84 	addi	r6,r6,-2
  80f998:	01ffffc4 	movi	r7,-1
  80f99c:	00000406 	br	80f9b0 <memcmp+0x3c>
  80f9a0:	20800003 	ldbu	r2,0(r4)
  80f9a4:	28c00003 	ldbu	r3,0(r5)
  80f9a8:	31bfffc4 	addi	r6,r6,-1
  80f9ac:	10c00e1e 	bne	r2,r3,80f9e8 <memcmp+0x74>
  80f9b0:	21000044 	addi	r4,r4,1
  80f9b4:	29400044 	addi	r5,r5,1
  80f9b8:	31fff91e 	bne	r6,r7,80f9a0 <__alt_data_end+0xff80f9a0>
  80f9bc:	0005883a 	mov	r2,zero
  80f9c0:	f800283a 	ret
  80f9c4:	20c00017 	ldw	r3,0(r4)
  80f9c8:	28800017 	ldw	r2,0(r5)
  80f9cc:	18bfee1e 	bne	r3,r2,80f988 <__alt_data_end+0xff80f988>
  80f9d0:	31bfff04 	addi	r6,r6,-4
  80f9d4:	21000104 	addi	r4,r4,4
  80f9d8:	29400104 	addi	r5,r5,4
  80f9dc:	39bff936 	bltu	r7,r6,80f9c4 <__alt_data_end+0xff80f9c4>
  80f9e0:	303fe91e 	bne	r6,zero,80f988 <__alt_data_end+0xff80f988>
  80f9e4:	003ff506 	br	80f9bc <__alt_data_end+0xff80f9bc>
  80f9e8:	10c5c83a 	sub	r2,r2,r3
  80f9ec:	f800283a 	ret

0080f9f0 <__register_exitproc>:
  80f9f0:	defffa04 	addi	sp,sp,-24
  80f9f4:	dc000315 	stw	r16,12(sp)
  80f9f8:	04002074 	movhi	r16,129
  80f9fc:	84069f04 	addi	r16,r16,6780
  80fa00:	80c00017 	ldw	r3,0(r16)
  80fa04:	dc400415 	stw	r17,16(sp)
  80fa08:	dfc00515 	stw	ra,20(sp)
  80fa0c:	18805217 	ldw	r2,328(r3)
  80fa10:	2023883a 	mov	r17,r4
  80fa14:	10003726 	beq	r2,zero,80faf4 <__register_exitproc+0x104>
  80fa18:	10c00117 	ldw	r3,4(r2)
  80fa1c:	010007c4 	movi	r4,31
  80fa20:	20c00e16 	blt	r4,r3,80fa5c <__register_exitproc+0x6c>
  80fa24:	1a000044 	addi	r8,r3,1
  80fa28:	8800221e 	bne	r17,zero,80fab4 <__register_exitproc+0xc4>
  80fa2c:	18c00084 	addi	r3,r3,2
  80fa30:	18c7883a 	add	r3,r3,r3
  80fa34:	18c7883a 	add	r3,r3,r3
  80fa38:	12000115 	stw	r8,4(r2)
  80fa3c:	10c7883a 	add	r3,r2,r3
  80fa40:	19400015 	stw	r5,0(r3)
  80fa44:	0005883a 	mov	r2,zero
  80fa48:	dfc00517 	ldw	ra,20(sp)
  80fa4c:	dc400417 	ldw	r17,16(sp)
  80fa50:	dc000317 	ldw	r16,12(sp)
  80fa54:	dec00604 	addi	sp,sp,24
  80fa58:	f800283a 	ret
  80fa5c:	00800034 	movhi	r2,0
  80fa60:	10800004 	addi	r2,r2,0
  80fa64:	10002626 	beq	r2,zero,80fb00 <__register_exitproc+0x110>
  80fa68:	01006404 	movi	r4,400
  80fa6c:	d9400015 	stw	r5,0(sp)
  80fa70:	d9800115 	stw	r6,4(sp)
  80fa74:	d9c00215 	stw	r7,8(sp)
  80fa78:	00000000 	call	0 <__reset-0x800000>
  80fa7c:	d9400017 	ldw	r5,0(sp)
  80fa80:	d9800117 	ldw	r6,4(sp)
  80fa84:	d9c00217 	ldw	r7,8(sp)
  80fa88:	10001d26 	beq	r2,zero,80fb00 <__register_exitproc+0x110>
  80fa8c:	81000017 	ldw	r4,0(r16)
  80fa90:	10000115 	stw	zero,4(r2)
  80fa94:	02000044 	movi	r8,1
  80fa98:	22405217 	ldw	r9,328(r4)
  80fa9c:	0007883a 	mov	r3,zero
  80faa0:	12400015 	stw	r9,0(r2)
  80faa4:	20805215 	stw	r2,328(r4)
  80faa8:	10006215 	stw	zero,392(r2)
  80faac:	10006315 	stw	zero,396(r2)
  80fab0:	883fde26 	beq	r17,zero,80fa2c <__alt_data_end+0xff80fa2c>
  80fab4:	18c9883a 	add	r4,r3,r3
  80fab8:	2109883a 	add	r4,r4,r4
  80fabc:	1109883a 	add	r4,r2,r4
  80fac0:	21802215 	stw	r6,136(r4)
  80fac4:	01800044 	movi	r6,1
  80fac8:	12406217 	ldw	r9,392(r2)
  80facc:	30cc983a 	sll	r6,r6,r3
  80fad0:	4992b03a 	or	r9,r9,r6
  80fad4:	12406215 	stw	r9,392(r2)
  80fad8:	21c04215 	stw	r7,264(r4)
  80fadc:	01000084 	movi	r4,2
  80fae0:	893fd21e 	bne	r17,r4,80fa2c <__alt_data_end+0xff80fa2c>
  80fae4:	11006317 	ldw	r4,396(r2)
  80fae8:	218cb03a 	or	r6,r4,r6
  80faec:	11806315 	stw	r6,396(r2)
  80faf0:	003fce06 	br	80fa2c <__alt_data_end+0xff80fa2c>
  80faf4:	18805304 	addi	r2,r3,332
  80faf8:	18805215 	stw	r2,328(r3)
  80fafc:	003fc606 	br	80fa18 <__alt_data_end+0xff80fa18>
  80fb00:	00bfffc4 	movi	r2,-1
  80fb04:	003fd006 	br	80fa48 <__alt_data_end+0xff80fa48>

0080fb08 <__call_exitprocs>:
  80fb08:	defff504 	addi	sp,sp,-44
  80fb0c:	df000915 	stw	fp,36(sp)
  80fb10:	dd400615 	stw	r21,24(sp)
  80fb14:	dc800315 	stw	r18,12(sp)
  80fb18:	dfc00a15 	stw	ra,40(sp)
  80fb1c:	ddc00815 	stw	r23,32(sp)
  80fb20:	dd800715 	stw	r22,28(sp)
  80fb24:	dd000515 	stw	r20,20(sp)
  80fb28:	dcc00415 	stw	r19,16(sp)
  80fb2c:	dc400215 	stw	r17,8(sp)
  80fb30:	dc000115 	stw	r16,4(sp)
  80fb34:	d9000015 	stw	r4,0(sp)
  80fb38:	2839883a 	mov	fp,r5
  80fb3c:	04800044 	movi	r18,1
  80fb40:	057fffc4 	movi	r21,-1
  80fb44:	00802074 	movhi	r2,129
  80fb48:	10869f04 	addi	r2,r2,6780
  80fb4c:	12000017 	ldw	r8,0(r2)
  80fb50:	45005217 	ldw	r20,328(r8)
  80fb54:	44c05204 	addi	r19,r8,328
  80fb58:	a0001c26 	beq	r20,zero,80fbcc <__call_exitprocs+0xc4>
  80fb5c:	a0800117 	ldw	r2,4(r20)
  80fb60:	15ffffc4 	addi	r23,r2,-1
  80fb64:	b8000d16 	blt	r23,zero,80fb9c <__call_exitprocs+0x94>
  80fb68:	14000044 	addi	r16,r2,1
  80fb6c:	8421883a 	add	r16,r16,r16
  80fb70:	8421883a 	add	r16,r16,r16
  80fb74:	84402004 	addi	r17,r16,128
  80fb78:	a463883a 	add	r17,r20,r17
  80fb7c:	a421883a 	add	r16,r20,r16
  80fb80:	e0001e26 	beq	fp,zero,80fbfc <__call_exitprocs+0xf4>
  80fb84:	80804017 	ldw	r2,256(r16)
  80fb88:	e0801c26 	beq	fp,r2,80fbfc <__call_exitprocs+0xf4>
  80fb8c:	bdffffc4 	addi	r23,r23,-1
  80fb90:	843fff04 	addi	r16,r16,-4
  80fb94:	8c7fff04 	addi	r17,r17,-4
  80fb98:	bd7ff91e 	bne	r23,r21,80fb80 <__alt_data_end+0xff80fb80>
  80fb9c:	00800034 	movhi	r2,0
  80fba0:	10800004 	addi	r2,r2,0
  80fba4:	10000926 	beq	r2,zero,80fbcc <__call_exitprocs+0xc4>
  80fba8:	a0800117 	ldw	r2,4(r20)
  80fbac:	1000301e 	bne	r2,zero,80fc70 <__call_exitprocs+0x168>
  80fbb0:	a0800017 	ldw	r2,0(r20)
  80fbb4:	10003226 	beq	r2,zero,80fc80 <__call_exitprocs+0x178>
  80fbb8:	a009883a 	mov	r4,r20
  80fbbc:	98800015 	stw	r2,0(r19)
  80fbc0:	00000000 	call	0 <__reset-0x800000>
  80fbc4:	9d000017 	ldw	r20,0(r19)
  80fbc8:	a03fe41e 	bne	r20,zero,80fb5c <__alt_data_end+0xff80fb5c>
  80fbcc:	dfc00a17 	ldw	ra,40(sp)
  80fbd0:	df000917 	ldw	fp,36(sp)
  80fbd4:	ddc00817 	ldw	r23,32(sp)
  80fbd8:	dd800717 	ldw	r22,28(sp)
  80fbdc:	dd400617 	ldw	r21,24(sp)
  80fbe0:	dd000517 	ldw	r20,20(sp)
  80fbe4:	dcc00417 	ldw	r19,16(sp)
  80fbe8:	dc800317 	ldw	r18,12(sp)
  80fbec:	dc400217 	ldw	r17,8(sp)
  80fbf0:	dc000117 	ldw	r16,4(sp)
  80fbf4:	dec00b04 	addi	sp,sp,44
  80fbf8:	f800283a 	ret
  80fbfc:	a0800117 	ldw	r2,4(r20)
  80fc00:	80c00017 	ldw	r3,0(r16)
  80fc04:	10bfffc4 	addi	r2,r2,-1
  80fc08:	15c01426 	beq	r2,r23,80fc5c <__call_exitprocs+0x154>
  80fc0c:	80000015 	stw	zero,0(r16)
  80fc10:	183fde26 	beq	r3,zero,80fb8c <__alt_data_end+0xff80fb8c>
  80fc14:	95c8983a 	sll	r4,r18,r23
  80fc18:	a0806217 	ldw	r2,392(r20)
  80fc1c:	a5800117 	ldw	r22,4(r20)
  80fc20:	2084703a 	and	r2,r4,r2
  80fc24:	10000b26 	beq	r2,zero,80fc54 <__call_exitprocs+0x14c>
  80fc28:	a0806317 	ldw	r2,396(r20)
  80fc2c:	2088703a 	and	r4,r4,r2
  80fc30:	20000c1e 	bne	r4,zero,80fc64 <__call_exitprocs+0x15c>
  80fc34:	89400017 	ldw	r5,0(r17)
  80fc38:	d9000017 	ldw	r4,0(sp)
  80fc3c:	183ee83a 	callr	r3
  80fc40:	a0800117 	ldw	r2,4(r20)
  80fc44:	15bfbf1e 	bne	r2,r22,80fb44 <__alt_data_end+0xff80fb44>
  80fc48:	98800017 	ldw	r2,0(r19)
  80fc4c:	153fcf26 	beq	r2,r20,80fb8c <__alt_data_end+0xff80fb8c>
  80fc50:	003fbc06 	br	80fb44 <__alt_data_end+0xff80fb44>
  80fc54:	183ee83a 	callr	r3
  80fc58:	003ff906 	br	80fc40 <__alt_data_end+0xff80fc40>
  80fc5c:	a5c00115 	stw	r23,4(r20)
  80fc60:	003feb06 	br	80fc10 <__alt_data_end+0xff80fc10>
  80fc64:	89000017 	ldw	r4,0(r17)
  80fc68:	183ee83a 	callr	r3
  80fc6c:	003ff406 	br	80fc40 <__alt_data_end+0xff80fc40>
  80fc70:	a0800017 	ldw	r2,0(r20)
  80fc74:	a027883a 	mov	r19,r20
  80fc78:	1029883a 	mov	r20,r2
  80fc7c:	003fb606 	br	80fb58 <__alt_data_end+0xff80fb58>
  80fc80:	0005883a 	mov	r2,zero
  80fc84:	003ffb06 	br	80fc74 <__alt_data_end+0xff80fc74>

0080fc88 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80fc88:	defffd04 	addi	sp,sp,-12
  80fc8c:	df000215 	stw	fp,8(sp)
  80fc90:	df000204 	addi	fp,sp,8
  80fc94:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80fc98:	0001883a 	nop
  80fc9c:	e0bfff17 	ldw	r2,-4(fp)
  80fca0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80fca4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80fca8:	10000226 	beq	r2,zero,80fcb4 <_exit+0x2c>
    ALT_SIM_FAIL();
  80fcac:	002af070 	cmpltui	zero,zero,43969
  80fcb0:	00000106 	br	80fcb8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  80fcb4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80fcb8:	003fff06 	br	80fcb8 <__alt_data_end+0xff80fcb8>
